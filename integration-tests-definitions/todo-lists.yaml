openapi: "3.0.0"
info:
  title: Todo Lists Example API
  version: '0.0.1'
paths:
  /list:
    parameters:
      - name: created
        in: query
        schema:
          type: string
          format: date-time
      - name: status
        in: query
        schema:
          type: string
          enum:
            - incomplete
            - complete
    get:
      operationId: getTodoLists
      responses:
        200:
          description: 'success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoList'
  /list/{listId}:
    parameters:
      - $ref: '#/components/parameters/listId'
    get:
      operationId: getTodoListById
      responses:
        200:
          description: 'success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        4XX:
          $ref: '../integration-tests-definitions-shared/error-handling.yaml#/components/responses/ClientError'
        default:
          $ref: '../integration-tests-definitions-shared/error-handling.yaml#/components/responses/ServerError'
    put:
      operationId: updateTodoListById
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTodoList'
      responses:
        200:
          description: 'updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        4XX:
          $ref: '../integration-tests-definitions-shared/error-handling.yaml#/components/responses/ClientError'
        default:
          $ref: '../integration-tests-definitions-shared/error-handling.yaml#/components/responses/ServerError'
    delete:
      operationId: deleteTodoListById
      responses:
        204:
          description: 'deleted'
        4XX:
          $ref: '../integration-tests-definitions-shared/error-handling.yaml#/components/responses/ClientError'
        default:
          $ref: '../integration-tests-definitions-shared/error-handling.yaml#/components/responses/ServerError'
  /list/{listId}/items:
    parameters:
      - name: listId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      operationId: getTodoListItems
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - content
                  - createdAt
                properties:
                  id:
                    type: string
                    format: uuid
                  content:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  completedAt:
                    type: string
                    format: date-time
        5XX:
          description: server error
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - code
                properties:
                  message:
                    type: string
                  code:
                    type: string
    post:
      operationId: createTodoListItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - content
              properties:
                id:
                  type: string
                  format: uuid
                content:
                  type: string
                completedAt:
                  type: string
                  format: date-time
      responses:
        204:
          description: success
components:
  schemas:
    CreateUpdateTodoList:
      required:
        - name
      properties:
        name:
          type: string
    TodoList:
      required:
        - id
        - name
        - totalItemCount
        - incompleteItemCount
        - created
        - updated
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        totalItemCount:
          type: number
        incompleteItemCount:
          type: number
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time

  parameters:
    listId:
      name: listId
      in: path
      required: true
      schema:
        type: string
        format: uuid
