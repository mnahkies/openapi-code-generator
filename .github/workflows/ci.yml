name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x, 22.x, 24.x]

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          registry-url: "https://registry.npmjs.org"
          node-version: ${{ matrix.node-version }}

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        id: yarn-cache
        with:
          path: .yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        id: nextjs-cache
        with:
          path: packages/documentation/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('yarn.lock') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('yarn.lock') }}-

      - run: corepack enable

      - run: yarn --immutable

      - run: yarn ci-build
      - run: yarn ci-test
      - run: yarn ci-lint

      - run: yarn integration:generate
      - run: yarn integration:validate

      - run: yarn e2e:generate
      - run: yarn e2e:validate

      - name: Check for uncommitted changes
        run: ./scripts/assert-clean-working-directory.sh
# TODO: figure out how to do this safely, eg: no risk of external contributors exfiltrating publish secret.
#    - name: Configure Git User
#      run: |
#        git config --global user.email "support@nahkies.co.nz"
#        git config --global user.name "$GITHUB_ACTOR"
#
#    - name: Check if able to publish changes
#      run: npm whoami
#      env:
#        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#
#    - name: Publish to NPM
#      run: echo 'publish release' #yarn lerna publish --no-private --force-publish --yes --conventional-commits
#      if: github.ref == 'refs/heads/main'
#      env:
#        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#
#    - name: Publish to NPM (Alpha)
#      run: echo 'publish alpha release' #yarn lerna publish --no-private --force-publish --yes --conventional-commits --canary
#      if: github.ref != 'refs/heads/main'
#      env:
#        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
