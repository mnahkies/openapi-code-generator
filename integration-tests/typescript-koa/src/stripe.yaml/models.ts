/** AUTOGENERATED - DO NOT EDIT **/
/* tslint:disable */
/* eslint-disable */

export type EmptyObject = { [key: string]: never }

export type t_account = {
  business_profile?: t_account_business_profile | null
  business_type?:
    | "company"
    | "government_entity"
    | "individual"
    | "non_profit"
    | null
  capabilities?: t_account_capabilities
  charges_enabled?: boolean
  company?: t_legal_entity_company
  controller?: t_account_unification_account_controller
  country?: string
  created?: number
  default_currency?: string
  details_submitted?: boolean
  email?: string | null
  external_accounts?: {
    data: (t_bank_account | t_card)[]
    has_more: boolean
    object: "list"
    url: string
  }
  future_requirements?: t_account_future_requirements
  id: string
  individual?: t_person
  metadata?: {
    [key: string]: string
  }
  object: "account"
  payouts_enabled?: boolean
  requirements?: t_account_requirements
  settings?: t_account_settings | null
  tos_acceptance?: t_account_tos_acceptance
  type?: "custom" | "express" | "standard"
}

export type t_account_bacs_debit_payments_settings = {
  display_name?: string
}

export type t_account_branding_settings = {
  icon?: string | t_file | null
  logo?: string | t_file | null
  primary_color?: string | null
  secondary_color?: string | null
}

export type t_account_business_profile = {
  mcc?: string | null
  monthly_estimated_revenue?: t_account_monthly_estimated_revenue
  name?: string | null
  product_description?: string | null
  support_address?: t_address | null
  support_email?: string | null
  support_phone?: string | null
  support_url?: string | null
  url?: string | null
}

export type t_account_capabilities = {
  acss_debit_payments?: "active" | "inactive" | "pending"
  affirm_payments?: "active" | "inactive" | "pending"
  afterpay_clearpay_payments?: "active" | "inactive" | "pending"
  au_becs_debit_payments?: "active" | "inactive" | "pending"
  bacs_debit_payments?: "active" | "inactive" | "pending"
  bancontact_payments?: "active" | "inactive" | "pending"
  bank_transfer_payments?: "active" | "inactive" | "pending"
  blik_payments?: "active" | "inactive" | "pending"
  boleto_payments?: "active" | "inactive" | "pending"
  card_issuing?: "active" | "inactive" | "pending"
  card_payments?: "active" | "inactive" | "pending"
  cartes_bancaires_payments?: "active" | "inactive" | "pending"
  cashapp_payments?: "active" | "inactive" | "pending"
  eps_payments?: "active" | "inactive" | "pending"
  fpx_payments?: "active" | "inactive" | "pending"
  giropay_payments?: "active" | "inactive" | "pending"
  grabpay_payments?: "active" | "inactive" | "pending"
  ideal_payments?: "active" | "inactive" | "pending"
  india_international_payments?: "active" | "inactive" | "pending"
  jcb_payments?: "active" | "inactive" | "pending"
  klarna_payments?: "active" | "inactive" | "pending"
  konbini_payments?: "active" | "inactive" | "pending"
  legacy_payments?: "active" | "inactive" | "pending"
  link_payments?: "active" | "inactive" | "pending"
  oxxo_payments?: "active" | "inactive" | "pending"
  p24_payments?: "active" | "inactive" | "pending"
  paynow_payments?: "active" | "inactive" | "pending"
  promptpay_payments?: "active" | "inactive" | "pending"
  sepa_debit_payments?: "active" | "inactive" | "pending"
  sofort_payments?: "active" | "inactive" | "pending"
  tax_reporting_us_1099_k?: "active" | "inactive" | "pending"
  tax_reporting_us_1099_misc?: "active" | "inactive" | "pending"
  transfers?: "active" | "inactive" | "pending"
  treasury?: "active" | "inactive" | "pending"
  us_bank_account_ach_payments?: "active" | "inactive" | "pending"
  zip_payments?: "active" | "inactive" | "pending"
}

export type t_account_capability_future_requirements = {
  alternatives?: t_account_requirements_alternative[] | null
  current_deadline?: number | null
  currently_due: string[]
  disabled_reason?: string | null
  errors: t_account_requirements_error[]
  eventually_due: string[]
  past_due: string[]
  pending_verification: string[]
}

export type t_account_capability_requirements = {
  alternatives?: t_account_requirements_alternative[] | null
  current_deadline?: number | null
  currently_due: string[]
  disabled_reason?: string | null
  errors: t_account_requirements_error[]
  eventually_due: string[]
  past_due: string[]
  pending_verification: string[]
}

export type t_account_card_issuing_settings = {
  tos_acceptance?: t_card_issuing_account_terms_of_service
}

export type t_account_card_payments_settings = {
  decline_on?: t_account_decline_charge_on
  statement_descriptor_prefix?: string | null
  statement_descriptor_prefix_kana?: string | null
  statement_descriptor_prefix_kanji?: string | null
}

export type t_account_dashboard_settings = {
  display_name?: string | null
  timezone?: string | null
}

export type t_account_decline_charge_on = {
  avs_failure: boolean
  cvc_failure: boolean
}

export type t_account_future_requirements = {
  alternatives?: t_account_requirements_alternative[] | null
  current_deadline?: number | null
  currently_due?: string[] | null
  disabled_reason?: string | null
  errors?: t_account_requirements_error[] | null
  eventually_due?: string[] | null
  past_due?: string[] | null
  pending_verification?: string[] | null
}

export type t_account_link = {
  created: number
  expires_at: number
  object: "account_link"
  url: string
}

export type t_account_monthly_estimated_revenue = {
  amount: number
  currency: string
}

export type t_account_payments_settings = {
  statement_descriptor?: string | null
  statement_descriptor_kana?: string | null
  statement_descriptor_kanji?: string | null
  statement_descriptor_prefix_kana?: string | null
  statement_descriptor_prefix_kanji?: string | null
}

export type t_account_payout_settings = {
  debit_negative_balances: boolean
  schedule: t_transfer_schedule
  statement_descriptor?: string | null
}

export type t_account_requirements = {
  alternatives?: t_account_requirements_alternative[] | null
  current_deadline?: number | null
  currently_due?: string[] | null
  disabled_reason?: string | null
  errors?: t_account_requirements_error[] | null
  eventually_due?: string[] | null
  past_due?: string[] | null
  pending_verification?: string[] | null
}

export type t_account_requirements_alternative = {
  alternative_fields_due: string[]
  original_fields_due: string[]
}

export type t_account_requirements_error = {
  code:
    | "invalid_address_city_state_postal_code"
    | "invalid_dob_age_under_18"
    | "invalid_representative_country"
    | "invalid_street_address"
    | "invalid_tos_acceptance"
    | "invalid_value_other"
    | "verification_directors_mismatch"
    | "verification_document_address_mismatch"
    | "verification_document_address_missing"
    | "verification_document_corrupt"
    | "verification_document_country_not_supported"
    | "verification_document_directors_mismatch"
    | "verification_document_dob_mismatch"
    | "verification_document_duplicate_type"
    | "verification_document_expired"
    | "verification_document_failed_copy"
    | "verification_document_failed_greyscale"
    | "verification_document_failed_other"
    | "verification_document_failed_test_mode"
    | "verification_document_fraudulent"
    | "verification_document_id_number_mismatch"
    | "verification_document_id_number_missing"
    | "verification_document_incomplete"
    | "verification_document_invalid"
    | "verification_document_issue_or_expiry_date_missing"
    | "verification_document_manipulated"
    | "verification_document_missing_back"
    | "verification_document_missing_front"
    | "verification_document_name_mismatch"
    | "verification_document_name_missing"
    | "verification_document_nationality_mismatch"
    | "verification_document_not_readable"
    | "verification_document_not_signed"
    | "verification_document_not_uploaded"
    | "verification_document_photo_mismatch"
    | "verification_document_too_large"
    | "verification_document_type_not_supported"
    | "verification_extraneous_directors"
    | "verification_failed_address_match"
    | "verification_failed_business_iec_number"
    | "verification_failed_document_match"
    | "verification_failed_id_number_match"
    | "verification_failed_keyed_identity"
    | "verification_failed_keyed_match"
    | "verification_failed_name_match"
    | "verification_failed_other"
    | "verification_failed_residential_address"
    | "verification_failed_tax_id_match"
    | "verification_failed_tax_id_not_issued"
    | "verification_missing_directors"
    | "verification_missing_executives"
    | "verification_missing_owners"
    | "verification_requires_additional_memorandum_of_associations"
  reason: string
  requirement: string
}

export type t_account_sepa_debit_payments_settings = {
  creditor_id?: string
}

export type t_account_session = {
  account: string
  client_secret: string
  components: t_connect_embedded_account_session_create_components
  expires_at: number
  livemode: boolean
  object: "account_session"
}

export type t_account_settings = {
  bacs_debit_payments?: t_account_bacs_debit_payments_settings
  branding: t_account_branding_settings
  card_issuing?: t_account_card_issuing_settings
  card_payments: t_account_card_payments_settings
  dashboard: t_account_dashboard_settings
  payments: t_account_payments_settings
  payouts?: t_account_payout_settings
  sepa_debit_payments?: t_account_sepa_debit_payments_settings
  treasury?: t_account_treasury_settings
}

export type t_account_terms_of_service = {
  date?: number | null
  ip?: string | null
  user_agent?: string
}

export type t_account_tos_acceptance = {
  date?: number | null
  ip?: string | null
  service_agreement?: string
  user_agent?: string | null
}

export type t_account_treasury_settings = {
  tos_acceptance?: t_account_terms_of_service
}

export type t_account_unification_account_controller = {
  is_controller?: boolean
  type: "account" | "application"
}

export type t_address = {
  city?: string | null
  country?: string | null
  line1?: string | null
  line2?: string | null
  postal_code?: string | null
  state?: string | null
}

export type t_api_errors = {
  charge?: string
  code?: string
  decline_code?: string
  doc_url?: string
  message?: string
  param?: string
  payment_intent?: t_payment_intent
  payment_method?: t_payment_method
  payment_method_type?: string
  request_log_url?: string
  setup_intent?: t_setup_intent
  source?: t_bank_account | t_card | t_source
  type:
    | "api_error"
    | "card_error"
    | "idempotency_error"
    | "invalid_request_error"
}

export type t_apple_pay_domain = {
  created: number
  domain_name: string
  id: string
  livemode: boolean
  object: "apple_pay_domain"
}

export type t_application = {
  id: string
  name?: string | null
  object: "application"
}

export type t_application_fee = {
  account: string | t_account
  amount: number
  amount_refunded: number
  application: string | t_application
  balance_transaction?: string | t_balance_transaction | null
  charge: string | t_charge
  created: number
  currency: string
  id: string
  livemode: boolean
  object: "application_fee"
  originating_transaction?: string | t_charge | null
  refunded: boolean
  refunds: {
    data: t_fee_refund[]
    has_more: boolean
    object: "list"
    url: string
  }
}

export type t_apps_secret = {
  created: number
  deleted?: boolean
  expires_at?: number | null
  id: string
  livemode: boolean
  name: string
  object: "apps.secret"
  payload?: string | null
  scope: t_secret_service_resource_scope
}

export type t_automatic_tax = {
  enabled: boolean
  status?: "complete" | "failed" | "requires_location_inputs" | null
}

export type t_balance = {
  available: t_balance_amount[]
  connect_reserved?: t_balance_amount[]
  instant_available?: t_balance_amount[]
  issuing?: t_balance_detail
  livemode: boolean
  object: "balance"
  pending: t_balance_amount[]
}

export type t_balance_amount = {
  amount: number
  currency: string
  source_types?: t_balance_amount_by_source_type
}

export type t_balance_amount_by_source_type = {
  bank_account?: number
  card?: number
  fpx?: number
}

export type t_balance_detail = {
  available: t_balance_amount[]
}

export type t_balance_transaction = {
  amount: number
  available_on: number
  created: number
  currency: string
  description?: string | null
  exchange_rate?: number | null
  fee: number
  fee_details: t_fee[]
  id: string
  net: number
  object: "balance_transaction"
  reporting_category: string
  source?:
    | string
    | t_application_fee
    | t_charge
    | t_connect_collection_transfer
    | t_customer_cash_balance_transaction
    | t_dispute
    | t_fee_refund
    | t_issuing_authorization
    | t_issuing_dispute
    | t_issuing_transaction
    | t_payout
    | t_platform_tax_fee
    | t_refund
    | t_reserve_transaction
    | t_tax_deducted_at_source
    | t_topup
    | t_transfer
    | t_transfer_reversal
    | null
  status: string
  type:
    | "adjustment"
    | "advance"
    | "advance_funding"
    | "anticipation_repayment"
    | "application_fee"
    | "application_fee_refund"
    | "charge"
    | "connect_collection_transfer"
    | "contribution"
    | "issuing_authorization_hold"
    | "issuing_authorization_release"
    | "issuing_dispute"
    | "issuing_transaction"
    | "obligation_inbound"
    | "obligation_outbound"
    | "obligation_payout"
    | "obligation_payout_failure"
    | "obligation_reversal_inbound"
    | "obligation_reversal_outbound"
    | "payment"
    | "payment_failure_refund"
    | "payment_refund"
    | "payment_reversal"
    | "payout"
    | "payout_cancel"
    | "payout_failure"
    | "refund"
    | "refund_failure"
    | "reserve_transaction"
    | "reserved_funds"
    | "stripe_fee"
    | "stripe_fx_fee"
    | "tax_fee"
    | "topup"
    | "topup_reversal"
    | "transfer"
    | "transfer_cancel"
    | "transfer_failure"
    | "transfer_refund"
}

export type t_bank_account = {
  account?: string | t_account | null
  account_holder_name?: string | null
  account_holder_type?: string | null
  account_type?: string | null
  available_payout_methods?: ("instant" | "standard")[] | null
  bank_name?: string | null
  country: string
  currency: string
  customer?: string | t_customer | t_deleted_customer | null
  default_for_currency?: boolean | null
  fingerprint?: string | null
  future_requirements?: t_external_account_requirements | null
  id: string
  last4: string
  metadata?: {
    [key: string]: string
  } | null
  object: "bank_account"
  requirements?: t_external_account_requirements | null
  routing_number?: string | null
  status: string
}

export type t_bank_connections_resource_accountholder = {
  account?: string | t_account
  customer?: string | t_customer
  type: "account" | "customer"
}

export type t_bank_connections_resource_balance = {
  as_of: number
  cash?: t_bank_connections_resource_balance_api_resource_cash_balance
  credit?: t_bank_connections_resource_balance_api_resource_credit_balance
  current: {
    [key: string]: number
  }
  type: "cash" | "credit"
}

export type t_bank_connections_resource_balance_api_resource_cash_balance = {
  available?: {
    [key: string]: number
  } | null
}

export type t_bank_connections_resource_balance_api_resource_credit_balance = {
  used?: {
    [key: string]: number
  } | null
}

export type t_bank_connections_resource_balance_refresh = {
  last_attempted_at: number
  status: "failed" | "pending" | "succeeded"
}

export type t_bank_connections_resource_link_account_session_filters = {
  countries?: string[] | null
}

export type t_bank_connections_resource_ownership_refresh = {
  last_attempted_at: number
  status: "failed" | "pending" | "succeeded"
}

export type t_billing_details = {
  address?: t_address | null
  email?: string | null
  name?: string | null
  phone?: string | null
}

export type t_billing_portal_configuration = {
  active: boolean
  application?: string | t_application | t_deleted_application | null
  business_profile: t_portal_business_profile
  created: number
  default_return_url?: string | null
  features: t_portal_features
  id: string
  is_default: boolean
  livemode: boolean
  login_page: t_portal_login_page
  metadata?: {
    [key: string]: string
  } | null
  object: "billing_portal.configuration"
  updated: number
}

export type t_billing_portal_session = {
  configuration: string | t_billing_portal_configuration
  created: number
  customer: string
  flow?: t_portal_flows_flow | null
  id: string
  livemode: boolean
  locale?:
    | "auto"
    | "bg"
    | "cs"
    | "da"
    | "de"
    | "el"
    | "en"
    | "en-AU"
    | "en-CA"
    | "en-GB"
    | "en-IE"
    | "en-IN"
    | "en-NZ"
    | "en-SG"
    | "es"
    | "es-419"
    | "et"
    | "fi"
    | "fil"
    | "fr"
    | "fr-CA"
    | "hr"
    | "hu"
    | "id"
    | "it"
    | "ja"
    | "ko"
    | "lt"
    | "lv"
    | "ms"
    | "mt"
    | "nb"
    | "nl"
    | "pl"
    | "pt"
    | "pt-BR"
    | "ro"
    | "ru"
    | "sk"
    | "sl"
    | "sv"
    | "th"
    | "tr"
    | "vi"
    | "zh"
    | "zh-HK"
    | "zh-TW"
    | null
  object: "billing_portal.session"
  on_behalf_of?: string | null
  return_url?: string | null
  url: string
}

export type t_cancellation_details = {
  comment?: string | null
  feedback?:
    | "customer_service"
    | "low_quality"
    | "missing_features"
    | "other"
    | "switched_service"
    | "too_complex"
    | "too_expensive"
    | "unused"
    | null
  reason?:
    | "cancellation_requested"
    | "payment_disputed"
    | "payment_failed"
    | null
}

export type t_capability = {
  account: string | t_account
  future_requirements?: t_account_capability_future_requirements
  id: string
  object: "capability"
  requested: boolean
  requested_at?: number | null
  requirements?: t_account_capability_requirements
  status: "active" | "disabled" | "inactive" | "pending" | "unrequested"
}

export type t_card = {
  account?: string | t_account | null
  address_city?: string | null
  address_country?: string | null
  address_line1?: string | null
  address_line1_check?: string | null
  address_line2?: string | null
  address_state?: string | null
  address_zip?: string | null
  address_zip_check?: string | null
  available_payout_methods?: ("instant" | "standard")[] | null
  brand: string
  country?: string | null
  currency?: string | null
  customer?: string | t_customer | t_deleted_customer | null
  cvc_check?: string | null
  default_for_currency?: boolean | null
  dynamic_last4?: string | null
  exp_month: number
  exp_year: number
  fingerprint?: string | null
  funding: string
  id: string
  last4: string
  metadata?: {
    [key: string]: string
  } | null
  name?: string | null
  object: "card"
  status?: string | null
  tokenization_method?: string | null
}

export type t_card_generated_from_payment_method_details = {
  card_present?: t_payment_method_details_card_present
  type: string
}

export type t_card_issuing_account_terms_of_service = {
  date?: number | null
  ip?: string | null
  user_agent?: string
}

export type t_card_mandate_payment_method_details = EmptyObject

export type t_cash_balance = {
  available?: {
    [key: string]: number
  } | null
  customer: string
  livemode: boolean
  object: "cash_balance"
  settings: t_customer_balance_customer_balance_settings
}

export type t_charge = {
  amount: number
  amount_captured: number
  amount_refunded: number
  application?: string | t_application | null
  application_fee?: string | t_application_fee | null
  application_fee_amount?: number | null
  balance_transaction?: string | t_balance_transaction | null
  billing_details: t_billing_details
  calculated_statement_descriptor?: string | null
  captured: boolean
  created: number
  currency: string
  customer?: string | t_customer | t_deleted_customer | null
  description?: string | null
  disputed: boolean
  failure_balance_transaction?: string | t_balance_transaction | null
  failure_code?: string | null
  failure_message?: string | null
  fraud_details?: t_charge_fraud_details | null
  id: string
  invoice?: string | t_invoice | null
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  object: "charge"
  on_behalf_of?: string | t_account | null
  outcome?: t_charge_outcome | null
  paid: boolean
  payment_intent?: string | t_payment_intent | null
  payment_method?: string | null
  payment_method_details?: t_payment_method_details | null
  radar_options?: t_radar_radar_options
  receipt_email?: string | null
  receipt_number?: string | null
  receipt_url?: string | null
  refunded: boolean
  refunds?: {
    data: t_refund[]
    has_more: boolean
    object: "list"
    url: string
  } | null
  review?: string | t_review | null
  shipping?: t_shipping | null
  source_transfer?: string | t_transfer | null
  statement_descriptor?: string | null
  statement_descriptor_suffix?: string | null
  status: "failed" | "pending" | "succeeded"
  transfer?: string | t_transfer
  transfer_data?: t_charge_transfer_data | null
  transfer_group?: string | null
}

export type t_charge_fraud_details = {
  stripe_report?: string
  user_report?: string
}

export type t_charge_outcome = {
  network_status?: string | null
  reason?: string | null
  risk_level?: string
  risk_score?: number
  rule?: string | t_rule
  seller_message?: string | null
  type: string
}

export type t_charge_transfer_data = {
  amount?: number | null
  destination: string | t_account
}

export type t_checkout_session = {
  after_expiration?: t_payment_pages_checkout_session_after_expiration | null
  allow_promotion_codes?: boolean | null
  amount_subtotal?: number | null
  amount_total?: number | null
  automatic_tax: t_payment_pages_checkout_session_automatic_tax
  billing_address_collection?: "auto" | "required" | null
  cancel_url?: string | null
  client_reference_id?: string | null
  consent?: t_payment_pages_checkout_session_consent | null
  consent_collection?: t_payment_pages_checkout_session_consent_collection | null
  created: number
  currency?: string | null
  currency_conversion?: t_payment_pages_checkout_session_currency_conversion | null
  custom_fields: t_payment_pages_checkout_session_custom_fields[]
  custom_text: t_payment_pages_checkout_session_custom_text
  customer?: string | t_customer | t_deleted_customer | null
  customer_creation?: "always" | "if_required" | null
  customer_details?: t_payment_pages_checkout_session_customer_details | null
  customer_email?: string | null
  expires_at: number
  id: string
  invoice?: string | t_invoice | null
  invoice_creation?: t_payment_pages_checkout_session_invoice_creation | null
  line_items?: {
    data: t_item[]
    has_more: boolean
    object: "list"
    url: string
  }
  livemode: boolean
  locale?:
    | "auto"
    | "bg"
    | "cs"
    | "da"
    | "de"
    | "el"
    | "en"
    | "en-GB"
    | "es"
    | "es-419"
    | "et"
    | "fi"
    | "fil"
    | "fr"
    | "fr-CA"
    | "hr"
    | "hu"
    | "id"
    | "it"
    | "ja"
    | "ko"
    | "lt"
    | "lv"
    | "ms"
    | "mt"
    | "nb"
    | "nl"
    | "pl"
    | "pt"
    | "pt-BR"
    | "ro"
    | "ru"
    | "sk"
    | "sl"
    | "sv"
    | "th"
    | "tr"
    | "vi"
    | "zh"
    | "zh-HK"
    | "zh-TW"
    | null
  metadata?: {
    [key: string]: string
  } | null
  mode: "payment" | "setup" | "subscription"
  object: "checkout.session"
  payment_intent?: string | t_payment_intent | null
  payment_link?: string | t_payment_link | null
  payment_method_collection?: "always" | "if_required" | null
  payment_method_configuration_details?: t_payment_method_config_biz_payment_method_configuration_details | null
  payment_method_options?: t_checkout_session_payment_method_options | null
  payment_method_types: string[]
  payment_status: "no_payment_required" | "paid" | "unpaid"
  phone_number_collection?: t_payment_pages_checkout_session_phone_number_collection
  recovered_from?: string | null
  setup_intent?: string | t_setup_intent | null
  shipping_address_collection?: t_payment_pages_checkout_session_shipping_address_collection | null
  shipping_cost?: t_payment_pages_checkout_session_shipping_cost | null
  shipping_details?: t_shipping | null
  shipping_options: t_payment_pages_checkout_session_shipping_option[]
  status?: "complete" | "expired" | "open" | null
  submit_type?: "auto" | "book" | "donate" | "pay" | null
  subscription?: string | t_subscription | null
  success_url?: string | null
  tax_id_collection?: t_payment_pages_checkout_session_tax_id_collection
  total_details?: t_payment_pages_checkout_session_total_details | null
  url?: string | null
}

export type t_checkout_acss_debit_mandate_options = {
  custom_mandate_url?: string
  default_for?: ("invoice" | "subscription")[]
  interval_description?: string | null
  payment_schedule?: "combined" | "interval" | "sporadic" | null
  transaction_type?: "business" | "personal" | null
}

export type t_checkout_acss_debit_payment_method_options = {
  currency?: "cad" | "usd"
  mandate_options?: t_checkout_acss_debit_mandate_options
  setup_future_usage?: "none" | "off_session" | "on_session"
  verification_method?: "automatic" | "instant" | "microdeposits"
}

export type t_checkout_affirm_payment_method_options = {
  setup_future_usage?: "none"
}

export type t_checkout_afterpay_clearpay_payment_method_options = {
  setup_future_usage?: "none"
}

export type t_checkout_alipay_payment_method_options = {
  setup_future_usage?: "none"
}

export type t_checkout_au_becs_debit_payment_method_options = {
  setup_future_usage?: "none"
}

export type t_checkout_bacs_debit_payment_method_options = {
  setup_future_usage?: "none" | "off_session" | "on_session"
}

export type t_checkout_bancontact_payment_method_options = {
  setup_future_usage?: "none"
}

export type t_checkout_boleto_payment_method_options = {
  expires_after_days: number
  setup_future_usage?: "none" | "off_session" | "on_session"
}

export type t_checkout_card_installments_options = {
  enabled?: boolean
}

export type t_checkout_card_payment_method_options = {
  installments?: t_checkout_card_installments_options
  setup_future_usage?: "none" | "off_session" | "on_session"
  statement_descriptor_suffix_kana?: string
  statement_descriptor_suffix_kanji?: string
}

export type t_checkout_cashapp_payment_method_options = {
  setup_future_usage?: "none"
}

export type t_checkout_customer_balance_bank_transfer_payment_method_options = {
  eu_bank_transfer?: t_payment_method_options_customer_balance_eu_bank_account
  requested_address_types?: (
    | "aba"
    | "iban"
    | "sepa"
    | "sort_code"
    | "spei"
    | "swift"
    | "zengin"
  )[]
  type?:
    | "eu_bank_transfer"
    | "gb_bank_transfer"
    | "jp_bank_transfer"
    | "mx_bank_transfer"
    | "us_bank_transfer"
    | null
}

export type t_checkout_customer_balance_payment_method_options = {
  bank_transfer?: t_checkout_customer_balance_bank_transfer_payment_method_options
  funding_type?: "bank_transfer" | null
  setup_future_usage?: "none"
}

export type t_checkout_eps_payment_method_options = {
  setup_future_usage?: "none"
}

export type t_checkout_fpx_payment_method_options = {
  setup_future_usage?: "none"
}

export type t_checkout_giropay_payment_method_options = {
  setup_future_usage?: "none"
}

export type t_checkout_grab_pay_payment_method_options = {
  setup_future_usage?: "none"
}

export type t_checkout_ideal_payment_method_options = {
  setup_future_usage?: "none"
}

export type t_checkout_klarna_payment_method_options = {
  setup_future_usage?: "none" | "off_session" | "on_session"
}

export type t_checkout_konbini_payment_method_options = {
  expires_after_days?: number | null
  setup_future_usage?: "none"
}

export type t_checkout_link_payment_method_options = {
  setup_future_usage?: "none" | "off_session"
}

export type t_checkout_oxxo_payment_method_options = {
  expires_after_days: number
  setup_future_usage?: "none"
}

export type t_checkout_p24_payment_method_options = {
  setup_future_usage?: "none"
}

export type t_checkout_paynow_payment_method_options = {
  setup_future_usage?: "none"
}

export type t_checkout_pix_payment_method_options = {
  expires_after_seconds?: number | null
}

export type t_checkout_sepa_debit_payment_method_options = {
  setup_future_usage?: "none" | "off_session" | "on_session"
}

export type t_checkout_session_payment_method_options = {
  acss_debit?: t_checkout_acss_debit_payment_method_options
  affirm?: t_checkout_affirm_payment_method_options
  afterpay_clearpay?: t_checkout_afterpay_clearpay_payment_method_options
  alipay?: t_checkout_alipay_payment_method_options
  au_becs_debit?: t_checkout_au_becs_debit_payment_method_options
  bacs_debit?: t_checkout_bacs_debit_payment_method_options
  bancontact?: t_checkout_bancontact_payment_method_options
  boleto?: t_checkout_boleto_payment_method_options
  card?: t_checkout_card_payment_method_options
  cashapp?: t_checkout_cashapp_payment_method_options
  customer_balance?: t_checkout_customer_balance_payment_method_options
  eps?: t_checkout_eps_payment_method_options
  fpx?: t_checkout_fpx_payment_method_options
  giropay?: t_checkout_giropay_payment_method_options
  grabpay?: t_checkout_grab_pay_payment_method_options
  ideal?: t_checkout_ideal_payment_method_options
  klarna?: t_checkout_klarna_payment_method_options
  konbini?: t_checkout_konbini_payment_method_options
  link?: t_checkout_link_payment_method_options
  oxxo?: t_checkout_oxxo_payment_method_options
  p24?: t_checkout_p24_payment_method_options
  paynow?: t_checkout_paynow_payment_method_options
  pix?: t_checkout_pix_payment_method_options
  sepa_debit?: t_checkout_sepa_debit_payment_method_options
  sofort?: t_checkout_sofort_payment_method_options
  us_bank_account?: t_checkout_us_bank_account_payment_method_options
}

export type t_checkout_sofort_payment_method_options = {
  setup_future_usage?: "none"
}

export type t_checkout_us_bank_account_payment_method_options = {
  financial_connections?: t_linked_account_options_us_bank_account
  setup_future_usage?: "none" | "off_session" | "on_session"
  verification_method?: "automatic" | "instant"
}

export type t_connect_collection_transfer = {
  amount: number
  currency: string
  destination: string | t_account
  id: string
  livemode: boolean
  object: "connect_collection_transfer"
}

export type t_connect_embedded_account_session_create_components = {
  account_onboarding: t_connect_embedded_base_config_claim
}

export type t_connect_embedded_base_config_claim = {
  enabled: boolean
}

export type t_country_spec = {
  default_currency: string
  id: string
  object: "country_spec"
  supported_bank_account_currencies: {
    [key: string]: string[]
  }
  supported_payment_currencies: string[]
  supported_payment_methods: string[]
  supported_transfer_countries: string[]
  verification_fields: t_country_spec_verification_fields
}

export type t_country_spec_verification_field_details = {
  additional: string[]
  minimum: string[]
}

export type t_country_spec_verification_fields = {
  company: t_country_spec_verification_field_details
  individual: t_country_spec_verification_field_details
}

export type t_coupon = {
  amount_off?: number | null
  applies_to?: t_coupon_applies_to
  created: number
  currency?: string | null
  currency_options?: {
    [key: string]: t_coupon_currency_option
  }
  duration: "forever" | "once" | "repeating"
  duration_in_months?: number | null
  id: string
  livemode: boolean
  max_redemptions?: number | null
  metadata?: {
    [key: string]: string
  } | null
  name?: string | null
  object: "coupon"
  percent_off?: number | null
  redeem_by?: number | null
  times_redeemed: number
  valid: boolean
}

export type t_coupon_applies_to = {
  products: string[]
}

export type t_coupon_currency_option = {
  amount_off: number
}

export type t_credit_note = {
  amount: number
  amount_shipping: number
  created: number
  currency: string
  customer: string | t_customer | t_deleted_customer
  customer_balance_transaction?: string | t_customer_balance_transaction | null
  discount_amount: number
  discount_amounts: t_discounts_resource_discount_amount[]
  effective_at?: number | null
  id: string
  invoice: string | t_invoice
  lines: {
    data: t_credit_note_line_item[]
    has_more: boolean
    object: "list"
    url: string
  }
  livemode: boolean
  memo?: string | null
  metadata?: {
    [key: string]: string
  } | null
  number: string
  object: "credit_note"
  out_of_band_amount?: number | null
  pdf: string
  reason?:
    | "duplicate"
    | "fraudulent"
    | "order_change"
    | "product_unsatisfactory"
    | null
  refund?: string | t_refund | null
  shipping_cost?: t_invoices_shipping_cost | null
  status: "issued" | "void"
  subtotal: number
  subtotal_excluding_tax?: number | null
  tax_amounts: t_credit_note_tax_amount[]
  total: number
  total_excluding_tax?: number | null
  type: "post_payment" | "pre_payment"
  voided_at?: number | null
}

export type t_credit_note_line_item = {
  amount: number
  amount_excluding_tax?: number | null
  description?: string | null
  discount_amount: number
  discount_amounts: t_discounts_resource_discount_amount[]
  id: string
  invoice_line_item?: string
  livemode: boolean
  object: "credit_note_line_item"
  quantity?: number | null
  tax_amounts: t_credit_note_tax_amount[]
  tax_rates: t_tax_rate[]
  type: "custom_line_item" | "invoice_line_item"
  unit_amount?: number | null
  unit_amount_decimal?: string | null
  unit_amount_excluding_tax?: string | null
}

export type t_credit_note_tax_amount = {
  amount: number
  inclusive: boolean
  tax_rate: string | t_tax_rate
  taxability_reason?:
    | "customer_exempt"
    | "not_collecting"
    | "not_subject_to_tax"
    | "not_supported"
    | "portion_product_exempt"
    | "portion_reduced_rated"
    | "portion_standard_rated"
    | "product_exempt"
    | "product_exempt_holiday"
    | "proportionally_rated"
    | "reduced_rated"
    | "reverse_charge"
    | "standard_rated"
    | "taxable_basis_reduced"
    | "zero_rated"
    | null
  taxable_amount?: number | null
}

export type t_currency_option = {
  custom_unit_amount?: t_custom_unit_amount | null
  tax_behavior?: "exclusive" | "inclusive" | "unspecified" | null
  tiers?: t_price_tier[]
  unit_amount?: number | null
  unit_amount_decimal?: string | null
}

export type t_custom_unit_amount = {
  maximum?: number | null
  minimum?: number | null
  preset?: number | null
}

export type t_customer = {
  address?: t_address | null
  balance?: number
  cash_balance?: t_cash_balance | null
  created: number
  currency?: string | null
  default_source?: string | t_bank_account | t_card | t_source | null
  delinquent?: boolean | null
  description?: string | null
  discount?: t_discount | null
  email?: string | null
  id: string
  invoice_credit_balance?: {
    [key: string]: number
  }
  invoice_prefix?: string | null
  invoice_settings?: t_invoice_setting_customer_setting
  livemode: boolean
  metadata?: {
    [key: string]: string
  }
  name?: string | null
  next_invoice_sequence?: number
  object: "customer"
  phone?: string | null
  preferred_locales?: string[] | null
  shipping?: t_shipping | null
  sources?: {
    data: (t_bank_account | t_card | t_source)[]
    has_more: boolean
    object: "list"
    url: string
  }
  subscriptions?: {
    data: t_subscription[]
    has_more: boolean
    object: "list"
    url: string
  }
  tax?: t_customer_tax
  tax_exempt?: "exempt" | "none" | "reverse" | null
  tax_ids?: {
    data: t_tax_id[]
    has_more: boolean
    object: "list"
    url: string
  }
  test_clock?: string | t_test_helpers_test_clock | null
}

export type t_customer_acceptance = {
  accepted_at?: number | null
  offline?: t_offline_acceptance
  online?: t_online_acceptance
  type: "offline" | "online"
}

export type t_customer_balance_customer_balance_settings = {
  reconciliation_mode: "automatic" | "manual"
  using_merchant_default: boolean
}

export type t_customer_balance_resource_cash_balance_transaction_resource_adjusted_for_overdraft =
  {
    balance_transaction: string | t_balance_transaction
    linked_transaction: string | t_customer_cash_balance_transaction
  }

export type t_customer_balance_resource_cash_balance_transaction_resource_applied_to_payment_transaction =
  {
    payment_intent: string | t_payment_intent
  }

export type t_customer_balance_resource_cash_balance_transaction_resource_funded_transaction =
  {
    bank_transfer: t_customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer
  }

export type t_customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer =
  {
    eu_bank_transfer?: t_customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_eu_bank_transfer
    gb_bank_transfer?: t_customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_gb_bank_transfer
    jp_bank_transfer?: t_customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_jp_bank_transfer
    reference?: string | null
    type:
      | "eu_bank_transfer"
      | "gb_bank_transfer"
      | "jp_bank_transfer"
      | "mx_bank_transfer"
      | "us_bank_transfer"
    us_bank_transfer?: t_customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_us_bank_transfer
  }

export type t_customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_eu_bank_transfer =
  {
    bic?: string | null
    iban_last4?: string | null
    sender_name?: string | null
  }

export type t_customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_gb_bank_transfer =
  {
    account_number_last4?: string | null
    sender_name?: string | null
    sort_code?: string | null
  }

export type t_customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_jp_bank_transfer =
  {
    sender_bank?: string | null
    sender_branch?: string | null
    sender_name?: string | null
  }

export type t_customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_us_bank_transfer =
  {
    network?: "ach" | "domestic_wire_us" | "swift"
    sender_name?: string | null
  }

export type t_customer_balance_resource_cash_balance_transaction_resource_refunded_from_payment_transaction =
  {
    refund: string | t_refund
  }

export type t_customer_balance_resource_cash_balance_transaction_resource_unapplied_from_payment_transaction =
  {
    payment_intent: string | t_payment_intent
  }

export type t_customer_balance_transaction = {
  amount: number
  created: number
  credit_note?: string | t_credit_note | null
  currency: string
  customer: string | t_customer
  description?: string | null
  ending_balance: number
  id: string
  invoice?: string | t_invoice | null
  livemode: boolean
  metadata?: {
    [key: string]: string
  } | null
  object: "customer_balance_transaction"
  type:
    | "adjustment"
    | "applied_to_invoice"
    | "credit_note"
    | "initial"
    | "invoice_overpaid"
    | "invoice_too_large"
    | "invoice_too_small"
    | "migration"
    | "unapplied_from_invoice"
    | "unspent_receiver_credit"
}

export type t_customer_cash_balance_transaction = {
  adjusted_for_overdraft?: t_customer_balance_resource_cash_balance_transaction_resource_adjusted_for_overdraft
  applied_to_payment?: t_customer_balance_resource_cash_balance_transaction_resource_applied_to_payment_transaction
  created: number
  currency: string
  customer: string | t_customer
  ending_balance: number
  funded?: t_customer_balance_resource_cash_balance_transaction_resource_funded_transaction
  id: string
  livemode: boolean
  net_amount: number
  object: "customer_cash_balance_transaction"
  refunded_from_payment?: t_customer_balance_resource_cash_balance_transaction_resource_refunded_from_payment_transaction
  type:
    | "adjusted_for_overdraft"
    | "applied_to_payment"
    | "funded"
    | "funding_reversed"
    | "refunded_from_payment"
    | "return_canceled"
    | "return_initiated"
    | "unapplied_from_payment"
  unapplied_from_payment?: t_customer_balance_resource_cash_balance_transaction_resource_unapplied_from_payment_transaction
}

export type t_customer_tax = {
  automatic_tax:
    | "failed"
    | "not_collecting"
    | "supported"
    | "unrecognized_location"
  ip_address?: string | null
  location?: t_customer_tax_location | null
}

export type t_customer_tax_location = {
  country: string
  source:
    | "billing_address"
    | "ip_address"
    | "payment_method"
    | "shipping_destination"
  state?: string | null
}

export type t_deleted_account = {
  deleted: boolean
  id: string
  object: "account"
}

export type t_deleted_apple_pay_domain = {
  deleted: boolean
  id: string
  object: "apple_pay_domain"
}

export type t_deleted_application = {
  deleted: boolean
  id: string
  name?: string | null
  object: "application"
}

export type t_deleted_bank_account = {
  currency?: string | null
  deleted: boolean
  id: string
  object: "bank_account"
}

export type t_deleted_card = {
  currency?: string | null
  deleted: boolean
  id: string
  object: "card"
}

export type t_deleted_coupon = {
  deleted: boolean
  id: string
  object: "coupon"
}

export type t_deleted_customer = {
  deleted: boolean
  id: string
  object: "customer"
}

export type t_deleted_discount = {
  checkout_session?: string | null
  coupon: t_coupon
  customer?: string | t_customer | t_deleted_customer | null
  deleted: boolean
  id: string
  invoice?: string | null
  invoice_item?: string | null
  object: "discount"
  promotion_code?: string | t_promotion_code | null
  start: number
  subscription?: string | null
}

export type t_deleted_external_account = t_deleted_bank_account | t_deleted_card

export type t_deleted_invoice = {
  deleted: boolean
  id: string
  object: "invoice"
}

export type t_deleted_invoiceitem = {
  deleted: boolean
  id: string
  object: "invoiceitem"
}

export type t_deleted_payment_source = t_deleted_bank_account | t_deleted_card

export type t_deleted_person = {
  deleted: boolean
  id: string
  object: "person"
}

export type t_deleted_plan = {
  deleted: boolean
  id: string
  object: "plan"
}

export type t_deleted_price = {
  deleted: boolean
  id: string
  object: "price"
}

export type t_deleted_product = {
  deleted: boolean
  id: string
  object: "product"
}

export type t_deleted_radar_value_list = {
  deleted: boolean
  id: string
  object: "radar.value_list"
}

export type t_deleted_radar_value_list_item = {
  deleted: boolean
  id: string
  object: "radar.value_list_item"
}

export type t_deleted_subscription_item = {
  deleted: boolean
  id: string
  object: "subscription_item"
}

export type t_deleted_tax_id = {
  deleted: boolean
  id: string
  object: "tax_id"
}

export type t_deleted_terminal_configuration = {
  deleted: boolean
  id: string
  object: "terminal.configuration"
}

export type t_deleted_terminal_location = {
  deleted: boolean
  id: string
  object: "terminal.location"
}

export type t_deleted_terminal_reader = {
  deleted: boolean
  id: string
  object: "terminal.reader"
}

export type t_deleted_test_helpers_test_clock = {
  deleted: boolean
  id: string
  object: "test_helpers.test_clock"
}

export type t_deleted_webhook_endpoint = {
  deleted: boolean
  id: string
  object: "webhook_endpoint"
}

export type t_discount = {
  checkout_session?: string | null
  coupon: t_coupon
  customer?: string | t_customer | t_deleted_customer | null
  end?: number | null
  id: string
  invoice?: string | null
  invoice_item?: string | null
  object: "discount"
  promotion_code?: string | t_promotion_code | null
  start: number
  subscription?: string | null
}

export type t_discounts_resource_discount_amount = {
  amount: number
  discount: string | t_discount | t_deleted_discount
}

export type t_dispute = {
  amount: number
  balance_transactions: t_balance_transaction[]
  charge: string | t_charge
  created: number
  currency: string
  evidence: t_dispute_evidence
  evidence_details: t_dispute_evidence_details
  id: string
  is_charge_refundable: boolean
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  object: "dispute"
  payment_intent?: string | t_payment_intent | null
  payment_method_details?: t_dispute_payment_method_details
  reason: string
  status:
    | "lost"
    | "needs_response"
    | "under_review"
    | "warning_closed"
    | "warning_needs_response"
    | "warning_under_review"
    | "won"
}

export type t_dispute_evidence = {
  access_activity_log?: string | null
  billing_address?: string | null
  cancellation_policy?: string | t_file | null
  cancellation_policy_disclosure?: string | null
  cancellation_rebuttal?: string | null
  customer_communication?: string | t_file | null
  customer_email_address?: string | null
  customer_name?: string | null
  customer_purchase_ip?: string | null
  customer_signature?: string | t_file | null
  duplicate_charge_documentation?: string | t_file | null
  duplicate_charge_explanation?: string | null
  duplicate_charge_id?: string | null
  product_description?: string | null
  receipt?: string | t_file | null
  refund_policy?: string | t_file | null
  refund_policy_disclosure?: string | null
  refund_refusal_explanation?: string | null
  service_date?: string | null
  service_documentation?: string | t_file | null
  shipping_address?: string | null
  shipping_carrier?: string | null
  shipping_date?: string | null
  shipping_documentation?: string | t_file | null
  shipping_tracking_number?: string | null
  uncategorized_file?: string | t_file | null
  uncategorized_text?: string | null
}

export type t_dispute_evidence_details = {
  due_by?: number | null
  has_evidence: boolean
  past_due: boolean
  submission_count: number
}

export type t_dispute_payment_method_details = {
  card?: t_dispute_payment_method_details_card | null
  type: "card"
}

export type t_dispute_payment_method_details_card = {
  brand: string
  network_reason_code?: string | null
}

export type t_email_sent = {
  email_sent_at: number
  email_sent_to: string
}

export type t_ephemeral_key = {
  created: number
  expires: number
  id: string
  livemode: boolean
  object: "ephemeral_key"
  secret?: string
}

export type t_error = {
  error: t_api_errors
}

export type t_event = {
  account?: string
  api_version?: string | null
  created: number
  data: t_notification_event_data
  id: string
  livemode: boolean
  object: "event"
  pending_webhooks: number
  request?: t_notification_event_request | null
  type: string
}

export type t_exchange_rate = {
  id: string
  object: "exchange_rate"
  rates: {
    [key: string]: number
  }
}

export type t_external_account = t_bank_account | t_card

export type t_external_account_requirements = {
  currently_due?: string[] | null
  errors?: t_account_requirements_error[] | null
  past_due?: string[] | null
  pending_verification?: string[] | null
}

export type t_fee = {
  amount: number
  application?: string | null
  currency: string
  description?: string | null
  type: string
}

export type t_fee_refund = {
  amount: number
  balance_transaction?: string | t_balance_transaction | null
  created: number
  currency: string
  fee: string | t_application_fee
  id: string
  metadata?: {
    [key: string]: string
  } | null
  object: "fee_refund"
}

export type t_file = {
  created: number
  expires_at?: number | null
  filename?: string | null
  id: string
  links?: {
    data: t_file_link[]
    has_more: boolean
    object: "list"
    url: string
  } | null
  object: "file"
  purpose:
    | "account_requirement"
    | "additional_verification"
    | "business_icon"
    | "business_logo"
    | "customer_signature"
    | "dispute_evidence"
    | "document_provider_identity_document"
    | "finance_report_run"
    | "identity_document"
    | "identity_document_downloadable"
    | "pci_document"
    | "selfie"
    | "sigma_scheduled_query"
    | "tax_document_user_upload"
    | "terminal_reader_splashscreen"
  size: number
  title?: string | null
  type?: string | null
  url?: string | null
}

export type t_file_link = {
  created: number
  expired: boolean
  expires_at?: number | null
  file: string | t_file
  id: string
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  object: "file_link"
  url?: string | null
}

export type t_financial_connections_account = {
  account_holder?: t_bank_connections_resource_accountholder | null
  balance?: t_bank_connections_resource_balance | null
  balance_refresh?: t_bank_connections_resource_balance_refresh | null
  category: "cash" | "credit" | "investment" | "other"
  created: number
  display_name?: string | null
  id: string
  institution_name: string
  last4?: string | null
  livemode: boolean
  object: "financial_connections.account"
  ownership?: string | t_financial_connections_account_ownership | null
  ownership_refresh?: t_bank_connections_resource_ownership_refresh | null
  permissions?:
    | ("balances" | "ownership" | "payment_method" | "transactions")[]
    | null
  status: "active" | "disconnected" | "inactive"
  subcategory:
    | "checking"
    | "credit_card"
    | "line_of_credit"
    | "mortgage"
    | "other"
    | "savings"
  supported_payment_method_types: ("link" | "us_bank_account")[]
}

export type t_financial_connections_account_owner = {
  email?: string | null
  id: string
  name: string
  object: "financial_connections.account_owner"
  ownership: string
  phone?: string | null
  raw_address?: string | null
  refreshed_at?: number | null
}

export type t_financial_connections_account_ownership = {
  created: number
  id: string
  object: "financial_connections.account_ownership"
  owners: {
    data: t_financial_connections_account_owner[]
    has_more: boolean
    object: "list"
    url: string
  }
}

export type t_financial_connections_session = {
  account_holder?: t_bank_connections_resource_accountholder | null
  accounts: {
    data: t_financial_connections_account[]
    has_more: boolean
    object: "list"
    url: string
  }
  client_secret: string
  filters?: t_bank_connections_resource_link_account_session_filters
  id: string
  livemode: boolean
  object: "financial_connections.session"
  permissions: ("balances" | "ownership" | "payment_method" | "transactions")[]
  prefetch?: ("balances" | "ownership")[] | null
  return_url?: string
}

export type t_financial_reporting_finance_report_run_run_parameters = {
  columns?: string[]
  connected_account?: string
  currency?: string
  interval_end?: number
  interval_start?: number
  payout?: string
  reporting_category?: string
  timezone?: string
}

export type t_funding_instructions = {
  bank_transfer: t_funding_instructions_bank_transfer
  currency: string
  funding_type: "bank_transfer"
  livemode: boolean
  object: "funding_instructions"
}

export type t_funding_instructions_bank_transfer = {
  country: string
  financial_addresses: t_funding_instructions_bank_transfer_financial_address[]
  type: "eu_bank_transfer" | "jp_bank_transfer"
}

export type t_funding_instructions_bank_transfer_financial_address = {
  iban?: t_funding_instructions_bank_transfer_iban_record
  sort_code?: t_funding_instructions_bank_transfer_sort_code_record
  spei?: t_funding_instructions_bank_transfer_spei_record
  supported_networks?: ("bacs" | "fps" | "sepa" | "spei" | "zengin")[]
  type: "iban" | "sort_code" | "spei" | "zengin"
  zengin?: t_funding_instructions_bank_transfer_zengin_record
}

export type t_funding_instructions_bank_transfer_iban_record = {
  account_holder_name: string
  bic: string
  country: string
  iban: string
}

export type t_funding_instructions_bank_transfer_sort_code_record = {
  account_holder_name: string
  account_number: string
  sort_code: string
}

export type t_funding_instructions_bank_transfer_spei_record = {
  bank_code: string
  bank_name: string
  clabe: string
}

export type t_funding_instructions_bank_transfer_zengin_record = {
  account_holder_name?: string | null
  account_number?: string | null
  account_type?: string | null
  bank_code?: string | null
  bank_name?: string | null
  branch_code?: string | null
  branch_name?: string | null
}

export type t_gelato_data_document_report_date_of_birth = {
  day?: number | null
  month?: number | null
  year?: number | null
}

export type t_gelato_data_document_report_expiration_date = {
  day?: number | null
  month?: number | null
  year?: number | null
}

export type t_gelato_data_document_report_issued_date = {
  day?: number | null
  month?: number | null
  year?: number | null
}

export type t_gelato_data_id_number_report_date = {
  day?: number | null
  month?: number | null
  year?: number | null
}

export type t_gelato_data_verified_outputs_date = {
  day?: number | null
  month?: number | null
  year?: number | null
}

export type t_gelato_document_report = {
  address?: t_address | null
  dob?: t_gelato_data_document_report_date_of_birth | null
  error?: t_gelato_document_report_error | null
  expiration_date?: t_gelato_data_document_report_expiration_date | null
  files?: string[] | null
  first_name?: string | null
  issued_date?: t_gelato_data_document_report_issued_date | null
  issuing_country?: string | null
  last_name?: string | null
  number?: string | null
  status: "unverified" | "verified"
  type?: "driving_license" | "id_card" | "passport" | null
}

export type t_gelato_document_report_error = {
  code?:
    | "document_expired"
    | "document_type_not_supported"
    | "document_unverified_other"
    | null
  reason?: string | null
}

export type t_gelato_id_number_report = {
  dob?: t_gelato_data_id_number_report_date | null
  error?: t_gelato_id_number_report_error | null
  first_name?: string | null
  id_number?: string | null
  id_number_type?: "br_cpf" | "sg_nric" | "us_ssn" | null
  last_name?: string | null
  status: "unverified" | "verified"
}

export type t_gelato_id_number_report_error = {
  code?:
    | "id_number_insufficient_document_data"
    | "id_number_mismatch"
    | "id_number_unverified_other"
    | null
  reason?: string | null
}

export type t_gelato_report_document_options = {
  allowed_types?: ("driving_license" | "id_card" | "passport")[]
  require_id_number?: boolean
  require_live_capture?: boolean
  require_matching_selfie?: boolean
}

export type t_gelato_report_id_number_options = EmptyObject

export type t_gelato_selfie_report = {
  document?: string | null
  error?: t_gelato_selfie_report_error | null
  selfie?: string | null
  status: "unverified" | "verified"
}

export type t_gelato_selfie_report_error = {
  code?:
    | "selfie_document_missing_photo"
    | "selfie_face_mismatch"
    | "selfie_manipulated"
    | "selfie_unverified_other"
    | null
  reason?: string | null
}

export type t_gelato_session_document_options = {
  allowed_types?: ("driving_license" | "id_card" | "passport")[]
  require_id_number?: boolean
  require_live_capture?: boolean
  require_matching_selfie?: boolean
}

export type t_gelato_session_id_number_options = EmptyObject

export type t_gelato_session_last_error = {
  code?:
    | "abandoned"
    | "consent_declined"
    | "country_not_supported"
    | "device_not_supported"
    | "document_expired"
    | "document_type_not_supported"
    | "document_unverified_other"
    | "id_number_insufficient_document_data"
    | "id_number_mismatch"
    | "id_number_unverified_other"
    | "selfie_document_missing_photo"
    | "selfie_face_mismatch"
    | "selfie_manipulated"
    | "selfie_unverified_other"
    | "under_supported_age"
    | null
  reason?: string | null
}

export type t_gelato_verification_report_options = {
  document?: t_gelato_report_document_options
  id_number?: t_gelato_report_id_number_options
}

export type t_gelato_verification_session_options = {
  document?: t_gelato_session_document_options
  id_number?: t_gelato_session_id_number_options
}

export type t_gelato_verified_outputs = {
  address?: t_address | null
  dob?: t_gelato_data_verified_outputs_date | null
  first_name?: string | null
  id_number?: string | null
  id_number_type?: "br_cpf" | "sg_nric" | "us_ssn" | null
  last_name?: string | null
}

export type t_identity_verification_report = {
  created: number
  document?: t_gelato_document_report
  id: string
  id_number?: t_gelato_id_number_report
  livemode: boolean
  object: "identity.verification_report"
  options?: t_gelato_verification_report_options
  selfie?: t_gelato_selfie_report
  type?: "document" | "id_number"
  verification_session?: string | null
}

export type t_identity_verification_session = {
  client_secret?: string | null
  created: number
  id: string
  last_error?: t_gelato_session_last_error | null
  last_verification_report?: string | t_identity_verification_report | null
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  object: "identity.verification_session"
  options?: t_gelato_verification_session_options | null
  redaction?: t_verification_session_redaction | null
  status: "canceled" | "processing" | "requires_input" | "verified"
  type?: "document" | "id_number" | null
  url?: string | null
  verified_outputs?: t_gelato_verified_outputs | null
}

export type t_inbound_transfers = {
  billing_details: t_treasury_shared_resource_billing_details
  type: "us_bank_account"
  us_bank_account?: t_inbound_transfers_payment_method_details_us_bank_account
}

export type t_inbound_transfers_payment_method_details_us_bank_account = {
  account_holder_type?: "company" | "individual" | null
  account_type?: "checking" | "savings" | null
  bank_name?: string | null
  fingerprint?: string | null
  last4?: string | null
  network: "ach"
  routing_number?: string | null
}

export type t_invoice = {
  account_country?: string | null
  account_name?: string | null
  account_tax_ids?: (string | t_tax_id | t_deleted_tax_id)[] | null
  amount_due: number
  amount_paid: number
  amount_remaining: number
  amount_shipping: number
  application?: string | t_application | t_deleted_application | null
  application_fee_amount?: number | null
  attempt_count: number
  attempted: boolean
  auto_advance?: boolean
  automatic_tax: t_automatic_tax
  billing_reason?:
    | "automatic_pending_invoice_item_invoice"
    | "manual"
    | "quote_accept"
    | "subscription"
    | "subscription_create"
    | "subscription_cycle"
    | "subscription_threshold"
    | "subscription_update"
    | "upcoming"
    | null
  charge?: string | t_charge | null
  collection_method: "charge_automatically" | "send_invoice"
  created: number
  currency: string
  custom_fields?: t_invoice_setting_custom_field[] | null
  customer?: string | t_customer | t_deleted_customer | null
  customer_address?: t_address | null
  customer_email?: string | null
  customer_name?: string | null
  customer_phone?: string | null
  customer_shipping?: t_shipping | null
  customer_tax_exempt?: "exempt" | "none" | "reverse" | null
  customer_tax_ids?: t_invoices_resource_invoice_tax_id[] | null
  default_payment_method?: string | t_payment_method | null
  default_source?: string | t_bank_account | t_card | t_source | null
  default_tax_rates: t_tax_rate[]
  description?: string | null
  discount?: t_discount | null
  discounts?: (string | t_discount | t_deleted_discount)[] | null
  due_date?: number | null
  effective_at?: number | null
  ending_balance?: number | null
  footer?: string | null
  from_invoice?: t_invoices_from_invoice | null
  hosted_invoice_url?: string | null
  id?: string
  invoice_pdf?: string | null
  last_finalization_error?: t_api_errors | null
  latest_revision?: string | t_invoice | null
  lines: {
    data: t_line_item[]
    has_more: boolean
    object: "list"
    url: string
  }
  livemode: boolean
  metadata?: {
    [key: string]: string
  } | null
  next_payment_attempt?: number | null
  number?: string | null
  object: "invoice"
  on_behalf_of?: string | t_account | null
  paid: boolean
  paid_out_of_band: boolean
  payment_intent?: string | t_payment_intent | null
  payment_settings: t_invoices_payment_settings
  period_end: number
  period_start: number
  post_payment_credit_notes_amount: number
  pre_payment_credit_notes_amount: number
  quote?: string | t_quote | null
  receipt_number?: string | null
  rendering?: t_invoices_invoice_rendering | null
  rendering_options?: t_invoice_setting_rendering_options | null
  shipping_cost?: t_invoices_shipping_cost | null
  shipping_details?: t_shipping | null
  starting_balance: number
  statement_descriptor?: string | null
  status?: "draft" | "open" | "paid" | "uncollectible" | "void" | null
  status_transitions: t_invoices_status_transitions
  subscription?: string | t_subscription | null
  subscription_details?: t_subscription_details_data | null
  subscription_proration_date?: number
  subtotal: number
  subtotal_excluding_tax?: number | null
  tax?: number | null
  test_clock?: string | t_test_helpers_test_clock | null
  threshold_reason?: t_invoice_threshold_reason
  total: number
  total_discount_amounts?: t_discounts_resource_discount_amount[] | null
  total_excluding_tax?: number | null
  total_tax_amounts: t_invoice_tax_amount[]
  transfer_data?: t_invoice_transfer_data | null
  webhooks_delivered_at?: number | null
}

export type t_invoice_installments_card = {
  enabled?: boolean | null
}

export type t_invoice_item_threshold_reason = {
  line_item_ids: string[]
  usage_gte: number
}

export type t_invoice_line_item_period = {
  end: number
  start: number
}

export type t_invoice_mandate_options_card = {
  amount?: number | null
  amount_type?: "fixed" | "maximum" | null
  description?: string | null
}

export type t_invoice_payment_method_options_acss_debit = {
  mandate_options?: t_invoice_payment_method_options_acss_debit_mandate_options
  verification_method?: "automatic" | "instant" | "microdeposits"
}

export type t_invoice_payment_method_options_acss_debit_mandate_options = {
  transaction_type?: "business" | "personal" | null
}

export type t_invoice_payment_method_options_bancontact = {
  preferred_language: "de" | "en" | "fr" | "nl"
}

export type t_invoice_payment_method_options_card = {
  installments?: t_invoice_installments_card
  request_three_d_secure?: "any" | "automatic" | null
}

export type t_invoice_payment_method_options_customer_balance = {
  bank_transfer?: t_invoice_payment_method_options_customer_balance_bank_transfer
  funding_type?: "bank_transfer" | null
}

export type t_invoice_payment_method_options_customer_balance_bank_transfer = {
  eu_bank_transfer?: t_invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer
  type?: string | null
}

export type t_invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer =
  {
    country: "BE" | "DE" | "ES" | "FR" | "IE" | "NL"
  }

export type t_invoice_payment_method_options_konbini = EmptyObject

export type t_invoice_payment_method_options_us_bank_account = {
  financial_connections?: t_invoice_payment_method_options_us_bank_account_linked_account_options
  verification_method?: "automatic" | "instant" | "microdeposits"
}

export type t_invoice_payment_method_options_us_bank_account_linked_account_options =
  {
    permissions?: ("balances" | "payment_method" | "transactions")[]
    prefetch?: "balances"[] | null
  }

export type t_invoice_rendering_pdf = {
  page_size?: "a4" | "auto" | "letter" | null
}

export type t_invoice_setting_custom_field = {
  name: string
  value: string
}

export type t_invoice_setting_customer_setting = {
  custom_fields?: t_invoice_setting_custom_field[] | null
  default_payment_method?: string | t_payment_method | null
  footer?: string | null
  rendering_options?: t_invoice_setting_rendering_options | null
}

export type t_invoice_setting_quote_setting = {
  days_until_due?: number | null
}

export type t_invoice_setting_rendering_options = {
  amount_tax_display?: string | null
}

export type t_invoice_setting_subscription_schedule_phase_setting = {
  days_until_due?: number | null
}

export type t_invoice_setting_subscription_schedule_setting = {
  days_until_due?: number | null
}

export type t_invoice_tax_amount = {
  amount: number
  inclusive: boolean
  tax_rate: string | t_tax_rate
  taxability_reason?:
    | "customer_exempt"
    | "not_collecting"
    | "not_subject_to_tax"
    | "not_supported"
    | "portion_product_exempt"
    | "portion_reduced_rated"
    | "portion_standard_rated"
    | "product_exempt"
    | "product_exempt_holiday"
    | "proportionally_rated"
    | "reduced_rated"
    | "reverse_charge"
    | "standard_rated"
    | "taxable_basis_reduced"
    | "zero_rated"
    | null
  taxable_amount?: number | null
}

export type t_invoice_threshold_reason = {
  amount_gte?: number | null
  item_reasons: t_invoice_item_threshold_reason[]
}

export type t_invoice_transfer_data = {
  amount?: number | null
  destination: string | t_account
}

export type t_invoiceitem = {
  amount: number
  currency: string
  customer: string | t_customer | t_deleted_customer
  date: number
  description?: string | null
  discountable: boolean
  discounts?: (string | t_discount)[] | null
  id: string
  invoice?: string | t_invoice | null
  livemode: boolean
  metadata?: {
    [key: string]: string
  } | null
  object: "invoiceitem"
  period: t_invoice_line_item_period
  price?: t_price | null
  proration: boolean
  quantity: number
  subscription?: string | t_subscription | null
  subscription_item?: string
  tax_rates?: t_tax_rate[] | null
  test_clock?: string | t_test_helpers_test_clock | null
  unit_amount?: number | null
  unit_amount_decimal?: string | null
}

export type t_invoices_from_invoice = {
  action: string
  invoice: string | t_invoice
}

export type t_invoices_invoice_rendering = {
  amount_tax_display?: string | null
  pdf?: t_invoice_rendering_pdf | null
}

export type t_invoices_payment_method_options = {
  acss_debit?: t_invoice_payment_method_options_acss_debit | null
  bancontact?: t_invoice_payment_method_options_bancontact | null
  card?: t_invoice_payment_method_options_card | null
  customer_balance?: t_invoice_payment_method_options_customer_balance | null
  konbini?: t_invoice_payment_method_options_konbini | null
  us_bank_account?: t_invoice_payment_method_options_us_bank_account | null
}

export type t_invoices_payment_settings = {
  default_mandate?: string | null
  payment_method_options?: t_invoices_payment_method_options | null
  payment_method_types?:
    | (
        | "ach_credit_transfer"
        | "ach_debit"
        | "acss_debit"
        | "au_becs_debit"
        | "bacs_debit"
        | "bancontact"
        | "boleto"
        | "card"
        | "cashapp"
        | "customer_balance"
        | "fpx"
        | "giropay"
        | "grabpay"
        | "ideal"
        | "konbini"
        | "link"
        | "paynow"
        | "paypal"
        | "promptpay"
        | "sepa_debit"
        | "sofort"
        | "us_bank_account"
        | "wechat_pay"
      )[]
    | null
}

export type t_invoices_resource_invoice_tax_id = {
  type:
    | "ad_nrt"
    | "ae_trn"
    | "ar_cuit"
    | "au_abn"
    | "au_arn"
    | "bg_uic"
    | "bo_tin"
    | "br_cnpj"
    | "br_cpf"
    | "ca_bn"
    | "ca_gst_hst"
    | "ca_pst_bc"
    | "ca_pst_mb"
    | "ca_pst_sk"
    | "ca_qst"
    | "ch_vat"
    | "cl_tin"
    | "cn_tin"
    | "co_nit"
    | "cr_tin"
    | "do_rcn"
    | "ec_ruc"
    | "eg_tin"
    | "es_cif"
    | "eu_oss_vat"
    | "eu_vat"
    | "gb_vat"
    | "ge_vat"
    | "hk_br"
    | "hu_tin"
    | "id_npwp"
    | "il_vat"
    | "in_gst"
    | "is_vat"
    | "jp_cn"
    | "jp_rn"
    | "jp_trn"
    | "ke_pin"
    | "kr_brn"
    | "li_uid"
    | "mx_rfc"
    | "my_frp"
    | "my_itn"
    | "my_sst"
    | "no_vat"
    | "nz_gst"
    | "pe_ruc"
    | "ph_tin"
    | "ro_tin"
    | "rs_pib"
    | "ru_inn"
    | "ru_kpp"
    | "sa_vat"
    | "sg_gst"
    | "sg_uen"
    | "si_tin"
    | "sv_nit"
    | "th_vat"
    | "tr_tin"
    | "tw_vat"
    | "ua_vat"
    | "unknown"
    | "us_ein"
    | "uy_ruc"
    | "ve_rif"
    | "vn_tin"
    | "za_vat"
  value?: string | null
}

export type t_invoices_resource_line_items_credited_items = {
  invoice: string
  invoice_line_items: string[]
}

export type t_invoices_resource_line_items_proration_details = {
  credited_items?: t_invoices_resource_line_items_credited_items | null
}

export type t_invoices_shipping_cost = {
  amount_subtotal: number
  amount_tax: number
  amount_total: number
  shipping_rate?: string | t_shipping_rate | null
  taxes?: t_line_items_tax_amount[]
}

export type t_invoices_status_transitions = {
  finalized_at?: number | null
  marked_uncollectible_at?: number | null
  paid_at?: number | null
  voided_at?: number | null
}

export type t_issuing_authorization = {
  amount: number
  amount_details?: t_issuing_authorization_amount_details | null
  approved: boolean
  authorization_method: "chip" | "contactless" | "keyed_in" | "online" | "swipe"
  balance_transactions: t_balance_transaction[]
  card: t_issuing_card
  cardholder?: string | t_issuing_cardholder | null
  created: number
  currency: string
  id: string
  livemode: boolean
  merchant_amount: number
  merchant_currency: string
  merchant_data: t_issuing_authorization_merchant_data
  metadata: {
    [key: string]: string
  }
  network_data?: t_issuing_authorization_network_data | null
  object: "issuing.authorization"
  pending_request?: t_issuing_authorization_pending_request | null
  request_history: t_issuing_authorization_request[]
  status: "closed" | "pending" | "reversed"
  transactions: t_issuing_transaction[]
  treasury?: t_issuing_authorization_treasury | null
  verification_data: t_issuing_authorization_verification_data
  wallet?: string | null
}

export type t_issuing_card = {
  brand: string
  cancellation_reason?: "design_rejected" | "lost" | "stolen" | null
  cardholder: t_issuing_cardholder
  created: number
  currency: string
  cvc?: string
  exp_month: number
  exp_year: number
  financial_account?: string | null
  id: string
  last4: string
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  number?: string
  object: "issuing.card"
  replaced_by?: string | t_issuing_card | null
  replacement_for?: string | t_issuing_card | null
  replacement_reason?: "damaged" | "expired" | "lost" | "stolen" | null
  shipping?: t_issuing_card_shipping | null
  spending_controls: t_issuing_card_authorization_controls
  status: "active" | "canceled" | "inactive"
  type: "physical" | "virtual"
  wallets?: t_issuing_card_wallets | null
}

export type t_issuing_cardholder = {
  billing: t_issuing_cardholder_address
  company?: t_issuing_cardholder_company | null
  created: number
  email?: string | null
  id: string
  individual?: t_issuing_cardholder_individual | null
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  name: string
  object: "issuing.cardholder"
  phone_number?: string | null
  preferred_locales?: ("de" | "en" | "es" | "fr" | "it")[] | null
  requirements: t_issuing_cardholder_requirements
  spending_controls?: t_issuing_cardholder_authorization_controls | null
  status: "active" | "blocked" | "inactive"
  type: "company" | "individual"
}

export type t_issuing_dispute = {
  amount: number
  balance_transactions?: t_balance_transaction[] | null
  created: number
  currency: string
  evidence: t_issuing_dispute_evidence
  id: string
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  object: "issuing.dispute"
  status: "expired" | "lost" | "submitted" | "unsubmitted" | "won"
  transaction: string | t_issuing_transaction
  treasury?: t_issuing_dispute_treasury | null
}

export type t_issuing_settlement = {
  bin: string
  clearing_date: number
  created: number
  currency: string
  id: string
  interchange_fees: number
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  net_total: number
  network: "visa"
  network_fees: number
  network_settlement_identifier: string
  object: "issuing.settlement"
  settlement_service: string
  transaction_count: number
  transaction_volume: number
}

export type t_issuing_transaction = {
  amount: number
  amount_details?: t_issuing_transaction_amount_details | null
  authorization?: string | t_issuing_authorization | null
  balance_transaction?: string | t_balance_transaction | null
  card: string | t_issuing_card
  cardholder?: string | t_issuing_cardholder | null
  created: number
  currency: string
  dispute?: string | t_issuing_dispute | null
  id: string
  livemode: boolean
  merchant_amount: number
  merchant_currency: string
  merchant_data: t_issuing_authorization_merchant_data
  metadata: {
    [key: string]: string
  }
  object: "issuing.transaction"
  purchase_details?: t_issuing_transaction_purchase_details | null
  treasury?: t_issuing_transaction_treasury | null
  type: "capture" | "refund"
  wallet?: "apple_pay" | "google_pay" | "samsung_pay" | null
}

export type t_issuing_authorization_amount_details = {
  atm_fee?: number | null
  cashback_amount?: number | null
}

export type t_issuing_authorization_merchant_data = {
  category: string
  category_code: string
  city?: string | null
  country?: string | null
  name?: string | null
  network_id: string
  postal_code?: string | null
  state?: string | null
  terminal_id?: string | null
}

export type t_issuing_authorization_network_data = {
  acquiring_institution_id?: string | null
}

export type t_issuing_authorization_pending_request = {
  amount: number
  amount_details?: t_issuing_authorization_amount_details | null
  currency: string
  is_amount_controllable: boolean
  merchant_amount: number
  merchant_currency: string
}

export type t_issuing_authorization_request = {
  amount: number
  amount_details?: t_issuing_authorization_amount_details | null
  approved: boolean
  created: number
  currency: string
  merchant_amount: number
  merchant_currency: string
  reason:
    | "account_disabled"
    | "card_active"
    | "card_inactive"
    | "cardholder_inactive"
    | "cardholder_verification_required"
    | "insufficient_funds"
    | "not_allowed"
    | "spending_controls"
    | "suspected_fraud"
    | "verification_failed"
    | "webhook_approved"
    | "webhook_declined"
    | "webhook_error"
    | "webhook_timeout"
  reason_message?: string | null
}

export type t_issuing_authorization_treasury = {
  received_credits: string[]
  received_debits: string[]
  transaction?: string | null
}

export type t_issuing_authorization_verification_data = {
  address_line1_check: "match" | "mismatch" | "not_provided"
  address_postal_code_check: "match" | "mismatch" | "not_provided"
  cvc_check: "match" | "mismatch" | "not_provided"
  expiry_check: "match" | "mismatch" | "not_provided"
}

export type t_issuing_card_apple_pay = {
  eligible: boolean
  ineligible_reason?:
    | "missing_agreement"
    | "missing_cardholder_contact"
    | "unsupported_region"
    | null
}

export type t_issuing_card_authorization_controls = {
  allowed_categories?:
    | (
        | "ac_refrigeration_repair"
        | "accounting_bookkeeping_services"
        | "advertising_services"
        | "agricultural_cooperative"
        | "airlines_air_carriers"
        | "airports_flying_fields"
        | "ambulance_services"
        | "amusement_parks_carnivals"
        | "antique_reproductions"
        | "antique_shops"
        | "aquariums"
        | "architectural_surveying_services"
        | "art_dealers_and_galleries"
        | "artists_supply_and_craft_shops"
        | "auto_and_home_supply_stores"
        | "auto_body_repair_shops"
        | "auto_paint_shops"
        | "auto_service_shops"
        | "automated_cash_disburse"
        | "automated_fuel_dispensers"
        | "automobile_associations"
        | "automotive_parts_and_accessories_stores"
        | "automotive_tire_stores"
        | "bail_and_bond_payments"
        | "bakeries"
        | "bands_orchestras"
        | "barber_and_beauty_shops"
        | "betting_casino_gambling"
        | "bicycle_shops"
        | "billiard_pool_establishments"
        | "boat_dealers"
        | "boat_rentals_and_leases"
        | "book_stores"
        | "books_periodicals_and_newspapers"
        | "bowling_alleys"
        | "bus_lines"
        | "business_secretarial_schools"
        | "buying_shopping_services"
        | "cable_satellite_and_other_pay_television_and_radio"
        | "camera_and_photographic_supply_stores"
        | "candy_nut_and_confectionery_stores"
        | "car_and_truck_dealers_new_used"
        | "car_and_truck_dealers_used_only"
        | "car_rental_agencies"
        | "car_washes"
        | "carpentry_services"
        | "carpet_upholstery_cleaning"
        | "caterers"
        | "charitable_and_social_service_organizations_fundraising"
        | "chemicals_and_allied_products"
        | "child_care_services"
        | "childrens_and_infants_wear_stores"
        | "chiropodists_podiatrists"
        | "chiropractors"
        | "cigar_stores_and_stands"
        | "civic_social_fraternal_associations"
        | "cleaning_and_maintenance"
        | "clothing_rental"
        | "colleges_universities"
        | "commercial_equipment"
        | "commercial_footwear"
        | "commercial_photography_art_and_graphics"
        | "commuter_transport_and_ferries"
        | "computer_network_services"
        | "computer_programming"
        | "computer_repair"
        | "computer_software_stores"
        | "computers_peripherals_and_software"
        | "concrete_work_services"
        | "construction_materials"
        | "consulting_public_relations"
        | "correspondence_schools"
        | "cosmetic_stores"
        | "counseling_services"
        | "country_clubs"
        | "courier_services"
        | "court_costs"
        | "credit_reporting_agencies"
        | "cruise_lines"
        | "dairy_products_stores"
        | "dance_hall_studios_schools"
        | "dating_escort_services"
        | "dentists_orthodontists"
        | "department_stores"
        | "detective_agencies"
        | "digital_goods_applications"
        | "digital_goods_games"
        | "digital_goods_large_volume"
        | "digital_goods_media"
        | "direct_marketing_catalog_merchant"
        | "direct_marketing_combination_catalog_and_retail_merchant"
        | "direct_marketing_inbound_telemarketing"
        | "direct_marketing_insurance_services"
        | "direct_marketing_other"
        | "direct_marketing_outbound_telemarketing"
        | "direct_marketing_subscription"
        | "direct_marketing_travel"
        | "discount_stores"
        | "doctors"
        | "door_to_door_sales"
        | "drapery_window_covering_and_upholstery_stores"
        | "drinking_places"
        | "drug_stores_and_pharmacies"
        | "drugs_drug_proprietaries_and_druggist_sundries"
        | "dry_cleaners"
        | "durable_goods"
        | "duty_free_stores"
        | "eating_places_restaurants"
        | "educational_services"
        | "electric_razor_stores"
        | "electric_vehicle_charging"
        | "electrical_parts_and_equipment"
        | "electrical_services"
        | "electronics_repair_shops"
        | "electronics_stores"
        | "elementary_secondary_schools"
        | "emergency_services_gcas_visa_use_only"
        | "employment_temp_agencies"
        | "equipment_rental"
        | "exterminating_services"
        | "family_clothing_stores"
        | "fast_food_restaurants"
        | "financial_institutions"
        | "fines_government_administrative_entities"
        | "fireplace_fireplace_screens_and_accessories_stores"
        | "floor_covering_stores"
        | "florists"
        | "florists_supplies_nursery_stock_and_flowers"
        | "freezer_and_locker_meat_provisioners"
        | "fuel_dealers_non_automotive"
        | "funeral_services_crematories"
        | "furniture_home_furnishings_and_equipment_stores_except_appliances"
        | "furniture_repair_refinishing"
        | "furriers_and_fur_shops"
        | "general_services"
        | "gift_card_novelty_and_souvenir_shops"
        | "glass_paint_and_wallpaper_stores"
        | "glassware_crystal_stores"
        | "golf_courses_public"
        | "government_licensed_horse_dog_racing_us_region_only"
        | "government_licensed_online_casions_online_gambling_us_region_only"
        | "government_owned_lotteries_non_us_region"
        | "government_owned_lotteries_us_region_only"
        | "government_services"
        | "grocery_stores_supermarkets"
        | "hardware_equipment_and_supplies"
        | "hardware_stores"
        | "health_and_beauty_spas"
        | "hearing_aids_sales_and_supplies"
        | "heating_plumbing_a_c"
        | "hobby_toy_and_game_shops"
        | "home_supply_warehouse_stores"
        | "hospitals"
        | "hotels_motels_and_resorts"
        | "household_appliance_stores"
        | "industrial_supplies"
        | "information_retrieval_services"
        | "insurance_default"
        | "insurance_underwriting_premiums"
        | "intra_company_purchases"
        | "jewelry_stores_watches_clocks_and_silverware_stores"
        | "landscaping_services"
        | "laundries"
        | "laundry_cleaning_services"
        | "legal_services_attorneys"
        | "luggage_and_leather_goods_stores"
        | "lumber_building_materials_stores"
        | "manual_cash_disburse"
        | "marinas_service_and_supplies"
        | "marketplaces"
        | "masonry_stonework_and_plaster"
        | "massage_parlors"
        | "medical_and_dental_labs"
        | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
        | "medical_services"
        | "membership_organizations"
        | "mens_and_boys_clothing_and_accessories_stores"
        | "mens_womens_clothing_stores"
        | "metal_service_centers"
        | "miscellaneous"
        | "miscellaneous_apparel_and_accessory_shops"
        | "miscellaneous_auto_dealers"
        | "miscellaneous_business_services"
        | "miscellaneous_food_stores"
        | "miscellaneous_general_merchandise"
        | "miscellaneous_general_services"
        | "miscellaneous_home_furnishing_specialty_stores"
        | "miscellaneous_publishing_and_printing"
        | "miscellaneous_recreation_services"
        | "miscellaneous_repair_shops"
        | "miscellaneous_specialty_retail"
        | "mobile_home_dealers"
        | "motion_picture_theaters"
        | "motor_freight_carriers_and_trucking"
        | "motor_homes_dealers"
        | "motor_vehicle_supplies_and_new_parts"
        | "motorcycle_shops_and_dealers"
        | "motorcycle_shops_dealers"
        | "music_stores_musical_instruments_pianos_and_sheet_music"
        | "news_dealers_and_newsstands"
        | "non_fi_money_orders"
        | "non_fi_stored_value_card_purchase_load"
        | "nondurable_goods"
        | "nurseries_lawn_and_garden_supply_stores"
        | "nursing_personal_care"
        | "office_and_commercial_furniture"
        | "opticians_eyeglasses"
        | "optometrists_ophthalmologist"
        | "orthopedic_goods_prosthetic_devices"
        | "osteopaths"
        | "package_stores_beer_wine_and_liquor"
        | "paints_varnishes_and_supplies"
        | "parking_lots_garages"
        | "passenger_railways"
        | "pawn_shops"
        | "pet_shops_pet_food_and_supplies"
        | "petroleum_and_petroleum_products"
        | "photo_developing"
        | "photographic_photocopy_microfilm_equipment_and_supplies"
        | "photographic_studios"
        | "picture_video_production"
        | "piece_goods_notions_and_other_dry_goods"
        | "plumbing_heating_equipment_and_supplies"
        | "political_organizations"
        | "postal_services_government_only"
        | "precious_stones_and_metals_watches_and_jewelry"
        | "professional_services"
        | "public_warehousing_and_storage"
        | "quick_copy_repro_and_blueprint"
        | "railroads"
        | "real_estate_agents_and_managers_rentals"
        | "record_stores"
        | "recreational_vehicle_rentals"
        | "religious_goods_stores"
        | "religious_organizations"
        | "roofing_siding_sheet_metal"
        | "secretarial_support_services"
        | "security_brokers_dealers"
        | "service_stations"
        | "sewing_needlework_fabric_and_piece_goods_stores"
        | "shoe_repair_hat_cleaning"
        | "shoe_stores"
        | "small_appliance_repair"
        | "snowmobile_dealers"
        | "special_trade_services"
        | "specialty_cleaning"
        | "sporting_goods_stores"
        | "sporting_recreation_camps"
        | "sports_and_riding_apparel_stores"
        | "sports_clubs_fields"
        | "stamp_and_coin_stores"
        | "stationary_office_supplies_printing_and_writing_paper"
        | "stationery_stores_office_and_school_supply_stores"
        | "swimming_pools_sales"
        | "t_ui_travel_germany"
        | "tailors_alterations"
        | "tax_payments_government_agencies"
        | "tax_preparation_services"
        | "taxicabs_limousines"
        | "telecommunication_equipment_and_telephone_sales"
        | "telecommunication_services"
        | "telegraph_services"
        | "tent_and_awning_shops"
        | "testing_laboratories"
        | "theatrical_ticket_agencies"
        | "timeshares"
        | "tire_retreading_and_repair"
        | "tolls_bridge_fees"
        | "tourist_attractions_and_exhibits"
        | "towing_services"
        | "trailer_parks_campgrounds"
        | "transportation_services"
        | "travel_agencies_tour_operators"
        | "truck_stop_iteration"
        | "truck_utility_trailer_rentals"
        | "typesetting_plate_making_and_related_services"
        | "typewriter_stores"
        | "u_s_federal_government_agencies_or_departments"
        | "uniforms_commercial_clothing"
        | "used_merchandise_and_secondhand_stores"
        | "utilities"
        | "variety_stores"
        | "veterinary_services"
        | "video_amusement_game_supplies"
        | "video_game_arcades"
        | "video_tape_rental_stores"
        | "vocational_trade_schools"
        | "watch_jewelry_repair"
        | "welding_repair"
        | "wholesale_clubs"
        | "wig_and_toupee_stores"
        | "wires_money_orders"
        | "womens_accessory_and_specialty_shops"
        | "womens_ready_to_wear_stores"
        | "wrecking_and_salvage_yards"
      )[]
    | null
  blocked_categories?:
    | (
        | "ac_refrigeration_repair"
        | "accounting_bookkeeping_services"
        | "advertising_services"
        | "agricultural_cooperative"
        | "airlines_air_carriers"
        | "airports_flying_fields"
        | "ambulance_services"
        | "amusement_parks_carnivals"
        | "antique_reproductions"
        | "antique_shops"
        | "aquariums"
        | "architectural_surveying_services"
        | "art_dealers_and_galleries"
        | "artists_supply_and_craft_shops"
        | "auto_and_home_supply_stores"
        | "auto_body_repair_shops"
        | "auto_paint_shops"
        | "auto_service_shops"
        | "automated_cash_disburse"
        | "automated_fuel_dispensers"
        | "automobile_associations"
        | "automotive_parts_and_accessories_stores"
        | "automotive_tire_stores"
        | "bail_and_bond_payments"
        | "bakeries"
        | "bands_orchestras"
        | "barber_and_beauty_shops"
        | "betting_casino_gambling"
        | "bicycle_shops"
        | "billiard_pool_establishments"
        | "boat_dealers"
        | "boat_rentals_and_leases"
        | "book_stores"
        | "books_periodicals_and_newspapers"
        | "bowling_alleys"
        | "bus_lines"
        | "business_secretarial_schools"
        | "buying_shopping_services"
        | "cable_satellite_and_other_pay_television_and_radio"
        | "camera_and_photographic_supply_stores"
        | "candy_nut_and_confectionery_stores"
        | "car_and_truck_dealers_new_used"
        | "car_and_truck_dealers_used_only"
        | "car_rental_agencies"
        | "car_washes"
        | "carpentry_services"
        | "carpet_upholstery_cleaning"
        | "caterers"
        | "charitable_and_social_service_organizations_fundraising"
        | "chemicals_and_allied_products"
        | "child_care_services"
        | "childrens_and_infants_wear_stores"
        | "chiropodists_podiatrists"
        | "chiropractors"
        | "cigar_stores_and_stands"
        | "civic_social_fraternal_associations"
        | "cleaning_and_maintenance"
        | "clothing_rental"
        | "colleges_universities"
        | "commercial_equipment"
        | "commercial_footwear"
        | "commercial_photography_art_and_graphics"
        | "commuter_transport_and_ferries"
        | "computer_network_services"
        | "computer_programming"
        | "computer_repair"
        | "computer_software_stores"
        | "computers_peripherals_and_software"
        | "concrete_work_services"
        | "construction_materials"
        | "consulting_public_relations"
        | "correspondence_schools"
        | "cosmetic_stores"
        | "counseling_services"
        | "country_clubs"
        | "courier_services"
        | "court_costs"
        | "credit_reporting_agencies"
        | "cruise_lines"
        | "dairy_products_stores"
        | "dance_hall_studios_schools"
        | "dating_escort_services"
        | "dentists_orthodontists"
        | "department_stores"
        | "detective_agencies"
        | "digital_goods_applications"
        | "digital_goods_games"
        | "digital_goods_large_volume"
        | "digital_goods_media"
        | "direct_marketing_catalog_merchant"
        | "direct_marketing_combination_catalog_and_retail_merchant"
        | "direct_marketing_inbound_telemarketing"
        | "direct_marketing_insurance_services"
        | "direct_marketing_other"
        | "direct_marketing_outbound_telemarketing"
        | "direct_marketing_subscription"
        | "direct_marketing_travel"
        | "discount_stores"
        | "doctors"
        | "door_to_door_sales"
        | "drapery_window_covering_and_upholstery_stores"
        | "drinking_places"
        | "drug_stores_and_pharmacies"
        | "drugs_drug_proprietaries_and_druggist_sundries"
        | "dry_cleaners"
        | "durable_goods"
        | "duty_free_stores"
        | "eating_places_restaurants"
        | "educational_services"
        | "electric_razor_stores"
        | "electric_vehicle_charging"
        | "electrical_parts_and_equipment"
        | "electrical_services"
        | "electronics_repair_shops"
        | "electronics_stores"
        | "elementary_secondary_schools"
        | "emergency_services_gcas_visa_use_only"
        | "employment_temp_agencies"
        | "equipment_rental"
        | "exterminating_services"
        | "family_clothing_stores"
        | "fast_food_restaurants"
        | "financial_institutions"
        | "fines_government_administrative_entities"
        | "fireplace_fireplace_screens_and_accessories_stores"
        | "floor_covering_stores"
        | "florists"
        | "florists_supplies_nursery_stock_and_flowers"
        | "freezer_and_locker_meat_provisioners"
        | "fuel_dealers_non_automotive"
        | "funeral_services_crematories"
        | "furniture_home_furnishings_and_equipment_stores_except_appliances"
        | "furniture_repair_refinishing"
        | "furriers_and_fur_shops"
        | "general_services"
        | "gift_card_novelty_and_souvenir_shops"
        | "glass_paint_and_wallpaper_stores"
        | "glassware_crystal_stores"
        | "golf_courses_public"
        | "government_licensed_horse_dog_racing_us_region_only"
        | "government_licensed_online_casions_online_gambling_us_region_only"
        | "government_owned_lotteries_non_us_region"
        | "government_owned_lotteries_us_region_only"
        | "government_services"
        | "grocery_stores_supermarkets"
        | "hardware_equipment_and_supplies"
        | "hardware_stores"
        | "health_and_beauty_spas"
        | "hearing_aids_sales_and_supplies"
        | "heating_plumbing_a_c"
        | "hobby_toy_and_game_shops"
        | "home_supply_warehouse_stores"
        | "hospitals"
        | "hotels_motels_and_resorts"
        | "household_appliance_stores"
        | "industrial_supplies"
        | "information_retrieval_services"
        | "insurance_default"
        | "insurance_underwriting_premiums"
        | "intra_company_purchases"
        | "jewelry_stores_watches_clocks_and_silverware_stores"
        | "landscaping_services"
        | "laundries"
        | "laundry_cleaning_services"
        | "legal_services_attorneys"
        | "luggage_and_leather_goods_stores"
        | "lumber_building_materials_stores"
        | "manual_cash_disburse"
        | "marinas_service_and_supplies"
        | "marketplaces"
        | "masonry_stonework_and_plaster"
        | "massage_parlors"
        | "medical_and_dental_labs"
        | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
        | "medical_services"
        | "membership_organizations"
        | "mens_and_boys_clothing_and_accessories_stores"
        | "mens_womens_clothing_stores"
        | "metal_service_centers"
        | "miscellaneous"
        | "miscellaneous_apparel_and_accessory_shops"
        | "miscellaneous_auto_dealers"
        | "miscellaneous_business_services"
        | "miscellaneous_food_stores"
        | "miscellaneous_general_merchandise"
        | "miscellaneous_general_services"
        | "miscellaneous_home_furnishing_specialty_stores"
        | "miscellaneous_publishing_and_printing"
        | "miscellaneous_recreation_services"
        | "miscellaneous_repair_shops"
        | "miscellaneous_specialty_retail"
        | "mobile_home_dealers"
        | "motion_picture_theaters"
        | "motor_freight_carriers_and_trucking"
        | "motor_homes_dealers"
        | "motor_vehicle_supplies_and_new_parts"
        | "motorcycle_shops_and_dealers"
        | "motorcycle_shops_dealers"
        | "music_stores_musical_instruments_pianos_and_sheet_music"
        | "news_dealers_and_newsstands"
        | "non_fi_money_orders"
        | "non_fi_stored_value_card_purchase_load"
        | "nondurable_goods"
        | "nurseries_lawn_and_garden_supply_stores"
        | "nursing_personal_care"
        | "office_and_commercial_furniture"
        | "opticians_eyeglasses"
        | "optometrists_ophthalmologist"
        | "orthopedic_goods_prosthetic_devices"
        | "osteopaths"
        | "package_stores_beer_wine_and_liquor"
        | "paints_varnishes_and_supplies"
        | "parking_lots_garages"
        | "passenger_railways"
        | "pawn_shops"
        | "pet_shops_pet_food_and_supplies"
        | "petroleum_and_petroleum_products"
        | "photo_developing"
        | "photographic_photocopy_microfilm_equipment_and_supplies"
        | "photographic_studios"
        | "picture_video_production"
        | "piece_goods_notions_and_other_dry_goods"
        | "plumbing_heating_equipment_and_supplies"
        | "political_organizations"
        | "postal_services_government_only"
        | "precious_stones_and_metals_watches_and_jewelry"
        | "professional_services"
        | "public_warehousing_and_storage"
        | "quick_copy_repro_and_blueprint"
        | "railroads"
        | "real_estate_agents_and_managers_rentals"
        | "record_stores"
        | "recreational_vehicle_rentals"
        | "religious_goods_stores"
        | "religious_organizations"
        | "roofing_siding_sheet_metal"
        | "secretarial_support_services"
        | "security_brokers_dealers"
        | "service_stations"
        | "sewing_needlework_fabric_and_piece_goods_stores"
        | "shoe_repair_hat_cleaning"
        | "shoe_stores"
        | "small_appliance_repair"
        | "snowmobile_dealers"
        | "special_trade_services"
        | "specialty_cleaning"
        | "sporting_goods_stores"
        | "sporting_recreation_camps"
        | "sports_and_riding_apparel_stores"
        | "sports_clubs_fields"
        | "stamp_and_coin_stores"
        | "stationary_office_supplies_printing_and_writing_paper"
        | "stationery_stores_office_and_school_supply_stores"
        | "swimming_pools_sales"
        | "t_ui_travel_germany"
        | "tailors_alterations"
        | "tax_payments_government_agencies"
        | "tax_preparation_services"
        | "taxicabs_limousines"
        | "telecommunication_equipment_and_telephone_sales"
        | "telecommunication_services"
        | "telegraph_services"
        | "tent_and_awning_shops"
        | "testing_laboratories"
        | "theatrical_ticket_agencies"
        | "timeshares"
        | "tire_retreading_and_repair"
        | "tolls_bridge_fees"
        | "tourist_attractions_and_exhibits"
        | "towing_services"
        | "trailer_parks_campgrounds"
        | "transportation_services"
        | "travel_agencies_tour_operators"
        | "truck_stop_iteration"
        | "truck_utility_trailer_rentals"
        | "typesetting_plate_making_and_related_services"
        | "typewriter_stores"
        | "u_s_federal_government_agencies_or_departments"
        | "uniforms_commercial_clothing"
        | "used_merchandise_and_secondhand_stores"
        | "utilities"
        | "variety_stores"
        | "veterinary_services"
        | "video_amusement_game_supplies"
        | "video_game_arcades"
        | "video_tape_rental_stores"
        | "vocational_trade_schools"
        | "watch_jewelry_repair"
        | "welding_repair"
        | "wholesale_clubs"
        | "wig_and_toupee_stores"
        | "wires_money_orders"
        | "womens_accessory_and_specialty_shops"
        | "womens_ready_to_wear_stores"
        | "wrecking_and_salvage_yards"
      )[]
    | null
  spending_limits?: t_issuing_card_spending_limit[] | null
  spending_limits_currency?: string | null
}

export type t_issuing_card_google_pay = {
  eligible: boolean
  ineligible_reason?:
    | "missing_agreement"
    | "missing_cardholder_contact"
    | "unsupported_region"
    | null
}

export type t_issuing_card_shipping = {
  address: t_address
  carrier?: "dhl" | "fedex" | "royal_mail" | "usps" | null
  customs?: t_issuing_card_shipping_customs | null
  eta?: number | null
  name: string
  phone_number?: string | null
  require_signature?: boolean | null
  service: "express" | "priority" | "standard"
  status?:
    | "canceled"
    | "delivered"
    | "failure"
    | "pending"
    | "returned"
    | "shipped"
    | null
  tracking_number?: string | null
  tracking_url?: string | null
  type: "bulk" | "individual"
}

export type t_issuing_card_shipping_customs = {
  eori_number?: string | null
}

export type t_issuing_card_spending_limit = {
  amount: number
  categories?:
    | (
        | "ac_refrigeration_repair"
        | "accounting_bookkeeping_services"
        | "advertising_services"
        | "agricultural_cooperative"
        | "airlines_air_carriers"
        | "airports_flying_fields"
        | "ambulance_services"
        | "amusement_parks_carnivals"
        | "antique_reproductions"
        | "antique_shops"
        | "aquariums"
        | "architectural_surveying_services"
        | "art_dealers_and_galleries"
        | "artists_supply_and_craft_shops"
        | "auto_and_home_supply_stores"
        | "auto_body_repair_shops"
        | "auto_paint_shops"
        | "auto_service_shops"
        | "automated_cash_disburse"
        | "automated_fuel_dispensers"
        | "automobile_associations"
        | "automotive_parts_and_accessories_stores"
        | "automotive_tire_stores"
        | "bail_and_bond_payments"
        | "bakeries"
        | "bands_orchestras"
        | "barber_and_beauty_shops"
        | "betting_casino_gambling"
        | "bicycle_shops"
        | "billiard_pool_establishments"
        | "boat_dealers"
        | "boat_rentals_and_leases"
        | "book_stores"
        | "books_periodicals_and_newspapers"
        | "bowling_alleys"
        | "bus_lines"
        | "business_secretarial_schools"
        | "buying_shopping_services"
        | "cable_satellite_and_other_pay_television_and_radio"
        | "camera_and_photographic_supply_stores"
        | "candy_nut_and_confectionery_stores"
        | "car_and_truck_dealers_new_used"
        | "car_and_truck_dealers_used_only"
        | "car_rental_agencies"
        | "car_washes"
        | "carpentry_services"
        | "carpet_upholstery_cleaning"
        | "caterers"
        | "charitable_and_social_service_organizations_fundraising"
        | "chemicals_and_allied_products"
        | "child_care_services"
        | "childrens_and_infants_wear_stores"
        | "chiropodists_podiatrists"
        | "chiropractors"
        | "cigar_stores_and_stands"
        | "civic_social_fraternal_associations"
        | "cleaning_and_maintenance"
        | "clothing_rental"
        | "colleges_universities"
        | "commercial_equipment"
        | "commercial_footwear"
        | "commercial_photography_art_and_graphics"
        | "commuter_transport_and_ferries"
        | "computer_network_services"
        | "computer_programming"
        | "computer_repair"
        | "computer_software_stores"
        | "computers_peripherals_and_software"
        | "concrete_work_services"
        | "construction_materials"
        | "consulting_public_relations"
        | "correspondence_schools"
        | "cosmetic_stores"
        | "counseling_services"
        | "country_clubs"
        | "courier_services"
        | "court_costs"
        | "credit_reporting_agencies"
        | "cruise_lines"
        | "dairy_products_stores"
        | "dance_hall_studios_schools"
        | "dating_escort_services"
        | "dentists_orthodontists"
        | "department_stores"
        | "detective_agencies"
        | "digital_goods_applications"
        | "digital_goods_games"
        | "digital_goods_large_volume"
        | "digital_goods_media"
        | "direct_marketing_catalog_merchant"
        | "direct_marketing_combination_catalog_and_retail_merchant"
        | "direct_marketing_inbound_telemarketing"
        | "direct_marketing_insurance_services"
        | "direct_marketing_other"
        | "direct_marketing_outbound_telemarketing"
        | "direct_marketing_subscription"
        | "direct_marketing_travel"
        | "discount_stores"
        | "doctors"
        | "door_to_door_sales"
        | "drapery_window_covering_and_upholstery_stores"
        | "drinking_places"
        | "drug_stores_and_pharmacies"
        | "drugs_drug_proprietaries_and_druggist_sundries"
        | "dry_cleaners"
        | "durable_goods"
        | "duty_free_stores"
        | "eating_places_restaurants"
        | "educational_services"
        | "electric_razor_stores"
        | "electric_vehicle_charging"
        | "electrical_parts_and_equipment"
        | "electrical_services"
        | "electronics_repair_shops"
        | "electronics_stores"
        | "elementary_secondary_schools"
        | "emergency_services_gcas_visa_use_only"
        | "employment_temp_agencies"
        | "equipment_rental"
        | "exterminating_services"
        | "family_clothing_stores"
        | "fast_food_restaurants"
        | "financial_institutions"
        | "fines_government_administrative_entities"
        | "fireplace_fireplace_screens_and_accessories_stores"
        | "floor_covering_stores"
        | "florists"
        | "florists_supplies_nursery_stock_and_flowers"
        | "freezer_and_locker_meat_provisioners"
        | "fuel_dealers_non_automotive"
        | "funeral_services_crematories"
        | "furniture_home_furnishings_and_equipment_stores_except_appliances"
        | "furniture_repair_refinishing"
        | "furriers_and_fur_shops"
        | "general_services"
        | "gift_card_novelty_and_souvenir_shops"
        | "glass_paint_and_wallpaper_stores"
        | "glassware_crystal_stores"
        | "golf_courses_public"
        | "government_licensed_horse_dog_racing_us_region_only"
        | "government_licensed_online_casions_online_gambling_us_region_only"
        | "government_owned_lotteries_non_us_region"
        | "government_owned_lotteries_us_region_only"
        | "government_services"
        | "grocery_stores_supermarkets"
        | "hardware_equipment_and_supplies"
        | "hardware_stores"
        | "health_and_beauty_spas"
        | "hearing_aids_sales_and_supplies"
        | "heating_plumbing_a_c"
        | "hobby_toy_and_game_shops"
        | "home_supply_warehouse_stores"
        | "hospitals"
        | "hotels_motels_and_resorts"
        | "household_appliance_stores"
        | "industrial_supplies"
        | "information_retrieval_services"
        | "insurance_default"
        | "insurance_underwriting_premiums"
        | "intra_company_purchases"
        | "jewelry_stores_watches_clocks_and_silverware_stores"
        | "landscaping_services"
        | "laundries"
        | "laundry_cleaning_services"
        | "legal_services_attorneys"
        | "luggage_and_leather_goods_stores"
        | "lumber_building_materials_stores"
        | "manual_cash_disburse"
        | "marinas_service_and_supplies"
        | "marketplaces"
        | "masonry_stonework_and_plaster"
        | "massage_parlors"
        | "medical_and_dental_labs"
        | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
        | "medical_services"
        | "membership_organizations"
        | "mens_and_boys_clothing_and_accessories_stores"
        | "mens_womens_clothing_stores"
        | "metal_service_centers"
        | "miscellaneous"
        | "miscellaneous_apparel_and_accessory_shops"
        | "miscellaneous_auto_dealers"
        | "miscellaneous_business_services"
        | "miscellaneous_food_stores"
        | "miscellaneous_general_merchandise"
        | "miscellaneous_general_services"
        | "miscellaneous_home_furnishing_specialty_stores"
        | "miscellaneous_publishing_and_printing"
        | "miscellaneous_recreation_services"
        | "miscellaneous_repair_shops"
        | "miscellaneous_specialty_retail"
        | "mobile_home_dealers"
        | "motion_picture_theaters"
        | "motor_freight_carriers_and_trucking"
        | "motor_homes_dealers"
        | "motor_vehicle_supplies_and_new_parts"
        | "motorcycle_shops_and_dealers"
        | "motorcycle_shops_dealers"
        | "music_stores_musical_instruments_pianos_and_sheet_music"
        | "news_dealers_and_newsstands"
        | "non_fi_money_orders"
        | "non_fi_stored_value_card_purchase_load"
        | "nondurable_goods"
        | "nurseries_lawn_and_garden_supply_stores"
        | "nursing_personal_care"
        | "office_and_commercial_furniture"
        | "opticians_eyeglasses"
        | "optometrists_ophthalmologist"
        | "orthopedic_goods_prosthetic_devices"
        | "osteopaths"
        | "package_stores_beer_wine_and_liquor"
        | "paints_varnishes_and_supplies"
        | "parking_lots_garages"
        | "passenger_railways"
        | "pawn_shops"
        | "pet_shops_pet_food_and_supplies"
        | "petroleum_and_petroleum_products"
        | "photo_developing"
        | "photographic_photocopy_microfilm_equipment_and_supplies"
        | "photographic_studios"
        | "picture_video_production"
        | "piece_goods_notions_and_other_dry_goods"
        | "plumbing_heating_equipment_and_supplies"
        | "political_organizations"
        | "postal_services_government_only"
        | "precious_stones_and_metals_watches_and_jewelry"
        | "professional_services"
        | "public_warehousing_and_storage"
        | "quick_copy_repro_and_blueprint"
        | "railroads"
        | "real_estate_agents_and_managers_rentals"
        | "record_stores"
        | "recreational_vehicle_rentals"
        | "religious_goods_stores"
        | "religious_organizations"
        | "roofing_siding_sheet_metal"
        | "secretarial_support_services"
        | "security_brokers_dealers"
        | "service_stations"
        | "sewing_needlework_fabric_and_piece_goods_stores"
        | "shoe_repair_hat_cleaning"
        | "shoe_stores"
        | "small_appliance_repair"
        | "snowmobile_dealers"
        | "special_trade_services"
        | "specialty_cleaning"
        | "sporting_goods_stores"
        | "sporting_recreation_camps"
        | "sports_and_riding_apparel_stores"
        | "sports_clubs_fields"
        | "stamp_and_coin_stores"
        | "stationary_office_supplies_printing_and_writing_paper"
        | "stationery_stores_office_and_school_supply_stores"
        | "swimming_pools_sales"
        | "t_ui_travel_germany"
        | "tailors_alterations"
        | "tax_payments_government_agencies"
        | "tax_preparation_services"
        | "taxicabs_limousines"
        | "telecommunication_equipment_and_telephone_sales"
        | "telecommunication_services"
        | "telegraph_services"
        | "tent_and_awning_shops"
        | "testing_laboratories"
        | "theatrical_ticket_agencies"
        | "timeshares"
        | "tire_retreading_and_repair"
        | "tolls_bridge_fees"
        | "tourist_attractions_and_exhibits"
        | "towing_services"
        | "trailer_parks_campgrounds"
        | "transportation_services"
        | "travel_agencies_tour_operators"
        | "truck_stop_iteration"
        | "truck_utility_trailer_rentals"
        | "typesetting_plate_making_and_related_services"
        | "typewriter_stores"
        | "u_s_federal_government_agencies_or_departments"
        | "uniforms_commercial_clothing"
        | "used_merchandise_and_secondhand_stores"
        | "utilities"
        | "variety_stores"
        | "veterinary_services"
        | "video_amusement_game_supplies"
        | "video_game_arcades"
        | "video_tape_rental_stores"
        | "vocational_trade_schools"
        | "watch_jewelry_repair"
        | "welding_repair"
        | "wholesale_clubs"
        | "wig_and_toupee_stores"
        | "wires_money_orders"
        | "womens_accessory_and_specialty_shops"
        | "womens_ready_to_wear_stores"
        | "wrecking_and_salvage_yards"
      )[]
    | null
  interval:
    | "all_time"
    | "daily"
    | "monthly"
    | "per_authorization"
    | "weekly"
    | "yearly"
}

export type t_issuing_card_wallets = {
  apple_pay: t_issuing_card_apple_pay
  google_pay: t_issuing_card_google_pay
  primary_account_identifier?: string | null
}

export type t_issuing_cardholder_address = {
  address: t_address
}

export type t_issuing_cardholder_authorization_controls = {
  allowed_categories?:
    | (
        | "ac_refrigeration_repair"
        | "accounting_bookkeeping_services"
        | "advertising_services"
        | "agricultural_cooperative"
        | "airlines_air_carriers"
        | "airports_flying_fields"
        | "ambulance_services"
        | "amusement_parks_carnivals"
        | "antique_reproductions"
        | "antique_shops"
        | "aquariums"
        | "architectural_surveying_services"
        | "art_dealers_and_galleries"
        | "artists_supply_and_craft_shops"
        | "auto_and_home_supply_stores"
        | "auto_body_repair_shops"
        | "auto_paint_shops"
        | "auto_service_shops"
        | "automated_cash_disburse"
        | "automated_fuel_dispensers"
        | "automobile_associations"
        | "automotive_parts_and_accessories_stores"
        | "automotive_tire_stores"
        | "bail_and_bond_payments"
        | "bakeries"
        | "bands_orchestras"
        | "barber_and_beauty_shops"
        | "betting_casino_gambling"
        | "bicycle_shops"
        | "billiard_pool_establishments"
        | "boat_dealers"
        | "boat_rentals_and_leases"
        | "book_stores"
        | "books_periodicals_and_newspapers"
        | "bowling_alleys"
        | "bus_lines"
        | "business_secretarial_schools"
        | "buying_shopping_services"
        | "cable_satellite_and_other_pay_television_and_radio"
        | "camera_and_photographic_supply_stores"
        | "candy_nut_and_confectionery_stores"
        | "car_and_truck_dealers_new_used"
        | "car_and_truck_dealers_used_only"
        | "car_rental_agencies"
        | "car_washes"
        | "carpentry_services"
        | "carpet_upholstery_cleaning"
        | "caterers"
        | "charitable_and_social_service_organizations_fundraising"
        | "chemicals_and_allied_products"
        | "child_care_services"
        | "childrens_and_infants_wear_stores"
        | "chiropodists_podiatrists"
        | "chiropractors"
        | "cigar_stores_and_stands"
        | "civic_social_fraternal_associations"
        | "cleaning_and_maintenance"
        | "clothing_rental"
        | "colleges_universities"
        | "commercial_equipment"
        | "commercial_footwear"
        | "commercial_photography_art_and_graphics"
        | "commuter_transport_and_ferries"
        | "computer_network_services"
        | "computer_programming"
        | "computer_repair"
        | "computer_software_stores"
        | "computers_peripherals_and_software"
        | "concrete_work_services"
        | "construction_materials"
        | "consulting_public_relations"
        | "correspondence_schools"
        | "cosmetic_stores"
        | "counseling_services"
        | "country_clubs"
        | "courier_services"
        | "court_costs"
        | "credit_reporting_agencies"
        | "cruise_lines"
        | "dairy_products_stores"
        | "dance_hall_studios_schools"
        | "dating_escort_services"
        | "dentists_orthodontists"
        | "department_stores"
        | "detective_agencies"
        | "digital_goods_applications"
        | "digital_goods_games"
        | "digital_goods_large_volume"
        | "digital_goods_media"
        | "direct_marketing_catalog_merchant"
        | "direct_marketing_combination_catalog_and_retail_merchant"
        | "direct_marketing_inbound_telemarketing"
        | "direct_marketing_insurance_services"
        | "direct_marketing_other"
        | "direct_marketing_outbound_telemarketing"
        | "direct_marketing_subscription"
        | "direct_marketing_travel"
        | "discount_stores"
        | "doctors"
        | "door_to_door_sales"
        | "drapery_window_covering_and_upholstery_stores"
        | "drinking_places"
        | "drug_stores_and_pharmacies"
        | "drugs_drug_proprietaries_and_druggist_sundries"
        | "dry_cleaners"
        | "durable_goods"
        | "duty_free_stores"
        | "eating_places_restaurants"
        | "educational_services"
        | "electric_razor_stores"
        | "electric_vehicle_charging"
        | "electrical_parts_and_equipment"
        | "electrical_services"
        | "electronics_repair_shops"
        | "electronics_stores"
        | "elementary_secondary_schools"
        | "emergency_services_gcas_visa_use_only"
        | "employment_temp_agencies"
        | "equipment_rental"
        | "exterminating_services"
        | "family_clothing_stores"
        | "fast_food_restaurants"
        | "financial_institutions"
        | "fines_government_administrative_entities"
        | "fireplace_fireplace_screens_and_accessories_stores"
        | "floor_covering_stores"
        | "florists"
        | "florists_supplies_nursery_stock_and_flowers"
        | "freezer_and_locker_meat_provisioners"
        | "fuel_dealers_non_automotive"
        | "funeral_services_crematories"
        | "furniture_home_furnishings_and_equipment_stores_except_appliances"
        | "furniture_repair_refinishing"
        | "furriers_and_fur_shops"
        | "general_services"
        | "gift_card_novelty_and_souvenir_shops"
        | "glass_paint_and_wallpaper_stores"
        | "glassware_crystal_stores"
        | "golf_courses_public"
        | "government_licensed_horse_dog_racing_us_region_only"
        | "government_licensed_online_casions_online_gambling_us_region_only"
        | "government_owned_lotteries_non_us_region"
        | "government_owned_lotteries_us_region_only"
        | "government_services"
        | "grocery_stores_supermarkets"
        | "hardware_equipment_and_supplies"
        | "hardware_stores"
        | "health_and_beauty_spas"
        | "hearing_aids_sales_and_supplies"
        | "heating_plumbing_a_c"
        | "hobby_toy_and_game_shops"
        | "home_supply_warehouse_stores"
        | "hospitals"
        | "hotels_motels_and_resorts"
        | "household_appliance_stores"
        | "industrial_supplies"
        | "information_retrieval_services"
        | "insurance_default"
        | "insurance_underwriting_premiums"
        | "intra_company_purchases"
        | "jewelry_stores_watches_clocks_and_silverware_stores"
        | "landscaping_services"
        | "laundries"
        | "laundry_cleaning_services"
        | "legal_services_attorneys"
        | "luggage_and_leather_goods_stores"
        | "lumber_building_materials_stores"
        | "manual_cash_disburse"
        | "marinas_service_and_supplies"
        | "marketplaces"
        | "masonry_stonework_and_plaster"
        | "massage_parlors"
        | "medical_and_dental_labs"
        | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
        | "medical_services"
        | "membership_organizations"
        | "mens_and_boys_clothing_and_accessories_stores"
        | "mens_womens_clothing_stores"
        | "metal_service_centers"
        | "miscellaneous"
        | "miscellaneous_apparel_and_accessory_shops"
        | "miscellaneous_auto_dealers"
        | "miscellaneous_business_services"
        | "miscellaneous_food_stores"
        | "miscellaneous_general_merchandise"
        | "miscellaneous_general_services"
        | "miscellaneous_home_furnishing_specialty_stores"
        | "miscellaneous_publishing_and_printing"
        | "miscellaneous_recreation_services"
        | "miscellaneous_repair_shops"
        | "miscellaneous_specialty_retail"
        | "mobile_home_dealers"
        | "motion_picture_theaters"
        | "motor_freight_carriers_and_trucking"
        | "motor_homes_dealers"
        | "motor_vehicle_supplies_and_new_parts"
        | "motorcycle_shops_and_dealers"
        | "motorcycle_shops_dealers"
        | "music_stores_musical_instruments_pianos_and_sheet_music"
        | "news_dealers_and_newsstands"
        | "non_fi_money_orders"
        | "non_fi_stored_value_card_purchase_load"
        | "nondurable_goods"
        | "nurseries_lawn_and_garden_supply_stores"
        | "nursing_personal_care"
        | "office_and_commercial_furniture"
        | "opticians_eyeglasses"
        | "optometrists_ophthalmologist"
        | "orthopedic_goods_prosthetic_devices"
        | "osteopaths"
        | "package_stores_beer_wine_and_liquor"
        | "paints_varnishes_and_supplies"
        | "parking_lots_garages"
        | "passenger_railways"
        | "pawn_shops"
        | "pet_shops_pet_food_and_supplies"
        | "petroleum_and_petroleum_products"
        | "photo_developing"
        | "photographic_photocopy_microfilm_equipment_and_supplies"
        | "photographic_studios"
        | "picture_video_production"
        | "piece_goods_notions_and_other_dry_goods"
        | "plumbing_heating_equipment_and_supplies"
        | "political_organizations"
        | "postal_services_government_only"
        | "precious_stones_and_metals_watches_and_jewelry"
        | "professional_services"
        | "public_warehousing_and_storage"
        | "quick_copy_repro_and_blueprint"
        | "railroads"
        | "real_estate_agents_and_managers_rentals"
        | "record_stores"
        | "recreational_vehicle_rentals"
        | "religious_goods_stores"
        | "religious_organizations"
        | "roofing_siding_sheet_metal"
        | "secretarial_support_services"
        | "security_brokers_dealers"
        | "service_stations"
        | "sewing_needlework_fabric_and_piece_goods_stores"
        | "shoe_repair_hat_cleaning"
        | "shoe_stores"
        | "small_appliance_repair"
        | "snowmobile_dealers"
        | "special_trade_services"
        | "specialty_cleaning"
        | "sporting_goods_stores"
        | "sporting_recreation_camps"
        | "sports_and_riding_apparel_stores"
        | "sports_clubs_fields"
        | "stamp_and_coin_stores"
        | "stationary_office_supplies_printing_and_writing_paper"
        | "stationery_stores_office_and_school_supply_stores"
        | "swimming_pools_sales"
        | "t_ui_travel_germany"
        | "tailors_alterations"
        | "tax_payments_government_agencies"
        | "tax_preparation_services"
        | "taxicabs_limousines"
        | "telecommunication_equipment_and_telephone_sales"
        | "telecommunication_services"
        | "telegraph_services"
        | "tent_and_awning_shops"
        | "testing_laboratories"
        | "theatrical_ticket_agencies"
        | "timeshares"
        | "tire_retreading_and_repair"
        | "tolls_bridge_fees"
        | "tourist_attractions_and_exhibits"
        | "towing_services"
        | "trailer_parks_campgrounds"
        | "transportation_services"
        | "travel_agencies_tour_operators"
        | "truck_stop_iteration"
        | "truck_utility_trailer_rentals"
        | "typesetting_plate_making_and_related_services"
        | "typewriter_stores"
        | "u_s_federal_government_agencies_or_departments"
        | "uniforms_commercial_clothing"
        | "used_merchandise_and_secondhand_stores"
        | "utilities"
        | "variety_stores"
        | "veterinary_services"
        | "video_amusement_game_supplies"
        | "video_game_arcades"
        | "video_tape_rental_stores"
        | "vocational_trade_schools"
        | "watch_jewelry_repair"
        | "welding_repair"
        | "wholesale_clubs"
        | "wig_and_toupee_stores"
        | "wires_money_orders"
        | "womens_accessory_and_specialty_shops"
        | "womens_ready_to_wear_stores"
        | "wrecking_and_salvage_yards"
      )[]
    | null
  blocked_categories?:
    | (
        | "ac_refrigeration_repair"
        | "accounting_bookkeeping_services"
        | "advertising_services"
        | "agricultural_cooperative"
        | "airlines_air_carriers"
        | "airports_flying_fields"
        | "ambulance_services"
        | "amusement_parks_carnivals"
        | "antique_reproductions"
        | "antique_shops"
        | "aquariums"
        | "architectural_surveying_services"
        | "art_dealers_and_galleries"
        | "artists_supply_and_craft_shops"
        | "auto_and_home_supply_stores"
        | "auto_body_repair_shops"
        | "auto_paint_shops"
        | "auto_service_shops"
        | "automated_cash_disburse"
        | "automated_fuel_dispensers"
        | "automobile_associations"
        | "automotive_parts_and_accessories_stores"
        | "automotive_tire_stores"
        | "bail_and_bond_payments"
        | "bakeries"
        | "bands_orchestras"
        | "barber_and_beauty_shops"
        | "betting_casino_gambling"
        | "bicycle_shops"
        | "billiard_pool_establishments"
        | "boat_dealers"
        | "boat_rentals_and_leases"
        | "book_stores"
        | "books_periodicals_and_newspapers"
        | "bowling_alleys"
        | "bus_lines"
        | "business_secretarial_schools"
        | "buying_shopping_services"
        | "cable_satellite_and_other_pay_television_and_radio"
        | "camera_and_photographic_supply_stores"
        | "candy_nut_and_confectionery_stores"
        | "car_and_truck_dealers_new_used"
        | "car_and_truck_dealers_used_only"
        | "car_rental_agencies"
        | "car_washes"
        | "carpentry_services"
        | "carpet_upholstery_cleaning"
        | "caterers"
        | "charitable_and_social_service_organizations_fundraising"
        | "chemicals_and_allied_products"
        | "child_care_services"
        | "childrens_and_infants_wear_stores"
        | "chiropodists_podiatrists"
        | "chiropractors"
        | "cigar_stores_and_stands"
        | "civic_social_fraternal_associations"
        | "cleaning_and_maintenance"
        | "clothing_rental"
        | "colleges_universities"
        | "commercial_equipment"
        | "commercial_footwear"
        | "commercial_photography_art_and_graphics"
        | "commuter_transport_and_ferries"
        | "computer_network_services"
        | "computer_programming"
        | "computer_repair"
        | "computer_software_stores"
        | "computers_peripherals_and_software"
        | "concrete_work_services"
        | "construction_materials"
        | "consulting_public_relations"
        | "correspondence_schools"
        | "cosmetic_stores"
        | "counseling_services"
        | "country_clubs"
        | "courier_services"
        | "court_costs"
        | "credit_reporting_agencies"
        | "cruise_lines"
        | "dairy_products_stores"
        | "dance_hall_studios_schools"
        | "dating_escort_services"
        | "dentists_orthodontists"
        | "department_stores"
        | "detective_agencies"
        | "digital_goods_applications"
        | "digital_goods_games"
        | "digital_goods_large_volume"
        | "digital_goods_media"
        | "direct_marketing_catalog_merchant"
        | "direct_marketing_combination_catalog_and_retail_merchant"
        | "direct_marketing_inbound_telemarketing"
        | "direct_marketing_insurance_services"
        | "direct_marketing_other"
        | "direct_marketing_outbound_telemarketing"
        | "direct_marketing_subscription"
        | "direct_marketing_travel"
        | "discount_stores"
        | "doctors"
        | "door_to_door_sales"
        | "drapery_window_covering_and_upholstery_stores"
        | "drinking_places"
        | "drug_stores_and_pharmacies"
        | "drugs_drug_proprietaries_and_druggist_sundries"
        | "dry_cleaners"
        | "durable_goods"
        | "duty_free_stores"
        | "eating_places_restaurants"
        | "educational_services"
        | "electric_razor_stores"
        | "electric_vehicle_charging"
        | "electrical_parts_and_equipment"
        | "electrical_services"
        | "electronics_repair_shops"
        | "electronics_stores"
        | "elementary_secondary_schools"
        | "emergency_services_gcas_visa_use_only"
        | "employment_temp_agencies"
        | "equipment_rental"
        | "exterminating_services"
        | "family_clothing_stores"
        | "fast_food_restaurants"
        | "financial_institutions"
        | "fines_government_administrative_entities"
        | "fireplace_fireplace_screens_and_accessories_stores"
        | "floor_covering_stores"
        | "florists"
        | "florists_supplies_nursery_stock_and_flowers"
        | "freezer_and_locker_meat_provisioners"
        | "fuel_dealers_non_automotive"
        | "funeral_services_crematories"
        | "furniture_home_furnishings_and_equipment_stores_except_appliances"
        | "furniture_repair_refinishing"
        | "furriers_and_fur_shops"
        | "general_services"
        | "gift_card_novelty_and_souvenir_shops"
        | "glass_paint_and_wallpaper_stores"
        | "glassware_crystal_stores"
        | "golf_courses_public"
        | "government_licensed_horse_dog_racing_us_region_only"
        | "government_licensed_online_casions_online_gambling_us_region_only"
        | "government_owned_lotteries_non_us_region"
        | "government_owned_lotteries_us_region_only"
        | "government_services"
        | "grocery_stores_supermarkets"
        | "hardware_equipment_and_supplies"
        | "hardware_stores"
        | "health_and_beauty_spas"
        | "hearing_aids_sales_and_supplies"
        | "heating_plumbing_a_c"
        | "hobby_toy_and_game_shops"
        | "home_supply_warehouse_stores"
        | "hospitals"
        | "hotels_motels_and_resorts"
        | "household_appliance_stores"
        | "industrial_supplies"
        | "information_retrieval_services"
        | "insurance_default"
        | "insurance_underwriting_premiums"
        | "intra_company_purchases"
        | "jewelry_stores_watches_clocks_and_silverware_stores"
        | "landscaping_services"
        | "laundries"
        | "laundry_cleaning_services"
        | "legal_services_attorneys"
        | "luggage_and_leather_goods_stores"
        | "lumber_building_materials_stores"
        | "manual_cash_disburse"
        | "marinas_service_and_supplies"
        | "marketplaces"
        | "masonry_stonework_and_plaster"
        | "massage_parlors"
        | "medical_and_dental_labs"
        | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
        | "medical_services"
        | "membership_organizations"
        | "mens_and_boys_clothing_and_accessories_stores"
        | "mens_womens_clothing_stores"
        | "metal_service_centers"
        | "miscellaneous"
        | "miscellaneous_apparel_and_accessory_shops"
        | "miscellaneous_auto_dealers"
        | "miscellaneous_business_services"
        | "miscellaneous_food_stores"
        | "miscellaneous_general_merchandise"
        | "miscellaneous_general_services"
        | "miscellaneous_home_furnishing_specialty_stores"
        | "miscellaneous_publishing_and_printing"
        | "miscellaneous_recreation_services"
        | "miscellaneous_repair_shops"
        | "miscellaneous_specialty_retail"
        | "mobile_home_dealers"
        | "motion_picture_theaters"
        | "motor_freight_carriers_and_trucking"
        | "motor_homes_dealers"
        | "motor_vehicle_supplies_and_new_parts"
        | "motorcycle_shops_and_dealers"
        | "motorcycle_shops_dealers"
        | "music_stores_musical_instruments_pianos_and_sheet_music"
        | "news_dealers_and_newsstands"
        | "non_fi_money_orders"
        | "non_fi_stored_value_card_purchase_load"
        | "nondurable_goods"
        | "nurseries_lawn_and_garden_supply_stores"
        | "nursing_personal_care"
        | "office_and_commercial_furniture"
        | "opticians_eyeglasses"
        | "optometrists_ophthalmologist"
        | "orthopedic_goods_prosthetic_devices"
        | "osteopaths"
        | "package_stores_beer_wine_and_liquor"
        | "paints_varnishes_and_supplies"
        | "parking_lots_garages"
        | "passenger_railways"
        | "pawn_shops"
        | "pet_shops_pet_food_and_supplies"
        | "petroleum_and_petroleum_products"
        | "photo_developing"
        | "photographic_photocopy_microfilm_equipment_and_supplies"
        | "photographic_studios"
        | "picture_video_production"
        | "piece_goods_notions_and_other_dry_goods"
        | "plumbing_heating_equipment_and_supplies"
        | "political_organizations"
        | "postal_services_government_only"
        | "precious_stones_and_metals_watches_and_jewelry"
        | "professional_services"
        | "public_warehousing_and_storage"
        | "quick_copy_repro_and_blueprint"
        | "railroads"
        | "real_estate_agents_and_managers_rentals"
        | "record_stores"
        | "recreational_vehicle_rentals"
        | "religious_goods_stores"
        | "religious_organizations"
        | "roofing_siding_sheet_metal"
        | "secretarial_support_services"
        | "security_brokers_dealers"
        | "service_stations"
        | "sewing_needlework_fabric_and_piece_goods_stores"
        | "shoe_repair_hat_cleaning"
        | "shoe_stores"
        | "small_appliance_repair"
        | "snowmobile_dealers"
        | "special_trade_services"
        | "specialty_cleaning"
        | "sporting_goods_stores"
        | "sporting_recreation_camps"
        | "sports_and_riding_apparel_stores"
        | "sports_clubs_fields"
        | "stamp_and_coin_stores"
        | "stationary_office_supplies_printing_and_writing_paper"
        | "stationery_stores_office_and_school_supply_stores"
        | "swimming_pools_sales"
        | "t_ui_travel_germany"
        | "tailors_alterations"
        | "tax_payments_government_agencies"
        | "tax_preparation_services"
        | "taxicabs_limousines"
        | "telecommunication_equipment_and_telephone_sales"
        | "telecommunication_services"
        | "telegraph_services"
        | "tent_and_awning_shops"
        | "testing_laboratories"
        | "theatrical_ticket_agencies"
        | "timeshares"
        | "tire_retreading_and_repair"
        | "tolls_bridge_fees"
        | "tourist_attractions_and_exhibits"
        | "towing_services"
        | "trailer_parks_campgrounds"
        | "transportation_services"
        | "travel_agencies_tour_operators"
        | "truck_stop_iteration"
        | "truck_utility_trailer_rentals"
        | "typesetting_plate_making_and_related_services"
        | "typewriter_stores"
        | "u_s_federal_government_agencies_or_departments"
        | "uniforms_commercial_clothing"
        | "used_merchandise_and_secondhand_stores"
        | "utilities"
        | "variety_stores"
        | "veterinary_services"
        | "video_amusement_game_supplies"
        | "video_game_arcades"
        | "video_tape_rental_stores"
        | "vocational_trade_schools"
        | "watch_jewelry_repair"
        | "welding_repair"
        | "wholesale_clubs"
        | "wig_and_toupee_stores"
        | "wires_money_orders"
        | "womens_accessory_and_specialty_shops"
        | "womens_ready_to_wear_stores"
        | "wrecking_and_salvage_yards"
      )[]
    | null
  spending_limits?: t_issuing_cardholder_spending_limit[] | null
  spending_limits_currency?: string | null
}

export type t_issuing_cardholder_card_issuing = {
  user_terms_acceptance?: t_issuing_cardholder_user_terms_acceptance | null
}

export type t_issuing_cardholder_company = {
  tax_id_provided: boolean
}

export type t_issuing_cardholder_id_document = {
  back?: string | t_file | null
  front?: string | t_file | null
}

export type t_issuing_cardholder_individual = {
  card_issuing?: t_issuing_cardholder_card_issuing | null
  dob?: t_issuing_cardholder_individual_dob | null
  first_name?: string | null
  last_name?: string | null
  verification?: t_issuing_cardholder_verification | null
}

export type t_issuing_cardholder_individual_dob = {
  day?: number | null
  month?: number | null
  year?: number | null
}

export type t_issuing_cardholder_requirements = {
  disabled_reason?:
    | "listed"
    | "rejected.listed"
    | "requirements.past_due"
    | "under_review"
    | null
  past_due?:
    | (
        | "company.tax_id"
        | "individual.card_issuing.user_terms_acceptance.date"
        | "individual.card_issuing.user_terms_acceptance.ip"
        | "individual.dob.day"
        | "individual.dob.month"
        | "individual.dob.year"
        | "individual.first_name"
        | "individual.last_name"
        | "individual.verification.document"
      )[]
    | null
}

export type t_issuing_cardholder_spending_limit = {
  amount: number
  categories?:
    | (
        | "ac_refrigeration_repair"
        | "accounting_bookkeeping_services"
        | "advertising_services"
        | "agricultural_cooperative"
        | "airlines_air_carriers"
        | "airports_flying_fields"
        | "ambulance_services"
        | "amusement_parks_carnivals"
        | "antique_reproductions"
        | "antique_shops"
        | "aquariums"
        | "architectural_surveying_services"
        | "art_dealers_and_galleries"
        | "artists_supply_and_craft_shops"
        | "auto_and_home_supply_stores"
        | "auto_body_repair_shops"
        | "auto_paint_shops"
        | "auto_service_shops"
        | "automated_cash_disburse"
        | "automated_fuel_dispensers"
        | "automobile_associations"
        | "automotive_parts_and_accessories_stores"
        | "automotive_tire_stores"
        | "bail_and_bond_payments"
        | "bakeries"
        | "bands_orchestras"
        | "barber_and_beauty_shops"
        | "betting_casino_gambling"
        | "bicycle_shops"
        | "billiard_pool_establishments"
        | "boat_dealers"
        | "boat_rentals_and_leases"
        | "book_stores"
        | "books_periodicals_and_newspapers"
        | "bowling_alleys"
        | "bus_lines"
        | "business_secretarial_schools"
        | "buying_shopping_services"
        | "cable_satellite_and_other_pay_television_and_radio"
        | "camera_and_photographic_supply_stores"
        | "candy_nut_and_confectionery_stores"
        | "car_and_truck_dealers_new_used"
        | "car_and_truck_dealers_used_only"
        | "car_rental_agencies"
        | "car_washes"
        | "carpentry_services"
        | "carpet_upholstery_cleaning"
        | "caterers"
        | "charitable_and_social_service_organizations_fundraising"
        | "chemicals_and_allied_products"
        | "child_care_services"
        | "childrens_and_infants_wear_stores"
        | "chiropodists_podiatrists"
        | "chiropractors"
        | "cigar_stores_and_stands"
        | "civic_social_fraternal_associations"
        | "cleaning_and_maintenance"
        | "clothing_rental"
        | "colleges_universities"
        | "commercial_equipment"
        | "commercial_footwear"
        | "commercial_photography_art_and_graphics"
        | "commuter_transport_and_ferries"
        | "computer_network_services"
        | "computer_programming"
        | "computer_repair"
        | "computer_software_stores"
        | "computers_peripherals_and_software"
        | "concrete_work_services"
        | "construction_materials"
        | "consulting_public_relations"
        | "correspondence_schools"
        | "cosmetic_stores"
        | "counseling_services"
        | "country_clubs"
        | "courier_services"
        | "court_costs"
        | "credit_reporting_agencies"
        | "cruise_lines"
        | "dairy_products_stores"
        | "dance_hall_studios_schools"
        | "dating_escort_services"
        | "dentists_orthodontists"
        | "department_stores"
        | "detective_agencies"
        | "digital_goods_applications"
        | "digital_goods_games"
        | "digital_goods_large_volume"
        | "digital_goods_media"
        | "direct_marketing_catalog_merchant"
        | "direct_marketing_combination_catalog_and_retail_merchant"
        | "direct_marketing_inbound_telemarketing"
        | "direct_marketing_insurance_services"
        | "direct_marketing_other"
        | "direct_marketing_outbound_telemarketing"
        | "direct_marketing_subscription"
        | "direct_marketing_travel"
        | "discount_stores"
        | "doctors"
        | "door_to_door_sales"
        | "drapery_window_covering_and_upholstery_stores"
        | "drinking_places"
        | "drug_stores_and_pharmacies"
        | "drugs_drug_proprietaries_and_druggist_sundries"
        | "dry_cleaners"
        | "durable_goods"
        | "duty_free_stores"
        | "eating_places_restaurants"
        | "educational_services"
        | "electric_razor_stores"
        | "electric_vehicle_charging"
        | "electrical_parts_and_equipment"
        | "electrical_services"
        | "electronics_repair_shops"
        | "electronics_stores"
        | "elementary_secondary_schools"
        | "emergency_services_gcas_visa_use_only"
        | "employment_temp_agencies"
        | "equipment_rental"
        | "exterminating_services"
        | "family_clothing_stores"
        | "fast_food_restaurants"
        | "financial_institutions"
        | "fines_government_administrative_entities"
        | "fireplace_fireplace_screens_and_accessories_stores"
        | "floor_covering_stores"
        | "florists"
        | "florists_supplies_nursery_stock_and_flowers"
        | "freezer_and_locker_meat_provisioners"
        | "fuel_dealers_non_automotive"
        | "funeral_services_crematories"
        | "furniture_home_furnishings_and_equipment_stores_except_appliances"
        | "furniture_repair_refinishing"
        | "furriers_and_fur_shops"
        | "general_services"
        | "gift_card_novelty_and_souvenir_shops"
        | "glass_paint_and_wallpaper_stores"
        | "glassware_crystal_stores"
        | "golf_courses_public"
        | "government_licensed_horse_dog_racing_us_region_only"
        | "government_licensed_online_casions_online_gambling_us_region_only"
        | "government_owned_lotteries_non_us_region"
        | "government_owned_lotteries_us_region_only"
        | "government_services"
        | "grocery_stores_supermarkets"
        | "hardware_equipment_and_supplies"
        | "hardware_stores"
        | "health_and_beauty_spas"
        | "hearing_aids_sales_and_supplies"
        | "heating_plumbing_a_c"
        | "hobby_toy_and_game_shops"
        | "home_supply_warehouse_stores"
        | "hospitals"
        | "hotels_motels_and_resorts"
        | "household_appliance_stores"
        | "industrial_supplies"
        | "information_retrieval_services"
        | "insurance_default"
        | "insurance_underwriting_premiums"
        | "intra_company_purchases"
        | "jewelry_stores_watches_clocks_and_silverware_stores"
        | "landscaping_services"
        | "laundries"
        | "laundry_cleaning_services"
        | "legal_services_attorneys"
        | "luggage_and_leather_goods_stores"
        | "lumber_building_materials_stores"
        | "manual_cash_disburse"
        | "marinas_service_and_supplies"
        | "marketplaces"
        | "masonry_stonework_and_plaster"
        | "massage_parlors"
        | "medical_and_dental_labs"
        | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
        | "medical_services"
        | "membership_organizations"
        | "mens_and_boys_clothing_and_accessories_stores"
        | "mens_womens_clothing_stores"
        | "metal_service_centers"
        | "miscellaneous"
        | "miscellaneous_apparel_and_accessory_shops"
        | "miscellaneous_auto_dealers"
        | "miscellaneous_business_services"
        | "miscellaneous_food_stores"
        | "miscellaneous_general_merchandise"
        | "miscellaneous_general_services"
        | "miscellaneous_home_furnishing_specialty_stores"
        | "miscellaneous_publishing_and_printing"
        | "miscellaneous_recreation_services"
        | "miscellaneous_repair_shops"
        | "miscellaneous_specialty_retail"
        | "mobile_home_dealers"
        | "motion_picture_theaters"
        | "motor_freight_carriers_and_trucking"
        | "motor_homes_dealers"
        | "motor_vehicle_supplies_and_new_parts"
        | "motorcycle_shops_and_dealers"
        | "motorcycle_shops_dealers"
        | "music_stores_musical_instruments_pianos_and_sheet_music"
        | "news_dealers_and_newsstands"
        | "non_fi_money_orders"
        | "non_fi_stored_value_card_purchase_load"
        | "nondurable_goods"
        | "nurseries_lawn_and_garden_supply_stores"
        | "nursing_personal_care"
        | "office_and_commercial_furniture"
        | "opticians_eyeglasses"
        | "optometrists_ophthalmologist"
        | "orthopedic_goods_prosthetic_devices"
        | "osteopaths"
        | "package_stores_beer_wine_and_liquor"
        | "paints_varnishes_and_supplies"
        | "parking_lots_garages"
        | "passenger_railways"
        | "pawn_shops"
        | "pet_shops_pet_food_and_supplies"
        | "petroleum_and_petroleum_products"
        | "photo_developing"
        | "photographic_photocopy_microfilm_equipment_and_supplies"
        | "photographic_studios"
        | "picture_video_production"
        | "piece_goods_notions_and_other_dry_goods"
        | "plumbing_heating_equipment_and_supplies"
        | "political_organizations"
        | "postal_services_government_only"
        | "precious_stones_and_metals_watches_and_jewelry"
        | "professional_services"
        | "public_warehousing_and_storage"
        | "quick_copy_repro_and_blueprint"
        | "railroads"
        | "real_estate_agents_and_managers_rentals"
        | "record_stores"
        | "recreational_vehicle_rentals"
        | "religious_goods_stores"
        | "religious_organizations"
        | "roofing_siding_sheet_metal"
        | "secretarial_support_services"
        | "security_brokers_dealers"
        | "service_stations"
        | "sewing_needlework_fabric_and_piece_goods_stores"
        | "shoe_repair_hat_cleaning"
        | "shoe_stores"
        | "small_appliance_repair"
        | "snowmobile_dealers"
        | "special_trade_services"
        | "specialty_cleaning"
        | "sporting_goods_stores"
        | "sporting_recreation_camps"
        | "sports_and_riding_apparel_stores"
        | "sports_clubs_fields"
        | "stamp_and_coin_stores"
        | "stationary_office_supplies_printing_and_writing_paper"
        | "stationery_stores_office_and_school_supply_stores"
        | "swimming_pools_sales"
        | "t_ui_travel_germany"
        | "tailors_alterations"
        | "tax_payments_government_agencies"
        | "tax_preparation_services"
        | "taxicabs_limousines"
        | "telecommunication_equipment_and_telephone_sales"
        | "telecommunication_services"
        | "telegraph_services"
        | "tent_and_awning_shops"
        | "testing_laboratories"
        | "theatrical_ticket_agencies"
        | "timeshares"
        | "tire_retreading_and_repair"
        | "tolls_bridge_fees"
        | "tourist_attractions_and_exhibits"
        | "towing_services"
        | "trailer_parks_campgrounds"
        | "transportation_services"
        | "travel_agencies_tour_operators"
        | "truck_stop_iteration"
        | "truck_utility_trailer_rentals"
        | "typesetting_plate_making_and_related_services"
        | "typewriter_stores"
        | "u_s_federal_government_agencies_or_departments"
        | "uniforms_commercial_clothing"
        | "used_merchandise_and_secondhand_stores"
        | "utilities"
        | "variety_stores"
        | "veterinary_services"
        | "video_amusement_game_supplies"
        | "video_game_arcades"
        | "video_tape_rental_stores"
        | "vocational_trade_schools"
        | "watch_jewelry_repair"
        | "welding_repair"
        | "wholesale_clubs"
        | "wig_and_toupee_stores"
        | "wires_money_orders"
        | "womens_accessory_and_specialty_shops"
        | "womens_ready_to_wear_stores"
        | "wrecking_and_salvage_yards"
      )[]
    | null
  interval:
    | "all_time"
    | "daily"
    | "monthly"
    | "per_authorization"
    | "weekly"
    | "yearly"
}

export type t_issuing_cardholder_user_terms_acceptance = {
  date?: number | null
  ip?: string | null
  user_agent?: string | null
}

export type t_issuing_cardholder_verification = {
  document?: t_issuing_cardholder_id_document | null
}

export type t_issuing_dispute_canceled_evidence = {
  additional_documentation?: string | t_file | null
  canceled_at?: number | null
  cancellation_policy_provided?: boolean | null
  cancellation_reason?: string | null
  expected_at?: number | null
  explanation?: string | null
  product_description?: string | null
  product_type?: "merchandise" | "service" | null
  return_status?: "merchant_rejected" | "successful" | null
  returned_at?: number | null
}

export type t_issuing_dispute_duplicate_evidence = {
  additional_documentation?: string | t_file | null
  card_statement?: string | t_file | null
  cash_receipt?: string | t_file | null
  check_image?: string | t_file | null
  explanation?: string | null
  original_transaction?: string | null
}

export type t_issuing_dispute_evidence = {
  canceled?: t_issuing_dispute_canceled_evidence
  duplicate?: t_issuing_dispute_duplicate_evidence
  fraudulent?: t_issuing_dispute_fraudulent_evidence
  merchandise_not_as_described?: t_issuing_dispute_merchandise_not_as_described_evidence
  not_received?: t_issuing_dispute_not_received_evidence
  other?: t_issuing_dispute_other_evidence
  reason:
    | "canceled"
    | "duplicate"
    | "fraudulent"
    | "merchandise_not_as_described"
    | "not_received"
    | "other"
    | "service_not_as_described"
  service_not_as_described?: t_issuing_dispute_service_not_as_described_evidence
}

export type t_issuing_dispute_fraudulent_evidence = {
  additional_documentation?: string | t_file | null
  explanation?: string | null
}

export type t_issuing_dispute_merchandise_not_as_described_evidence = {
  additional_documentation?: string | t_file | null
  explanation?: string | null
  received_at?: number | null
  return_description?: string | null
  return_status?: "merchant_rejected" | "successful" | null
  returned_at?: number | null
}

export type t_issuing_dispute_not_received_evidence = {
  additional_documentation?: string | t_file | null
  expected_at?: number | null
  explanation?: string | null
  product_description?: string | null
  product_type?: "merchandise" | "service" | null
}

export type t_issuing_dispute_other_evidence = {
  additional_documentation?: string | t_file | null
  explanation?: string | null
  product_description?: string | null
  product_type?: "merchandise" | "service" | null
}

export type t_issuing_dispute_service_not_as_described_evidence = {
  additional_documentation?: string | t_file | null
  canceled_at?: number | null
  cancellation_reason?: string | null
  explanation?: string | null
  received_at?: number | null
}

export type t_issuing_dispute_treasury = {
  debit_reversal?: string | null
  received_debit: string
}

export type t_issuing_transaction_amount_details = {
  atm_fee?: number | null
  cashback_amount?: number | null
}

export type t_issuing_transaction_flight_data = {
  departure_at?: number | null
  passenger_name?: string | null
  refundable?: boolean | null
  segments?: t_issuing_transaction_flight_data_leg[] | null
  travel_agency?: string | null
}

export type t_issuing_transaction_flight_data_leg = {
  arrival_airport_code?: string | null
  carrier?: string | null
  departure_airport_code?: string | null
  flight_number?: string | null
  service_class?: string | null
  stopover_allowed?: boolean | null
}

export type t_issuing_transaction_fuel_data = {
  type: string
  unit: string
  unit_cost_decimal: string
  volume_decimal?: string | null
}

export type t_issuing_transaction_lodging_data = {
  check_in_at?: number | null
  nights?: number | null
}

export type t_issuing_transaction_purchase_details = {
  flight?: t_issuing_transaction_flight_data | null
  fuel?: t_issuing_transaction_fuel_data | null
  lodging?: t_issuing_transaction_lodging_data | null
  receipt?: t_issuing_transaction_receipt_data[] | null
  reference?: string | null
}

export type t_issuing_transaction_receipt_data = {
  description?: string | null
  quantity?: number | null
  total?: number | null
  unit_cost?: number | null
}

export type t_issuing_transaction_treasury = {
  received_credit?: string | null
  received_debit?: string | null
}

export type t_item = {
  amount_discount: number
  amount_subtotal: number
  amount_tax: number
  amount_total: number
  currency: string
  description: string
  discounts?: t_line_items_discount_amount[]
  id: string
  object: "item"
  price?: t_price | null
  quantity?: number | null
  taxes?: t_line_items_tax_amount[]
}

export type t_legal_entity_company = {
  address?: t_address
  address_kana?: t_legal_entity_japan_address | null
  address_kanji?: t_legal_entity_japan_address | null
  directors_provided?: boolean
  executives_provided?: boolean
  export_license_id?: string
  export_purpose_code?: string
  name?: string | null
  name_kana?: string | null
  name_kanji?: string | null
  owners_provided?: boolean
  ownership_declaration?: t_legal_entity_ubo_declaration | null
  phone?: string | null
  structure?:
    | "free_zone_establishment"
    | "free_zone_llc"
    | "government_instrumentality"
    | "governmental_unit"
    | "incorporated_non_profit"
    | "incorporated_partnership"
    | "limited_liability_partnership"
    | "llc"
    | "multi_member_llc"
    | "private_company"
    | "private_corporation"
    | "private_partnership"
    | "public_company"
    | "public_corporation"
    | "public_partnership"
    | "single_member_llc"
    | "sole_establishment"
    | "sole_proprietorship"
    | "tax_exempt_government_instrumentality"
    | "unincorporated_association"
    | "unincorporated_non_profit"
    | "unincorporated_partnership"
  tax_id_provided?: boolean
  tax_id_registrar?: string
  vat_id_provided?: boolean
  verification?: t_legal_entity_company_verification | null
}

export type t_legal_entity_company_verification = {
  document: t_legal_entity_company_verification_document
}

export type t_legal_entity_company_verification_document = {
  back?: string | t_file | null
  details?: string | null
  details_code?: string | null
  front?: string | t_file | null
}

export type t_legal_entity_dob = {
  day?: number | null
  month?: number | null
  year?: number | null
}

export type t_legal_entity_japan_address = {
  city?: string | null
  country?: string | null
  line1?: string | null
  line2?: string | null
  postal_code?: string | null
  state?: string | null
  town?: string | null
}

export type t_legal_entity_person_verification = {
  additional_document?: t_legal_entity_person_verification_document | null
  details?: string | null
  details_code?: string | null
  document?: t_legal_entity_person_verification_document
  status: string
}

export type t_legal_entity_person_verification_document = {
  back?: string | t_file | null
  details?: string | null
  details_code?: string | null
  front?: string | t_file | null
}

export type t_legal_entity_ubo_declaration = {
  date?: number | null
  ip?: string | null
  user_agent?: string | null
}

export type t_line_item = {
  amount: number
  amount_excluding_tax?: number | null
  currency: string
  description?: string | null
  discount_amounts?: t_discounts_resource_discount_amount[] | null
  discountable: boolean
  discounts?: (string | t_discount)[] | null
  id: string
  invoice_item?: string | t_invoiceitem
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  object: "line_item"
  period: t_invoice_line_item_period
  price?: t_price | null
  proration: boolean
  proration_details?: t_invoices_resource_line_items_proration_details | null
  quantity?: number | null
  subscription?: string | t_subscription | null
  subscription_item?: string | t_subscription_item
  tax_amounts?: t_invoice_tax_amount[]
  tax_rates?: t_tax_rate[]
  type: "invoiceitem" | "subscription"
  unit_amount_excluding_tax?: string | null
}

export type t_line_items_discount_amount = {
  amount: number
  discount: t_discount
}

export type t_line_items_tax_amount = {
  amount: number
  rate: t_tax_rate
  taxability_reason?:
    | "customer_exempt"
    | "not_collecting"
    | "not_subject_to_tax"
    | "not_supported"
    | "portion_product_exempt"
    | "portion_reduced_rated"
    | "portion_standard_rated"
    | "product_exempt"
    | "product_exempt_holiday"
    | "proportionally_rated"
    | "reduced_rated"
    | "reverse_charge"
    | "standard_rated"
    | "taxable_basis_reduced"
    | "zero_rated"
    | null
  taxable_amount?: number | null
}

export type t_linked_account_options_us_bank_account = {
  permissions?: ("balances" | "ownership" | "payment_method" | "transactions")[]
  prefetch?: "balances"[] | null
  return_url?: string
}

export type t_login_link = {
  created: number
  object: "login_link"
  url: string
}

export type t_mandate = {
  customer_acceptance: t_customer_acceptance
  id: string
  livemode: boolean
  multi_use?: t_mandate_multi_use
  object: "mandate"
  on_behalf_of?: string
  payment_method: string | t_payment_method
  payment_method_details: t_mandate_payment_method_details
  single_use?: t_mandate_single_use
  status: "active" | "inactive" | "pending"
  type: "multi_use" | "single_use"
}

export type t_mandate_acss_debit = {
  default_for?: ("invoice" | "subscription")[]
  interval_description?: string | null
  payment_schedule: "combined" | "interval" | "sporadic"
  transaction_type: "business" | "personal"
}

export type t_mandate_au_becs_debit = {
  url: string
}

export type t_mandate_bacs_debit = {
  network_status: "accepted" | "pending" | "refused" | "revoked"
  reference: string
  url: string
}

export type t_mandate_cashapp = EmptyObject

export type t_mandate_link = EmptyObject

export type t_mandate_multi_use = EmptyObject

export type t_mandate_payment_method_details = {
  acss_debit?: t_mandate_acss_debit
  au_becs_debit?: t_mandate_au_becs_debit
  bacs_debit?: t_mandate_bacs_debit
  card?: t_card_mandate_payment_method_details
  cashapp?: t_mandate_cashapp
  link?: t_mandate_link
  paypal?: t_mandate_paypal
  sepa_debit?: t_mandate_sepa_debit
  type: string
  us_bank_account?: t_mandate_us_bank_account
}

export type t_mandate_paypal = {
  billing_agreement_id?: string | null
  payer_id?: string | null
}

export type t_mandate_sepa_debit = {
  reference: string
  url: string
}

export type t_mandate_single_use = {
  amount: number
  currency: string
}

export type t_mandate_us_bank_account = EmptyObject

export type t_networks = {
  available: string[]
  preferred?: string | null
}

export type t_notification_event_data = {
  object: EmptyObject
  previous_attributes?: EmptyObject
}

export type t_notification_event_request = {
  id?: string | null
  idempotency_key?: string | null
}

export type t_offline_acceptance = EmptyObject

export type t_online_acceptance = {
  ip_address?: string | null
  user_agent?: string | null
}

export type t_outbound_payments_payment_method_details = {
  billing_details: t_treasury_shared_resource_billing_details
  financial_account?: t_outbound_payments_payment_method_details_financial_account
  type: "financial_account" | "us_bank_account"
  us_bank_account?: t_outbound_payments_payment_method_details_us_bank_account
}

export type t_outbound_payments_payment_method_details_financial_account = {
  id: string
  network: "stripe"
}

export type t_outbound_payments_payment_method_details_us_bank_account = {
  account_holder_type?: "company" | "individual" | null
  account_type?: "checking" | "savings" | null
  bank_name?: string | null
  fingerprint?: string | null
  last4?: string | null
  network: "ach" | "us_domestic_wire"
  routing_number?: string | null
}

export type t_outbound_transfers_payment_method_details = {
  billing_details: t_treasury_shared_resource_billing_details
  type: "us_bank_account"
  us_bank_account?: t_outbound_transfers_payment_method_details_us_bank_account
}

export type t_outbound_transfers_payment_method_details_us_bank_account = {
  account_holder_type?: "company" | "individual" | null
  account_type?: "checking" | "savings" | null
  bank_name?: string | null
  fingerprint?: string | null
  last4?: string | null
  network: "ach" | "us_domestic_wire"
  routing_number?: string | null
}

export type t_package_dimensions = {
  height: number
  length: number
  weight: number
  width: number
}

export type t_payment_flows_amount_details = {
  tip?: t_payment_flows_amount_details_resource_tip
}

export type t_payment_flows_amount_details_resource_tip = {
  amount?: number
}

export type t_payment_flows_automatic_payment_methods_payment_intent = {
  allow_redirects?: "always" | "never"
  enabled: boolean
}

export type t_payment_flows_automatic_payment_methods_setup_intent = {
  allow_redirects?: "always" | "never"
  enabled?: boolean | null
}

export type t_payment_flows_installment_options = {
  enabled: boolean
  plan?: t_payment_method_details_card_installments_plan
}

export type t_payment_flows_private_payment_methods_alipay = EmptyObject

export type t_payment_flows_private_payment_methods_alipay_details = {
  buyer_id?: string
  fingerprint?: string | null
  transaction_id?: string | null
}

export type t_payment_flows_private_payment_methods_klarna_dob = {
  day?: number | null
  month?: number | null
  year?: number | null
}

export type t_payment_intent = {
  amount: number
  amount_capturable?: number
  amount_details?: t_payment_flows_amount_details
  amount_received?: number
  application?: string | t_application | null
  application_fee_amount?: number | null
  automatic_payment_methods?: t_payment_flows_automatic_payment_methods_payment_intent | null
  canceled_at?: number | null
  cancellation_reason?:
    | "abandoned"
    | "automatic"
    | "duplicate"
    | "failed_invoice"
    | "fraudulent"
    | "requested_by_customer"
    | "void_invoice"
    | null
  capture_method: "automatic" | "automatic_async" | "manual"
  client_secret?: string | null
  confirmation_method: "automatic" | "manual"
  created: number
  currency: string
  customer?: string | t_customer | t_deleted_customer | null
  description?: string | null
  id: string
  invoice?: string | t_invoice | null
  last_payment_error?: t_api_errors | null
  latest_charge?: string | t_charge | null
  livemode: boolean
  metadata?: {
    [key: string]: string
  }
  next_action?: t_payment_intent_next_action | null
  object: "payment_intent"
  on_behalf_of?: string | t_account | null
  payment_method?: string | t_payment_method | null
  payment_method_configuration_details?: t_payment_method_config_biz_payment_method_configuration_details | null
  payment_method_options?: t_payment_intent_payment_method_options | null
  payment_method_types: string[]
  processing?: t_payment_intent_processing | null
  receipt_email?: string | null
  review?: string | t_review | null
  setup_future_usage?: "off_session" | "on_session" | null
  shipping?: t_shipping | null
  statement_descriptor?: string | null
  statement_descriptor_suffix?: string | null
  status:
    | "canceled"
    | "processing"
    | "requires_action"
    | "requires_capture"
    | "requires_confirmation"
    | "requires_payment_method"
    | "succeeded"
  transfer_data?: t_transfer_data | null
  transfer_group?: string | null
}

export type t_payment_intent_card_processing = {
  customer_notification?: t_payment_intent_processing_customer_notification
}

export type t_payment_intent_next_action = {
  alipay_handle_redirect?: t_payment_intent_next_action_alipay_handle_redirect
  boleto_display_details?: t_payment_intent_next_action_boleto
  card_await_notification?: t_payment_intent_next_action_card_await_notification
  cashapp_handle_redirect_or_display_qr_code?: t_payment_intent_next_action_cashapp_handle_redirect_or_display_qr_code
  display_bank_transfer_instructions?: t_payment_intent_next_action_display_bank_transfer_instructions
  konbini_display_details?: t_payment_intent_next_action_konbini
  oxxo_display_details?: t_payment_intent_next_action_display_oxxo_details
  paynow_display_qr_code?: t_payment_intent_next_action_paynow_display_qr_code
  pix_display_qr_code?: t_payment_intent_next_action_pix_display_qr_code
  promptpay_display_qr_code?: t_payment_intent_next_action_promptpay_display_qr_code
  redirect_to_url?: t_payment_intent_next_action_redirect_to_url
  type: string
  use_stripe_sdk?: EmptyObject
  verify_with_microdeposits?: t_payment_intent_next_action_verify_with_microdeposits
  wechat_pay_display_qr_code?: t_payment_intent_next_action_wechat_pay_display_qr_code
  wechat_pay_redirect_to_android_app?: t_payment_intent_next_action_wechat_pay_redirect_to_android_app
  wechat_pay_redirect_to_ios_app?: t_payment_intent_next_action_wechat_pay_redirect_to_ios_app
}

export type t_payment_intent_next_action_alipay_handle_redirect = {
  native_data?: string | null
  native_url?: string | null
  return_url?: string | null
  url?: string | null
}

export type t_payment_intent_next_action_boleto = {
  expires_at?: number | null
  hosted_voucher_url?: string | null
  number?: string | null
  pdf?: string | null
}

export type t_payment_intent_next_action_card_await_notification = {
  charge_attempt_at?: number | null
  customer_approval_required?: boolean | null
}

export type t_payment_intent_next_action_cashapp_handle_redirect_or_display_qr_code =
  {
    hosted_instructions_url: string
    mobile_auth_url: string
    qr_code: t_payment_intent_next_action_cashapp_qr_code
  }

export type t_payment_intent_next_action_cashapp_qr_code = {
  expires_at: number
  image_url_png: string
  image_url_svg: string
}

export type t_payment_intent_next_action_display_bank_transfer_instructions = {
  amount_remaining?: number | null
  currency?: string | null
  financial_addresses?: t_funding_instructions_bank_transfer_financial_address[]
  hosted_instructions_url?: string | null
  reference?: string | null
  type:
    | "eu_bank_transfer"
    | "gb_bank_transfer"
    | "jp_bank_transfer"
    | "mx_bank_transfer"
    | "us_bank_transfer"
}

export type t_payment_intent_next_action_display_oxxo_details = {
  expires_after?: number | null
  hosted_voucher_url?: string | null
  number?: string | null
}

export type t_payment_intent_next_action_konbini = {
  expires_at: number
  hosted_voucher_url?: string | null
  stores: t_payment_intent_next_action_konbini_stores
}

export type t_payment_intent_next_action_konbini_familymart = {
  confirmation_number?: string
  payment_code: string
}

export type t_payment_intent_next_action_konbini_lawson = {
  confirmation_number?: string
  payment_code: string
}

export type t_payment_intent_next_action_konbini_ministop = {
  confirmation_number?: string
  payment_code: string
}

export type t_payment_intent_next_action_konbini_seicomart = {
  confirmation_number?: string
  payment_code: string
}

export type t_payment_intent_next_action_konbini_stores = {
  familymart?: t_payment_intent_next_action_konbini_familymart | null
  lawson?: t_payment_intent_next_action_konbini_lawson | null
  ministop?: t_payment_intent_next_action_konbini_ministop | null
  seicomart?: t_payment_intent_next_action_konbini_seicomart | null
}

export type t_payment_intent_next_action_paynow_display_qr_code = {
  data: string
  hosted_instructions_url?: string | null
  image_url_png: string
  image_url_svg: string
}

export type t_payment_intent_next_action_pix_display_qr_code = {
  data?: string
  expires_at?: number
  hosted_instructions_url?: string
  image_url_png?: string
  image_url_svg?: string
}

export type t_payment_intent_next_action_promptpay_display_qr_code = {
  data: string
  hosted_instructions_url: string
  image_url_png: string
  image_url_svg: string
}

export type t_payment_intent_next_action_redirect_to_url = {
  return_url?: string | null
  url?: string | null
}

export type t_payment_intent_next_action_verify_with_microdeposits = {
  arrival_date: number
  hosted_verification_url: string
  microdeposit_type?: "amounts" | "descriptor_code" | null
}

export type t_payment_intent_next_action_wechat_pay_display_qr_code = {
  data: string
  hosted_instructions_url: string
  image_data_url: string
  image_url_png: string
  image_url_svg: string
}

export type t_payment_intent_next_action_wechat_pay_redirect_to_android_app = {
  app_id: string
  nonce_str: string
  package: string
  partner_id: string
  prepay_id: string
  sign: string
  timestamp: string
}

export type t_payment_intent_next_action_wechat_pay_redirect_to_ios_app = {
  native_url: string
}

export type t_payment_intent_payment_method_options = {
  acss_debit?:
    | t_payment_intent_payment_method_options_acss_debit
    | t_payment_intent_type_specific_payment_method_options_client
  affirm?:
    | t_payment_method_options_affirm
    | t_payment_intent_type_specific_payment_method_options_client
  afterpay_clearpay?:
    | t_payment_method_options_afterpay_clearpay
    | t_payment_intent_type_specific_payment_method_options_client
  alipay?:
    | t_payment_method_options_alipay
    | t_payment_intent_type_specific_payment_method_options_client
  au_becs_debit?:
    | t_payment_intent_payment_method_options_au_becs_debit
    | t_payment_intent_type_specific_payment_method_options_client
  bacs_debit?:
    | t_payment_method_options_bacs_debit
    | t_payment_intent_type_specific_payment_method_options_client
  bancontact?:
    | t_payment_method_options_bancontact
    | t_payment_intent_type_specific_payment_method_options_client
  blik?:
    | t_payment_intent_payment_method_options_blik
    | t_payment_intent_type_specific_payment_method_options_client
  boleto?:
    | t_payment_method_options_boleto
    | t_payment_intent_type_specific_payment_method_options_client
  card?:
    | t_payment_intent_payment_method_options_card
    | t_payment_intent_type_specific_payment_method_options_client
  card_present?:
    | t_payment_method_options_card_present
    | t_payment_intent_type_specific_payment_method_options_client
  cashapp?:
    | t_payment_method_options_cashapp
    | t_payment_intent_type_specific_payment_method_options_client
  customer_balance?:
    | t_payment_method_options_customer_balance
    | t_payment_intent_type_specific_payment_method_options_client
  eps?:
    | t_payment_intent_payment_method_options_eps
    | t_payment_intent_type_specific_payment_method_options_client
  fpx?:
    | t_payment_method_options_fpx
    | t_payment_intent_type_specific_payment_method_options_client
  giropay?:
    | t_payment_method_options_giropay
    | t_payment_intent_type_specific_payment_method_options_client
  grabpay?:
    | t_payment_method_options_grabpay
    | t_payment_intent_type_specific_payment_method_options_client
  ideal?:
    | t_payment_method_options_ideal
    | t_payment_intent_type_specific_payment_method_options_client
  interac_present?:
    | t_payment_method_options_interac_present
    | t_payment_intent_type_specific_payment_method_options_client
  klarna?:
    | t_payment_method_options_klarna
    | t_payment_intent_type_specific_payment_method_options_client
  konbini?:
    | t_payment_method_options_konbini
    | t_payment_intent_type_specific_payment_method_options_client
  link?:
    | t_payment_intent_payment_method_options_link
    | t_payment_intent_type_specific_payment_method_options_client
  oxxo?:
    | t_payment_method_options_oxxo
    | t_payment_intent_type_specific_payment_method_options_client
  p24?:
    | t_payment_method_options_p24
    | t_payment_intent_type_specific_payment_method_options_client
  paynow?:
    | t_payment_method_options_paynow
    | t_payment_intent_type_specific_payment_method_options_client
  paypal?:
    | t_payment_method_options_paypal
    | t_payment_intent_type_specific_payment_method_options_client
  pix?:
    | t_payment_method_options_pix
    | t_payment_intent_type_specific_payment_method_options_client
  promptpay?:
    | t_payment_method_options_promptpay
    | t_payment_intent_type_specific_payment_method_options_client
  sepa_debit?:
    | t_payment_intent_payment_method_options_sepa_debit
    | t_payment_intent_type_specific_payment_method_options_client
  sofort?:
    | t_payment_method_options_sofort
    | t_payment_intent_type_specific_payment_method_options_client
  us_bank_account?:
    | t_payment_intent_payment_method_options_us_bank_account
    | t_payment_intent_type_specific_payment_method_options_client
  wechat_pay?:
    | t_payment_method_options_wechat_pay
    | t_payment_intent_type_specific_payment_method_options_client
  zip?:
    | t_payment_method_options_zip
    | t_payment_intent_type_specific_payment_method_options_client
}

export type t_payment_intent_payment_method_options_acss_debit = {
  mandate_options?: t_payment_intent_payment_method_options_mandate_options_acss_debit
  setup_future_usage?: "none" | "off_session" | "on_session"
  verification_method?: "automatic" | "instant" | "microdeposits"
}

export type t_payment_intent_payment_method_options_au_becs_debit = {
  setup_future_usage?: "none" | "off_session" | "on_session"
}

export type t_payment_intent_payment_method_options_blik = EmptyObject

export type t_payment_intent_payment_method_options_card = {
  capture_method?: "manual"
  installments?: t_payment_method_options_card_installments | null
  mandate_options?: t_payment_method_options_card_mandate_options | null
  network?:
    | "amex"
    | "cartes_bancaires"
    | "diners"
    | "discover"
    | "eftpos_au"
    | "interac"
    | "jcb"
    | "mastercard"
    | "unionpay"
    | "unknown"
    | "visa"
    | null
  request_three_d_secure?: "any" | "automatic" | "challenge_only" | null
  setup_future_usage?: "none" | "off_session" | "on_session"
  statement_descriptor_suffix_kana?: string
  statement_descriptor_suffix_kanji?: string
}

export type t_payment_intent_payment_method_options_eps = {
  setup_future_usage?: "none"
}

export type t_payment_intent_payment_method_options_link = {
  capture_method?: "manual"
  setup_future_usage?: "none" | "off_session"
}

export type t_payment_intent_payment_method_options_mandate_options_acss_debit =
  {
    custom_mandate_url?: string
    interval_description?: string | null
    payment_schedule?: "combined" | "interval" | "sporadic" | null
    transaction_type?: "business" | "personal" | null
  }

export type t_payment_intent_payment_method_options_mandate_options_sepa_debit =
  EmptyObject

export type t_payment_intent_payment_method_options_sepa_debit = {
  mandate_options?: t_payment_intent_payment_method_options_mandate_options_sepa_debit
  setup_future_usage?: "none" | "off_session" | "on_session"
}

export type t_payment_intent_payment_method_options_us_bank_account = {
  financial_connections?: t_linked_account_options_us_bank_account
  preferred_settlement_speed?: "fastest" | "standard"
  setup_future_usage?: "none" | "off_session" | "on_session"
  verification_method?: "automatic" | "instant" | "microdeposits"
}

export type t_payment_intent_processing = {
  card?: t_payment_intent_card_processing
  type: "card"
}

export type t_payment_intent_processing_customer_notification = {
  approval_requested?: boolean | null
  completes_at?: number | null
}

export type t_payment_intent_type_specific_payment_method_options_client = {
  capture_method?: "manual" | "manual_preferred"
  installments?: t_payment_flows_installment_options
  setup_future_usage?: "none" | "off_session" | "on_session"
  verification_method?: "automatic" | "instant" | "microdeposits"
}

export type t_payment_link = {
  active: boolean
  after_completion: t_payment_links_resource_after_completion
  allow_promotion_codes: boolean
  application?: string | t_application | t_deleted_application | null
  application_fee_amount?: number | null
  application_fee_percent?: number | null
  automatic_tax: t_payment_links_resource_automatic_tax
  billing_address_collection: "auto" | "required"
  consent_collection?: t_payment_links_resource_consent_collection | null
  currency: string
  custom_fields: t_payment_links_resource_custom_fields[]
  custom_text: t_payment_links_resource_custom_text
  customer_creation: "always" | "if_required"
  id: string
  invoice_creation?: t_payment_links_resource_invoice_creation | null
  line_items?: {
    data: t_item[]
    has_more: boolean
    object: "list"
    url: string
  }
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  object: "payment_link"
  on_behalf_of?: string | t_account | null
  payment_intent_data?: t_payment_links_resource_payment_intent_data | null
  payment_method_collection: "always" | "if_required"
  payment_method_types?:
    | (
        | "affirm"
        | "afterpay_clearpay"
        | "alipay"
        | "au_becs_debit"
        | "bacs_debit"
        | "bancontact"
        | "blik"
        | "boleto"
        | "card"
        | "cashapp"
        | "eps"
        | "fpx"
        | "giropay"
        | "grabpay"
        | "ideal"
        | "klarna"
        | "konbini"
        | "link"
        | "oxxo"
        | "p24"
        | "paynow"
        | "paypal"
        | "pix"
        | "promptpay"
        | "sepa_debit"
        | "sofort"
        | "us_bank_account"
        | "wechat_pay"
      )[]
    | null
  phone_number_collection: t_payment_links_resource_phone_number_collection
  shipping_address_collection?: t_payment_links_resource_shipping_address_collection | null
  shipping_options: t_payment_links_resource_shipping_option[]
  submit_type: "auto" | "book" | "donate" | "pay"
  subscription_data?: t_payment_links_resource_subscription_data | null
  tax_id_collection: t_payment_links_resource_tax_id_collection
  transfer_data?: t_payment_links_resource_transfer_data | null
  url: string
}

export type t_payment_links_resource_after_completion = {
  hosted_confirmation?: t_payment_links_resource_completion_behavior_confirmation_page
  redirect?: t_payment_links_resource_completion_behavior_redirect
  type: "hosted_confirmation" | "redirect"
}

export type t_payment_links_resource_automatic_tax = {
  enabled: boolean
}

export type t_payment_links_resource_completion_behavior_confirmation_page = {
  custom_message?: string | null
}

export type t_payment_links_resource_completion_behavior_redirect = {
  url: string
}

export type t_payment_links_resource_consent_collection = {
  promotions?: "auto" | "none" | null
  terms_of_service?: "none" | "required" | null
}

export type t_payment_links_resource_custom_fields = {
  dropdown?: t_payment_links_resource_custom_fields_dropdown | null
  key: string
  label: t_payment_links_resource_custom_fields_label
  numeric?: t_payment_links_resource_custom_fields_numeric | null
  optional: boolean
  text?: t_payment_links_resource_custom_fields_text | null
  type: "dropdown" | "numeric" | "text"
}

export type t_payment_links_resource_custom_fields_dropdown = {
  options: t_payment_links_resource_custom_fields_dropdown_option[]
}

export type t_payment_links_resource_custom_fields_dropdown_option = {
  label: string
  value: string
}

export type t_payment_links_resource_custom_fields_label = {
  custom?: string | null
  type: "custom"
}

export type t_payment_links_resource_custom_fields_numeric = {
  maximum_length?: number | null
  minimum_length?: number | null
}

export type t_payment_links_resource_custom_fields_text = {
  maximum_length?: number | null
  minimum_length?: number | null
}

export type t_payment_links_resource_custom_text = {
  shipping_address?: t_payment_links_resource_custom_text_position | null
  submit?: t_payment_links_resource_custom_text_position | null
  terms_of_service_acceptance?: t_payment_links_resource_custom_text_position | null
}

export type t_payment_links_resource_custom_text_position = {
  message: string
}

export type t_payment_links_resource_invoice_creation = {
  enabled: boolean
  invoice_data?: t_payment_links_resource_invoice_settings | null
}

export type t_payment_links_resource_invoice_settings = {
  account_tax_ids?: (string | t_tax_id | t_deleted_tax_id)[] | null
  custom_fields?: t_invoice_setting_custom_field[] | null
  description?: string | null
  footer?: string | null
  metadata?: {
    [key: string]: string
  } | null
  rendering_options?: t_invoice_setting_rendering_options | null
}

export type t_payment_links_resource_payment_intent_data = {
  capture_method?: "automatic" | "automatic_async" | "manual" | null
  setup_future_usage?: "off_session" | "on_session" | null
}

export type t_payment_links_resource_phone_number_collection = {
  enabled: boolean
}

export type t_payment_links_resource_shipping_address_collection = {
  allowed_countries: (
    | "AC"
    | "AD"
    | "AE"
    | "AF"
    | "AG"
    | "AI"
    | "AL"
    | "AM"
    | "AO"
    | "AQ"
    | "AR"
    | "AT"
    | "AU"
    | "AW"
    | "AX"
    | "AZ"
    | "BA"
    | "BB"
    | "BD"
    | "BE"
    | "BF"
    | "BG"
    | "BH"
    | "BI"
    | "BJ"
    | "BL"
    | "BM"
    | "BN"
    | "BO"
    | "BQ"
    | "BR"
    | "BS"
    | "BT"
    | "BV"
    | "BW"
    | "BY"
    | "BZ"
    | "CA"
    | "CD"
    | "CF"
    | "CG"
    | "CH"
    | "CI"
    | "CK"
    | "CL"
    | "CM"
    | "CN"
    | "CO"
    | "CR"
    | "CV"
    | "CW"
    | "CY"
    | "CZ"
    | "DE"
    | "DJ"
    | "DK"
    | "DM"
    | "DO"
    | "DZ"
    | "EC"
    | "EE"
    | "EG"
    | "EH"
    | "ER"
    | "ES"
    | "ET"
    | "FI"
    | "FJ"
    | "FK"
    | "FO"
    | "FR"
    | "GA"
    | "GB"
    | "GD"
    | "GE"
    | "GF"
    | "GG"
    | "GH"
    | "GI"
    | "GL"
    | "GM"
    | "GN"
    | "GP"
    | "GQ"
    | "GR"
    | "GS"
    | "GT"
    | "GU"
    | "GW"
    | "GY"
    | "HK"
    | "HN"
    | "HR"
    | "HT"
    | "HU"
    | "ID"
    | "IE"
    | "IL"
    | "IM"
    | "IN"
    | "IO"
    | "IQ"
    | "IS"
    | "IT"
    | "JE"
    | "JM"
    | "JO"
    | "JP"
    | "KE"
    | "KG"
    | "KH"
    | "KI"
    | "KM"
    | "KN"
    | "KR"
    | "KW"
    | "KY"
    | "KZ"
    | "LA"
    | "LB"
    | "LC"
    | "LI"
    | "LK"
    | "LR"
    | "LS"
    | "LT"
    | "LU"
    | "LV"
    | "LY"
    | "MA"
    | "MC"
    | "MD"
    | "ME"
    | "MF"
    | "MG"
    | "MK"
    | "ML"
    | "MM"
    | "MN"
    | "MO"
    | "MQ"
    | "MR"
    | "MS"
    | "MT"
    | "MU"
    | "MV"
    | "MW"
    | "MX"
    | "MY"
    | "MZ"
    | "NA"
    | "NC"
    | "NE"
    | "NG"
    | "NI"
    | "NL"
    | "NO"
    | "NP"
    | "NR"
    | "NU"
    | "NZ"
    | "OM"
    | "PA"
    | "PE"
    | "PF"
    | "PG"
    | "PH"
    | "PK"
    | "PL"
    | "PM"
    | "PN"
    | "PR"
    | "PS"
    | "PT"
    | "PY"
    | "QA"
    | "RE"
    | "RO"
    | "RS"
    | "RU"
    | "RW"
    | "SA"
    | "SB"
    | "SC"
    | "SE"
    | "SG"
    | "SH"
    | "SI"
    | "SJ"
    | "SK"
    | "SL"
    | "SM"
    | "SN"
    | "SO"
    | "SR"
    | "SS"
    | "ST"
    | "SV"
    | "SX"
    | "SZ"
    | "TA"
    | "TC"
    | "TD"
    | "TF"
    | "TG"
    | "TH"
    | "TJ"
    | "TK"
    | "TL"
    | "TM"
    | "TN"
    | "TO"
    | "TR"
    | "TT"
    | "TV"
    | "TW"
    | "TZ"
    | "UA"
    | "UG"
    | "US"
    | "UY"
    | "UZ"
    | "VA"
    | "VC"
    | "VE"
    | "VG"
    | "VN"
    | "VU"
    | "WF"
    | "WS"
    | "XK"
    | "YE"
    | "YT"
    | "ZA"
    | "ZM"
    | "ZW"
    | "ZZ"
  )[]
}

export type t_payment_links_resource_shipping_option = {
  shipping_amount: number
  shipping_rate: string | t_shipping_rate
}

export type t_payment_links_resource_subscription_data = {
  description?: string | null
  trial_period_days?: number | null
}

export type t_payment_links_resource_tax_id_collection = {
  enabled: boolean
}

export type t_payment_links_resource_transfer_data = {
  amount?: number | null
  destination: string | t_account
}

export type t_payment_method = {
  acss_debit?: t_payment_method_acss_debit
  affirm?: t_payment_method_affirm
  afterpay_clearpay?: t_payment_method_afterpay_clearpay
  alipay?: t_payment_flows_private_payment_methods_alipay
  au_becs_debit?: t_payment_method_au_becs_debit
  bacs_debit?: t_payment_method_bacs_debit
  bancontact?: t_payment_method_bancontact
  billing_details: t_billing_details
  blik?: t_payment_method_blik
  boleto?: t_payment_method_boleto
  card?: t_payment_method_card
  card_present?: t_payment_method_card_present
  cashapp?: t_payment_method_cashapp
  created: number
  customer?: string | t_customer | null
  customer_balance?: t_payment_method_customer_balance
  eps?: t_payment_method_eps
  fpx?: t_payment_method_fpx
  giropay?: t_payment_method_giropay
  grabpay?: t_payment_method_grabpay
  id: string
  ideal?: t_payment_method_ideal
  interac_present?: t_payment_method_interac_present
  klarna?: t_payment_method_klarna
  konbini?: t_payment_method_konbini
  link?: t_payment_method_link
  livemode: boolean
  metadata?: {
    [key: string]: string
  } | null
  object: "payment_method"
  oxxo?: t_payment_method_oxxo
  p24?: t_payment_method_p24
  paynow?: t_payment_method_paynow
  paypal?: t_payment_method_paypal
  pix?: t_payment_method_pix
  promptpay?: t_payment_method_promptpay
  radar_options?: t_radar_radar_options
  sepa_debit?: t_payment_method_sepa_debit
  sofort?: t_payment_method_sofort
  type:
    | "acss_debit"
    | "affirm"
    | "afterpay_clearpay"
    | "alipay"
    | "au_becs_debit"
    | "bacs_debit"
    | "bancontact"
    | "blik"
    | "boleto"
    | "card"
    | "card_present"
    | "cashapp"
    | "customer_balance"
    | "eps"
    | "fpx"
    | "giropay"
    | "grabpay"
    | "ideal"
    | "interac_present"
    | "klarna"
    | "konbini"
    | "link"
    | "oxxo"
    | "p24"
    | "paynow"
    | "paypal"
    | "pix"
    | "promptpay"
    | "sepa_debit"
    | "sofort"
    | "us_bank_account"
    | "wechat_pay"
    | "zip"
  us_bank_account?: t_payment_method_us_bank_account
  wechat_pay?: t_payment_method_wechat_pay
  zip?: t_payment_method_zip
}

export type t_payment_method_acss_debit = {
  bank_name?: string | null
  fingerprint?: string | null
  institution_number?: string | null
  last4?: string | null
  transit_number?: string | null
}

export type t_payment_method_affirm = EmptyObject

export type t_payment_method_afterpay_clearpay = EmptyObject

export type t_payment_method_au_becs_debit = {
  bsb_number?: string | null
  fingerprint?: string | null
  last4?: string | null
}

export type t_payment_method_bacs_debit = {
  fingerprint?: string | null
  last4?: string | null
  sort_code?: string | null
}

export type t_payment_method_bancontact = EmptyObject

export type t_payment_method_blik = EmptyObject

export type t_payment_method_boleto = {
  tax_id: string
}

export type t_payment_method_card = {
  brand: string
  checks?: t_payment_method_card_checks | null
  country?: string | null
  exp_month: number
  exp_year: number
  fingerprint?: string | null
  funding: string
  generated_from?: t_payment_method_card_generated_card | null
  last4: string
  networks?: t_networks | null
  three_d_secure_usage?: t_three_d_secure_usage | null
  wallet?: t_payment_method_card_wallet | null
}

export type t_payment_method_card_checks = {
  address_line1_check?: string | null
  address_postal_code_check?: string | null
  cvc_check?: string | null
}

export type t_payment_method_card_generated_card = {
  charge?: string | null
  payment_method_details?: t_card_generated_from_payment_method_details | null
  setup_attempt?: string | t_setup_attempt | null
}

export type t_payment_method_card_present = {
  brand?: string | null
  cardholder_name?: string | null
  country?: string | null
  exp_month: number
  exp_year: number
  fingerprint?: string | null
  funding?: string | null
  last4?: string | null
  networks?: t_payment_method_card_present_networks | null
  read_method?:
    | "contact_emv"
    | "contactless_emv"
    | "contactless_magstripe_mode"
    | "magnetic_stripe_fallback"
    | "magnetic_stripe_track2"
    | null
}

export type t_payment_method_card_present_networks = {
  available: string[]
  preferred?: string | null
}

export type t_payment_method_card_wallet = {
  amex_express_checkout?: t_payment_method_card_wallet_amex_express_checkout
  apple_pay?: t_payment_method_card_wallet_apple_pay
  dynamic_last4?: string | null
  google_pay?: t_payment_method_card_wallet_google_pay
  link?: t_payment_method_card_wallet_link
  masterpass?: t_payment_method_card_wallet_masterpass
  samsung_pay?: t_payment_method_card_wallet_samsung_pay
  type:
    | "amex_express_checkout"
    | "apple_pay"
    | "google_pay"
    | "link"
    | "masterpass"
    | "samsung_pay"
    | "visa_checkout"
  visa_checkout?: t_payment_method_card_wallet_visa_checkout
}

export type t_payment_method_card_wallet_amex_express_checkout = EmptyObject

export type t_payment_method_card_wallet_apple_pay = EmptyObject

export type t_payment_method_card_wallet_google_pay = EmptyObject

export type t_payment_method_card_wallet_link = EmptyObject

export type t_payment_method_card_wallet_masterpass = {
  billing_address?: t_address | null
  email?: string | null
  name?: string | null
  shipping_address?: t_address | null
}

export type t_payment_method_card_wallet_samsung_pay = EmptyObject

export type t_payment_method_card_wallet_visa_checkout = {
  billing_address?: t_address | null
  email?: string | null
  name?: string | null
  shipping_address?: t_address | null
}

export type t_payment_method_cashapp = {
  buyer_id?: string | null
  cashtag?: string | null
}

export type t_payment_method_config_biz_payment_method_configuration_details = {
  id: string
  parent?: string | null
}

export type t_payment_method_config_resource_display_preference = {
  overridable?: boolean | null
  preference: "none" | "off" | "on"
  value: "off" | "on"
}

export type t_payment_method_config_resource_payment_method_properties = {
  available: boolean
  display_preference: t_payment_method_config_resource_display_preference
}

export type t_payment_method_configuration = {
  acss_debit?: t_payment_method_config_resource_payment_method_properties
  active: boolean
  affirm?: t_payment_method_config_resource_payment_method_properties
  afterpay_clearpay?: t_payment_method_config_resource_payment_method_properties
  alipay?: t_payment_method_config_resource_payment_method_properties
  apple_pay?: t_payment_method_config_resource_payment_method_properties
  application?: string | null
  au_becs_debit?: t_payment_method_config_resource_payment_method_properties
  bacs_debit?: t_payment_method_config_resource_payment_method_properties
  bancontact?: t_payment_method_config_resource_payment_method_properties
  blik?: t_payment_method_config_resource_payment_method_properties
  boleto?: t_payment_method_config_resource_payment_method_properties
  card?: t_payment_method_config_resource_payment_method_properties
  cartes_bancaires?: t_payment_method_config_resource_payment_method_properties
  cashapp?: t_payment_method_config_resource_payment_method_properties
  eps?: t_payment_method_config_resource_payment_method_properties
  fpx?: t_payment_method_config_resource_payment_method_properties
  giropay?: t_payment_method_config_resource_payment_method_properties
  google_pay?: t_payment_method_config_resource_payment_method_properties
  grabpay?: t_payment_method_config_resource_payment_method_properties
  id: string
  id_bank_transfer?: t_payment_method_config_resource_payment_method_properties
  ideal?: t_payment_method_config_resource_payment_method_properties
  is_default: boolean
  jcb?: t_payment_method_config_resource_payment_method_properties
  klarna?: t_payment_method_config_resource_payment_method_properties
  konbini?: t_payment_method_config_resource_payment_method_properties
  link?: t_payment_method_config_resource_payment_method_properties
  livemode: boolean
  multibanco?: t_payment_method_config_resource_payment_method_properties
  name: string
  netbanking?: t_payment_method_config_resource_payment_method_properties
  object: "payment_method_configuration"
  oxxo?: t_payment_method_config_resource_payment_method_properties
  p24?: t_payment_method_config_resource_payment_method_properties
  parent?: string | null
  pay_by_bank?: t_payment_method_config_resource_payment_method_properties
  paynow?: t_payment_method_config_resource_payment_method_properties
  paypal?: t_payment_method_config_resource_payment_method_properties
  promptpay?: t_payment_method_config_resource_payment_method_properties
  sepa_debit?: t_payment_method_config_resource_payment_method_properties
  sofort?: t_payment_method_config_resource_payment_method_properties
  upi?: t_payment_method_config_resource_payment_method_properties
  us_bank_account?: t_payment_method_config_resource_payment_method_properties
  wechat_pay?: t_payment_method_config_resource_payment_method_properties
}

export type t_payment_method_customer_balance = EmptyObject

export type t_payment_method_details = {
  ach_credit_transfer?: t_payment_method_details_ach_credit_transfer
  ach_debit?: t_payment_method_details_ach_debit
  acss_debit?: t_payment_method_details_acss_debit
  affirm?: t_payment_method_details_affirm
  afterpay_clearpay?: t_payment_method_details_afterpay_clearpay
  alipay?: t_payment_flows_private_payment_methods_alipay_details
  au_becs_debit?: t_payment_method_details_au_becs_debit
  bacs_debit?: t_payment_method_details_bacs_debit
  bancontact?: t_payment_method_details_bancontact
  blik?: t_payment_method_details_blik
  boleto?: t_payment_method_details_boleto
  card?: t_payment_method_details_card
  card_present?: t_payment_method_details_card_present
  cashapp?: t_payment_method_details_cashapp
  customer_balance?: t_payment_method_details_customer_balance
  eps?: t_payment_method_details_eps
  fpx?: t_payment_method_details_fpx
  giropay?: t_payment_method_details_giropay
  grabpay?: t_payment_method_details_grabpay
  ideal?: t_payment_method_details_ideal
  interac_present?: t_payment_method_details_interac_present
  klarna?: t_payment_method_details_klarna
  konbini?: t_payment_method_details_konbini
  link?: t_payment_method_details_link
  multibanco?: t_payment_method_details_multibanco
  oxxo?: t_payment_method_details_oxxo
  p24?: t_payment_method_details_p24
  paynow?: t_payment_method_details_paynow
  paypal?: t_payment_method_details_paypal
  pix?: t_payment_method_details_pix
  promptpay?: t_payment_method_details_promptpay
  sepa_debit?: t_payment_method_details_sepa_debit
  sofort?: t_payment_method_details_sofort
  stripe_account?: t_payment_method_details_stripe_account
  type: string
  us_bank_account?: t_payment_method_details_us_bank_account
  wechat?: t_payment_method_details_wechat
  wechat_pay?: t_payment_method_details_wechat_pay
  zip?: t_payment_method_details_zip
}

export type t_payment_method_details_ach_credit_transfer = {
  account_number?: string | null
  bank_name?: string | null
  routing_number?: string | null
  swift_code?: string | null
}

export type t_payment_method_details_ach_debit = {
  account_holder_type?: "company" | "individual" | null
  bank_name?: string | null
  country?: string | null
  fingerprint?: string | null
  last4?: string | null
  routing_number?: string | null
}

export type t_payment_method_details_acss_debit = {
  bank_name?: string | null
  fingerprint?: string | null
  institution_number?: string | null
  last4?: string | null
  mandate?: string
  transit_number?: string | null
}

export type t_payment_method_details_affirm = EmptyObject

export type t_payment_method_details_afterpay_clearpay = {
  order_id?: string | null
  reference?: string | null
}

export type t_payment_method_details_au_becs_debit = {
  bsb_number?: string | null
  fingerprint?: string | null
  last4?: string | null
  mandate?: string
}

export type t_payment_method_details_bacs_debit = {
  fingerprint?: string | null
  last4?: string | null
  mandate?: string | null
  sort_code?: string | null
}

export type t_payment_method_details_bancontact = {
  bank_code?: string | null
  bank_name?: string | null
  bic?: string | null
  generated_sepa_debit?: string | t_payment_method | null
  generated_sepa_debit_mandate?: string | t_mandate | null
  iban_last4?: string | null
  preferred_language?: "de" | "en" | "fr" | "nl" | null
  verified_name?: string | null
}

export type t_payment_method_details_blik = EmptyObject

export type t_payment_method_details_boleto = {
  tax_id: string
}

export type t_payment_method_details_card = {
  brand?: string | null
  checks?: t_payment_method_details_card_checks | null
  country?: string | null
  exp_month: number
  exp_year: number
  fingerprint?: string | null
  funding?: string | null
  installments?: t_payment_method_details_card_installments | null
  last4?: string | null
  mandate?: string | null
  network?: string | null
  network_token?: t_payment_method_details_card_network_token | null
  three_d_secure?: t_three_d_secure_details_charge | null
  wallet?: t_payment_method_details_card_wallet | null
}

export type t_payment_method_details_card_checks = {
  address_line1_check?: string | null
  address_postal_code_check?: string | null
  cvc_check?: string | null
}

export type t_payment_method_details_card_installments = {
  plan?: t_payment_method_details_card_installments_plan | null
}

export type t_payment_method_details_card_installments_plan = {
  count?: number | null
  interval?: "month" | null
  type: "fixed_count"
}

export type t_payment_method_details_card_network_token = {
  used: boolean
}

export type t_payment_method_details_card_present = {
  amount_authorized?: number | null
  brand?: string | null
  capture_before?: number
  cardholder_name?: string | null
  country?: string | null
  emv_auth_data?: string | null
  exp_month: number
  exp_year: number
  fingerprint?: string | null
  funding?: string | null
  generated_card?: string | null
  incremental_authorization_supported: boolean
  last4?: string | null
  network?: string | null
  overcapture_supported: boolean
  read_method?:
    | "contact_emv"
    | "contactless_emv"
    | "contactless_magstripe_mode"
    | "magnetic_stripe_fallback"
    | "magnetic_stripe_track2"
    | null
  receipt?: t_payment_method_details_card_present_receipt | null
}

export type t_payment_method_details_card_present_receipt = {
  account_type?: "checking" | "credit" | "prepaid" | "unknown"
  application_cryptogram?: string | null
  application_preferred_name?: string | null
  authorization_code?: string | null
  authorization_response_code?: string | null
  cardholder_verification_method?: string | null
  dedicated_file_name?: string | null
  terminal_verification_results?: string | null
  transaction_status_information?: string | null
}

export type t_payment_method_details_card_wallet = {
  amex_express_checkout?: t_payment_method_details_card_wallet_amex_express_checkout
  apple_pay?: t_payment_method_details_card_wallet_apple_pay
  dynamic_last4?: string | null
  google_pay?: t_payment_method_details_card_wallet_google_pay
  link?: t_payment_method_details_card_wallet_link
  masterpass?: t_payment_method_details_card_wallet_masterpass
  samsung_pay?: t_payment_method_details_card_wallet_samsung_pay
  type:
    | "amex_express_checkout"
    | "apple_pay"
    | "google_pay"
    | "link"
    | "masterpass"
    | "samsung_pay"
    | "visa_checkout"
  visa_checkout?: t_payment_method_details_card_wallet_visa_checkout
}

export type t_payment_method_details_card_wallet_amex_express_checkout =
  EmptyObject

export type t_payment_method_details_card_wallet_apple_pay = EmptyObject

export type t_payment_method_details_card_wallet_google_pay = EmptyObject

export type t_payment_method_details_card_wallet_link = EmptyObject

export type t_payment_method_details_card_wallet_masterpass = {
  billing_address?: t_address | null
  email?: string | null
  name?: string | null
  shipping_address?: t_address | null
}

export type t_payment_method_details_card_wallet_samsung_pay = EmptyObject

export type t_payment_method_details_card_wallet_visa_checkout = {
  billing_address?: t_address | null
  email?: string | null
  name?: string | null
  shipping_address?: t_address | null
}

export type t_payment_method_details_cashapp = {
  buyer_id?: string | null
  cashtag?: string | null
}

export type t_payment_method_details_customer_balance = EmptyObject

export type t_payment_method_details_eps = {
  bank?:
    | "arzte_und_apotheker_bank"
    | "austrian_anadi_bank_ag"
    | "bank_austria"
    | "bankhaus_carl_spangler"
    | "bankhaus_schelhammer_und_schattera_ag"
    | "bawag_psk_ag"
    | "bks_bank_ag"
    | "brull_kallmus_bank_ag"
    | "btv_vier_lander_bank"
    | "capital_bank_grawe_gruppe_ag"
    | "deutsche_bank_ag"
    | "dolomitenbank"
    | "easybank_ag"
    | "erste_bank_und_sparkassen"
    | "hypo_alpeadriabank_international_ag"
    | "hypo_bank_burgenland_aktiengesellschaft"
    | "hypo_noe_lb_fur_niederosterreich_u_wien"
    | "hypo_oberosterreich_salzburg_steiermark"
    | "hypo_tirol_bank_ag"
    | "hypo_vorarlberg_bank_ag"
    | "marchfelder_bank"
    | "oberbank_ag"
    | "raiffeisen_bankengruppe_osterreich"
    | "schoellerbank_ag"
    | "sparda_bank_wien"
    | "volksbank_gruppe"
    | "volkskreditbank_ag"
    | "vr_bank_braunau"
    | null
  verified_name?: string | null
}

export type t_payment_method_details_fpx = {
  bank:
    | "affin_bank"
    | "agrobank"
    | "alliance_bank"
    | "ambank"
    | "bank_islam"
    | "bank_muamalat"
    | "bank_of_china"
    | "bank_rakyat"
    | "bsn"
    | "cimb"
    | "deutsche_bank"
    | "hong_leong_bank"
    | "hsbc"
    | "kfh"
    | "maybank2e"
    | "maybank2u"
    | "ocbc"
    | "pb_enterprise"
    | "public_bank"
    | "rhb"
    | "standard_chartered"
    | "uob"
  transaction_id?: string | null
}

export type t_payment_method_details_giropay = {
  bank_code?: string | null
  bank_name?: string | null
  bic?: string | null
  verified_name?: string | null
}

export type t_payment_method_details_grabpay = {
  transaction_id?: string | null
}

export type t_payment_method_details_ideal = {
  bank?:
    | "abn_amro"
    | "asn_bank"
    | "bunq"
    | "handelsbanken"
    | "ing"
    | "knab"
    | "moneyou"
    | "n26"
    | "rabobank"
    | "regiobank"
    | "revolut"
    | "sns_bank"
    | "triodos_bank"
    | "van_lanschot"
    | "yoursafe"
    | null
  bic?:
    | "ABNANL2A"
    | "ASNBNL21"
    | "BITSNL2A"
    | "BUNQNL2A"
    | "FVLBNL22"
    | "HANDNL2A"
    | "INGBNL2A"
    | "KNABNL2H"
    | "MOYONL21"
    | "NTSBDEB1"
    | "RABONL2U"
    | "RBRBNL21"
    | "REVOIE23"
    | "REVOLT21"
    | "SNSBNL2A"
    | "TRIONL2U"
    | null
  generated_sepa_debit?: string | t_payment_method | null
  generated_sepa_debit_mandate?: string | t_mandate | null
  iban_last4?: string | null
  verified_name?: string | null
}

export type t_payment_method_details_interac_present = {
  brand?: string | null
  cardholder_name?: string | null
  country?: string | null
  emv_auth_data?: string | null
  exp_month: number
  exp_year: number
  fingerprint?: string | null
  funding?: string | null
  generated_card?: string | null
  last4?: string | null
  network?: string | null
  preferred_locales?: string[] | null
  read_method?:
    | "contact_emv"
    | "contactless_emv"
    | "contactless_magstripe_mode"
    | "magnetic_stripe_fallback"
    | "magnetic_stripe_track2"
    | null
  receipt?: t_payment_method_details_interac_present_receipt | null
}

export type t_payment_method_details_interac_present_receipt = {
  account_type?: "checking" | "savings" | "unknown"
  application_cryptogram?: string | null
  application_preferred_name?: string | null
  authorization_code?: string | null
  authorization_response_code?: string | null
  cardholder_verification_method?: string | null
  dedicated_file_name?: string | null
  terminal_verification_results?: string | null
  transaction_status_information?: string | null
}

export type t_payment_method_details_klarna = {
  payment_method_category?: string | null
  preferred_locale?: string | null
}

export type t_payment_method_details_konbini = {
  store?: t_payment_method_details_konbini_store | null
}

export type t_payment_method_details_konbini_store = {
  chain?: "familymart" | "lawson" | "ministop" | "seicomart" | null
}

export type t_payment_method_details_link = {
  country?: string | null
}

export type t_payment_method_details_multibanco = {
  entity?: string | null
  reference?: string | null
}

export type t_payment_method_details_oxxo = {
  number?: string | null
}

export type t_payment_method_details_p24 = {
  bank?:
    | "alior_bank"
    | "bank_millennium"
    | "bank_nowy_bfg_sa"
    | "bank_pekao_sa"
    | "banki_spbdzielcze"
    | "blik"
    | "bnp_paribas"
    | "boz"
    | "citi_handlowy"
    | "credit_agricole"
    | "envelobank"
    | "etransfer_pocztowy24"
    | "getin_bank"
    | "ideabank"
    | "ing"
    | "inteligo"
    | "mbank_mtransfer"
    | "nest_przelew"
    | "noble_pay"
    | "pbac_z_ipko"
    | "plus_bank"
    | "santander_przelew24"
    | "tmobile_usbugi_bankowe"
    | "toyota_bank"
    | "volkswagen_bank"
    | null
  reference?: string | null
  verified_name?: string | null
}

export type t_payment_method_details_paynow = {
  reference?: string | null
}

export type t_payment_method_details_paypal = {
  payer_email?: string | null
  payer_id?: string | null
  payer_name?: string | null
  seller_protection?: t_paypal_seller_protection | null
  transaction_id?: string | null
}

export type t_payment_method_details_pix = {
  bank_transaction_id?: string | null
}

export type t_payment_method_details_promptpay = {
  reference?: string | null
}

export type t_payment_method_details_sepa_debit = {
  bank_code?: string | null
  branch_code?: string | null
  country?: string | null
  fingerprint?: string | null
  last4?: string | null
  mandate?: string | null
}

export type t_payment_method_details_sofort = {
  bank_code?: string | null
  bank_name?: string | null
  bic?: string | null
  country?: string | null
  generated_sepa_debit?: string | t_payment_method | null
  generated_sepa_debit_mandate?: string | t_mandate | null
  iban_last4?: string | null
  preferred_language?: "de" | "en" | "es" | "fr" | "it" | "nl" | "pl" | null
  verified_name?: string | null
}

export type t_payment_method_details_stripe_account = EmptyObject

export type t_payment_method_details_us_bank_account = {
  account_holder_type?: "company" | "individual" | null
  account_type?: "checking" | "savings" | null
  bank_name?: string | null
  fingerprint?: string | null
  last4?: string | null
  routing_number?: string | null
}

export type t_payment_method_details_wechat = EmptyObject

export type t_payment_method_details_wechat_pay = {
  fingerprint?: string | null
  transaction_id?: string | null
}

export type t_payment_method_details_zip = EmptyObject

export type t_payment_method_domain = {
  apple_pay: t_payment_method_domain_resource_payment_method_status
  created: number
  domain_name: string
  enabled: boolean
  google_pay: t_payment_method_domain_resource_payment_method_status
  id: string
  link: t_payment_method_domain_resource_payment_method_status
  livemode: boolean
  object: "payment_method_domain"
  paypal: t_payment_method_domain_resource_payment_method_status
}

export type t_payment_method_domain_resource_payment_method_status = {
  status: "active" | "inactive"
  status_details?: t_payment_method_domain_resource_payment_method_status_details
}

export type t_payment_method_domain_resource_payment_method_status_details = {
  error_message: string
}

export type t_payment_method_eps = {
  bank?:
    | "arzte_und_apotheker_bank"
    | "austrian_anadi_bank_ag"
    | "bank_austria"
    | "bankhaus_carl_spangler"
    | "bankhaus_schelhammer_und_schattera_ag"
    | "bawag_psk_ag"
    | "bks_bank_ag"
    | "brull_kallmus_bank_ag"
    | "btv_vier_lander_bank"
    | "capital_bank_grawe_gruppe_ag"
    | "deutsche_bank_ag"
    | "dolomitenbank"
    | "easybank_ag"
    | "erste_bank_und_sparkassen"
    | "hypo_alpeadriabank_international_ag"
    | "hypo_bank_burgenland_aktiengesellschaft"
    | "hypo_noe_lb_fur_niederosterreich_u_wien"
    | "hypo_oberosterreich_salzburg_steiermark"
    | "hypo_tirol_bank_ag"
    | "hypo_vorarlberg_bank_ag"
    | "marchfelder_bank"
    | "oberbank_ag"
    | "raiffeisen_bankengruppe_osterreich"
    | "schoellerbank_ag"
    | "sparda_bank_wien"
    | "volksbank_gruppe"
    | "volkskreditbank_ag"
    | "vr_bank_braunau"
    | null
}

export type t_payment_method_fpx = {
  bank:
    | "affin_bank"
    | "agrobank"
    | "alliance_bank"
    | "ambank"
    | "bank_islam"
    | "bank_muamalat"
    | "bank_of_china"
    | "bank_rakyat"
    | "bsn"
    | "cimb"
    | "deutsche_bank"
    | "hong_leong_bank"
    | "hsbc"
    | "kfh"
    | "maybank2e"
    | "maybank2u"
    | "ocbc"
    | "pb_enterprise"
    | "public_bank"
    | "rhb"
    | "standard_chartered"
    | "uob"
}

export type t_payment_method_giropay = EmptyObject

export type t_payment_method_grabpay = EmptyObject

export type t_payment_method_ideal = {
  bank?:
    | "abn_amro"
    | "asn_bank"
    | "bunq"
    | "handelsbanken"
    | "ing"
    | "knab"
    | "moneyou"
    | "n26"
    | "rabobank"
    | "regiobank"
    | "revolut"
    | "sns_bank"
    | "triodos_bank"
    | "van_lanschot"
    | "yoursafe"
    | null
  bic?:
    | "ABNANL2A"
    | "ASNBNL21"
    | "BITSNL2A"
    | "BUNQNL2A"
    | "FVLBNL22"
    | "HANDNL2A"
    | "INGBNL2A"
    | "KNABNL2H"
    | "MOYONL21"
    | "NTSBDEB1"
    | "RABONL2U"
    | "RBRBNL21"
    | "REVOIE23"
    | "REVOLT21"
    | "SNSBNL2A"
    | "TRIONL2U"
    | null
}

export type t_payment_method_interac_present = {
  brand?: string | null
  cardholder_name?: string | null
  country?: string | null
  exp_month: number
  exp_year: number
  fingerprint?: string | null
  funding?: string | null
  last4?: string | null
  networks?: t_payment_method_card_present_networks | null
  preferred_locales?: string[] | null
  read_method?:
    | "contact_emv"
    | "contactless_emv"
    | "contactless_magstripe_mode"
    | "magnetic_stripe_fallback"
    | "magnetic_stripe_track2"
    | null
}

export type t_payment_method_klarna = {
  dob?: t_payment_flows_private_payment_methods_klarna_dob | null
}

export type t_payment_method_konbini = EmptyObject

export type t_payment_method_link = {
  email?: string | null
}

export type t_payment_method_options_affirm = {
  capture_method?: "manual"
  preferred_locale?: string
  setup_future_usage?: "none"
}

export type t_payment_method_options_afterpay_clearpay = {
  capture_method?: "manual"
  reference?: string | null
  setup_future_usage?: "none"
}

export type t_payment_method_options_alipay = {
  setup_future_usage?: "none" | "off_session"
}

export type t_payment_method_options_bacs_debit = {
  setup_future_usage?: "none" | "off_session" | "on_session"
}

export type t_payment_method_options_bancontact = {
  preferred_language: "de" | "en" | "fr" | "nl"
  setup_future_usage?: "none" | "off_session"
}

export type t_payment_method_options_boleto = {
  expires_after_days: number
  setup_future_usage?: "none" | "off_session" | "on_session"
}

export type t_payment_method_options_card_installments = {
  available_plans?: t_payment_method_details_card_installments_plan[] | null
  enabled: boolean
  plan?: t_payment_method_details_card_installments_plan | null
}

export type t_payment_method_options_card_mandate_options = {
  amount: number
  amount_type: "fixed" | "maximum"
  description?: string | null
  end_date?: number | null
  interval: "day" | "month" | "sporadic" | "week" | "year"
  interval_count?: number | null
  reference: string
  start_date: number
  supported_types?: "india"[] | null
}

export type t_payment_method_options_card_present = {
  request_extended_authorization?: boolean | null
  request_incremental_authorization_support?: boolean | null
}

export type t_payment_method_options_cashapp = {
  capture_method?: "manual"
  setup_future_usage?: "none" | "off_session" | "on_session"
}

export type t_payment_method_options_customer_balance = {
  bank_transfer?: t_payment_method_options_customer_balance_bank_transfer
  funding_type?: "bank_transfer" | null
  setup_future_usage?: "none"
}

export type t_payment_method_options_customer_balance_bank_transfer = {
  eu_bank_transfer?: t_payment_method_options_customer_balance_eu_bank_account
  requested_address_types?: (
    | "aba"
    | "iban"
    | "sepa"
    | "sort_code"
    | "spei"
    | "swift"
    | "zengin"
  )[]
  type?:
    | "eu_bank_transfer"
    | "gb_bank_transfer"
    | "jp_bank_transfer"
    | "mx_bank_transfer"
    | "us_bank_transfer"
    | null
}

export type t_payment_method_options_customer_balance_eu_bank_account = {
  country: "BE" | "DE" | "ES" | "FR" | "IE" | "NL"
}

export type t_payment_method_options_fpx = {
  setup_future_usage?: "none"
}

export type t_payment_method_options_giropay = {
  setup_future_usage?: "none"
}

export type t_payment_method_options_grabpay = {
  setup_future_usage?: "none"
}

export type t_payment_method_options_ideal = {
  setup_future_usage?: "none" | "off_session"
}

export type t_payment_method_options_interac_present = EmptyObject

export type t_payment_method_options_klarna = {
  capture_method?: "manual"
  preferred_locale?: string | null
  setup_future_usage?: "none"
}

export type t_payment_method_options_konbini = {
  confirmation_number?: string | null
  expires_after_days?: number | null
  expires_at?: number | null
  product_description?: string | null
  setup_future_usage?: "none"
}

export type t_payment_method_options_oxxo = {
  expires_after_days: number
  setup_future_usage?: "none"
}

export type t_payment_method_options_p24 = {
  setup_future_usage?: "none"
}

export type t_payment_method_options_paynow = {
  setup_future_usage?: "none"
}

export type t_payment_method_options_paypal = {
  capture_method?: "manual"
  preferred_locale?: string | null
  reference?: string | null
  setup_future_usage?: "none" | "off_session"
}

export type t_payment_method_options_pix = {
  expires_after_seconds?: number | null
  expires_at?: number | null
  setup_future_usage?: "none"
}

export type t_payment_method_options_promptpay = {
  setup_future_usage?: "none"
}

export type t_payment_method_options_sofort = {
  preferred_language?: "de" | "en" | "es" | "fr" | "it" | "nl" | "pl" | null
  setup_future_usage?: "none" | "off_session"
}

export type t_payment_method_options_wechat_pay = {
  app_id?: string | null
  client?: "android" | "ios" | "web" | null
  setup_future_usage?: "none"
}

export type t_payment_method_options_zip = {
  setup_future_usage?: "none"
}

export type t_payment_method_oxxo = EmptyObject

export type t_payment_method_p24 = {
  bank?:
    | "alior_bank"
    | "bank_millennium"
    | "bank_nowy_bfg_sa"
    | "bank_pekao_sa"
    | "banki_spbdzielcze"
    | "blik"
    | "bnp_paribas"
    | "boz"
    | "citi_handlowy"
    | "credit_agricole"
    | "envelobank"
    | "etransfer_pocztowy24"
    | "getin_bank"
    | "ideabank"
    | "ing"
    | "inteligo"
    | "mbank_mtransfer"
    | "nest_przelew"
    | "noble_pay"
    | "pbac_z_ipko"
    | "plus_bank"
    | "santander_przelew24"
    | "tmobile_usbugi_bankowe"
    | "toyota_bank"
    | "volkswagen_bank"
    | null
}

export type t_payment_method_paynow = EmptyObject

export type t_payment_method_paypal = {
  payer_email?: string | null
  payer_id?: string | null
}

export type t_payment_method_pix = EmptyObject

export type t_payment_method_promptpay = EmptyObject

export type t_payment_method_sepa_debit = {
  bank_code?: string | null
  branch_code?: string | null
  country?: string | null
  fingerprint?: string | null
  generated_from?: t_sepa_debit_generated_from | null
  last4?: string | null
}

export type t_payment_method_sofort = {
  country?: string | null
}

export type t_payment_method_us_bank_account = {
  account_holder_type?: "company" | "individual" | null
  account_type?: "checking" | "savings" | null
  bank_name?: string | null
  financial_connections_account?: string | null
  fingerprint?: string | null
  last4?: string | null
  networks?: t_us_bank_account_networks | null
  routing_number?: string | null
  status_details?: t_payment_method_us_bank_account_status_details | null
}

export type t_payment_method_us_bank_account_blocked = {
  network_code?:
    | "R02"
    | "R03"
    | "R04"
    | "R05"
    | "R07"
    | "R08"
    | "R10"
    | "R11"
    | "R16"
    | "R20"
    | "R29"
    | "R31"
    | null
  reason?:
    | "bank_account_closed"
    | "bank_account_frozen"
    | "bank_account_invalid_details"
    | "bank_account_restricted"
    | "bank_account_unusable"
    | "debit_not_authorized"
    | null
}

export type t_payment_method_us_bank_account_status_details = {
  blocked?: t_payment_method_us_bank_account_blocked
}

export type t_payment_method_wechat_pay = EmptyObject

export type t_payment_method_zip = EmptyObject

export type t_payment_pages_checkout_session_after_expiration = {
  recovery?: t_payment_pages_checkout_session_after_expiration_recovery | null
}

export type t_payment_pages_checkout_session_after_expiration_recovery = {
  allow_promotion_codes: boolean
  enabled: boolean
  expires_at?: number | null
  url?: string | null
}

export type t_payment_pages_checkout_session_automatic_tax = {
  enabled: boolean
  status?: "complete" | "failed" | "requires_location_inputs" | null
}

export type t_payment_pages_checkout_session_consent = {
  promotions?: "opt_in" | "opt_out" | null
  terms_of_service?: "accepted" | null
}

export type t_payment_pages_checkout_session_consent_collection = {
  promotions?: "auto" | "none" | null
  terms_of_service?: "none" | "required" | null
}

export type t_payment_pages_checkout_session_currency_conversion = {
  amount_subtotal: number
  amount_total: number
  fx_rate: string
  source_currency: string
}

export type t_payment_pages_checkout_session_custom_fields = {
  dropdown?: t_payment_pages_checkout_session_custom_fields_dropdown | null
  key: string
  label: t_payment_pages_checkout_session_custom_fields_label
  numeric?: t_payment_pages_checkout_session_custom_fields_numeric | null
  optional: boolean
  text?: t_payment_pages_checkout_session_custom_fields_text | null
  type: "dropdown" | "numeric" | "text"
}

export type t_payment_pages_checkout_session_custom_fields_dropdown = {
  options: t_payment_pages_checkout_session_custom_fields_option[]
  value?: string | null
}

export type t_payment_pages_checkout_session_custom_fields_label = {
  custom?: string | null
  type: "custom"
}

export type t_payment_pages_checkout_session_custom_fields_numeric = {
  maximum_length?: number | null
  minimum_length?: number | null
  value?: string | null
}

export type t_payment_pages_checkout_session_custom_fields_option = {
  label: string
  value: string
}

export type t_payment_pages_checkout_session_custom_fields_text = {
  maximum_length?: number | null
  minimum_length?: number | null
  value?: string | null
}

export type t_payment_pages_checkout_session_custom_text = {
  shipping_address?: t_payment_pages_checkout_session_custom_text_position | null
  submit?: t_payment_pages_checkout_session_custom_text_position | null
  terms_of_service_acceptance?: t_payment_pages_checkout_session_custom_text_position | null
}

export type t_payment_pages_checkout_session_custom_text_position = {
  message: string
}

export type t_payment_pages_checkout_session_customer_details = {
  address?: t_address | null
  email?: string | null
  name?: string | null
  phone?: string | null
  tax_exempt?: "exempt" | "none" | "reverse" | null
  tax_ids?: t_payment_pages_checkout_session_tax_id[] | null
}

export type t_payment_pages_checkout_session_invoice_creation = {
  enabled: boolean
  invoice_data: t_payment_pages_checkout_session_invoice_settings
}

export type t_payment_pages_checkout_session_invoice_settings = {
  account_tax_ids?: (string | t_tax_id | t_deleted_tax_id)[] | null
  custom_fields?: t_invoice_setting_custom_field[] | null
  description?: string | null
  footer?: string | null
  metadata?: {
    [key: string]: string
  } | null
  rendering_options?: t_invoice_setting_rendering_options | null
}

export type t_payment_pages_checkout_session_phone_number_collection = {
  enabled: boolean
}

export type t_payment_pages_checkout_session_shipping_address_collection = {
  allowed_countries: (
    | "AC"
    | "AD"
    | "AE"
    | "AF"
    | "AG"
    | "AI"
    | "AL"
    | "AM"
    | "AO"
    | "AQ"
    | "AR"
    | "AT"
    | "AU"
    | "AW"
    | "AX"
    | "AZ"
    | "BA"
    | "BB"
    | "BD"
    | "BE"
    | "BF"
    | "BG"
    | "BH"
    | "BI"
    | "BJ"
    | "BL"
    | "BM"
    | "BN"
    | "BO"
    | "BQ"
    | "BR"
    | "BS"
    | "BT"
    | "BV"
    | "BW"
    | "BY"
    | "BZ"
    | "CA"
    | "CD"
    | "CF"
    | "CG"
    | "CH"
    | "CI"
    | "CK"
    | "CL"
    | "CM"
    | "CN"
    | "CO"
    | "CR"
    | "CV"
    | "CW"
    | "CY"
    | "CZ"
    | "DE"
    | "DJ"
    | "DK"
    | "DM"
    | "DO"
    | "DZ"
    | "EC"
    | "EE"
    | "EG"
    | "EH"
    | "ER"
    | "ES"
    | "ET"
    | "FI"
    | "FJ"
    | "FK"
    | "FO"
    | "FR"
    | "GA"
    | "GB"
    | "GD"
    | "GE"
    | "GF"
    | "GG"
    | "GH"
    | "GI"
    | "GL"
    | "GM"
    | "GN"
    | "GP"
    | "GQ"
    | "GR"
    | "GS"
    | "GT"
    | "GU"
    | "GW"
    | "GY"
    | "HK"
    | "HN"
    | "HR"
    | "HT"
    | "HU"
    | "ID"
    | "IE"
    | "IL"
    | "IM"
    | "IN"
    | "IO"
    | "IQ"
    | "IS"
    | "IT"
    | "JE"
    | "JM"
    | "JO"
    | "JP"
    | "KE"
    | "KG"
    | "KH"
    | "KI"
    | "KM"
    | "KN"
    | "KR"
    | "KW"
    | "KY"
    | "KZ"
    | "LA"
    | "LB"
    | "LC"
    | "LI"
    | "LK"
    | "LR"
    | "LS"
    | "LT"
    | "LU"
    | "LV"
    | "LY"
    | "MA"
    | "MC"
    | "MD"
    | "ME"
    | "MF"
    | "MG"
    | "MK"
    | "ML"
    | "MM"
    | "MN"
    | "MO"
    | "MQ"
    | "MR"
    | "MS"
    | "MT"
    | "MU"
    | "MV"
    | "MW"
    | "MX"
    | "MY"
    | "MZ"
    | "NA"
    | "NC"
    | "NE"
    | "NG"
    | "NI"
    | "NL"
    | "NO"
    | "NP"
    | "NR"
    | "NU"
    | "NZ"
    | "OM"
    | "PA"
    | "PE"
    | "PF"
    | "PG"
    | "PH"
    | "PK"
    | "PL"
    | "PM"
    | "PN"
    | "PR"
    | "PS"
    | "PT"
    | "PY"
    | "QA"
    | "RE"
    | "RO"
    | "RS"
    | "RU"
    | "RW"
    | "SA"
    | "SB"
    | "SC"
    | "SE"
    | "SG"
    | "SH"
    | "SI"
    | "SJ"
    | "SK"
    | "SL"
    | "SM"
    | "SN"
    | "SO"
    | "SR"
    | "SS"
    | "ST"
    | "SV"
    | "SX"
    | "SZ"
    | "TA"
    | "TC"
    | "TD"
    | "TF"
    | "TG"
    | "TH"
    | "TJ"
    | "TK"
    | "TL"
    | "TM"
    | "TN"
    | "TO"
    | "TR"
    | "TT"
    | "TV"
    | "TW"
    | "TZ"
    | "UA"
    | "UG"
    | "US"
    | "UY"
    | "UZ"
    | "VA"
    | "VC"
    | "VE"
    | "VG"
    | "VN"
    | "VU"
    | "WF"
    | "WS"
    | "XK"
    | "YE"
    | "YT"
    | "ZA"
    | "ZM"
    | "ZW"
    | "ZZ"
  )[]
}

export type t_payment_pages_checkout_session_shipping_cost = {
  amount_subtotal: number
  amount_tax: number
  amount_total: number
  shipping_rate?: string | t_shipping_rate | null
  taxes?: t_line_items_tax_amount[]
}

export type t_payment_pages_checkout_session_shipping_option = {
  shipping_amount: number
  shipping_rate: string | t_shipping_rate
}

export type t_payment_pages_checkout_session_tax_id = {
  type:
    | "ad_nrt"
    | "ae_trn"
    | "ar_cuit"
    | "au_abn"
    | "au_arn"
    | "bg_uic"
    | "bo_tin"
    | "br_cnpj"
    | "br_cpf"
    | "ca_bn"
    | "ca_gst_hst"
    | "ca_pst_bc"
    | "ca_pst_mb"
    | "ca_pst_sk"
    | "ca_qst"
    | "ch_vat"
    | "cl_tin"
    | "cn_tin"
    | "co_nit"
    | "cr_tin"
    | "do_rcn"
    | "ec_ruc"
    | "eg_tin"
    | "es_cif"
    | "eu_oss_vat"
    | "eu_vat"
    | "gb_vat"
    | "ge_vat"
    | "hk_br"
    | "hu_tin"
    | "id_npwp"
    | "il_vat"
    | "in_gst"
    | "is_vat"
    | "jp_cn"
    | "jp_rn"
    | "jp_trn"
    | "ke_pin"
    | "kr_brn"
    | "li_uid"
    | "mx_rfc"
    | "my_frp"
    | "my_itn"
    | "my_sst"
    | "no_vat"
    | "nz_gst"
    | "pe_ruc"
    | "ph_tin"
    | "ro_tin"
    | "rs_pib"
    | "ru_inn"
    | "ru_kpp"
    | "sa_vat"
    | "sg_gst"
    | "sg_uen"
    | "si_tin"
    | "sv_nit"
    | "th_vat"
    | "tr_tin"
    | "tw_vat"
    | "ua_vat"
    | "unknown"
    | "us_ein"
    | "uy_ruc"
    | "ve_rif"
    | "vn_tin"
    | "za_vat"
  value?: string | null
}

export type t_payment_pages_checkout_session_tax_id_collection = {
  enabled: boolean
}

export type t_payment_pages_checkout_session_total_details = {
  amount_discount: number
  amount_shipping?: number | null
  amount_tax: number
  breakdown?: t_payment_pages_checkout_session_total_details_resource_breakdown
}

export type t_payment_pages_checkout_session_total_details_resource_breakdown =
  {
    discounts: t_line_items_discount_amount[]
    taxes: t_line_items_tax_amount[]
  }

export type t_payment_source = t_account | t_bank_account | t_card | t_source

export type t_payout = {
  amount: number
  arrival_date: number
  automatic: boolean
  balance_transaction?: string | t_balance_transaction | null
  created: number
  currency: string
  description?: string | null
  destination?:
    | string
    | t_bank_account
    | t_card
    | t_deleted_bank_account
    | t_deleted_card
    | null
  failure_balance_transaction?: string | t_balance_transaction | null
  failure_code?: string | null
  failure_message?: string | null
  id: string
  livemode: boolean
  metadata?: {
    [key: string]: string
  } | null
  method: string
  object: "payout"
  original_payout?: string | t_payout | null
  reconciliation_status: "completed" | "in_progress" | "not_applicable"
  reversed_by?: string | t_payout | null
  source_type: string
  statement_descriptor?: string | null
  status: string
  type: "bank_account" | "card"
}

export type t_paypal_seller_protection = {
  dispute_categories?: ("fraudulent" | "product_not_received")[] | null
  status: "eligible" | "not_eligible" | "partially_eligible"
}

export type t_period = {
  end?: number | null
  start?: number | null
}

export type t_person = {
  account: string
  address?: t_address
  address_kana?: t_legal_entity_japan_address | null
  address_kanji?: t_legal_entity_japan_address | null
  created: number
  dob?: t_legal_entity_dob
  email?: string | null
  first_name?: string | null
  first_name_kana?: string | null
  first_name_kanji?: string | null
  full_name_aliases?: string[]
  future_requirements?: t_person_future_requirements | null
  gender?: string | null
  id: string
  id_number_provided?: boolean
  id_number_secondary_provided?: boolean
  last_name?: string | null
  last_name_kana?: string | null
  last_name_kanji?: string | null
  maiden_name?: string | null
  metadata?: {
    [key: string]: string
  }
  nationality?: string | null
  object: "person"
  phone?: string | null
  political_exposure?: "existing" | "none"
  registered_address?: t_address
  relationship?: t_person_relationship
  requirements?: t_person_requirements | null
  ssn_last_4_provided?: boolean
  verification?: t_legal_entity_person_verification
}

export type t_person_future_requirements = {
  alternatives?: t_account_requirements_alternative[] | null
  currently_due: string[]
  errors: t_account_requirements_error[]
  eventually_due: string[]
  past_due: string[]
  pending_verification: string[]
}

export type t_person_relationship = {
  director?: boolean | null
  executive?: boolean | null
  owner?: boolean | null
  percent_ownership?: number | null
  representative?: boolean | null
  title?: string | null
}

export type t_person_requirements = {
  alternatives?: t_account_requirements_alternative[] | null
  currently_due: string[]
  errors: t_account_requirements_error[]
  eventually_due: string[]
  past_due: string[]
  pending_verification: string[]
}

export type t_plan = {
  active: boolean
  aggregate_usage?: "last_during_period" | "last_ever" | "max" | "sum" | null
  amount?: number | null
  amount_decimal?: string | null
  billing_scheme: "per_unit" | "tiered"
  created: number
  currency: string
  id: string
  interval: "day" | "month" | "week" | "year"
  interval_count: number
  livemode: boolean
  metadata?: {
    [key: string]: string
  } | null
  nickname?: string | null
  object: "plan"
  product?: string | t_product | t_deleted_product | null
  tiers?: t_plan_tier[]
  tiers_mode?: "graduated" | "volume" | null
  transform_usage?: t_transform_usage | null
  trial_period_days?: number | null
  usage_type: "licensed" | "metered"
}

export type t_plan_tier = {
  flat_amount?: number | null
  flat_amount_decimal?: string | null
  unit_amount?: number | null
  unit_amount_decimal?: string | null
  up_to?: number | null
}

export type t_platform_tax_fee = {
  account: string
  id: string
  object: "platform_tax_fee"
  source_transaction: string
  type: string
}

export type t_portal_business_profile = {
  headline?: string | null
  privacy_policy_url?: string | null
  terms_of_service_url?: string | null
}

export type t_portal_customer_update = {
  allowed_updates: (
    | "address"
    | "email"
    | "name"
    | "phone"
    | "shipping"
    | "tax_id"
  )[]
  enabled: boolean
}

export type t_portal_features = {
  customer_update: t_portal_customer_update
  invoice_history: t_portal_invoice_list
  payment_method_update: t_portal_payment_method_update
  subscription_cancel: t_portal_subscription_cancel
  subscription_pause: t_portal_subscription_pause
  subscription_update: t_portal_subscription_update
}

export type t_portal_flows_after_completion_hosted_confirmation = {
  custom_message?: string | null
}

export type t_portal_flows_after_completion_redirect = {
  return_url: string
}

export type t_portal_flows_coupon_offer = {
  coupon: string
}

export type t_portal_flows_flow = {
  after_completion: t_portal_flows_flow_after_completion
  subscription_cancel?: t_portal_flows_flow_subscription_cancel | null
  subscription_update?: t_portal_flows_flow_subscription_update | null
  subscription_update_confirm?: t_portal_flows_flow_subscription_update_confirm | null
  type:
    | "payment_method_update"
    | "subscription_cancel"
    | "subscription_update"
    | "subscription_update_confirm"
}

export type t_portal_flows_flow_after_completion = {
  hosted_confirmation?: t_portal_flows_after_completion_hosted_confirmation | null
  redirect?: t_portal_flows_after_completion_redirect | null
  type: "hosted_confirmation" | "portal_homepage" | "redirect"
}

export type t_portal_flows_flow_subscription_cancel = {
  retention?: t_portal_flows_retention | null
  subscription: string
}

export type t_portal_flows_flow_subscription_update = {
  subscription: string
}

export type t_portal_flows_flow_subscription_update_confirm = {
  discounts?: t_portal_flows_subscription_update_confirm_discount[] | null
  items: t_portal_flows_subscription_update_confirm_item[]
  subscription: string
}

export type t_portal_flows_retention = {
  coupon_offer?: t_portal_flows_coupon_offer | null
  type: "coupon_offer"
}

export type t_portal_flows_subscription_update_confirm_discount = {
  coupon?: string | null
  promotion_code?: string | null
}

export type t_portal_flows_subscription_update_confirm_item = {
  id?: string | null
  price?: string | null
  quantity?: number
}

export type t_portal_invoice_list = {
  enabled: boolean
}

export type t_portal_login_page = {
  enabled: boolean
  url?: string | null
}

export type t_portal_payment_method_update = {
  enabled: boolean
}

export type t_portal_subscription_cancel = {
  cancellation_reason: t_portal_subscription_cancellation_reason
  enabled: boolean
  mode: "at_period_end" | "immediately"
  proration_behavior: "always_invoice" | "create_prorations" | "none"
}

export type t_portal_subscription_cancellation_reason = {
  enabled: boolean
  options: (
    | "customer_service"
    | "low_quality"
    | "missing_features"
    | "other"
    | "switched_service"
    | "too_complex"
    | "too_expensive"
    | "unused"
  )[]
}

export type t_portal_subscription_pause = {
  enabled: boolean
}

export type t_portal_subscription_update = {
  default_allowed_updates: ("price" | "promotion_code" | "quantity")[]
  enabled: boolean
  products?: t_portal_subscription_update_product[] | null
  proration_behavior: "always_invoice" | "create_prorations" | "none"
}

export type t_portal_subscription_update_product = {
  prices: string[]
  product: string
}

export type t_price = {
  active: boolean
  billing_scheme: "per_unit" | "tiered"
  created: number
  currency: string
  currency_options?: {
    [key: string]: t_currency_option
  }
  custom_unit_amount?: t_custom_unit_amount | null
  id: string
  livemode: boolean
  lookup_key?: string | null
  metadata: {
    [key: string]: string
  }
  nickname?: string | null
  object: "price"
  product: string | t_product | t_deleted_product
  recurring?: t_recurring | null
  tax_behavior?: "exclusive" | "inclusive" | "unspecified" | null
  tiers?: t_price_tier[]
  tiers_mode?: "graduated" | "volume" | null
  transform_quantity?: t_transform_quantity | null
  type: "one_time" | "recurring"
  unit_amount?: number | null
  unit_amount_decimal?: string | null
}

export type t_price_tier = {
  flat_amount?: number | null
  flat_amount_decimal?: string | null
  unit_amount?: number | null
  unit_amount_decimal?: string | null
  up_to?: number | null
}

export type t_product = {
  active: boolean
  created: number
  default_price?: string | t_price | null
  description?: string | null
  features: t_product_feature[]
  id: string
  images: string[]
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  name: string
  object: "product"
  package_dimensions?: t_package_dimensions | null
  shippable?: boolean | null
  statement_descriptor?: string | null
  tax_code?: string | t_tax_code | null
  unit_label?: string | null
  updated: number
  url?: string | null
}

export type t_product_feature = {
  name: string
}

export type t_promotion_code = {
  active: boolean
  code: string
  coupon: t_coupon
  created: number
  customer?: string | t_customer | t_deleted_customer | null
  expires_at?: number | null
  id: string
  livemode: boolean
  max_redemptions?: number | null
  metadata?: {
    [key: string]: string
  } | null
  object: "promotion_code"
  restrictions: t_promotion_codes_resource_restrictions
  times_redeemed: number
}

export type t_promotion_code_currency_option = {
  minimum_amount: number
}

export type t_promotion_codes_resource_restrictions = {
  currency_options?: {
    [key: string]: t_promotion_code_currency_option
  }
  first_time_transaction: boolean
  minimum_amount?: number | null
  minimum_amount_currency?: string | null
}

export type t_quote = {
  amount_subtotal: number
  amount_total: number
  application?: string | t_application | t_deleted_application | null
  application_fee_amount?: number | null
  application_fee_percent?: number | null
  automatic_tax: t_quotes_resource_automatic_tax
  collection_method: "charge_automatically" | "send_invoice"
  computed: t_quotes_resource_computed
  created: number
  currency?: string | null
  customer?: string | t_customer | t_deleted_customer | null
  default_tax_rates?: (string | t_tax_rate)[]
  description?: string | null
  discounts: (string | t_discount)[]
  expires_at: number
  footer?: string | null
  from_quote?: t_quotes_resource_from_quote | null
  header?: string | null
  id: string
  invoice?: string | t_invoice | t_deleted_invoice | null
  invoice_settings?: t_invoice_setting_quote_setting | null
  line_items?: {
    data: t_item[]
    has_more: boolean
    object: "list"
    url: string
  }
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  number?: string | null
  object: "quote"
  on_behalf_of?: string | t_account | null
  status: "accepted" | "canceled" | "draft" | "open"
  status_transitions: t_quotes_resource_status_transitions
  subscription?: string | t_subscription | null
  subscription_data: t_quotes_resource_subscription_data_subscription_data
  subscription_schedule?: string | t_subscription_schedule | null
  test_clock?: string | t_test_helpers_test_clock | null
  total_details: t_quotes_resource_total_details
  transfer_data?: t_quotes_resource_transfer_data | null
}

export type t_quotes_resource_automatic_tax = {
  enabled: boolean
  status?: "complete" | "failed" | "requires_location_inputs" | null
}

export type t_quotes_resource_computed = {
  recurring?: t_quotes_resource_recurring | null
  upfront: t_quotes_resource_upfront
}

export type t_quotes_resource_from_quote = {
  is_revision: boolean
  quote: string | t_quote
}

export type t_quotes_resource_recurring = {
  amount_subtotal: number
  amount_total: number
  interval: "day" | "month" | "week" | "year"
  interval_count: number
  total_details: t_quotes_resource_total_details
}

export type t_quotes_resource_status_transitions = {
  accepted_at?: number | null
  canceled_at?: number | null
  finalized_at?: number | null
}

export type t_quotes_resource_subscription_data_subscription_data = {
  description?: string | null
  effective_date?: number | null
  trial_period_days?: number | null
}

export type t_quotes_resource_total_details = {
  amount_discount: number
  amount_shipping?: number | null
  amount_tax: number
  breakdown?: t_quotes_resource_total_details_resource_breakdown
}

export type t_quotes_resource_total_details_resource_breakdown = {
  discounts: t_line_items_discount_amount[]
  taxes: t_line_items_tax_amount[]
}

export type t_quotes_resource_transfer_data = {
  amount?: number | null
  amount_percent?: number | null
  destination: string | t_account
}

export type t_quotes_resource_upfront = {
  amount_subtotal: number
  amount_total: number
  line_items?: {
    data: t_item[]
    has_more: boolean
    object: "list"
    url: string
  }
  total_details: t_quotes_resource_total_details
}

export type t_radar_early_fraud_warning = {
  actionable: boolean
  charge: string | t_charge
  created: number
  fraud_type: string
  id: string
  livemode: boolean
  object: "radar.early_fraud_warning"
  payment_intent?: string | t_payment_intent
}

export type t_radar_value_list = {
  alias: string
  created: number
  created_by: string
  id: string
  item_type:
    | "card_bin"
    | "card_fingerprint"
    | "case_sensitive_string"
    | "country"
    | "customer_id"
    | "email"
    | "ip_address"
    | "sepa_debit_fingerprint"
    | "string"
    | "us_bank_account_fingerprint"
  list_items: {
    data: t_radar_value_list_item[]
    has_more: boolean
    object: "list"
    url: string
  }
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  name: string
  object: "radar.value_list"
}

export type t_radar_value_list_item = {
  created: number
  created_by: string
  id: string
  livemode: boolean
  object: "radar.value_list_item"
  value: string
  value_list: string
}

export type t_radar_radar_options = {
  session?: string
}

export type t_radar_review_resource_location = {
  city?: string | null
  country?: string | null
  latitude?: number | null
  longitude?: number | null
  region?: string | null
}

export type t_radar_review_resource_session = {
  browser?: string | null
  device?: string | null
  platform?: string | null
  version?: string | null
}

export type t_received_payment_method_details_financial_account = {
  id: string
  network: "stripe"
}

export type t_recurring = {
  aggregate_usage?: "last_during_period" | "last_ever" | "max" | "sum" | null
  interval: "day" | "month" | "week" | "year"
  interval_count: number
  usage_type: "licensed" | "metered"
}

export type t_refund = {
  amount: number
  balance_transaction?: string | t_balance_transaction | null
  charge?: string | t_charge | null
  created: number
  currency: string
  description?: string
  failure_balance_transaction?: string | t_balance_transaction
  failure_reason?: string
  id: string
  instructions_email?: string
  metadata?: {
    [key: string]: string
  } | null
  next_action?: t_refund_next_action
  object: "refund"
  payment_intent?: string | t_payment_intent | null
  reason?:
    | "duplicate"
    | "expired_uncaptured_charge"
    | "fraudulent"
    | "requested_by_customer"
    | null
  receipt_number?: string | null
  source_transfer_reversal?: string | t_transfer_reversal | null
  status?: string | null
  transfer_reversal?: string | t_transfer_reversal | null
}

export type t_refund_next_action = {
  display_details?: t_refund_next_action_display_details | null
  type: string
}

export type t_refund_next_action_display_details = {
  email_sent: t_email_sent
  expires_at: number
}

export type t_reporting_report_run = {
  created: number
  error?: string | null
  id: string
  livemode: boolean
  object: "reporting.report_run"
  parameters: t_financial_reporting_finance_report_run_run_parameters
  report_type: string
  result?: t_file | null
  status: string
  succeeded_at?: number | null
}

export type t_reporting_report_type = {
  data_available_end: number
  data_available_start: number
  default_columns?: string[] | null
  id: string
  livemode: boolean
  name: string
  object: "reporting.report_type"
  updated: number
  version: number
}

export type t_reserve_transaction = {
  amount: number
  currency: string
  description?: string | null
  id: string
  object: "reserve_transaction"
}

export type t_review = {
  billing_zip?: string | null
  charge?: string | t_charge | null
  closed_reason?:
    | "approved"
    | "disputed"
    | "redacted"
    | "refunded"
    | "refunded_as_fraud"
    | null
  created: number
  id: string
  ip_address?: string | null
  ip_address_location?: t_radar_review_resource_location | null
  livemode: boolean
  object: "review"
  open: boolean
  opened_reason: "manual" | "rule"
  payment_intent?: string | t_payment_intent
  reason: string
  session?: t_radar_review_resource_session | null
}

export type t_rule = {
  action: string
  id: string
  predicate: string
}

export type t_scheduled_query_run = {
  created: number
  data_load_time: number
  error?: t_sigma_scheduled_query_run_error
  file?: t_file | null
  id: string
  livemode: boolean
  object: "scheduled_query_run"
  result_available_until: number
  sql: string
  status: string
  title: string
}

export type t_schedules_phase_automatic_tax = {
  enabled: boolean
}

export type t_secret_service_resource_scope = {
  type: "account" | "user"
  user?: string
}

export type t_sepa_debit_generated_from = {
  charge?: string | t_charge | null
  setup_attempt?: string | t_setup_attempt | null
}

export type t_setup_attempt = {
  application?: string | t_application | null
  attach_to_self?: boolean
  created: number
  customer?: string | t_customer | t_deleted_customer | null
  flow_directions?: ("inbound" | "outbound")[] | null
  id: string
  livemode: boolean
  object: "setup_attempt"
  on_behalf_of?: string | t_account | null
  payment_method: string | t_payment_method
  payment_method_details: t_setup_attempt_payment_method_details
  setup_error?: t_api_errors | null
  setup_intent: string | t_setup_intent
  status: string
  usage: string
}

export type t_setup_attempt_payment_method_details = {
  acss_debit?: t_setup_attempt_payment_method_details_acss_debit
  au_becs_debit?: t_setup_attempt_payment_method_details_au_becs_debit
  bacs_debit?: t_setup_attempt_payment_method_details_bacs_debit
  bancontact?: t_setup_attempt_payment_method_details_bancontact
  boleto?: t_setup_attempt_payment_method_details_boleto
  card?: t_setup_attempt_payment_method_details_card
  card_present?: t_setup_attempt_payment_method_details_card_present
  cashapp?: t_setup_attempt_payment_method_details_cashapp
  ideal?: t_setup_attempt_payment_method_details_ideal
  klarna?: t_setup_attempt_payment_method_details_klarna
  link?: t_setup_attempt_payment_method_details_link
  paypal?: t_setup_attempt_payment_method_details_paypal
  sepa_debit?: t_setup_attempt_payment_method_details_sepa_debit
  sofort?: t_setup_attempt_payment_method_details_sofort
  type: string
  us_bank_account?: t_setup_attempt_payment_method_details_us_bank_account
}

export type t_setup_attempt_payment_method_details_acss_debit = EmptyObject

export type t_setup_attempt_payment_method_details_au_becs_debit = EmptyObject

export type t_setup_attempt_payment_method_details_bacs_debit = EmptyObject

export type t_setup_attempt_payment_method_details_bancontact = {
  bank_code?: string | null
  bank_name?: string | null
  bic?: string | null
  generated_sepa_debit?: string | t_payment_method | null
  generated_sepa_debit_mandate?: string | t_mandate | null
  iban_last4?: string | null
  preferred_language?: "de" | "en" | "fr" | "nl" | null
  verified_name?: string | null
}

export type t_setup_attempt_payment_method_details_boleto = EmptyObject

export type t_setup_attempt_payment_method_details_card = {
  brand?: string | null
  checks?: t_payment_method_details_card_checks | null
  country?: string | null
  exp_month?: number | null
  exp_year?: number | null
  fingerprint?: string | null
  funding?: string | null
  last4?: string | null
  network?: string | null
  three_d_secure?: t_three_d_secure_details | null
  wallet?: t_setup_attempt_payment_method_details_card_wallet | null
}

export type t_setup_attempt_payment_method_details_card_present = {
  generated_card?: string | t_payment_method | null
}

export type t_setup_attempt_payment_method_details_card_wallet = {
  apple_pay?: t_payment_method_details_card_wallet_apple_pay
  google_pay?: t_payment_method_details_card_wallet_google_pay
  type: "apple_pay" | "google_pay" | "link"
}

export type t_setup_attempt_payment_method_details_cashapp = EmptyObject

export type t_setup_attempt_payment_method_details_ideal = {
  bank?:
    | "abn_amro"
    | "asn_bank"
    | "bunq"
    | "handelsbanken"
    | "ing"
    | "knab"
    | "moneyou"
    | "n26"
    | "rabobank"
    | "regiobank"
    | "revolut"
    | "sns_bank"
    | "triodos_bank"
    | "van_lanschot"
    | "yoursafe"
    | null
  bic?:
    | "ABNANL2A"
    | "ASNBNL21"
    | "BITSNL2A"
    | "BUNQNL2A"
    | "FVLBNL22"
    | "HANDNL2A"
    | "INGBNL2A"
    | "KNABNL2H"
    | "MOYONL21"
    | "NTSBDEB1"
    | "RABONL2U"
    | "RBRBNL21"
    | "REVOIE23"
    | "REVOLT21"
    | "SNSBNL2A"
    | "TRIONL2U"
    | null
  generated_sepa_debit?: string | t_payment_method | null
  generated_sepa_debit_mandate?: string | t_mandate | null
  iban_last4?: string | null
  verified_name?: string | null
}

export type t_setup_attempt_payment_method_details_klarna = EmptyObject

export type t_setup_attempt_payment_method_details_link = EmptyObject

export type t_setup_attempt_payment_method_details_paypal = EmptyObject

export type t_setup_attempt_payment_method_details_sepa_debit = EmptyObject

export type t_setup_attempt_payment_method_details_sofort = {
  bank_code?: string | null
  bank_name?: string | null
  bic?: string | null
  generated_sepa_debit?: string | t_payment_method | null
  generated_sepa_debit_mandate?: string | t_mandate | null
  iban_last4?: string | null
  preferred_language?: "de" | "en" | "fr" | "nl" | null
  verified_name?: string | null
}

export type t_setup_attempt_payment_method_details_us_bank_account = EmptyObject

export type t_setup_intent = {
  application?: string | t_application | null
  attach_to_self?: boolean
  automatic_payment_methods?: t_payment_flows_automatic_payment_methods_setup_intent | null
  cancellation_reason?:
    | "abandoned"
    | "duplicate"
    | "requested_by_customer"
    | null
  client_secret?: string | null
  created: number
  customer?: string | t_customer | t_deleted_customer | null
  description?: string | null
  flow_directions?: ("inbound" | "outbound")[] | null
  id: string
  last_setup_error?: t_api_errors | null
  latest_attempt?: string | t_setup_attempt | null
  livemode: boolean
  mandate?: string | t_mandate | null
  metadata?: {
    [key: string]: string
  } | null
  next_action?: t_setup_intent_next_action | null
  object: "setup_intent"
  on_behalf_of?: string | t_account | null
  payment_method?: string | t_payment_method | null
  payment_method_configuration_details?: t_payment_method_config_biz_payment_method_configuration_details | null
  payment_method_options?: t_setup_intent_payment_method_options | null
  payment_method_types: string[]
  single_use_mandate?: string | t_mandate | null
  status:
    | "canceled"
    | "processing"
    | "requires_action"
    | "requires_confirmation"
    | "requires_payment_method"
    | "succeeded"
  usage: string
}

export type t_setup_intent_next_action = {
  cashapp_handle_redirect_or_display_qr_code?: t_payment_intent_next_action_cashapp_handle_redirect_or_display_qr_code
  redirect_to_url?: t_setup_intent_next_action_redirect_to_url
  type: string
  use_stripe_sdk?: EmptyObject
  verify_with_microdeposits?: t_setup_intent_next_action_verify_with_microdeposits
}

export type t_setup_intent_next_action_redirect_to_url = {
  return_url?: string | null
  url?: string | null
}

export type t_setup_intent_next_action_verify_with_microdeposits = {
  arrival_date: number
  hosted_verification_url: string
  microdeposit_type?: "amounts" | "descriptor_code" | null
}

export type t_setup_intent_payment_method_options = {
  acss_debit?:
    | t_setup_intent_payment_method_options_acss_debit
    | t_setup_intent_type_specific_payment_method_options_client
  card?: t_setup_intent_payment_method_options_card
  link?:
    | t_setup_intent_payment_method_options_link
    | t_setup_intent_type_specific_payment_method_options_client
  paypal?:
    | t_setup_intent_payment_method_options_paypal
    | t_setup_intent_type_specific_payment_method_options_client
  sepa_debit?:
    | t_setup_intent_payment_method_options_sepa_debit
    | t_setup_intent_type_specific_payment_method_options_client
  us_bank_account?:
    | t_setup_intent_payment_method_options_us_bank_account
    | t_setup_intent_type_specific_payment_method_options_client
}

export type t_setup_intent_payment_method_options_acss_debit = {
  currency?: "cad" | "usd" | null
  mandate_options?: t_setup_intent_payment_method_options_mandate_options_acss_debit
  verification_method?: "automatic" | "instant" | "microdeposits"
}

export type t_setup_intent_payment_method_options_card = {
  mandate_options?: t_setup_intent_payment_method_options_card_mandate_options | null
  network?:
    | "amex"
    | "cartes_bancaires"
    | "diners"
    | "discover"
    | "eftpos_au"
    | "interac"
    | "jcb"
    | "mastercard"
    | "unionpay"
    | "unknown"
    | "visa"
    | null
  request_three_d_secure?: "any" | "automatic" | "challenge_only" | null
}

export type t_setup_intent_payment_method_options_card_mandate_options = {
  amount: number
  amount_type: "fixed" | "maximum"
  currency: string
  description?: string | null
  end_date?: number | null
  interval: "day" | "month" | "sporadic" | "week" | "year"
  interval_count?: number | null
  reference: string
  start_date: number
  supported_types?: "india"[] | null
}

export type t_setup_intent_payment_method_options_link = EmptyObject

export type t_setup_intent_payment_method_options_mandate_options_acss_debit = {
  custom_mandate_url?: string
  default_for?: ("invoice" | "subscription")[]
  interval_description?: string | null
  payment_schedule?: "combined" | "interval" | "sporadic" | null
  transaction_type?: "business" | "personal" | null
}

export type t_setup_intent_payment_method_options_mandate_options_sepa_debit =
  EmptyObject

export type t_setup_intent_payment_method_options_paypal = {
  billing_agreement_id?: string | null
}

export type t_setup_intent_payment_method_options_sepa_debit = {
  mandate_options?: t_setup_intent_payment_method_options_mandate_options_sepa_debit
}

export type t_setup_intent_payment_method_options_us_bank_account = {
  financial_connections?: t_linked_account_options_us_bank_account
  verification_method?: "automatic" | "instant" | "microdeposits"
}

export type t_setup_intent_type_specific_payment_method_options_client = {
  verification_method?: "automatic" | "instant" | "microdeposits"
}

export type t_shipping = {
  address?: t_address
  carrier?: string | null
  name?: string
  phone?: string | null
  tracking_number?: string | null
}

export type t_shipping_rate = {
  active: boolean
  created: number
  delivery_estimate?: t_shipping_rate_delivery_estimate | null
  display_name?: string | null
  fixed_amount?: t_shipping_rate_fixed_amount
  id: string
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  object: "shipping_rate"
  tax_behavior?: "exclusive" | "inclusive" | "unspecified" | null
  tax_code?: string | t_tax_code | null
  type: "fixed_amount"
}

export type t_shipping_rate_currency_option = {
  amount: number
  tax_behavior: "exclusive" | "inclusive" | "unspecified"
}

export type t_shipping_rate_delivery_estimate = {
  maximum?: t_shipping_rate_delivery_estimate_bound | null
  minimum?: t_shipping_rate_delivery_estimate_bound | null
}

export type t_shipping_rate_delivery_estimate_bound = {
  unit: "business_day" | "day" | "hour" | "month" | "week"
  value: number
}

export type t_shipping_rate_fixed_amount = {
  amount: number
  currency: string
  currency_options?: {
    [key: string]: t_shipping_rate_currency_option
  }
}

export type t_sigma_scheduled_query_run_error = {
  message: string
}

export type t_source = {
  ach_credit_transfer?: t_source_type_ach_credit_transfer
  ach_debit?: t_source_type_ach_debit
  acss_debit?: t_source_type_acss_debit
  alipay?: t_source_type_alipay
  amount?: number | null
  au_becs_debit?: t_source_type_au_becs_debit
  bancontact?: t_source_type_bancontact
  card?: t_source_type_card
  card_present?: t_source_type_card_present
  client_secret: string
  code_verification?: t_source_code_verification_flow
  created: number
  currency?: string | null
  customer?: string
  eps?: t_source_type_eps
  flow: string
  giropay?: t_source_type_giropay
  id: string
  ideal?: t_source_type_ideal
  klarna?: t_source_type_klarna
  livemode: boolean
  metadata?: {
    [key: string]: string
  } | null
  multibanco?: t_source_type_multibanco
  object: "source"
  owner?: t_source_owner | null
  p24?: t_source_type_p24
  receiver?: t_source_receiver_flow
  redirect?: t_source_redirect_flow
  sepa_debit?: t_source_type_sepa_debit
  sofort?: t_source_type_sofort
  source_order?: t_source_order
  statement_descriptor?: string | null
  status: string
  three_d_secure?: t_source_type_three_d_secure
  type:
    | "ach_credit_transfer"
    | "ach_debit"
    | "acss_debit"
    | "alipay"
    | "au_becs_debit"
    | "bancontact"
    | "card"
    | "card_present"
    | "eps"
    | "giropay"
    | "ideal"
    | "klarna"
    | "multibanco"
    | "p24"
    | "sepa_debit"
    | "sofort"
    | "three_d_secure"
    | "wechat"
  usage?: string | null
  wechat?: t_source_type_wechat
}

export type t_source_code_verification_flow = {
  attempts_remaining: number
  status: string
}

export type t_source_mandate_notification = {
  acss_debit?: t_source_mandate_notification_acss_debit_data
  amount?: number | null
  bacs_debit?: t_source_mandate_notification_bacs_debit_data
  created: number
  id: string
  livemode: boolean
  object: "source_mandate_notification"
  reason: string
  sepa_debit?: t_source_mandate_notification_sepa_debit_data
  source: t_source
  status: string
  type: string
}

export type t_source_mandate_notification_acss_debit_data = {
  statement_descriptor?: string
}

export type t_source_mandate_notification_bacs_debit_data = {
  last4?: string
}

export type t_source_mandate_notification_sepa_debit_data = {
  creditor_identifier?: string
  last4?: string
  mandate_reference?: string
}

export type t_source_order = {
  amount: number
  currency: string
  email?: string
  items?: t_source_order_item[] | null
  shipping?: t_shipping
}

export type t_source_order_item = {
  amount?: number | null
  currency?: string | null
  description?: string | null
  parent?: string | null
  quantity?: number
  type?: string | null
}

export type t_source_owner = {
  address?: t_address | null
  email?: string | null
  name?: string | null
  phone?: string | null
  verified_address?: t_address | null
  verified_email?: string | null
  verified_name?: string | null
  verified_phone?: string | null
}

export type t_source_receiver_flow = {
  address?: string | null
  amount_charged: number
  amount_received: number
  amount_returned: number
  refund_attributes_method: string
  refund_attributes_status: string
}

export type t_source_redirect_flow = {
  failure_reason?: string | null
  return_url: string
  status: string
  url: string
}

export type t_source_transaction = {
  ach_credit_transfer?: t_source_transaction_ach_credit_transfer_data
  amount: number
  chf_credit_transfer?: t_source_transaction_chf_credit_transfer_data
  created: number
  currency: string
  gbp_credit_transfer?: t_source_transaction_gbp_credit_transfer_data
  id: string
  livemode: boolean
  object: "source_transaction"
  paper_check?: t_source_transaction_paper_check_data
  sepa_credit_transfer?: t_source_transaction_sepa_credit_transfer_data
  source: string
  status: string
  type:
    | "ach_credit_transfer"
    | "ach_debit"
    | "alipay"
    | "bancontact"
    | "card"
    | "card_present"
    | "eps"
    | "giropay"
    | "ideal"
    | "klarna"
    | "multibanco"
    | "p24"
    | "sepa_debit"
    | "sofort"
    | "three_d_secure"
    | "wechat"
}

export type t_source_transaction_ach_credit_transfer_data = {
  customer_data?: string
  fingerprint?: string
  last4?: string
  routing_number?: string
}

export type t_source_transaction_chf_credit_transfer_data = {
  reference?: string
  sender_address_country?: string
  sender_address_line1?: string
  sender_iban?: string
  sender_name?: string
}

export type t_source_transaction_gbp_credit_transfer_data = {
  fingerprint?: string
  funding_method?: string
  last4?: string
  reference?: string
  sender_account_number?: string
  sender_name?: string
  sender_sort_code?: string
}

export type t_source_transaction_paper_check_data = {
  available_at?: string
  invoices?: string
}

export type t_source_transaction_sepa_credit_transfer_data = {
  reference?: string
  sender_iban?: string
  sender_name?: string
}

export type t_source_type_ach_credit_transfer = {
  account_number?: string | null
  bank_name?: string | null
  fingerprint?: string | null
  refund_account_holder_name?: string | null
  refund_account_holder_type?: string | null
  refund_routing_number?: string | null
  routing_number?: string | null
  swift_code?: string | null
}

export type t_source_type_ach_debit = {
  bank_name?: string | null
  country?: string | null
  fingerprint?: string | null
  last4?: string | null
  routing_number?: string | null
  type?: string | null
}

export type t_source_type_acss_debit = {
  bank_address_city?: string | null
  bank_address_line_1?: string | null
  bank_address_line_2?: string | null
  bank_address_postal_code?: string | null
  bank_name?: string | null
  category?: string | null
  country?: string | null
  fingerprint?: string | null
  last4?: string | null
  routing_number?: string | null
}

export type t_source_type_alipay = {
  data_string?: string | null
  native_url?: string | null
  statement_descriptor?: string | null
}

export type t_source_type_au_becs_debit = {
  bsb_number?: string | null
  fingerprint?: string | null
  last4?: string | null
}

export type t_source_type_bancontact = {
  bank_code?: string | null
  bank_name?: string | null
  bic?: string | null
  iban_last4?: string | null
  preferred_language?: string | null
  statement_descriptor?: string | null
}

export type t_source_type_card = {
  address_line1_check?: string | null
  address_zip_check?: string | null
  brand?: string | null
  country?: string | null
  cvc_check?: string | null
  dynamic_last4?: string | null
  exp_month?: number | null
  exp_year?: number | null
  fingerprint?: string
  funding?: string | null
  last4?: string | null
  name?: string | null
  three_d_secure?: string
  tokenization_method?: string | null
}

export type t_source_type_card_present = {
  application_cryptogram?: string
  application_preferred_name?: string
  authorization_code?: string | null
  authorization_response_code?: string
  brand?: string | null
  country?: string | null
  cvm_type?: string
  data_type?: string | null
  dedicated_file_name?: string
  emv_auth_data?: string
  evidence_customer_signature?: string | null
  evidence_transaction_certificate?: string | null
  exp_month?: number | null
  exp_year?: number | null
  fingerprint?: string
  funding?: string | null
  last4?: string | null
  pos_device_id?: string | null
  pos_entry_mode?: string
  read_method?: string | null
  reader?: string | null
  terminal_verification_results?: string
  transaction_status_information?: string
}

export type t_source_type_eps = {
  reference?: string | null
  statement_descriptor?: string | null
}

export type t_source_type_giropay = {
  bank_code?: string | null
  bank_name?: string | null
  bic?: string | null
  statement_descriptor?: string | null
}

export type t_source_type_ideal = {
  bank?: string | null
  bic?: string | null
  iban_last4?: string | null
  statement_descriptor?: string | null
}

export type t_source_type_klarna = {
  background_image_url?: string
  client_token?: string | null
  first_name?: string
  last_name?: string
  locale?: string
  logo_url?: string
  page_title?: string
  pay_later_asset_urls_descriptive?: string
  pay_later_asset_urls_standard?: string
  pay_later_name?: string
  pay_later_redirect_url?: string
  pay_now_asset_urls_descriptive?: string
  pay_now_asset_urls_standard?: string
  pay_now_name?: string
  pay_now_redirect_url?: string
  pay_over_time_asset_urls_descriptive?: string
  pay_over_time_asset_urls_standard?: string
  pay_over_time_name?: string
  pay_over_time_redirect_url?: string
  payment_method_categories?: string
  purchase_country?: string
  purchase_type?: string
  redirect_url?: string
  shipping_delay?: number
  shipping_first_name?: string
  shipping_last_name?: string
}

export type t_source_type_multibanco = {
  entity?: string | null
  reference?: string | null
  refund_account_holder_address_city?: string | null
  refund_account_holder_address_country?: string | null
  refund_account_holder_address_line1?: string | null
  refund_account_holder_address_line2?: string | null
  refund_account_holder_address_postal_code?: string | null
  refund_account_holder_address_state?: string | null
  refund_account_holder_name?: string | null
  refund_iban?: string | null
}

export type t_source_type_p24 = {
  reference?: string | null
}

export type t_source_type_sepa_debit = {
  bank_code?: string | null
  branch_code?: string | null
  country?: string | null
  fingerprint?: string | null
  last4?: string | null
  mandate_reference?: string | null
  mandate_url?: string | null
}

export type t_source_type_sofort = {
  bank_code?: string | null
  bank_name?: string | null
  bic?: string | null
  country?: string | null
  iban_last4?: string | null
  preferred_language?: string | null
  statement_descriptor?: string | null
}

export type t_source_type_three_d_secure = {
  address_line1_check?: string | null
  address_zip_check?: string | null
  authenticated?: boolean | null
  brand?: string | null
  card?: string | null
  country?: string | null
  customer?: string | null
  cvc_check?: string | null
  dynamic_last4?: string | null
  exp_month?: number | null
  exp_year?: number | null
  fingerprint?: string
  funding?: string | null
  last4?: string | null
  name?: string | null
  three_d_secure?: string
  tokenization_method?: string | null
}

export type t_source_type_wechat = {
  prepay_id?: string
  qr_code_url?: string | null
  statement_descriptor?: string
}

export type t_subscription = {
  application?: string | t_application | t_deleted_application | null
  application_fee_percent?: number | null
  automatic_tax: t_subscription_automatic_tax
  billing_cycle_anchor: number
  billing_thresholds?: t_subscription_billing_thresholds | null
  cancel_at?: number | null
  cancel_at_period_end: boolean
  canceled_at?: number | null
  cancellation_details?: t_cancellation_details | null
  collection_method: "charge_automatically" | "send_invoice"
  created: number
  currency: string
  current_period_end: number
  current_period_start: number
  customer: string | t_customer | t_deleted_customer
  days_until_due?: number | null
  default_payment_method?: string | t_payment_method | null
  default_source?: string | t_bank_account | t_card | t_source | null
  default_tax_rates?: t_tax_rate[] | null
  description?: string | null
  discount?: t_discount | null
  ended_at?: number | null
  id: string
  items: {
    data: t_subscription_item[]
    has_more: boolean
    object: "list"
    url: string
  }
  latest_invoice?: string | t_invoice | null
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  next_pending_invoice_item_invoice?: number | null
  object: "subscription"
  on_behalf_of?: string | t_account | null
  pause_collection?: t_subscriptions_resource_pause_collection | null
  payment_settings?: t_subscriptions_resource_payment_settings | null
  pending_invoice_item_interval?: t_subscription_pending_invoice_item_interval | null
  pending_setup_intent?: string | t_setup_intent | null
  pending_update?: t_subscriptions_resource_pending_update | null
  schedule?: string | t_subscription_schedule | null
  start_date: number
  status:
    | "active"
    | "canceled"
    | "incomplete"
    | "incomplete_expired"
    | "past_due"
    | "paused"
    | "trialing"
    | "unpaid"
  test_clock?: string | t_test_helpers_test_clock | null
  transfer_data?: t_subscription_transfer_data | null
  trial_end?: number | null
  trial_settings?: t_subscriptions_trials_resource_trial_settings | null
  trial_start?: number | null
}

export type t_subscription_automatic_tax = {
  enabled: boolean
}

export type t_subscription_billing_thresholds = {
  amount_gte?: number | null
  reset_billing_cycle_anchor?: boolean | null
}

export type t_subscription_details_data = {
  metadata?: {
    [key: string]: string
  } | null
}

export type t_subscription_item = {
  billing_thresholds?: t_subscription_item_billing_thresholds | null
  created: number
  id: string
  metadata: {
    [key: string]: string
  }
  object: "subscription_item"
  price: t_price
  quantity?: number
  subscription: string
  tax_rates?: t_tax_rate[] | null
}

export type t_subscription_item_billing_thresholds = {
  usage_gte?: number | null
}

export type t_subscription_payment_method_options_card = {
  mandate_options?: t_invoice_mandate_options_card
  network?:
    | "amex"
    | "cartes_bancaires"
    | "diners"
    | "discover"
    | "eftpos_au"
    | "interac"
    | "jcb"
    | "mastercard"
    | "unionpay"
    | "unknown"
    | "visa"
    | null
  request_three_d_secure?: "any" | "automatic" | null
}

export type t_subscription_pending_invoice_item_interval = {
  interval: "day" | "month" | "week" | "year"
  interval_count: number
}

export type t_subscription_schedule = {
  application?: string | t_application | t_deleted_application | null
  canceled_at?: number | null
  completed_at?: number | null
  created: number
  current_phase?: t_subscription_schedule_current_phase | null
  customer: string | t_customer | t_deleted_customer
  default_settings: t_subscription_schedules_resource_default_settings
  end_behavior: "cancel" | "none" | "release" | "renew"
  id: string
  livemode: boolean
  metadata?: {
    [key: string]: string
  } | null
  object: "subscription_schedule"
  phases: t_subscription_schedule_phase_configuration[]
  released_at?: number | null
  released_subscription?: string | null
  status: "active" | "canceled" | "completed" | "not_started" | "released"
  subscription?: string | t_subscription | null
  test_clock?: string | t_test_helpers_test_clock | null
}

export type t_subscription_schedule_add_invoice_item = {
  price: string | t_price | t_deleted_price
  quantity?: number | null
  tax_rates?: t_tax_rate[] | null
}

export type t_subscription_schedule_configuration_item = {
  billing_thresholds?: t_subscription_item_billing_thresholds | null
  metadata?: {
    [key: string]: string
  } | null
  price: string | t_price | t_deleted_price
  quantity?: number
  tax_rates?: t_tax_rate[] | null
}

export type t_subscription_schedule_current_phase = {
  end_date: number
  start_date: number
}

export type t_subscription_schedule_phase_configuration = {
  add_invoice_items: t_subscription_schedule_add_invoice_item[]
  application_fee_percent?: number | null
  automatic_tax?: t_schedules_phase_automatic_tax
  billing_cycle_anchor?: "automatic" | "phase_start" | null
  billing_thresholds?: t_subscription_billing_thresholds | null
  collection_method?: "charge_automatically" | "send_invoice" | null
  coupon?: string | t_coupon | t_deleted_coupon | null
  currency: string
  default_payment_method?: string | t_payment_method | null
  default_tax_rates?: t_tax_rate[] | null
  description?: string | null
  end_date: number
  invoice_settings?: t_invoice_setting_subscription_schedule_phase_setting | null
  items: t_subscription_schedule_configuration_item[]
  metadata?: {
    [key: string]: string
  } | null
  on_behalf_of?: string | t_account | null
  proration_behavior: "always_invoice" | "create_prorations" | "none"
  start_date: number
  transfer_data?: t_subscription_transfer_data | null
  trial_end?: number | null
}

export type t_subscription_schedules_resource_default_settings = {
  application_fee_percent?: number | null
  automatic_tax?: t_subscription_schedules_resource_default_settings_automatic_tax
  billing_cycle_anchor: "automatic" | "phase_start"
  billing_thresholds?: t_subscription_billing_thresholds | null
  collection_method?: "charge_automatically" | "send_invoice" | null
  default_payment_method?: string | t_payment_method | null
  description?: string | null
  invoice_settings?: t_invoice_setting_subscription_schedule_setting | null
  on_behalf_of?: string | t_account | null
  transfer_data?: t_subscription_transfer_data | null
}

export type t_subscription_schedules_resource_default_settings_automatic_tax = {
  enabled: boolean
}

export type t_subscription_transfer_data = {
  amount_percent?: number | null
  destination: string | t_account
}

export type t_subscriptions_resource_pause_collection = {
  behavior: "keep_as_draft" | "mark_uncollectible" | "void"
  resumes_at?: number | null
}

export type t_subscriptions_resource_payment_method_options = {
  acss_debit?: t_invoice_payment_method_options_acss_debit | null
  bancontact?: t_invoice_payment_method_options_bancontact | null
  card?: t_subscription_payment_method_options_card | null
  customer_balance?: t_invoice_payment_method_options_customer_balance | null
  konbini?: t_invoice_payment_method_options_konbini | null
  us_bank_account?: t_invoice_payment_method_options_us_bank_account | null
}

export type t_subscriptions_resource_payment_settings = {
  payment_method_options?: t_subscriptions_resource_payment_method_options | null
  payment_method_types?:
    | (
        | "ach_credit_transfer"
        | "ach_debit"
        | "acss_debit"
        | "au_becs_debit"
        | "bacs_debit"
        | "bancontact"
        | "boleto"
        | "card"
        | "cashapp"
        | "customer_balance"
        | "fpx"
        | "giropay"
        | "grabpay"
        | "ideal"
        | "konbini"
        | "link"
        | "paynow"
        | "paypal"
        | "promptpay"
        | "sepa_debit"
        | "sofort"
        | "us_bank_account"
        | "wechat_pay"
      )[]
    | null
  save_default_payment_method?: "off" | "on_subscription" | null
}

export type t_subscriptions_resource_pending_update = {
  billing_cycle_anchor?: number | null
  expires_at: number
  subscription_items?: t_subscription_item[] | null
  trial_end?: number | null
  trial_from_plan?: boolean | null
}

export type t_subscriptions_trials_resource_end_behavior = {
  missing_payment_method: "cancel" | "create_invoice" | "pause"
}

export type t_subscriptions_trials_resource_trial_settings = {
  end_behavior: t_subscriptions_trials_resource_end_behavior
}

export type t_tax_calculation = {
  amount_total: number
  currency: string
  customer?: string | null
  customer_details: t_tax_product_resource_customer_details
  expires_at?: number | null
  id?: string | null
  line_items?: {
    data: t_tax_calculation_line_item[]
    has_more: boolean
    object: "list"
    url: string
  } | null
  livemode: boolean
  object: "tax.calculation"
  shipping_cost?: t_tax_product_resource_tax_calculation_shipping_cost | null
  tax_amount_exclusive: number
  tax_amount_inclusive: number
  tax_breakdown: t_tax_product_resource_tax_breakdown[]
  tax_date: number
}

export type t_tax_calculation_line_item = {
  amount: number
  amount_tax: number
  id: string
  livemode: boolean
  object: "tax.calculation_line_item"
  product?: string | null
  quantity: number
  reference?: string | null
  tax_behavior: "exclusive" | "inclusive"
  tax_breakdown?: t_tax_product_resource_line_item_tax_breakdown[] | null
  tax_code: string
}

export type t_tax_settings = {
  defaults: t_tax_product_resource_tax_settings_defaults
  head_office?: t_tax_product_resource_tax_settings_head_office | null
  livemode: boolean
  object: "tax.settings"
  status: "active" | "pending"
  status_details: t_tax_product_resource_tax_settings_status_details
}

export type t_tax_transaction = {
  created: number
  currency: string
  customer?: string | null
  customer_details: t_tax_product_resource_customer_details
  id: string
  line_items?: {
    data: t_tax_transaction_line_item[]
    has_more: boolean
    object: "list"
    url: string
  } | null
  livemode: boolean
  metadata?: {
    [key: string]: string
  } | null
  object: "tax.transaction"
  reference: string
  reversal?: t_tax_product_resource_tax_transaction_resource_reversal | null
  shipping_cost?: t_tax_product_resource_tax_transaction_shipping_cost | null
  tax_date: number
  type: "reversal" | "transaction"
}

export type t_tax_transaction_line_item = {
  amount: number
  amount_tax: number
  id: string
  livemode: boolean
  metadata?: {
    [key: string]: string
  } | null
  object: "tax.transaction_line_item"
  product?: string | null
  quantity: number
  reference: string
  reversal?: t_tax_product_resource_tax_transaction_line_item_resource_reversal | null
  tax_behavior: "exclusive" | "inclusive"
  tax_code: string
  type: "reversal" | "transaction"
}

export type t_tax_code = {
  description: string
  id: string
  name: string
  object: "tax_code"
}

export type t_tax_deducted_at_source = {
  id: string
  object: "tax_deducted_at_source"
  period_end: number
  period_start: number
  tax_deduction_account_number: string
}

export type t_tax_id = {
  country?: string | null
  created: number
  customer?: string | t_customer | null
  id: string
  livemode: boolean
  object: "tax_id"
  type:
    | "ad_nrt"
    | "ae_trn"
    | "ar_cuit"
    | "au_abn"
    | "au_arn"
    | "bg_uic"
    | "bo_tin"
    | "br_cnpj"
    | "br_cpf"
    | "ca_bn"
    | "ca_gst_hst"
    | "ca_pst_bc"
    | "ca_pst_mb"
    | "ca_pst_sk"
    | "ca_qst"
    | "ch_vat"
    | "cl_tin"
    | "cn_tin"
    | "co_nit"
    | "cr_tin"
    | "do_rcn"
    | "ec_ruc"
    | "eg_tin"
    | "es_cif"
    | "eu_oss_vat"
    | "eu_vat"
    | "gb_vat"
    | "ge_vat"
    | "hk_br"
    | "hu_tin"
    | "id_npwp"
    | "il_vat"
    | "in_gst"
    | "is_vat"
    | "jp_cn"
    | "jp_rn"
    | "jp_trn"
    | "ke_pin"
    | "kr_brn"
    | "li_uid"
    | "mx_rfc"
    | "my_frp"
    | "my_itn"
    | "my_sst"
    | "no_vat"
    | "nz_gst"
    | "pe_ruc"
    | "ph_tin"
    | "ro_tin"
    | "rs_pib"
    | "ru_inn"
    | "ru_kpp"
    | "sa_vat"
    | "sg_gst"
    | "sg_uen"
    | "si_tin"
    | "sv_nit"
    | "th_vat"
    | "tr_tin"
    | "tw_vat"
    | "ua_vat"
    | "unknown"
    | "us_ein"
    | "uy_ruc"
    | "ve_rif"
    | "vn_tin"
    | "za_vat"
  value: string
  verification?: t_tax_id_verification | null
}

export type t_tax_id_verification = {
  status: "pending" | "unavailable" | "unverified" | "verified"
  verified_address?: string | null
  verified_name?: string | null
}

export type t_tax_product_resource_customer_details = {
  address?: t_tax_product_resource_postal_address | null
  address_source?: "billing" | "shipping" | null
  ip_address?: string | null
  tax_ids: t_tax_product_resource_customer_details_resource_tax_id[]
  taxability_override: "customer_exempt" | "none" | "reverse_charge"
}

export type t_tax_product_resource_customer_details_resource_tax_id = {
  type:
    | "ad_nrt"
    | "ae_trn"
    | "ar_cuit"
    | "au_abn"
    | "au_arn"
    | "bg_uic"
    | "bo_tin"
    | "br_cnpj"
    | "br_cpf"
    | "ca_bn"
    | "ca_gst_hst"
    | "ca_pst_bc"
    | "ca_pst_mb"
    | "ca_pst_sk"
    | "ca_qst"
    | "ch_vat"
    | "cl_tin"
    | "cn_tin"
    | "co_nit"
    | "cr_tin"
    | "do_rcn"
    | "ec_ruc"
    | "eg_tin"
    | "es_cif"
    | "eu_oss_vat"
    | "eu_vat"
    | "gb_vat"
    | "ge_vat"
    | "hk_br"
    | "hu_tin"
    | "id_npwp"
    | "il_vat"
    | "in_gst"
    | "is_vat"
    | "jp_cn"
    | "jp_rn"
    | "jp_trn"
    | "ke_pin"
    | "kr_brn"
    | "li_uid"
    | "mx_rfc"
    | "my_frp"
    | "my_itn"
    | "my_sst"
    | "no_vat"
    | "nz_gst"
    | "pe_ruc"
    | "ph_tin"
    | "ro_tin"
    | "rs_pib"
    | "ru_inn"
    | "ru_kpp"
    | "sa_vat"
    | "sg_gst"
    | "sg_uen"
    | "si_tin"
    | "sv_nit"
    | "th_vat"
    | "tr_tin"
    | "tw_vat"
    | "ua_vat"
    | "unknown"
    | "us_ein"
    | "uy_ruc"
    | "ve_rif"
    | "vn_tin"
    | "za_vat"
  value: string
}

export type t_tax_product_resource_jurisdiction = {
  country: string
  display_name: string
  level: "city" | "country" | "county" | "district" | "state"
  state?: string | null
}

export type t_tax_product_resource_line_item_tax_breakdown = {
  amount: number
  jurisdiction: t_tax_product_resource_jurisdiction
  sourcing: "destination" | "origin"
  tax_rate_details?: t_tax_product_resource_line_item_tax_rate_details | null
  taxability_reason:
    | "customer_exempt"
    | "not_collecting"
    | "not_subject_to_tax"
    | "not_supported"
    | "portion_product_exempt"
    | "portion_reduced_rated"
    | "portion_standard_rated"
    | "product_exempt"
    | "product_exempt_holiday"
    | "proportionally_rated"
    | "reduced_rated"
    | "reverse_charge"
    | "standard_rated"
    | "taxable_basis_reduced"
    | "zero_rated"
  taxable_amount: number
}

export type t_tax_product_resource_line_item_tax_rate_details = {
  display_name: string
  percentage_decimal: string
  tax_type:
    | "amusement_tax"
    | "communications_tax"
    | "gst"
    | "hst"
    | "igst"
    | "jct"
    | "lease_tax"
    | "pst"
    | "qst"
    | "rst"
    | "sales_tax"
    | "vat"
}

export type t_tax_product_resource_postal_address = {
  city?: string | null
  country: string
  line1?: string | null
  line2?: string | null
  postal_code?: string | null
  state?: string | null
}

export type t_tax_product_resource_tax_breakdown = {
  amount: number
  inclusive: boolean
  tax_rate_details: t_tax_product_resource_tax_rate_details
  taxability_reason:
    | "customer_exempt"
    | "not_collecting"
    | "not_subject_to_tax"
    | "not_supported"
    | "portion_product_exempt"
    | "portion_reduced_rated"
    | "portion_standard_rated"
    | "product_exempt"
    | "product_exempt_holiday"
    | "proportionally_rated"
    | "reduced_rated"
    | "reverse_charge"
    | "standard_rated"
    | "taxable_basis_reduced"
    | "zero_rated"
  taxable_amount: number
}

export type t_tax_product_resource_tax_calculation_shipping_cost = {
  amount: number
  amount_tax: number
  shipping_rate?: string
  tax_behavior: "exclusive" | "inclusive"
  tax_breakdown?: t_tax_product_resource_line_item_tax_breakdown[]
  tax_code: string
}

export type t_tax_product_resource_tax_rate_details = {
  country?: string | null
  percentage_decimal: string
  state?: string | null
  tax_type?:
    | "amusement_tax"
    | "communications_tax"
    | "gst"
    | "hst"
    | "igst"
    | "jct"
    | "lease_tax"
    | "pst"
    | "qst"
    | "rst"
    | "sales_tax"
    | "vat"
    | null
}

export type t_tax_product_resource_tax_settings_defaults = {
  tax_behavior?: "exclusive" | "inclusive" | "inferred_by_currency" | null
  tax_code?: string | null
}

export type t_tax_product_resource_tax_settings_head_office = {
  address: t_address
}

export type t_tax_product_resource_tax_settings_status_details = {
  active?: t_tax_product_resource_tax_settings_status_details_resource_active
  pending?: t_tax_product_resource_tax_settings_status_details_resource_pending
}

export type t_tax_product_resource_tax_settings_status_details_resource_active =
  EmptyObject

export type t_tax_product_resource_tax_settings_status_details_resource_pending =
  {
    missing_fields?: string[] | null
  }

export type t_tax_product_resource_tax_transaction_line_item_resource_reversal =
  {
    original_line_item: string
  }

export type t_tax_product_resource_tax_transaction_resource_reversal = {
  original_transaction?: string | null
}

export type t_tax_product_resource_tax_transaction_shipping_cost = {
  amount: number
  amount_tax: number
  shipping_rate?: string
  tax_behavior: "exclusive" | "inclusive"
  tax_code: string
}

export type t_tax_rate = {
  active: boolean
  country?: string | null
  created: number
  description?: string | null
  display_name: string
  effective_percentage?: number | null
  id: string
  inclusive: boolean
  jurisdiction?: string | null
  livemode: boolean
  metadata?: {
    [key: string]: string
  } | null
  object: "tax_rate"
  percentage: number
  state?: string | null
  tax_type?:
    | "amusement_tax"
    | "communications_tax"
    | "gst"
    | "hst"
    | "igst"
    | "jct"
    | "lease_tax"
    | "pst"
    | "qst"
    | "rst"
    | "sales_tax"
    | "service_tax"
    | "vat"
    | null
}

export type t_terminal_configuration = {
  bbpos_wisepos_e?: t_terminal_configuration_configuration_resource_device_type_specific_config
  id: string
  is_account_default?: boolean | null
  livemode: boolean
  object: "terminal.configuration"
  tipping?: t_terminal_configuration_configuration_resource_tipping
  verifone_p400?: t_terminal_configuration_configuration_resource_device_type_specific_config
}

export type t_terminal_connection_token = {
  location?: string
  object: "terminal.connection_token"
  secret: string
}

export type t_terminal_location = {
  address: t_address
  configuration_overrides?: string
  display_name: string
  id: string
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  object: "terminal.location"
}

export type t_terminal_reader = {
  action?: t_terminal_reader_reader_resource_reader_action | null
  device_sw_version?: string | null
  device_type:
    | "bbpos_chipper2x"
    | "bbpos_wisepad3"
    | "bbpos_wisepos_e"
    | "simulated_wisepos_e"
    | "stripe_m2"
    | "verifone_P400"
  id: string
  ip_address?: string | null
  label: string
  livemode: boolean
  location?: string | t_terminal_location | null
  metadata: {
    [key: string]: string
  }
  object: "terminal.reader"
  serial_number: string
  status?: string | null
}

export type t_terminal_configuration_configuration_resource_currency_specific_config =
  {
    fixed_amounts?: number[] | null
    percentages?: number[] | null
    smart_tip_threshold?: number
  }

export type t_terminal_configuration_configuration_resource_device_type_specific_config =
  {
    splashscreen?: string | t_file
  }

export type t_terminal_configuration_configuration_resource_tipping = {
  aud?: t_terminal_configuration_configuration_resource_currency_specific_config
  cad?: t_terminal_configuration_configuration_resource_currency_specific_config
  chf?: t_terminal_configuration_configuration_resource_currency_specific_config
  czk?: t_terminal_configuration_configuration_resource_currency_specific_config
  dkk?: t_terminal_configuration_configuration_resource_currency_specific_config
  eur?: t_terminal_configuration_configuration_resource_currency_specific_config
  gbp?: t_terminal_configuration_configuration_resource_currency_specific_config
  hkd?: t_terminal_configuration_configuration_resource_currency_specific_config
  myr?: t_terminal_configuration_configuration_resource_currency_specific_config
  nok?: t_terminal_configuration_configuration_resource_currency_specific_config
  nzd?: t_terminal_configuration_configuration_resource_currency_specific_config
  sek?: t_terminal_configuration_configuration_resource_currency_specific_config
  sgd?: t_terminal_configuration_configuration_resource_currency_specific_config
  usd?: t_terminal_configuration_configuration_resource_currency_specific_config
}

export type t_terminal_reader_reader_resource_cart = {
  currency: string
  line_items: t_terminal_reader_reader_resource_line_item[]
  tax?: number | null
  total: number
}

export type t_terminal_reader_reader_resource_line_item = {
  amount: number
  description: string
  quantity: number
}

export type t_terminal_reader_reader_resource_process_config = {
  skip_tipping?: boolean
  tipping?: t_terminal_reader_reader_resource_tipping_config
}

export type t_terminal_reader_reader_resource_process_payment_intent_action = {
  payment_intent: string | t_payment_intent
  process_config?: t_terminal_reader_reader_resource_process_config
}

export type t_terminal_reader_reader_resource_process_setup_config = EmptyObject

export type t_terminal_reader_reader_resource_process_setup_intent_action = {
  generated_card?: string
  process_config?: t_terminal_reader_reader_resource_process_setup_config
  setup_intent: string | t_setup_intent
}

export type t_terminal_reader_reader_resource_reader_action = {
  failure_code?: string | null
  failure_message?: string | null
  process_payment_intent?: t_terminal_reader_reader_resource_process_payment_intent_action
  process_setup_intent?: t_terminal_reader_reader_resource_process_setup_intent_action
  refund_payment?: t_terminal_reader_reader_resource_refund_payment_action
  set_reader_display?: t_terminal_reader_reader_resource_set_reader_display_action
  status: "failed" | "in_progress" | "succeeded"
  type:
    | "process_payment_intent"
    | "process_setup_intent"
    | "refund_payment"
    | "set_reader_display"
}

export type t_terminal_reader_reader_resource_refund_payment_action = {
  amount?: number
  charge?: string | t_charge
  metadata?: {
    [key: string]: string
  }
  payment_intent?: string | t_payment_intent
  reason?: "duplicate" | "fraudulent" | "requested_by_customer"
  refund?: string | t_refund
  refund_application_fee?: boolean
  reverse_transfer?: boolean
}

export type t_terminal_reader_reader_resource_set_reader_display_action = {
  cart?: t_terminal_reader_reader_resource_cart | null
  type: "cart"
}

export type t_terminal_reader_reader_resource_tipping_config = {
  amount_eligible?: number
}

export type t_test_helpers_test_clock = {
  created: number
  deletes_after: number
  frozen_time: number
  id: string
  livemode: boolean
  name?: string | null
  object: "test_helpers.test_clock"
  status: "advancing" | "internal_failure" | "ready"
}

export type t_three_d_secure_details = {
  authentication_flow?: "challenge" | "frictionless" | null
  result?:
    | "attempt_acknowledged"
    | "authenticated"
    | "exempted"
    | "failed"
    | "not_supported"
    | "processing_error"
    | null
  result_reason?:
    | "abandoned"
    | "bypassed"
    | "canceled"
    | "card_not_enrolled"
    | "network_not_supported"
    | "protocol_error"
    | "rejected"
    | null
  version?: "1.0.2" | "2.1.0" | "2.2.0" | null
}

export type t_three_d_secure_details_charge = {
  authentication_flow?: "challenge" | "frictionless" | null
  result?:
    | "attempt_acknowledged"
    | "authenticated"
    | "exempted"
    | "failed"
    | "not_supported"
    | "processing_error"
    | null
  result_reason?:
    | "abandoned"
    | "bypassed"
    | "canceled"
    | "card_not_enrolled"
    | "network_not_supported"
    | "protocol_error"
    | "rejected"
    | null
  version?: "1.0.2" | "2.1.0" | "2.2.0" | null
}

export type t_three_d_secure_usage = {
  supported: boolean
}

export type t_token = {
  bank_account?: t_bank_account
  card?: t_card
  client_ip?: string | null
  created: number
  id: string
  livemode: boolean
  object: "token"
  type: string
  used: boolean
}

export type t_topup = {
  amount: number
  balance_transaction?: string | t_balance_transaction | null
  created: number
  currency: string
  description?: string | null
  expected_availability_date?: number | null
  failure_code?: string | null
  failure_message?: string | null
  id: string
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  object: "topup"
  source?: t_source | null
  statement_descriptor?: string | null
  status: "canceled" | "failed" | "pending" | "reversed" | "succeeded"
  transfer_group?: string | null
}

export type t_transfer = {
  amount: number
  amount_reversed: number
  balance_transaction?: string | t_balance_transaction | null
  created: number
  currency: string
  description?: string | null
  destination?: string | t_account | null
  destination_payment?: string | t_charge
  id: string
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  object: "transfer"
  reversals: {
    data: t_transfer_reversal[]
    has_more: boolean
    object: "list"
    url: string
  }
  reversed: boolean
  source_transaction?: string | t_charge | null
  source_type?: string
  transfer_group?: string | null
}

export type t_transfer_data = {
  amount?: number
  destination: string | t_account
}

export type t_transfer_reversal = {
  amount: number
  balance_transaction?: string | t_balance_transaction | null
  created: number
  currency: string
  destination_payment_refund?: string | t_refund | null
  id: string
  metadata?: {
    [key: string]: string
  } | null
  object: "transfer_reversal"
  source_refund?: string | t_refund | null
  transfer: string | t_transfer
}

export type t_transfer_schedule = {
  delay_days: number
  interval: string
  monthly_anchor?: number
  weekly_anchor?: string
}

export type t_transform_quantity = {
  divide_by: number
  round: "down" | "up"
}

export type t_transform_usage = {
  divide_by: number
  round: "down" | "up"
}

export type t_treasury_credit_reversal = {
  amount: number
  created: number
  currency: string
  financial_account: string
  hosted_regulatory_receipt_url?: string | null
  id: string
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  network: "ach" | "stripe"
  object: "treasury.credit_reversal"
  received_credit: string
  status: "canceled" | "posted" | "processing"
  status_transitions: t_treasury_received_credits_resource_status_transitions
  transaction?: string | t_treasury_transaction | null
}

export type t_treasury_debit_reversal = {
  amount: number
  created: number
  currency: string
  financial_account?: string | null
  hosted_regulatory_receipt_url?: string | null
  id: string
  linked_flows?: t_treasury_received_debits_resource_debit_reversal_linked_flows | null
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  network: "ach" | "card"
  object: "treasury.debit_reversal"
  received_debit: string
  status: "failed" | "processing" | "succeeded"
  status_transitions: t_treasury_received_debits_resource_status_transitions
  transaction?: string | t_treasury_transaction | null
}

export type t_treasury_financial_account = {
  active_features?: (
    | "card_issuing"
    | "deposit_insurance"
    | "financial_addresses.aba"
    | "inbound_transfers.ach"
    | "intra_stripe_flows"
    | "outbound_payments.ach"
    | "outbound_payments.us_domestic_wire"
    | "outbound_transfers.ach"
    | "outbound_transfers.us_domestic_wire"
    | "remote_deposit_capture"
  )[]
  balance: t_treasury_financial_accounts_resource_balance
  country: string
  created: number
  features?: t_treasury_financial_account_features
  financial_addresses: t_treasury_financial_accounts_resource_financial_address[]
  id: string
  livemode: boolean
  metadata?: {
    [key: string]: string
  } | null
  object: "treasury.financial_account"
  pending_features?: (
    | "card_issuing"
    | "deposit_insurance"
    | "financial_addresses.aba"
    | "inbound_transfers.ach"
    | "intra_stripe_flows"
    | "outbound_payments.ach"
    | "outbound_payments.us_domestic_wire"
    | "outbound_transfers.ach"
    | "outbound_transfers.us_domestic_wire"
    | "remote_deposit_capture"
  )[]
  platform_restrictions?: t_treasury_financial_accounts_resource_platform_restrictions | null
  restricted_features?: (
    | "card_issuing"
    | "deposit_insurance"
    | "financial_addresses.aba"
    | "inbound_transfers.ach"
    | "intra_stripe_flows"
    | "outbound_payments.ach"
    | "outbound_payments.us_domestic_wire"
    | "outbound_transfers.ach"
    | "outbound_transfers.us_domestic_wire"
    | "remote_deposit_capture"
  )[]
  status: "closed" | "open"
  status_details: t_treasury_financial_accounts_resource_status_details
  supported_currencies: string[]
}

export type t_treasury_financial_account_features = {
  card_issuing?: t_treasury_financial_accounts_resource_toggle_settings
  deposit_insurance?: t_treasury_financial_accounts_resource_toggle_settings
  financial_addresses?: t_treasury_financial_accounts_resource_financial_addresses_features
  inbound_transfers?: t_treasury_financial_accounts_resource_inbound_transfers
  intra_stripe_flows?: t_treasury_financial_accounts_resource_toggle_settings
  object: "treasury.financial_account_features"
  outbound_payments?: t_treasury_financial_accounts_resource_outbound_payments
  outbound_transfers?: t_treasury_financial_accounts_resource_outbound_transfers
}

export type t_treasury_inbound_transfer = {
  amount: number
  cancelable: boolean
  created: number
  currency: string
  description?: string | null
  failure_details?: t_treasury_inbound_transfers_resource_failure_details | null
  financial_account: string
  hosted_regulatory_receipt_url?: string | null
  id: string
  linked_flows: t_treasury_inbound_transfers_resource_inbound_transfer_resource_linked_flows
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  object: "treasury.inbound_transfer"
  origin_payment_method: string
  origin_payment_method_details?: t_inbound_transfers | null
  returned?: boolean | null
  statement_descriptor: string
  status: "canceled" | "failed" | "processing" | "succeeded"
  status_transitions: t_treasury_inbound_transfers_resource_inbound_transfer_resource_status_transitions
  transaction?: string | t_treasury_transaction | null
}

export type t_treasury_outbound_payment = {
  amount: number
  cancelable: boolean
  created: number
  currency: string
  customer?: string | null
  description?: string | null
  destination_payment_method?: string | null
  destination_payment_method_details?: t_outbound_payments_payment_method_details | null
  end_user_details?: t_treasury_outbound_payments_resource_outbound_payment_resource_end_user_details | null
  expected_arrival_date: number
  financial_account: string
  hosted_regulatory_receipt_url?: string | null
  id: string
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  object: "treasury.outbound_payment"
  returned_details?: t_treasury_outbound_payments_resource_returned_status | null
  statement_descriptor: string
  status: "canceled" | "failed" | "posted" | "processing" | "returned"
  status_transitions: t_treasury_outbound_payments_resource_outbound_payment_resource_status_transitions
  transaction: string | t_treasury_transaction
}

export type t_treasury_outbound_transfer = {
  amount: number
  cancelable: boolean
  created: number
  currency: string
  description?: string | null
  destination_payment_method?: string | null
  destination_payment_method_details: t_outbound_transfers_payment_method_details
  expected_arrival_date: number
  financial_account: string
  hosted_regulatory_receipt_url?: string | null
  id: string
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  object: "treasury.outbound_transfer"
  returned_details?: t_treasury_outbound_transfers_resource_returned_details | null
  statement_descriptor: string
  status: "canceled" | "failed" | "posted" | "processing" | "returned"
  status_transitions: t_treasury_outbound_transfers_resource_status_transitions
  transaction: string | t_treasury_transaction
}

export type t_treasury_received_credit = {
  amount: number
  created: number
  currency: string
  description: string
  failure_code?: "account_closed" | "account_frozen" | "other" | null
  financial_account?: string | null
  hosted_regulatory_receipt_url?: string | null
  id: string
  initiating_payment_method_details: t_treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details
  linked_flows: t_treasury_received_credits_resource_linked_flows
  livemode: boolean
  network: "ach" | "card" | "stripe" | "us_domestic_wire"
  object: "treasury.received_credit"
  reversal_details?: t_treasury_received_credits_resource_reversal_details | null
  status: "failed" | "succeeded"
  transaction?: string | t_treasury_transaction | null
}

export type t_treasury_received_debit = {
  amount: number
  created: number
  currency: string
  description: string
  failure_code?:
    | "account_closed"
    | "account_frozen"
    | "insufficient_funds"
    | "other"
    | null
  financial_account?: string | null
  hosted_regulatory_receipt_url?: string | null
  id: string
  initiating_payment_method_details?: t_treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details
  linked_flows: t_treasury_received_debits_resource_linked_flows
  livemode: boolean
  network: "ach" | "card" | "stripe"
  object: "treasury.received_debit"
  reversal_details?: t_treasury_received_debits_resource_reversal_details | null
  status: "failed" | "succeeded"
  transaction?: string | t_treasury_transaction | null
}

export type t_treasury_transaction = {
  amount: number
  balance_impact: t_treasury_transactions_resource_balance_impact
  created: number
  currency: string
  description: string
  entries?: {
    data: t_treasury_transaction_entry[]
    has_more: boolean
    object: "list"
    url: string
  } | null
  financial_account: string
  flow?: string | null
  flow_details?: t_treasury_transactions_resource_flow_details | null
  flow_type:
    | "credit_reversal"
    | "debit_reversal"
    | "inbound_transfer"
    | "issuing_authorization"
    | "other"
    | "outbound_payment"
    | "outbound_transfer"
    | "received_credit"
    | "received_debit"
  id: string
  livemode: boolean
  object: "treasury.transaction"
  status: "open" | "posted" | "void"
  status_transitions: t_treasury_transactions_resource_abstract_transaction_resource_status_transitions
}

export type t_treasury_transaction_entry = {
  balance_impact: t_treasury_transactions_resource_balance_impact
  created: number
  currency: string
  effective_at: number
  financial_account: string
  flow?: string | null
  flow_details?: t_treasury_transactions_resource_flow_details | null
  flow_type:
    | "credit_reversal"
    | "debit_reversal"
    | "inbound_transfer"
    | "issuing_authorization"
    | "other"
    | "outbound_payment"
    | "outbound_transfer"
    | "received_credit"
    | "received_debit"
  id: string
  livemode: boolean
  object: "treasury.transaction_entry"
  transaction: string | t_treasury_transaction
  type:
    | "credit_reversal"
    | "credit_reversal_posting"
    | "debit_reversal"
    | "inbound_transfer"
    | "inbound_transfer_return"
    | "issuing_authorization_hold"
    | "issuing_authorization_release"
    | "other"
    | "outbound_payment"
    | "outbound_payment_cancellation"
    | "outbound_payment_failure"
    | "outbound_payment_posting"
    | "outbound_payment_return"
    | "outbound_transfer"
    | "outbound_transfer_cancellation"
    | "outbound_transfer_failure"
    | "outbound_transfer_posting"
    | "outbound_transfer_return"
    | "received_credit"
    | "received_debit"
}

export type t_treasury_financial_accounts_resource_aba_record = {
  account_holder_name: string
  account_number?: string | null
  account_number_last4: string
  bank_name: string
  routing_number: string
}

export type t_treasury_financial_accounts_resource_aba_toggle_settings = {
  requested: boolean
  status: "active" | "pending" | "restricted"
  status_details: t_treasury_financial_accounts_resource_toggles_setting_status_details[]
}

export type t_treasury_financial_accounts_resource_ach_toggle_settings = {
  requested: boolean
  status: "active" | "pending" | "restricted"
  status_details: t_treasury_financial_accounts_resource_toggles_setting_status_details[]
}

export type t_treasury_financial_accounts_resource_balance = {
  cash: {
    [key: string]: number
  }
  inbound_pending: {
    [key: string]: number
  }
  outbound_pending: {
    [key: string]: number
  }
}

export type t_treasury_financial_accounts_resource_closed_status_details = {
  reasons: ("account_rejected" | "closed_by_platform" | "other")[]
}

export type t_treasury_financial_accounts_resource_financial_address = {
  aba?: t_treasury_financial_accounts_resource_aba_record
  supported_networks?: ("ach" | "us_domestic_wire")[]
  type: "aba"
}

export type t_treasury_financial_accounts_resource_financial_addresses_features =
  {
    aba?: t_treasury_financial_accounts_resource_aba_toggle_settings
  }

export type t_treasury_financial_accounts_resource_inbound_transfers = {
  ach?: t_treasury_financial_accounts_resource_ach_toggle_settings
}

export type t_treasury_financial_accounts_resource_outbound_payments = {
  ach?: t_treasury_financial_accounts_resource_ach_toggle_settings
  us_domestic_wire?: t_treasury_financial_accounts_resource_toggle_settings
}

export type t_treasury_financial_accounts_resource_outbound_transfers = {
  ach?: t_treasury_financial_accounts_resource_ach_toggle_settings
  us_domestic_wire?: t_treasury_financial_accounts_resource_toggle_settings
}

export type t_treasury_financial_accounts_resource_platform_restrictions = {
  inbound_flows?: "restricted" | "unrestricted" | null
  outbound_flows?: "restricted" | "unrestricted" | null
}

export type t_treasury_financial_accounts_resource_status_details = {
  closed?: t_treasury_financial_accounts_resource_closed_status_details | null
}

export type t_treasury_financial_accounts_resource_toggle_settings = {
  requested: boolean
  status: "active" | "pending" | "restricted"
  status_details: t_treasury_financial_accounts_resource_toggles_setting_status_details[]
}

export type t_treasury_financial_accounts_resource_toggles_setting_status_details =
  {
    code:
      | "activating"
      | "capability_not_requested"
      | "financial_account_closed"
      | "rejected_other"
      | "rejected_unsupported_business"
      | "requirements_past_due"
      | "requirements_pending_verification"
      | "restricted_by_platform"
      | "restricted_other"
    resolution?:
      | "contact_stripe"
      | "provide_information"
      | "remove_restriction"
      | null
    restriction?: "inbound_flows" | "outbound_flows"
  }

export type t_treasury_inbound_transfers_resource_failure_details = {
  code:
    | "account_closed"
    | "account_frozen"
    | "bank_account_restricted"
    | "bank_ownership_changed"
    | "debit_not_authorized"
    | "incorrect_account_holder_address"
    | "incorrect_account_holder_name"
    | "incorrect_account_holder_tax_id"
    | "insufficient_funds"
    | "invalid_account_number"
    | "invalid_currency"
    | "no_account"
    | "other"
}

export type t_treasury_inbound_transfers_resource_inbound_transfer_resource_linked_flows =
  {
    received_debit?: string | null
  }

export type t_treasury_inbound_transfers_resource_inbound_transfer_resource_status_transitions =
  {
    canceled_at?: number | null
    failed_at?: number | null
    succeeded_at?: number | null
  }

export type t_treasury_outbound_payments_resource_outbound_payment_resource_end_user_details =
  {
    ip_address?: string | null
    present: boolean
  }

export type t_treasury_outbound_payments_resource_outbound_payment_resource_status_transitions =
  {
    canceled_at?: number | null
    failed_at?: number | null
    posted_at?: number | null
    returned_at?: number | null
  }

export type t_treasury_outbound_payments_resource_returned_status = {
  code:
    | "account_closed"
    | "account_frozen"
    | "bank_account_restricted"
    | "bank_ownership_changed"
    | "declined"
    | "incorrect_account_holder_name"
    | "invalid_account_number"
    | "invalid_currency"
    | "no_account"
    | "other"
  transaction: string | t_treasury_transaction
}

export type t_treasury_outbound_transfers_resource_returned_details = {
  code:
    | "account_closed"
    | "account_frozen"
    | "bank_account_restricted"
    | "bank_ownership_changed"
    | "declined"
    | "incorrect_account_holder_name"
    | "invalid_account_number"
    | "invalid_currency"
    | "no_account"
    | "other"
  transaction: string | t_treasury_transaction
}

export type t_treasury_outbound_transfers_resource_status_transitions = {
  canceled_at?: number | null
  failed_at?: number | null
  posted_at?: number | null
  returned_at?: number | null
}

export type t_treasury_received_credits_resource_linked_flows = {
  credit_reversal?: string | null
  issuing_authorization?: string | null
  issuing_transaction?: string | null
  source_flow?: string | null
  source_flow_details?: t_treasury_received_credits_resource_source_flows_details | null
  source_flow_type?: string | null
}

export type t_treasury_received_credits_resource_reversal_details = {
  deadline?: number | null
  restricted_reason?:
    | "already_reversed"
    | "deadline_passed"
    | "network_restricted"
    | "other"
    | "source_flow_restricted"
    | null
}

export type t_treasury_received_credits_resource_source_flows_details = {
  credit_reversal?: t_treasury_credit_reversal
  outbound_payment?: t_treasury_outbound_payment
  payout?: t_payout
  type: "credit_reversal" | "other" | "outbound_payment" | "payout"
}

export type t_treasury_received_credits_resource_status_transitions = {
  posted_at?: number | null
}

export type t_treasury_received_debits_resource_debit_reversal_linked_flows = {
  issuing_dispute?: string | null
}

export type t_treasury_received_debits_resource_linked_flows = {
  debit_reversal?: string | null
  inbound_transfer?: string | null
  issuing_authorization?: string | null
  issuing_transaction?: string | null
}

export type t_treasury_received_debits_resource_reversal_details = {
  deadline?: number | null
  restricted_reason?:
    | "already_reversed"
    | "deadline_passed"
    | "network_restricted"
    | "other"
    | "source_flow_restricted"
    | null
}

export type t_treasury_received_debits_resource_status_transitions = {
  completed_at?: number | null
}

export type t_treasury_shared_resource_billing_details = {
  address: t_address
  email?: string | null
  name?: string | null
}

export type t_treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details =
  {
    balance?: "payments"
    billing_details: t_treasury_shared_resource_billing_details
    financial_account?: t_received_payment_method_details_financial_account
    issuing_card?: string
    type:
      | "balance"
      | "financial_account"
      | "issuing_card"
      | "stripe"
      | "us_bank_account"
    us_bank_account?: t_treasury_shared_resource_initiating_payment_method_details_us_bank_account
  }

export type t_treasury_shared_resource_initiating_payment_method_details_us_bank_account =
  {
    bank_name?: string | null
    last4?: string | null
    routing_number?: string | null
  }

export type t_treasury_transactions_resource_abstract_transaction_resource_status_transitions =
  {
    posted_at?: number | null
    void_at?: number | null
  }

export type t_treasury_transactions_resource_balance_impact = {
  cash: number
  inbound_pending: number
  outbound_pending: number
}

export type t_treasury_transactions_resource_flow_details = {
  credit_reversal?: t_treasury_credit_reversal
  debit_reversal?: t_treasury_debit_reversal
  inbound_transfer?: t_treasury_inbound_transfer
  issuing_authorization?: t_issuing_authorization
  outbound_payment?: t_treasury_outbound_payment
  outbound_transfer?: t_treasury_outbound_transfer
  received_credit?: t_treasury_received_credit
  received_debit?: t_treasury_received_debit
  type:
    | "credit_reversal"
    | "debit_reversal"
    | "inbound_transfer"
    | "issuing_authorization"
    | "other"
    | "outbound_payment"
    | "outbound_transfer"
    | "received_credit"
    | "received_debit"
}

export type t_us_bank_account_networks = {
  preferred?: string | null
  supported: ("ach" | "us_domestic_wire")[]
}

export type t_usage_record = {
  id: string
  livemode: boolean
  object: "usage_record"
  quantity: number
  subscription_item: string
  timestamp: number
}

export type t_usage_record_summary = {
  id: string
  invoice?: string | null
  livemode: boolean
  object: "usage_record_summary"
  period: t_period
  subscription_item: string
  total_usage: number
}

export type t_verification_session_redaction = {
  status: "processing" | "redacted"
}

export type t_webhook_endpoint = {
  api_version?: string | null
  application?: string | null
  created: number
  description?: string | null
  enabled_events: string[]
  id: string
  livemode: boolean
  metadata: {
    [key: string]: string
  }
  object: "webhook_endpoint"
  secret?: string
  status: string
  url: string
}

export type t_DeleteAccountsAccountBodySchema = EmptyObject

export type t_DeleteAccountsAccountParamSchema = {
  account: string
}

export type t_DeleteAccountsAccountBankAccountsIdBodySchema = EmptyObject

export type t_DeleteAccountsAccountBankAccountsIdParamSchema = {
  account: string
  id: string
}

export type t_DeleteAccountsAccountExternalAccountsIdBodySchema = EmptyObject

export type t_DeleteAccountsAccountExternalAccountsIdParamSchema = {
  account: string
  id: string
}

export type t_DeleteAccountsAccountPeoplePersonBodySchema = EmptyObject

export type t_DeleteAccountsAccountPeoplePersonParamSchema = {
  account: string
  person: string
}

export type t_DeleteAccountsAccountPersonsPersonBodySchema = EmptyObject

export type t_DeleteAccountsAccountPersonsPersonParamSchema = {
  account: string
  person: string
}

export type t_DeleteApplePayDomainsDomainBodySchema = EmptyObject

export type t_DeleteApplePayDomainsDomainParamSchema = {
  domain: string
}

export type t_DeleteCouponsCouponBodySchema = EmptyObject

export type t_DeleteCouponsCouponParamSchema = {
  coupon: string
}

export type t_DeleteCustomersCustomerBodySchema = EmptyObject

export type t_DeleteCustomersCustomerParamSchema = {
  customer: string
}

export type t_DeleteCustomersCustomerBankAccountsIdBodySchema = {
  expand?: string[]
}

export type t_DeleteCustomersCustomerBankAccountsIdParamSchema = {
  customer: string
  id: string
}

export type t_DeleteCustomersCustomerCardsIdBodySchema = {
  expand?: string[]
}

export type t_DeleteCustomersCustomerCardsIdParamSchema = {
  customer: string
  id: string
}

export type t_DeleteCustomersCustomerDiscountBodySchema = EmptyObject

export type t_DeleteCustomersCustomerDiscountParamSchema = {
  customer: string
}

export type t_DeleteCustomersCustomerSourcesIdBodySchema = {
  expand?: string[]
}

export type t_DeleteCustomersCustomerSourcesIdParamSchema = {
  customer: string
  id: string
}

export type t_DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdBodySchema =
  {
    expand?: string[]
    invoice_now?: boolean
    prorate?: boolean
  }

export type t_DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdParamSchema =
  {
    customer: string
    subscription_exposed_id: string
  }

export type t_DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdDiscountBodySchema =
  EmptyObject

export type t_DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdDiscountParamSchema =
  {
    customer: string
    subscription_exposed_id: string
  }

export type t_DeleteCustomersCustomerTaxIdsIdBodySchema = EmptyObject

export type t_DeleteCustomersCustomerTaxIdsIdParamSchema = {
  customer: string
  id: string
}

export type t_DeleteEphemeralKeysKeyBodySchema = {
  expand?: string[]
}

export type t_DeleteEphemeralKeysKeyParamSchema = {
  key: string
}

export type t_DeleteInvoiceitemsInvoiceitemBodySchema = EmptyObject

export type t_DeleteInvoiceitemsInvoiceitemParamSchema = {
  invoiceitem: string
}

export type t_DeleteInvoicesInvoiceBodySchema = EmptyObject

export type t_DeleteInvoicesInvoiceParamSchema = {
  invoice: string
}

export type t_DeletePlansPlanBodySchema = EmptyObject

export type t_DeletePlansPlanParamSchema = {
  plan: string
}

export type t_DeleteProductsIdBodySchema = EmptyObject

export type t_DeleteProductsIdParamSchema = {
  id: string
}

export type t_DeleteRadarValueListItemsItemBodySchema = EmptyObject

export type t_DeleteRadarValueListItemsItemParamSchema = {
  item: string
}

export type t_DeleteRadarValueListsValueListBodySchema = EmptyObject

export type t_DeleteRadarValueListsValueListParamSchema = {
  value_list: string
}

export type t_DeleteSubscriptionItemsItemBodySchema = {
  clear_usage?: boolean
  proration_behavior?: "always_invoice" | "create_prorations" | "none"
  proration_date?: number
}

export type t_DeleteSubscriptionItemsItemParamSchema = {
  item: string
}

export type t_DeleteSubscriptionsSubscriptionExposedIdBodySchema = {
  cancellation_details?: {
    comment?: string | ""
    feedback?:
      | ""
      | "customer_service"
      | "low_quality"
      | "missing_features"
      | "other"
      | "switched_service"
      | "too_complex"
      | "too_expensive"
      | "unused"
  }
  expand?: string[]
  invoice_now?: boolean
  prorate?: boolean
}

export type t_DeleteSubscriptionsSubscriptionExposedIdParamSchema = {
  subscription_exposed_id: string
}

export type t_DeleteSubscriptionsSubscriptionExposedIdDiscountBodySchema =
  EmptyObject

export type t_DeleteSubscriptionsSubscriptionExposedIdDiscountParamSchema = {
  subscription_exposed_id: string
}

export type t_DeleteTerminalConfigurationsConfigurationBodySchema = EmptyObject

export type t_DeleteTerminalConfigurationsConfigurationParamSchema = {
  configuration: string
}

export type t_DeleteTerminalLocationsLocationBodySchema = EmptyObject

export type t_DeleteTerminalLocationsLocationParamSchema = {
  location: string
}

export type t_DeleteTerminalReadersReaderBodySchema = EmptyObject

export type t_DeleteTerminalReadersReaderParamSchema = {
  reader: string
}

export type t_DeleteTestHelpersTestClocksTestClockBodySchema = EmptyObject

export type t_DeleteTestHelpersTestClocksTestClockParamSchema = {
  test_clock: string
}

export type t_DeleteWebhookEndpointsWebhookEndpointBodySchema = EmptyObject

export type t_DeleteWebhookEndpointsWebhookEndpointParamSchema = {
  webhook_endpoint: string
}

export type t_GetAccountBodySchema = EmptyObject

export type t_GetAccountQuerySchema = {
  expand?: string[]
}

export type t_GetAccountsBodySchema = EmptyObject

export type t_GetAccountsQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetAccountsAccountBodySchema = EmptyObject

export type t_GetAccountsAccountParamSchema = {
  account: string
}

export type t_GetAccountsAccountQuerySchema = {
  expand?: string[]
}

export type t_GetAccountsAccountBankAccountsIdBodySchema = EmptyObject

export type t_GetAccountsAccountBankAccountsIdParamSchema = {
  account: string
  id: string
}

export type t_GetAccountsAccountBankAccountsIdQuerySchema = {
  expand?: string[]
}

export type t_GetAccountsAccountCapabilitiesBodySchema = EmptyObject

export type t_GetAccountsAccountCapabilitiesParamSchema = {
  account: string
}

export type t_GetAccountsAccountCapabilitiesQuerySchema = {
  expand?: string[]
}

export type t_GetAccountsAccountCapabilitiesCapabilityBodySchema = EmptyObject

export type t_GetAccountsAccountCapabilitiesCapabilityParamSchema = {
  account: string
  capability: string
}

export type t_GetAccountsAccountCapabilitiesCapabilityQuerySchema = {
  expand?: string[]
}

export type t_GetAccountsAccountExternalAccountsBodySchema = EmptyObject

export type t_GetAccountsAccountExternalAccountsParamSchema = {
  account: string
}

export type t_GetAccountsAccountExternalAccountsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetAccountsAccountExternalAccountsIdBodySchema = EmptyObject

export type t_GetAccountsAccountExternalAccountsIdParamSchema = {
  account: string
  id: string
}

export type t_GetAccountsAccountExternalAccountsIdQuerySchema = {
  expand?: string[]
}

export type t_GetAccountsAccountPeopleBodySchema = EmptyObject

export type t_GetAccountsAccountPeopleParamSchema = {
  account: string
}

export type t_GetAccountsAccountPeopleQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  relationship?: {
    director?: boolean
    executive?: boolean
    owner?: boolean
    representative?: boolean
  }
  starting_after?: string
}

export type t_GetAccountsAccountPeoplePersonBodySchema = EmptyObject

export type t_GetAccountsAccountPeoplePersonParamSchema = {
  account: string
  person: string
}

export type t_GetAccountsAccountPeoplePersonQuerySchema = {
  expand?: string[]
}

export type t_GetAccountsAccountPersonsBodySchema = EmptyObject

export type t_GetAccountsAccountPersonsParamSchema = {
  account: string
}

export type t_GetAccountsAccountPersonsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  relationship?: {
    director?: boolean
    executive?: boolean
    owner?: boolean
    representative?: boolean
  }
  starting_after?: string
}

export type t_GetAccountsAccountPersonsPersonBodySchema = EmptyObject

export type t_GetAccountsAccountPersonsPersonParamSchema = {
  account: string
  person: string
}

export type t_GetAccountsAccountPersonsPersonQuerySchema = {
  expand?: string[]
}

export type t_GetApplePayDomainsBodySchema = EmptyObject

export type t_GetApplePayDomainsQuerySchema = {
  domain_name?: string
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetApplePayDomainsDomainBodySchema = EmptyObject

export type t_GetApplePayDomainsDomainParamSchema = {
  domain: string
}

export type t_GetApplePayDomainsDomainQuerySchema = {
  expand?: string[]
}

export type t_GetApplicationFeesBodySchema = EmptyObject

export type t_GetApplicationFeesQuerySchema = {
  charge?: string
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetApplicationFeesFeeRefundsIdBodySchema = EmptyObject

export type t_GetApplicationFeesFeeRefundsIdParamSchema = {
  fee: string
  id: string
}

export type t_GetApplicationFeesFeeRefundsIdQuerySchema = {
  expand?: string[]
}

export type t_GetApplicationFeesIdBodySchema = EmptyObject

export type t_GetApplicationFeesIdParamSchema = {
  id: string
}

export type t_GetApplicationFeesIdQuerySchema = {
  expand?: string[]
}

export type t_GetApplicationFeesIdRefundsBodySchema = EmptyObject

export type t_GetApplicationFeesIdRefundsParamSchema = {
  id: string
}

export type t_GetApplicationFeesIdRefundsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetAppsSecretsBodySchema = EmptyObject

export type t_GetAppsSecretsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  scope: {
    type: "account" | "user"
    user?: string
  }
  starting_after?: string
}

export type t_GetAppsSecretsFindBodySchema = EmptyObject

export type t_GetAppsSecretsFindQuerySchema = {
  expand?: string[]
  name: string
  scope: {
    type: "account" | "user"
    user?: string
  }
}

export type t_GetBalanceBodySchema = EmptyObject

export type t_GetBalanceQuerySchema = {
  expand?: string[]
}

export type t_GetBalanceHistoryBodySchema = EmptyObject

export type t_GetBalanceHistoryQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  currency?: string
  ending_before?: string
  expand?: string[]
  limit?: number
  payout?: string
  source?: string
  starting_after?: string
  type?: string
}

export type t_GetBalanceHistoryIdBodySchema = EmptyObject

export type t_GetBalanceHistoryIdParamSchema = {
  id: string
}

export type t_GetBalanceHistoryIdQuerySchema = {
  expand?: string[]
}

export type t_GetBalanceTransactionsBodySchema = EmptyObject

export type t_GetBalanceTransactionsQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  currency?: string
  ending_before?: string
  expand?: string[]
  limit?: number
  payout?: string
  source?: string
  starting_after?: string
  type?: string
}

export type t_GetBalanceTransactionsIdBodySchema = EmptyObject

export type t_GetBalanceTransactionsIdParamSchema = {
  id: string
}

export type t_GetBalanceTransactionsIdQuerySchema = {
  expand?: string[]
}

export type t_GetBillingPortalConfigurationsBodySchema = EmptyObject

export type t_GetBillingPortalConfigurationsQuerySchema = {
  active?: boolean
  ending_before?: string
  expand?: string[]
  is_default?: boolean
  limit?: number
  starting_after?: string
}

export type t_GetBillingPortalConfigurationsConfigurationBodySchema =
  EmptyObject

export type t_GetBillingPortalConfigurationsConfigurationParamSchema = {
  configuration: string
}

export type t_GetBillingPortalConfigurationsConfigurationQuerySchema = {
  expand?: string[]
}

export type t_GetChargesBodySchema = EmptyObject

export type t_GetChargesQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  customer?: string
  ending_before?: string
  expand?: string[]
  limit?: number
  payment_intent?: string
  starting_after?: string
  transfer_group?: string
}

export type t_GetChargesChargeBodySchema = EmptyObject

export type t_GetChargesChargeParamSchema = {
  charge: string
}

export type t_GetChargesChargeQuerySchema = {
  expand?: string[]
}

export type t_GetChargesChargeDisputeBodySchema = EmptyObject

export type t_GetChargesChargeDisputeParamSchema = {
  charge: string
}

export type t_GetChargesChargeDisputeQuerySchema = {
  expand?: string[]
}

export type t_GetChargesChargeRefundsBodySchema = EmptyObject

export type t_GetChargesChargeRefundsParamSchema = {
  charge: string
}

export type t_GetChargesChargeRefundsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetChargesChargeRefundsRefundBodySchema = EmptyObject

export type t_GetChargesChargeRefundsRefundParamSchema = {
  charge: string
  refund: string
}

export type t_GetChargesChargeRefundsRefundQuerySchema = {
  expand?: string[]
}

export type t_GetChargesSearchBodySchema = EmptyObject

export type t_GetChargesSearchQuerySchema = {
  expand?: string[]
  limit?: number
  page?: string
  query: string
}

export type t_GetCheckoutSessionsBodySchema = EmptyObject

export type t_GetCheckoutSessionsQuerySchema = {
  customer?: string
  customer_details?: {
    email: string
  }
  ending_before?: string
  expand?: string[]
  limit?: number
  payment_intent?: string
  payment_link?: string
  starting_after?: string
  subscription?: string
}

export type t_GetCheckoutSessionsSessionBodySchema = EmptyObject

export type t_GetCheckoutSessionsSessionParamSchema = {
  session: string
}

export type t_GetCheckoutSessionsSessionQuerySchema = {
  expand?: string[]
}

export type t_GetCheckoutSessionsSessionLineItemsBodySchema = EmptyObject

export type t_GetCheckoutSessionsSessionLineItemsParamSchema = {
  session: string
}

export type t_GetCheckoutSessionsSessionLineItemsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetCountrySpecsBodySchema = EmptyObject

export type t_GetCountrySpecsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetCountrySpecsCountryBodySchema = EmptyObject

export type t_GetCountrySpecsCountryParamSchema = {
  country: string
}

export type t_GetCountrySpecsCountryQuerySchema = {
  expand?: string[]
}

export type t_GetCouponsBodySchema = EmptyObject

export type t_GetCouponsQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetCouponsCouponBodySchema = EmptyObject

export type t_GetCouponsCouponParamSchema = {
  coupon: string
}

export type t_GetCouponsCouponQuerySchema = {
  expand?: string[]
}

export type t_GetCreditNotesBodySchema = EmptyObject

export type t_GetCreditNotesQuerySchema = {
  customer?: string
  ending_before?: string
  expand?: string[]
  invoice?: string
  limit?: number
  starting_after?: string
}

export type t_GetCreditNotesCreditNoteLinesBodySchema = EmptyObject

export type t_GetCreditNotesCreditNoteLinesParamSchema = {
  credit_note: string
}

export type t_GetCreditNotesCreditNoteLinesQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetCreditNotesIdBodySchema = EmptyObject

export type t_GetCreditNotesIdParamSchema = {
  id: string
}

export type t_GetCreditNotesIdQuerySchema = {
  expand?: string[]
}

export type t_GetCreditNotesPreviewBodySchema = EmptyObject

export type t_GetCreditNotesPreviewQuerySchema = {
  amount?: number
  credit_amount?: number
  effective_at?: number
  expand?: string[]
  invoice: string
  lines?: {
    amount?: number
    description?: string
    invoice_line_item?: string
    quantity?: number
    tax_rates?: string[] | ""
    type: "custom_line_item" | "invoice_line_item"
    unit_amount?: number
    unit_amount_decimal?: string
  }[]
  memo?: string
  metadata?: {
    [key: string]: string
  }
  out_of_band_amount?: number
  reason?:
    | "duplicate"
    | "fraudulent"
    | "order_change"
    | "product_unsatisfactory"
  refund?: string
  refund_amount?: number
  shipping_cost?: {
    shipping_rate?: string
  }
}

export type t_GetCreditNotesPreviewLinesBodySchema = EmptyObject

export type t_GetCreditNotesPreviewLinesQuerySchema = {
  amount?: number
  credit_amount?: number
  effective_at?: number
  ending_before?: string
  expand?: string[]
  invoice: string
  limit?: number
  lines?: {
    amount?: number
    description?: string
    invoice_line_item?: string
    quantity?: number
    tax_rates?: string[] | ""
    type: "custom_line_item" | "invoice_line_item"
    unit_amount?: number
    unit_amount_decimal?: string
  }[]
  memo?: string
  metadata?: {
    [key: string]: string
  }
  out_of_band_amount?: number
  reason?:
    | "duplicate"
    | "fraudulent"
    | "order_change"
    | "product_unsatisfactory"
  refund?: string
  refund_amount?: number
  shipping_cost?: {
    shipping_rate?: string
  }
  starting_after?: string
}

export type t_GetCustomersBodySchema = EmptyObject

export type t_GetCustomersQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  email?: string
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
  test_clock?: string
}

export type t_GetCustomersCustomerBodySchema = EmptyObject

export type t_GetCustomersCustomerParamSchema = {
  customer: string
}

export type t_GetCustomersCustomerQuerySchema = {
  expand?: string[]
}

export type t_GetCustomersCustomerBalanceTransactionsBodySchema = EmptyObject

export type t_GetCustomersCustomerBalanceTransactionsParamSchema = {
  customer: string
}

export type t_GetCustomersCustomerBalanceTransactionsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetCustomersCustomerBalanceTransactionsTransactionBodySchema =
  EmptyObject

export type t_GetCustomersCustomerBalanceTransactionsTransactionParamSchema = {
  customer: string
  transaction: string
}

export type t_GetCustomersCustomerBalanceTransactionsTransactionQuerySchema = {
  expand?: string[]
}

export type t_GetCustomersCustomerBankAccountsBodySchema = EmptyObject

export type t_GetCustomersCustomerBankAccountsParamSchema = {
  customer: string
}

export type t_GetCustomersCustomerBankAccountsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetCustomersCustomerBankAccountsIdBodySchema = EmptyObject

export type t_GetCustomersCustomerBankAccountsIdParamSchema = {
  customer: string
  id: string
}

export type t_GetCustomersCustomerBankAccountsIdQuerySchema = {
  expand?: string[]
}

export type t_GetCustomersCustomerCardsBodySchema = EmptyObject

export type t_GetCustomersCustomerCardsParamSchema = {
  customer: string
}

export type t_GetCustomersCustomerCardsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetCustomersCustomerCardsIdBodySchema = EmptyObject

export type t_GetCustomersCustomerCardsIdParamSchema = {
  customer: string
  id: string
}

export type t_GetCustomersCustomerCardsIdQuerySchema = {
  expand?: string[]
}

export type t_GetCustomersCustomerCashBalanceBodySchema = EmptyObject

export type t_GetCustomersCustomerCashBalanceParamSchema = {
  customer: string
}

export type t_GetCustomersCustomerCashBalanceQuerySchema = {
  expand?: string[]
}

export type t_GetCustomersCustomerCashBalanceTransactionsBodySchema =
  EmptyObject

export type t_GetCustomersCustomerCashBalanceTransactionsParamSchema = {
  customer: string
}

export type t_GetCustomersCustomerCashBalanceTransactionsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetCustomersCustomerCashBalanceTransactionsTransactionBodySchema =
  EmptyObject

export type t_GetCustomersCustomerCashBalanceTransactionsTransactionParamSchema =
  {
    customer: string
    transaction: string
  }

export type t_GetCustomersCustomerCashBalanceTransactionsTransactionQuerySchema =
  {
    expand?: string[]
  }

export type t_GetCustomersCustomerDiscountBodySchema = EmptyObject

export type t_GetCustomersCustomerDiscountParamSchema = {
  customer: string
}

export type t_GetCustomersCustomerDiscountQuerySchema = {
  expand?: string[]
}

export type t_GetCustomersCustomerPaymentMethodsBodySchema = EmptyObject

export type t_GetCustomersCustomerPaymentMethodsParamSchema = {
  customer: string
}

export type t_GetCustomersCustomerPaymentMethodsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
  type?:
    | "acss_debit"
    | "affirm"
    | "afterpay_clearpay"
    | "alipay"
    | "au_becs_debit"
    | "bacs_debit"
    | "bancontact"
    | "blik"
    | "boleto"
    | "card"
    | "cashapp"
    | "customer_balance"
    | "eps"
    | "fpx"
    | "giropay"
    | "grabpay"
    | "ideal"
    | "klarna"
    | "konbini"
    | "link"
    | "oxxo"
    | "p24"
    | "paynow"
    | "paypal"
    | "pix"
    | "promptpay"
    | "sepa_debit"
    | "sofort"
    | "us_bank_account"
    | "wechat_pay"
    | "zip"
}

export type t_GetCustomersCustomerPaymentMethodsPaymentMethodBodySchema =
  EmptyObject

export type t_GetCustomersCustomerPaymentMethodsPaymentMethodParamSchema = {
  customer: string
  payment_method: string
}

export type t_GetCustomersCustomerPaymentMethodsPaymentMethodQuerySchema = {
  expand?: string[]
}

export type t_GetCustomersCustomerSourcesBodySchema = EmptyObject

export type t_GetCustomersCustomerSourcesParamSchema = {
  customer: string
}

export type t_GetCustomersCustomerSourcesQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  object?: string
  starting_after?: string
}

export type t_GetCustomersCustomerSourcesIdBodySchema = EmptyObject

export type t_GetCustomersCustomerSourcesIdParamSchema = {
  customer: string
  id: string
}

export type t_GetCustomersCustomerSourcesIdQuerySchema = {
  expand?: string[]
}

export type t_GetCustomersCustomerSubscriptionsBodySchema = EmptyObject

export type t_GetCustomersCustomerSubscriptionsParamSchema = {
  customer: string
}

export type t_GetCustomersCustomerSubscriptionsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetCustomersCustomerSubscriptionsSubscriptionExposedIdBodySchema =
  EmptyObject

export type t_GetCustomersCustomerSubscriptionsSubscriptionExposedIdParamSchema =
  {
    customer: string
    subscription_exposed_id: string
  }

export type t_GetCustomersCustomerSubscriptionsSubscriptionExposedIdQuerySchema =
  {
    expand?: string[]
  }

export type t_GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscountBodySchema =
  EmptyObject

export type t_GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscountParamSchema =
  {
    customer: string
    subscription_exposed_id: string
  }

export type t_GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscountQuerySchema =
  {
    expand?: string[]
  }

export type t_GetCustomersCustomerTaxIdsBodySchema = EmptyObject

export type t_GetCustomersCustomerTaxIdsParamSchema = {
  customer: string
}

export type t_GetCustomersCustomerTaxIdsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetCustomersCustomerTaxIdsIdBodySchema = EmptyObject

export type t_GetCustomersCustomerTaxIdsIdParamSchema = {
  customer: string
  id: string
}

export type t_GetCustomersCustomerTaxIdsIdQuerySchema = {
  expand?: string[]
}

export type t_GetCustomersSearchBodySchema = EmptyObject

export type t_GetCustomersSearchQuerySchema = {
  expand?: string[]
  limit?: number
  page?: string
  query: string
}

export type t_GetDisputesBodySchema = EmptyObject

export type t_GetDisputesQuerySchema = {
  charge?: string
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  payment_intent?: string
  starting_after?: string
}

export type t_GetDisputesDisputeBodySchema = EmptyObject

export type t_GetDisputesDisputeParamSchema = {
  dispute: string
}

export type t_GetDisputesDisputeQuerySchema = {
  expand?: string[]
}

export type t_GetEventsBodySchema = EmptyObject

export type t_GetEventsQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  delivery_success?: boolean
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
  type?: string
  types?: string[]
}

export type t_GetEventsIdBodySchema = EmptyObject

export type t_GetEventsIdParamSchema = {
  id: string
}

export type t_GetEventsIdQuerySchema = {
  expand?: string[]
}

export type t_GetExchangeRatesBodySchema = EmptyObject

export type t_GetExchangeRatesQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetExchangeRatesRateIdBodySchema = EmptyObject

export type t_GetExchangeRatesRateIdParamSchema = {
  rate_id: string
}

export type t_GetExchangeRatesRateIdQuerySchema = {
  expand?: string[]
}

export type t_GetFileLinksBodySchema = EmptyObject

export type t_GetFileLinksQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  expired?: boolean
  file?: string
  limit?: number
  starting_after?: string
}

export type t_GetFileLinksLinkBodySchema = EmptyObject

export type t_GetFileLinksLinkParamSchema = {
  link: string
}

export type t_GetFileLinksLinkQuerySchema = {
  expand?: string[]
}

export type t_GetFilesBodySchema = EmptyObject

export type t_GetFilesQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  purpose?:
    | "account_requirement"
    | "additional_verification"
    | "business_icon"
    | "business_logo"
    | "customer_signature"
    | "dispute_evidence"
    | "document_provider_identity_document"
    | "finance_report_run"
    | "identity_document"
    | "identity_document_downloadable"
    | "pci_document"
    | "selfie"
    | "sigma_scheduled_query"
    | "tax_document_user_upload"
    | "terminal_reader_splashscreen"
  starting_after?: string
}

export type t_GetFilesFileBodySchema = EmptyObject

export type t_GetFilesFileParamSchema = {
  file: string
}

export type t_GetFilesFileQuerySchema = {
  expand?: string[]
}

export type t_GetFinancialConnectionsAccountsBodySchema = EmptyObject

export type t_GetFinancialConnectionsAccountsQuerySchema = {
  account_holder?: {
    account?: string
    customer?: string
  }
  ending_before?: string
  expand?: string[]
  limit?: number
  session?: string
  starting_after?: string
}

export type t_GetFinancialConnectionsAccountsAccountBodySchema = EmptyObject

export type t_GetFinancialConnectionsAccountsAccountParamSchema = {
  account: string
}

export type t_GetFinancialConnectionsAccountsAccountQuerySchema = {
  expand?: string[]
}

export type t_GetFinancialConnectionsAccountsAccountOwnersBodySchema =
  EmptyObject

export type t_GetFinancialConnectionsAccountsAccountOwnersParamSchema = {
  account: string
}

export type t_GetFinancialConnectionsAccountsAccountOwnersQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  ownership: string
  starting_after?: string
}

export type t_GetFinancialConnectionsSessionsSessionBodySchema = EmptyObject

export type t_GetFinancialConnectionsSessionsSessionParamSchema = {
  session: string
}

export type t_GetFinancialConnectionsSessionsSessionQuerySchema = {
  expand?: string[]
}

export type t_GetIdentityVerificationReportsBodySchema = EmptyObject

export type t_GetIdentityVerificationReportsQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
  type?: "document" | "id_number"
  verification_session?: string
}

export type t_GetIdentityVerificationReportsReportBodySchema = EmptyObject

export type t_GetIdentityVerificationReportsReportParamSchema = {
  report: string
}

export type t_GetIdentityVerificationReportsReportQuerySchema = {
  expand?: string[]
}

export type t_GetIdentityVerificationSessionsBodySchema = EmptyObject

export type t_GetIdentityVerificationSessionsQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
  status?: "canceled" | "processing" | "requires_input" | "verified"
}

export type t_GetIdentityVerificationSessionsSessionBodySchema = EmptyObject

export type t_GetIdentityVerificationSessionsSessionParamSchema = {
  session: string
}

export type t_GetIdentityVerificationSessionsSessionQuerySchema = {
  expand?: string[]
}

export type t_GetInvoiceitemsBodySchema = EmptyObject

export type t_GetInvoiceitemsQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  customer?: string
  ending_before?: string
  expand?: string[]
  invoice?: string
  limit?: number
  pending?: boolean
  starting_after?: string
}

export type t_GetInvoiceitemsInvoiceitemBodySchema = EmptyObject

export type t_GetInvoiceitemsInvoiceitemParamSchema = {
  invoiceitem: string
}

export type t_GetInvoiceitemsInvoiceitemQuerySchema = {
  expand?: string[]
}

export type t_GetInvoicesBodySchema = EmptyObject

export type t_GetInvoicesQuerySchema = {
  collection_method?: "charge_automatically" | "send_invoice"
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  customer?: string
  due_date?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
  status?: "draft" | "open" | "paid" | "uncollectible" | "void"
  subscription?: string
}

export type t_GetInvoicesInvoiceBodySchema = EmptyObject

export type t_GetInvoicesInvoiceParamSchema = {
  invoice: string
}

export type t_GetInvoicesInvoiceQuerySchema = {
  expand?: string[]
}

export type t_GetInvoicesInvoiceLinesBodySchema = EmptyObject

export type t_GetInvoicesInvoiceLinesParamSchema = {
  invoice: string
}

export type t_GetInvoicesInvoiceLinesQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetInvoicesSearchBodySchema = EmptyObject

export type t_GetInvoicesSearchQuerySchema = {
  expand?: string[]
  limit?: number
  page?: string
  query: string
}

export type t_GetInvoicesUpcomingBodySchema = EmptyObject

export type t_GetInvoicesUpcomingQuerySchema = {
  automatic_tax?: {
    enabled: boolean
  }
  coupon?: string
  currency?: string
  customer?: string
  customer_details?: {
    address?:
      | {
          city?: string
          country?: string
          line1?: string
          line2?: string
          postal_code?: string
          state?: string
        }
      | ""
    shipping?:
      | {
          address: {
            city?: string
            country?: string
            line1?: string
            line2?: string
            postal_code?: string
            state?: string
          }
          name: string
          phone?: string
        }
      | ""
    tax?: {
      ip_address?: string | ""
    }
    tax_exempt?: "" | "exempt" | "none" | "reverse"
    tax_ids?: {
      type:
        | "ad_nrt"
        | "ae_trn"
        | "ar_cuit"
        | "au_abn"
        | "au_arn"
        | "bg_uic"
        | "bo_tin"
        | "br_cnpj"
        | "br_cpf"
        | "ca_bn"
        | "ca_gst_hst"
        | "ca_pst_bc"
        | "ca_pst_mb"
        | "ca_pst_sk"
        | "ca_qst"
        | "ch_vat"
        | "cl_tin"
        | "cn_tin"
        | "co_nit"
        | "cr_tin"
        | "do_rcn"
        | "ec_ruc"
        | "eg_tin"
        | "es_cif"
        | "eu_oss_vat"
        | "eu_vat"
        | "gb_vat"
        | "ge_vat"
        | "hk_br"
        | "hu_tin"
        | "id_npwp"
        | "il_vat"
        | "in_gst"
        | "is_vat"
        | "jp_cn"
        | "jp_rn"
        | "jp_trn"
        | "ke_pin"
        | "kr_brn"
        | "li_uid"
        | "mx_rfc"
        | "my_frp"
        | "my_itn"
        | "my_sst"
        | "no_vat"
        | "nz_gst"
        | "pe_ruc"
        | "ph_tin"
        | "ro_tin"
        | "rs_pib"
        | "ru_inn"
        | "ru_kpp"
        | "sa_vat"
        | "sg_gst"
        | "sg_uen"
        | "si_tin"
        | "sv_nit"
        | "th_vat"
        | "tr_tin"
        | "tw_vat"
        | "ua_vat"
        | "us_ein"
        | "uy_ruc"
        | "ve_rif"
        | "vn_tin"
        | "za_vat"
      value: string
    }[]
  }
  discounts?:
    | {
        coupon?: string
        discount?: string
      }[]
    | ""
  expand?: string[]
  invoice_items?: {
    amount?: number
    currency?: string
    description?: string
    discountable?: boolean
    discounts?:
      | {
          coupon?: string
          discount?: string
        }[]
      | ""
    invoiceitem?: string
    metadata?:
      | {
          [key: string]: string
        }
      | ""
    period?: {
      end: number
      start: number
    }
    price?: string
    price_data?: {
      currency: string
      product: string
      tax_behavior?: "exclusive" | "inclusive" | "unspecified"
      unit_amount?: number
      unit_amount_decimal?: string
    }
    quantity?: number
    tax_behavior?: "exclusive" | "inclusive" | "unspecified"
    tax_code?: string | ""
    tax_rates?: string[] | ""
    unit_amount?: number
    unit_amount_decimal?: string
  }[]
  schedule?: string
  subscription?: string
  subscription_billing_cycle_anchor?: "now" | "unchanged" | number
  subscription_cancel_at?: number | ""
  subscription_cancel_at_period_end?: boolean
  subscription_cancel_now?: boolean
  subscription_default_tax_rates?: string[] | ""
  subscription_items?: {
    billing_thresholds?:
      | {
          usage_gte: number
        }
      | ""
    clear_usage?: boolean
    deleted?: boolean
    id?: string
    metadata?:
      | {
          [key: string]: string
        }
      | ""
    price?: string
    price_data?: {
      currency: string
      product: string
      recurring: {
        interval: "day" | "month" | "week" | "year"
        interval_count?: number
      }
      tax_behavior?: "exclusive" | "inclusive" | "unspecified"
      unit_amount?: number
      unit_amount_decimal?: string
    }
    quantity?: number
    tax_rates?: string[] | ""
  }[]
  subscription_proration_behavior?:
    | "always_invoice"
    | "create_prorations"
    | "none"
  subscription_proration_date?: number
  subscription_resume_at?: "now"
  subscription_start_date?: number
  subscription_trial_end?: "now" | number
  subscription_trial_from_plan?: boolean
}

export type t_GetInvoicesUpcomingLinesBodySchema = EmptyObject

export type t_GetInvoicesUpcomingLinesQuerySchema = {
  automatic_tax?: {
    enabled: boolean
  }
  coupon?: string
  currency?: string
  customer?: string
  customer_details?: {
    address?:
      | {
          city?: string
          country?: string
          line1?: string
          line2?: string
          postal_code?: string
          state?: string
        }
      | ""
    shipping?:
      | {
          address: {
            city?: string
            country?: string
            line1?: string
            line2?: string
            postal_code?: string
            state?: string
          }
          name: string
          phone?: string
        }
      | ""
    tax?: {
      ip_address?: string | ""
    }
    tax_exempt?: "" | "exempt" | "none" | "reverse"
    tax_ids?: {
      type:
        | "ad_nrt"
        | "ae_trn"
        | "ar_cuit"
        | "au_abn"
        | "au_arn"
        | "bg_uic"
        | "bo_tin"
        | "br_cnpj"
        | "br_cpf"
        | "ca_bn"
        | "ca_gst_hst"
        | "ca_pst_bc"
        | "ca_pst_mb"
        | "ca_pst_sk"
        | "ca_qst"
        | "ch_vat"
        | "cl_tin"
        | "cn_tin"
        | "co_nit"
        | "cr_tin"
        | "do_rcn"
        | "ec_ruc"
        | "eg_tin"
        | "es_cif"
        | "eu_oss_vat"
        | "eu_vat"
        | "gb_vat"
        | "ge_vat"
        | "hk_br"
        | "hu_tin"
        | "id_npwp"
        | "il_vat"
        | "in_gst"
        | "is_vat"
        | "jp_cn"
        | "jp_rn"
        | "jp_trn"
        | "ke_pin"
        | "kr_brn"
        | "li_uid"
        | "mx_rfc"
        | "my_frp"
        | "my_itn"
        | "my_sst"
        | "no_vat"
        | "nz_gst"
        | "pe_ruc"
        | "ph_tin"
        | "ro_tin"
        | "rs_pib"
        | "ru_inn"
        | "ru_kpp"
        | "sa_vat"
        | "sg_gst"
        | "sg_uen"
        | "si_tin"
        | "sv_nit"
        | "th_vat"
        | "tr_tin"
        | "tw_vat"
        | "ua_vat"
        | "us_ein"
        | "uy_ruc"
        | "ve_rif"
        | "vn_tin"
        | "za_vat"
      value: string
    }[]
  }
  discounts?:
    | {
        coupon?: string
        discount?: string
      }[]
    | ""
  ending_before?: string
  expand?: string[]
  invoice_items?: {
    amount?: number
    currency?: string
    description?: string
    discountable?: boolean
    discounts?:
      | {
          coupon?: string
          discount?: string
        }[]
      | ""
    invoiceitem?: string
    metadata?:
      | {
          [key: string]: string
        }
      | ""
    period?: {
      end: number
      start: number
    }
    price?: string
    price_data?: {
      currency: string
      product: string
      tax_behavior?: "exclusive" | "inclusive" | "unspecified"
      unit_amount?: number
      unit_amount_decimal?: string
    }
    quantity?: number
    tax_behavior?: "exclusive" | "inclusive" | "unspecified"
    tax_code?: string | ""
    tax_rates?: string[] | ""
    unit_amount?: number
    unit_amount_decimal?: string
  }[]
  limit?: number
  schedule?: string
  starting_after?: string
  subscription?: string
  subscription_billing_cycle_anchor?: "now" | "unchanged" | number
  subscription_cancel_at?: number | ""
  subscription_cancel_at_period_end?: boolean
  subscription_cancel_now?: boolean
  subscription_default_tax_rates?: string[] | ""
  subscription_items?: {
    billing_thresholds?:
      | {
          usage_gte: number
        }
      | ""
    clear_usage?: boolean
    deleted?: boolean
    id?: string
    metadata?:
      | {
          [key: string]: string
        }
      | ""
    price?: string
    price_data?: {
      currency: string
      product: string
      recurring: {
        interval: "day" | "month" | "week" | "year"
        interval_count?: number
      }
      tax_behavior?: "exclusive" | "inclusive" | "unspecified"
      unit_amount?: number
      unit_amount_decimal?: string
    }
    quantity?: number
    tax_rates?: string[] | ""
  }[]
  subscription_proration_behavior?:
    | "always_invoice"
    | "create_prorations"
    | "none"
  subscription_proration_date?: number
  subscription_resume_at?: "now"
  subscription_start_date?: number
  subscription_trial_end?: "now" | number
  subscription_trial_from_plan?: boolean
}

export type t_GetIssuingAuthorizationsBodySchema = EmptyObject

export type t_GetIssuingAuthorizationsQuerySchema = {
  card?: string
  cardholder?: string
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
  status?: "closed" | "pending" | "reversed"
}

export type t_GetIssuingAuthorizationsAuthorizationBodySchema = EmptyObject

export type t_GetIssuingAuthorizationsAuthorizationParamSchema = {
  authorization: string
}

export type t_GetIssuingAuthorizationsAuthorizationQuerySchema = {
  expand?: string[]
}

export type t_GetIssuingCardholdersBodySchema = EmptyObject

export type t_GetIssuingCardholdersQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  email?: string
  ending_before?: string
  expand?: string[]
  limit?: number
  phone_number?: string
  starting_after?: string
  status?: "active" | "blocked" | "inactive"
  type?: "company" | "individual"
}

export type t_GetIssuingCardholdersCardholderBodySchema = EmptyObject

export type t_GetIssuingCardholdersCardholderParamSchema = {
  cardholder: string
}

export type t_GetIssuingCardholdersCardholderQuerySchema = {
  expand?: string[]
}

export type t_GetIssuingCardsBodySchema = EmptyObject

export type t_GetIssuingCardsQuerySchema = {
  cardholder?: string
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  exp_month?: number
  exp_year?: number
  expand?: string[]
  last4?: string
  limit?: number
  starting_after?: string
  status?: "active" | "canceled" | "inactive"
  type?: "physical" | "virtual"
}

export type t_GetIssuingCardsCardBodySchema = EmptyObject

export type t_GetIssuingCardsCardParamSchema = {
  card: string
}

export type t_GetIssuingCardsCardQuerySchema = {
  expand?: string[]
}

export type t_GetIssuingDisputesBodySchema = EmptyObject

export type t_GetIssuingDisputesQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
  status?: "expired" | "lost" | "submitted" | "unsubmitted" | "won"
  transaction?: string
}

export type t_GetIssuingDisputesDisputeBodySchema = EmptyObject

export type t_GetIssuingDisputesDisputeParamSchema = {
  dispute: string
}

export type t_GetIssuingDisputesDisputeQuerySchema = {
  expand?: string[]
}

export type t_GetIssuingSettlementsBodySchema = EmptyObject

export type t_GetIssuingSettlementsQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetIssuingSettlementsSettlementBodySchema = EmptyObject

export type t_GetIssuingSettlementsSettlementParamSchema = {
  settlement: string
}

export type t_GetIssuingSettlementsSettlementQuerySchema = {
  expand?: string[]
}

export type t_GetIssuingTransactionsBodySchema = EmptyObject

export type t_GetIssuingTransactionsQuerySchema = {
  card?: string
  cardholder?: string
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
  type?: "capture" | "refund"
}

export type t_GetIssuingTransactionsTransactionBodySchema = EmptyObject

export type t_GetIssuingTransactionsTransactionParamSchema = {
  transaction: string
}

export type t_GetIssuingTransactionsTransactionQuerySchema = {
  expand?: string[]
}

export type t_GetLinkAccountSessionsSessionBodySchema = EmptyObject

export type t_GetLinkAccountSessionsSessionParamSchema = {
  session: string
}

export type t_GetLinkAccountSessionsSessionQuerySchema = {
  expand?: string[]
}

export type t_GetLinkedAccountsBodySchema = EmptyObject

export type t_GetLinkedAccountsQuerySchema = {
  account_holder?: {
    account?: string
    customer?: string
  }
  ending_before?: string
  expand?: string[]
  limit?: number
  session?: string
  starting_after?: string
}

export type t_GetLinkedAccountsAccountBodySchema = EmptyObject

export type t_GetLinkedAccountsAccountParamSchema = {
  account: string
}

export type t_GetLinkedAccountsAccountQuerySchema = {
  expand?: string[]
}

export type t_GetLinkedAccountsAccountOwnersBodySchema = EmptyObject

export type t_GetLinkedAccountsAccountOwnersParamSchema = {
  account: string
}

export type t_GetLinkedAccountsAccountOwnersQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  ownership: string
  starting_after?: string
}

export type t_GetMandatesMandateBodySchema = EmptyObject

export type t_GetMandatesMandateParamSchema = {
  mandate: string
}

export type t_GetMandatesMandateQuerySchema = {
  expand?: string[]
}

export type t_GetPaymentIntentsBodySchema = EmptyObject

export type t_GetPaymentIntentsQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  customer?: string
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetPaymentIntentsIntentBodySchema = EmptyObject

export type t_GetPaymentIntentsIntentParamSchema = {
  intent: string
}

export type t_GetPaymentIntentsIntentQuerySchema = {
  client_secret?: string
  expand?: string[]
}

export type t_GetPaymentIntentsSearchBodySchema = EmptyObject

export type t_GetPaymentIntentsSearchQuerySchema = {
  expand?: string[]
  limit?: number
  page?: string
  query: string
}

export type t_GetPaymentLinksBodySchema = EmptyObject

export type t_GetPaymentLinksQuerySchema = {
  active?: boolean
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetPaymentLinksPaymentLinkBodySchema = EmptyObject

export type t_GetPaymentLinksPaymentLinkParamSchema = {
  payment_link: string
}

export type t_GetPaymentLinksPaymentLinkQuerySchema = {
  expand?: string[]
}

export type t_GetPaymentLinksPaymentLinkLineItemsBodySchema = EmptyObject

export type t_GetPaymentLinksPaymentLinkLineItemsParamSchema = {
  payment_link: string
}

export type t_GetPaymentLinksPaymentLinkLineItemsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetPaymentMethodConfigurationsBodySchema = EmptyObject

export type t_GetPaymentMethodConfigurationsQuerySchema = {
  application?: string | ""
  expand?: string[]
}

export type t_GetPaymentMethodConfigurationsConfigurationBodySchema =
  EmptyObject

export type t_GetPaymentMethodConfigurationsConfigurationParamSchema = {
  configuration: string
}

export type t_GetPaymentMethodConfigurationsConfigurationQuerySchema = {
  expand?: string[]
}

export type t_GetPaymentMethodDomainsBodySchema = EmptyObject

export type t_GetPaymentMethodDomainsQuerySchema = {
  domain_name?: string
  enabled?: boolean
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetPaymentMethodDomainsPaymentMethodDomainBodySchema = EmptyObject

export type t_GetPaymentMethodDomainsPaymentMethodDomainParamSchema = {
  payment_method_domain: string
}

export type t_GetPaymentMethodDomainsPaymentMethodDomainQuerySchema = {
  expand?: string[]
}

export type t_GetPaymentMethodsBodySchema = EmptyObject

export type t_GetPaymentMethodsQuerySchema = {
  customer?: string
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
  type?:
    | "acss_debit"
    | "affirm"
    | "afterpay_clearpay"
    | "alipay"
    | "au_becs_debit"
    | "bacs_debit"
    | "bancontact"
    | "blik"
    | "boleto"
    | "card"
    | "cashapp"
    | "customer_balance"
    | "eps"
    | "fpx"
    | "giropay"
    | "grabpay"
    | "ideal"
    | "klarna"
    | "konbini"
    | "link"
    | "oxxo"
    | "p24"
    | "paynow"
    | "paypal"
    | "pix"
    | "promptpay"
    | "sepa_debit"
    | "sofort"
    | "us_bank_account"
    | "wechat_pay"
    | "zip"
}

export type t_GetPaymentMethodsPaymentMethodBodySchema = EmptyObject

export type t_GetPaymentMethodsPaymentMethodParamSchema = {
  payment_method: string
}

export type t_GetPaymentMethodsPaymentMethodQuerySchema = {
  expand?: string[]
}

export type t_GetPayoutsBodySchema = EmptyObject

export type t_GetPayoutsQuerySchema = {
  arrival_date?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  destination?: string
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
  status?: string
}

export type t_GetPayoutsPayoutBodySchema = EmptyObject

export type t_GetPayoutsPayoutParamSchema = {
  payout: string
}

export type t_GetPayoutsPayoutQuerySchema = {
  expand?: string[]
}

export type t_GetPlansBodySchema = EmptyObject

export type t_GetPlansQuerySchema = {
  active?: boolean
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  product?: string
  starting_after?: string
}

export type t_GetPlansPlanBodySchema = EmptyObject

export type t_GetPlansPlanParamSchema = {
  plan: string
}

export type t_GetPlansPlanQuerySchema = {
  expand?: string[]
}

export type t_GetPricesBodySchema = EmptyObject

export type t_GetPricesQuerySchema = {
  active?: boolean
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  currency?: string
  ending_before?: string
  expand?: string[]
  limit?: number
  lookup_keys?: string[]
  product?: string
  recurring?: {
    interval?: "day" | "month" | "week" | "year"
    usage_type?: "licensed" | "metered"
  }
  starting_after?: string
  type?: "one_time" | "recurring"
}

export type t_GetPricesPriceBodySchema = EmptyObject

export type t_GetPricesPriceParamSchema = {
  price: string
}

export type t_GetPricesPriceQuerySchema = {
  expand?: string[]
}

export type t_GetPricesSearchBodySchema = EmptyObject

export type t_GetPricesSearchQuerySchema = {
  expand?: string[]
  limit?: number
  page?: string
  query: string
}

export type t_GetProductsBodySchema = EmptyObject

export type t_GetProductsQuerySchema = {
  active?: boolean
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  ids?: string[]
  limit?: number
  shippable?: boolean
  starting_after?: string
  url?: string
}

export type t_GetProductsIdBodySchema = EmptyObject

export type t_GetProductsIdParamSchema = {
  id: string
}

export type t_GetProductsIdQuerySchema = {
  expand?: string[]
}

export type t_GetProductsSearchBodySchema = EmptyObject

export type t_GetProductsSearchQuerySchema = {
  expand?: string[]
  limit?: number
  page?: string
  query: string
}

export type t_GetPromotionCodesBodySchema = EmptyObject

export type t_GetPromotionCodesQuerySchema = {
  active?: boolean
  code?: string
  coupon?: string
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  customer?: string
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetPromotionCodesPromotionCodeBodySchema = EmptyObject

export type t_GetPromotionCodesPromotionCodeParamSchema = {
  promotion_code: string
}

export type t_GetPromotionCodesPromotionCodeQuerySchema = {
  expand?: string[]
}

export type t_GetQuotesBodySchema = EmptyObject

export type t_GetQuotesQuerySchema = {
  customer?: string
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
  status?: "accepted" | "canceled" | "draft" | "open"
  test_clock?: string
}

export type t_GetQuotesQuoteBodySchema = EmptyObject

export type t_GetQuotesQuoteParamSchema = {
  quote: string
}

export type t_GetQuotesQuoteQuerySchema = {
  expand?: string[]
}

export type t_GetQuotesQuoteComputedUpfrontLineItemsBodySchema = EmptyObject

export type t_GetQuotesQuoteComputedUpfrontLineItemsParamSchema = {
  quote: string
}

export type t_GetQuotesQuoteComputedUpfrontLineItemsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetQuotesQuoteLineItemsBodySchema = EmptyObject

export type t_GetQuotesQuoteLineItemsParamSchema = {
  quote: string
}

export type t_GetQuotesQuoteLineItemsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetQuotesQuotePdfBodySchema = EmptyObject

export type t_GetQuotesQuotePdfParamSchema = {
  quote: string
}

export type t_GetQuotesQuotePdfQuerySchema = {
  expand?: string[]
}

export type t_GetRadarEarlyFraudWarningsBodySchema = EmptyObject

export type t_GetRadarEarlyFraudWarningsQuerySchema = {
  charge?: string
  ending_before?: string
  expand?: string[]
  limit?: number
  payment_intent?: string
  starting_after?: string
}

export type t_GetRadarEarlyFraudWarningsEarlyFraudWarningBodySchema =
  EmptyObject

export type t_GetRadarEarlyFraudWarningsEarlyFraudWarningParamSchema = {
  early_fraud_warning: string
}

export type t_GetRadarEarlyFraudWarningsEarlyFraudWarningQuerySchema = {
  expand?: string[]
}

export type t_GetRadarValueListItemsBodySchema = EmptyObject

export type t_GetRadarValueListItemsQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
  value?: string
  value_list: string
}

export type t_GetRadarValueListItemsItemBodySchema = EmptyObject

export type t_GetRadarValueListItemsItemParamSchema = {
  item: string
}

export type t_GetRadarValueListItemsItemQuerySchema = {
  expand?: string[]
}

export type t_GetRadarValueListsBodySchema = EmptyObject

export type t_GetRadarValueListsQuerySchema = {
  alias?: string
  contains?: string
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetRadarValueListsValueListBodySchema = EmptyObject

export type t_GetRadarValueListsValueListParamSchema = {
  value_list: string
}

export type t_GetRadarValueListsValueListQuerySchema = {
  expand?: string[]
}

export type t_GetRefundsBodySchema = EmptyObject

export type t_GetRefundsQuerySchema = {
  charge?: string
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  payment_intent?: string
  starting_after?: string
}

export type t_GetRefundsRefundBodySchema = EmptyObject

export type t_GetRefundsRefundParamSchema = {
  refund: string
}

export type t_GetRefundsRefundQuerySchema = {
  expand?: string[]
}

export type t_GetReportingReportRunsBodySchema = EmptyObject

export type t_GetReportingReportRunsQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetReportingReportRunsReportRunBodySchema = EmptyObject

export type t_GetReportingReportRunsReportRunParamSchema = {
  report_run: string
}

export type t_GetReportingReportRunsReportRunQuerySchema = {
  expand?: string[]
}

export type t_GetReportingReportTypesBodySchema = EmptyObject

export type t_GetReportingReportTypesQuerySchema = {
  expand?: string[]
}

export type t_GetReportingReportTypesReportTypeBodySchema = EmptyObject

export type t_GetReportingReportTypesReportTypeParamSchema = {
  report_type: string
}

export type t_GetReportingReportTypesReportTypeQuerySchema = {
  expand?: string[]
}

export type t_GetReviewsBodySchema = EmptyObject

export type t_GetReviewsQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetReviewsReviewBodySchema = EmptyObject

export type t_GetReviewsReviewParamSchema = {
  review: string
}

export type t_GetReviewsReviewQuerySchema = {
  expand?: string[]
}

export type t_GetSetupAttemptsBodySchema = EmptyObject

export type t_GetSetupAttemptsQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  setup_intent: string
  starting_after?: string
}

export type t_GetSetupIntentsBodySchema = EmptyObject

export type t_GetSetupIntentsQuerySchema = {
  attach_to_self?: boolean
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  customer?: string
  ending_before?: string
  expand?: string[]
  limit?: number
  payment_method?: string
  starting_after?: string
}

export type t_GetSetupIntentsIntentBodySchema = EmptyObject

export type t_GetSetupIntentsIntentParamSchema = {
  intent: string
}

export type t_GetSetupIntentsIntentQuerySchema = {
  client_secret?: string
  expand?: string[]
}

export type t_GetShippingRatesBodySchema = EmptyObject

export type t_GetShippingRatesQuerySchema = {
  active?: boolean
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  currency?: string
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetShippingRatesShippingRateTokenBodySchema = EmptyObject

export type t_GetShippingRatesShippingRateTokenParamSchema = {
  shipping_rate_token: string
}

export type t_GetShippingRatesShippingRateTokenQuerySchema = {
  expand?: string[]
}

export type t_GetSigmaScheduledQueryRunsBodySchema = EmptyObject

export type t_GetSigmaScheduledQueryRunsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetSigmaScheduledQueryRunsScheduledQueryRunBodySchema =
  EmptyObject

export type t_GetSigmaScheduledQueryRunsScheduledQueryRunParamSchema = {
  scheduled_query_run: string
}

export type t_GetSigmaScheduledQueryRunsScheduledQueryRunQuerySchema = {
  expand?: string[]
}

export type t_GetSourcesSourceBodySchema = EmptyObject

export type t_GetSourcesSourceParamSchema = {
  source: string
}

export type t_GetSourcesSourceQuerySchema = {
  client_secret?: string
  expand?: string[]
}

export type t_GetSourcesSourceMandateNotificationsMandateNotificationBodySchema =
  EmptyObject

export type t_GetSourcesSourceMandateNotificationsMandateNotificationParamSchema =
  {
    mandate_notification: string
    source: string
  }

export type t_GetSourcesSourceMandateNotificationsMandateNotificationQuerySchema =
  {
    expand?: string[]
  }

export type t_GetSourcesSourceSourceTransactionsBodySchema = EmptyObject

export type t_GetSourcesSourceSourceTransactionsParamSchema = {
  source: string
}

export type t_GetSourcesSourceSourceTransactionsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetSourcesSourceSourceTransactionsSourceTransactionBodySchema =
  EmptyObject

export type t_GetSourcesSourceSourceTransactionsSourceTransactionParamSchema = {
  source: string
  source_transaction: string
}

export type t_GetSourcesSourceSourceTransactionsSourceTransactionQuerySchema = {
  expand?: string[]
}

export type t_GetSubscriptionItemsBodySchema = EmptyObject

export type t_GetSubscriptionItemsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
  subscription: string
}

export type t_GetSubscriptionItemsItemBodySchema = EmptyObject

export type t_GetSubscriptionItemsItemParamSchema = {
  item: string
}

export type t_GetSubscriptionItemsItemQuerySchema = {
  expand?: string[]
}

export type t_GetSubscriptionItemsSubscriptionItemUsageRecordSummariesBodySchema =
  EmptyObject

export type t_GetSubscriptionItemsSubscriptionItemUsageRecordSummariesParamSchema =
  {
    subscription_item: string
  }

export type t_GetSubscriptionItemsSubscriptionItemUsageRecordSummariesQuerySchema =
  {
    ending_before?: string
    expand?: string[]
    limit?: number
    starting_after?: string
  }

export type t_GetSubscriptionSchedulesBodySchema = EmptyObject

export type t_GetSubscriptionSchedulesQuerySchema = {
  canceled_at?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  completed_at?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  customer?: string
  ending_before?: string
  expand?: string[]
  limit?: number
  released_at?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  scheduled?: boolean
  starting_after?: string
}

export type t_GetSubscriptionSchedulesScheduleBodySchema = EmptyObject

export type t_GetSubscriptionSchedulesScheduleParamSchema = {
  schedule: string
}

export type t_GetSubscriptionSchedulesScheduleQuerySchema = {
  expand?: string[]
}

export type t_GetSubscriptionsBodySchema = EmptyObject

export type t_GetSubscriptionsQuerySchema = {
  automatic_tax?: {
    enabled: boolean
  }
  collection_method?: "charge_automatically" | "send_invoice"
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  current_period_end?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  current_period_start?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  customer?: string
  ending_before?: string
  expand?: string[]
  limit?: number
  price?: string
  starting_after?: string
  status?:
    | "active"
    | "all"
    | "canceled"
    | "ended"
    | "incomplete"
    | "incomplete_expired"
    | "past_due"
    | "paused"
    | "trialing"
    | "unpaid"
  test_clock?: string
}

export type t_GetSubscriptionsSearchBodySchema = EmptyObject

export type t_GetSubscriptionsSearchQuerySchema = {
  expand?: string[]
  limit?: number
  page?: string
  query: string
}

export type t_GetSubscriptionsSubscriptionExposedIdBodySchema = EmptyObject

export type t_GetSubscriptionsSubscriptionExposedIdParamSchema = {
  subscription_exposed_id: string
}

export type t_GetSubscriptionsSubscriptionExposedIdQuerySchema = {
  expand?: string[]
}

export type t_GetTaxCalculationsCalculationLineItemsBodySchema = EmptyObject

export type t_GetTaxCalculationsCalculationLineItemsParamSchema = {
  calculation: string
}

export type t_GetTaxCalculationsCalculationLineItemsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetTaxCodesBodySchema = EmptyObject

export type t_GetTaxCodesQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetTaxCodesIdBodySchema = EmptyObject

export type t_GetTaxCodesIdParamSchema = {
  id: string
}

export type t_GetTaxCodesIdQuerySchema = {
  expand?: string[]
}

export type t_GetTaxRatesBodySchema = EmptyObject

export type t_GetTaxRatesQuerySchema = {
  active?: boolean
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  inclusive?: boolean
  limit?: number
  starting_after?: string
}

export type t_GetTaxRatesTaxRateBodySchema = EmptyObject

export type t_GetTaxRatesTaxRateParamSchema = {
  tax_rate: string
}

export type t_GetTaxRatesTaxRateQuerySchema = {
  expand?: string[]
}

export type t_GetTaxSettingsBodySchema = EmptyObject

export type t_GetTaxSettingsQuerySchema = {
  expand?: string[]
}

export type t_GetTaxTransactionsTransactionBodySchema = EmptyObject

export type t_GetTaxTransactionsTransactionParamSchema = {
  transaction: string
}

export type t_GetTaxTransactionsTransactionQuerySchema = {
  expand?: string[]
}

export type t_GetTaxTransactionsTransactionLineItemsBodySchema = EmptyObject

export type t_GetTaxTransactionsTransactionLineItemsParamSchema = {
  transaction: string
}

export type t_GetTaxTransactionsTransactionLineItemsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetTerminalConfigurationsBodySchema = EmptyObject

export type t_GetTerminalConfigurationsQuerySchema = {
  ending_before?: string
  expand?: string[]
  is_account_default?: boolean
  limit?: number
  starting_after?: string
}

export type t_GetTerminalConfigurationsConfigurationBodySchema = EmptyObject

export type t_GetTerminalConfigurationsConfigurationParamSchema = {
  configuration: string
}

export type t_GetTerminalConfigurationsConfigurationQuerySchema = {
  expand?: string[]
}

export type t_GetTerminalLocationsBodySchema = EmptyObject

export type t_GetTerminalLocationsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetTerminalLocationsLocationBodySchema = EmptyObject

export type t_GetTerminalLocationsLocationParamSchema = {
  location: string
}

export type t_GetTerminalLocationsLocationQuerySchema = {
  expand?: string[]
}

export type t_GetTerminalReadersBodySchema = EmptyObject

export type t_GetTerminalReadersQuerySchema = {
  device_type?:
    | "bbpos_chipper2x"
    | "bbpos_wisepad3"
    | "bbpos_wisepos_e"
    | "simulated_wisepos_e"
    | "stripe_m2"
    | "verifone_P400"
  ending_before?: string
  expand?: string[]
  limit?: number
  location?: string
  serial_number?: string
  starting_after?: string
  status?: "offline" | "online"
}

export type t_GetTerminalReadersReaderBodySchema = EmptyObject

export type t_GetTerminalReadersReaderParamSchema = {
  reader: string
}

export type t_GetTerminalReadersReaderQuerySchema = {
  expand?: string[]
}

export type t_GetTestHelpersTestClocksBodySchema = EmptyObject

export type t_GetTestHelpersTestClocksQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetTestHelpersTestClocksTestClockBodySchema = EmptyObject

export type t_GetTestHelpersTestClocksTestClockParamSchema = {
  test_clock: string
}

export type t_GetTestHelpersTestClocksTestClockQuerySchema = {
  expand?: string[]
}

export type t_GetTokensTokenBodySchema = EmptyObject

export type t_GetTokensTokenParamSchema = {
  token: string
}

export type t_GetTokensTokenQuerySchema = {
  expand?: string[]
}

export type t_GetTopupsBodySchema = EmptyObject

export type t_GetTopupsQuerySchema = {
  amount?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
  status?: "canceled" | "failed" | "pending" | "succeeded"
}

export type t_GetTopupsTopupBodySchema = EmptyObject

export type t_GetTopupsTopupParamSchema = {
  topup: string
}

export type t_GetTopupsTopupQuerySchema = {
  expand?: string[]
}

export type t_GetTransfersBodySchema = EmptyObject

export type t_GetTransfersQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  destination?: string
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
  transfer_group?: string
}

export type t_GetTransfersIdReversalsBodySchema = EmptyObject

export type t_GetTransfersIdReversalsParamSchema = {
  id: string
}

export type t_GetTransfersIdReversalsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetTransfersTransferBodySchema = EmptyObject

export type t_GetTransfersTransferParamSchema = {
  transfer: string
}

export type t_GetTransfersTransferQuerySchema = {
  expand?: string[]
}

export type t_GetTransfersTransferReversalsIdBodySchema = EmptyObject

export type t_GetTransfersTransferReversalsIdParamSchema = {
  id: string
  transfer: string
}

export type t_GetTransfersTransferReversalsIdQuerySchema = {
  expand?: string[]
}

export type t_GetTreasuryCreditReversalsBodySchema = EmptyObject

export type t_GetTreasuryCreditReversalsQuerySchema = {
  ending_before?: string
  expand?: string[]
  financial_account: string
  limit?: number
  received_credit?: string
  starting_after?: string
  status?: "canceled" | "posted" | "processing"
}

export type t_GetTreasuryCreditReversalsCreditReversalBodySchema = EmptyObject

export type t_GetTreasuryCreditReversalsCreditReversalParamSchema = {
  credit_reversal: string
}

export type t_GetTreasuryCreditReversalsCreditReversalQuerySchema = {
  expand?: string[]
}

export type t_GetTreasuryDebitReversalsBodySchema = EmptyObject

export type t_GetTreasuryDebitReversalsQuerySchema = {
  ending_before?: string
  expand?: string[]
  financial_account: string
  limit?: number
  received_debit?: string
  resolution?: "lost" | "won"
  starting_after?: string
  status?: "canceled" | "completed" | "processing"
}

export type t_GetTreasuryDebitReversalsDebitReversalBodySchema = EmptyObject

export type t_GetTreasuryDebitReversalsDebitReversalParamSchema = {
  debit_reversal: string
}

export type t_GetTreasuryDebitReversalsDebitReversalQuerySchema = {
  expand?: string[]
}

export type t_GetTreasuryFinancialAccountsBodySchema = EmptyObject

export type t_GetTreasuryFinancialAccountsQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetTreasuryFinancialAccountsFinancialAccountBodySchema =
  EmptyObject

export type t_GetTreasuryFinancialAccountsFinancialAccountParamSchema = {
  financial_account: string
}

export type t_GetTreasuryFinancialAccountsFinancialAccountQuerySchema = {
  expand?: string[]
}

export type t_GetTreasuryFinancialAccountsFinancialAccountFeaturesBodySchema =
  EmptyObject

export type t_GetTreasuryFinancialAccountsFinancialAccountFeaturesParamSchema =
  {
    financial_account: string
  }

export type t_GetTreasuryFinancialAccountsFinancialAccountFeaturesQuerySchema =
  {
    expand?: string[]
  }

export type t_GetTreasuryInboundTransfersBodySchema = EmptyObject

export type t_GetTreasuryInboundTransfersQuerySchema = {
  ending_before?: string
  expand?: string[]
  financial_account: string
  limit?: number
  starting_after?: string
  status?: "canceled" | "failed" | "processing" | "succeeded"
}

export type t_GetTreasuryInboundTransfersIdBodySchema = EmptyObject

export type t_GetTreasuryInboundTransfersIdParamSchema = {
  id: string
}

export type t_GetTreasuryInboundTransfersIdQuerySchema = {
  expand?: string[]
}

export type t_GetTreasuryOutboundPaymentsBodySchema = EmptyObject

export type t_GetTreasuryOutboundPaymentsQuerySchema = {
  customer?: string
  ending_before?: string
  expand?: string[]
  financial_account: string
  limit?: number
  starting_after?: string
  status?: "canceled" | "failed" | "posted" | "processing" | "returned"
}

export type t_GetTreasuryOutboundPaymentsIdBodySchema = EmptyObject

export type t_GetTreasuryOutboundPaymentsIdParamSchema = {
  id: string
}

export type t_GetTreasuryOutboundPaymentsIdQuerySchema = {
  expand?: string[]
}

export type t_GetTreasuryOutboundTransfersBodySchema = EmptyObject

export type t_GetTreasuryOutboundTransfersQuerySchema = {
  ending_before?: string
  expand?: string[]
  financial_account: string
  limit?: number
  starting_after?: string
  status?: "canceled" | "failed" | "posted" | "processing" | "returned"
}

export type t_GetTreasuryOutboundTransfersOutboundTransferBodySchema =
  EmptyObject

export type t_GetTreasuryOutboundTransfersOutboundTransferParamSchema = {
  outbound_transfer: string
}

export type t_GetTreasuryOutboundTransfersOutboundTransferQuerySchema = {
  expand?: string[]
}

export type t_GetTreasuryReceivedCreditsBodySchema = EmptyObject

export type t_GetTreasuryReceivedCreditsQuerySchema = {
  ending_before?: string
  expand?: string[]
  financial_account: string
  limit?: number
  linked_flows?: {
    source_flow_type:
      | "credit_reversal"
      | "other"
      | "outbound_payment"
      | "payout"
  }
  starting_after?: string
  status?: "failed" | "succeeded"
}

export type t_GetTreasuryReceivedCreditsIdBodySchema = EmptyObject

export type t_GetTreasuryReceivedCreditsIdParamSchema = {
  id: string
}

export type t_GetTreasuryReceivedCreditsIdQuerySchema = {
  expand?: string[]
}

export type t_GetTreasuryReceivedDebitsBodySchema = EmptyObject

export type t_GetTreasuryReceivedDebitsQuerySchema = {
  ending_before?: string
  expand?: string[]
  financial_account: string
  limit?: number
  starting_after?: string
  status?: "failed" | "succeeded"
}

export type t_GetTreasuryReceivedDebitsIdBodySchema = EmptyObject

export type t_GetTreasuryReceivedDebitsIdParamSchema = {
  id: string
}

export type t_GetTreasuryReceivedDebitsIdQuerySchema = {
  expand?: string[]
}

export type t_GetTreasuryTransactionEntriesBodySchema = EmptyObject

export type t_GetTreasuryTransactionEntriesQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  effective_at?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  financial_account: string
  limit?: number
  order_by?: "created" | "effective_at"
  starting_after?: string
  transaction?: string
}

export type t_GetTreasuryTransactionEntriesIdBodySchema = EmptyObject

export type t_GetTreasuryTransactionEntriesIdParamSchema = {
  id: string
}

export type t_GetTreasuryTransactionEntriesIdQuerySchema = {
  expand?: string[]
}

export type t_GetTreasuryTransactionsBodySchema = EmptyObject

export type t_GetTreasuryTransactionsQuerySchema = {
  created?:
    | {
        gt?: number
        gte?: number
        lt?: number
        lte?: number
      }
    | number
  ending_before?: string
  expand?: string[]
  financial_account: string
  limit?: number
  order_by?: "created" | "posted_at"
  starting_after?: string
  status?: "open" | "posted" | "void"
  status_transitions?: {
    posted_at?:
      | {
          gt?: number
          gte?: number
          lt?: number
          lte?: number
        }
      | number
  }
}

export type t_GetTreasuryTransactionsIdBodySchema = EmptyObject

export type t_GetTreasuryTransactionsIdParamSchema = {
  id: string
}

export type t_GetTreasuryTransactionsIdQuerySchema = {
  expand?: string[]
}

export type t_GetWebhookEndpointsBodySchema = EmptyObject

export type t_GetWebhookEndpointsQuerySchema = {
  ending_before?: string
  expand?: string[]
  limit?: number
  starting_after?: string
}

export type t_GetWebhookEndpointsWebhookEndpointBodySchema = EmptyObject

export type t_GetWebhookEndpointsWebhookEndpointParamSchema = {
  webhook_endpoint: string
}

export type t_GetWebhookEndpointsWebhookEndpointQuerySchema = {
  expand?: string[]
}

export type t_PostAccountLinksBodySchema = {
  account: string
  collect?: "currently_due" | "eventually_due"
  expand?: string[]
  refresh_url?: string
  return_url?: string
  type: "account_onboarding" | "account_update"
}

export type t_PostAccountSessionsBodySchema = {
  account: string
  components: {
    account_onboarding?: {
      enabled: boolean
    }
  }
  expand?: string[]
}

export type t_PostAccountsBodySchema = {
  account_token?: string
  bank_account?:
    | {
        account_holder_name?: string
        account_holder_type?: "company" | "individual"
        account_number: string
        account_type?: "checking" | "futsu" | "savings" | "toza"
        country: string
        currency?: string
        documents?: {
          bank_account_ownership_verification?: {
            files?: string[]
          }
        }
        object?: "bank_account"
        routing_number?: string
      }
    | string
  business_profile?: {
    mcc?: string
    monthly_estimated_revenue?: {
      amount: number
      currency: string
    }
    name?: string
    product_description?: string
    support_address?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    support_email?: string
    support_phone?: string
    support_url?: string | ""
    url?: string
  }
  business_type?: "company" | "government_entity" | "individual" | "non_profit"
  capabilities?: {
    acss_debit_payments?: {
      requested?: boolean
    }
    affirm_payments?: {
      requested?: boolean
    }
    afterpay_clearpay_payments?: {
      requested?: boolean
    }
    au_becs_debit_payments?: {
      requested?: boolean
    }
    bacs_debit_payments?: {
      requested?: boolean
    }
    bancontact_payments?: {
      requested?: boolean
    }
    bank_transfer_payments?: {
      requested?: boolean
    }
    blik_payments?: {
      requested?: boolean
    }
    boleto_payments?: {
      requested?: boolean
    }
    card_issuing?: {
      requested?: boolean
    }
    card_payments?: {
      requested?: boolean
    }
    cartes_bancaires_payments?: {
      requested?: boolean
    }
    cashapp_payments?: {
      requested?: boolean
    }
    eps_payments?: {
      requested?: boolean
    }
    fpx_payments?: {
      requested?: boolean
    }
    giropay_payments?: {
      requested?: boolean
    }
    grabpay_payments?: {
      requested?: boolean
    }
    ideal_payments?: {
      requested?: boolean
    }
    india_international_payments?: {
      requested?: boolean
    }
    jcb_payments?: {
      requested?: boolean
    }
    klarna_payments?: {
      requested?: boolean
    }
    konbini_payments?: {
      requested?: boolean
    }
    legacy_payments?: {
      requested?: boolean
    }
    link_payments?: {
      requested?: boolean
    }
    oxxo_payments?: {
      requested?: boolean
    }
    p24_payments?: {
      requested?: boolean
    }
    paynow_payments?: {
      requested?: boolean
    }
    promptpay_payments?: {
      requested?: boolean
    }
    sepa_debit_payments?: {
      requested?: boolean
    }
    sofort_payments?: {
      requested?: boolean
    }
    tax_reporting_us_1099_k?: {
      requested?: boolean
    }
    tax_reporting_us_1099_misc?: {
      requested?: boolean
    }
    transfers?: {
      requested?: boolean
    }
    treasury?: {
      requested?: boolean
    }
    us_bank_account_ach_payments?: {
      requested?: boolean
    }
    zip_payments?: {
      requested?: boolean
    }
  }
  company?: {
    address?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    address_kana?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
      town?: string
    }
    address_kanji?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
      town?: string
    }
    directors_provided?: boolean
    executives_provided?: boolean
    export_license_id?: string
    export_purpose_code?: string
    name?: string
    name_kana?: string
    name_kanji?: string
    owners_provided?: boolean
    ownership_declaration?: {
      date?: number
      ip?: string
      user_agent?: string
    }
    phone?: string
    registration_number?: string
    structure?:
      | ""
      | "free_zone_establishment"
      | "free_zone_llc"
      | "government_instrumentality"
      | "governmental_unit"
      | "incorporated_non_profit"
      | "incorporated_partnership"
      | "limited_liability_partnership"
      | "llc"
      | "multi_member_llc"
      | "private_company"
      | "private_corporation"
      | "private_partnership"
      | "public_company"
      | "public_corporation"
      | "public_partnership"
      | "single_member_llc"
      | "sole_establishment"
      | "sole_proprietorship"
      | "tax_exempt_government_instrumentality"
      | "unincorporated_association"
      | "unincorporated_non_profit"
      | "unincorporated_partnership"
    tax_id?: string
    tax_id_registrar?: string
    vat_id?: string
    verification?: {
      document?: {
        back?: string
        front?: string
      }
    }
  }
  country?: string
  default_currency?: string
  documents?: {
    bank_account_ownership_verification?: {
      files?: string[]
    }
    company_license?: {
      files?: string[]
    }
    company_memorandum_of_association?: {
      files?: string[]
    }
    company_ministerial_decree?: {
      files?: string[]
    }
    company_registration_verification?: {
      files?: string[]
    }
    company_tax_id_verification?: {
      files?: string[]
    }
    proof_of_registration?: {
      files?: string[]
    }
  }
  email?: string
  expand?: string[]
  external_account?: string
  individual?: {
    address?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    address_kana?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
      town?: string
    }
    address_kanji?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
      town?: string
    }
    dob?:
      | {
          day: number
          month: number
          year: number
        }
      | ""
    email?: string
    first_name?: string
    first_name_kana?: string
    first_name_kanji?: string
    full_name_aliases?: string[] | ""
    gender?: string
    id_number?: string
    id_number_secondary?: string
    last_name?: string
    last_name_kana?: string
    last_name_kanji?: string
    maiden_name?: string
    metadata?:
      | {
          [key: string]: string
        }
      | ""
    phone?: string
    political_exposure?: "existing" | "none"
    registered_address?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    ssn_last_4?: string
    verification?: {
      additional_document?: {
        back?: string
        front?: string
      }
      document?: {
        back?: string
        front?: string
      }
    }
  }
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  settings?: {
    branding?: {
      icon?: string
      logo?: string
      primary_color?: string
      secondary_color?: string
    }
    card_issuing?: {
      tos_acceptance?: {
        date?: number
        ip?: string
        user_agent?: string | ""
      }
    }
    card_payments?: {
      decline_on?: {
        avs_failure?: boolean
        cvc_failure?: boolean
      }
      statement_descriptor_prefix?: string
      statement_descriptor_prefix_kana?: string | ""
      statement_descriptor_prefix_kanji?: string | ""
    }
    payments?: {
      statement_descriptor?: string
      statement_descriptor_kana?: string
      statement_descriptor_kanji?: string
    }
    payouts?: {
      debit_negative_balances?: boolean
      schedule?: {
        delay_days?: "minimum" | number
        interval?: "daily" | "manual" | "monthly" | "weekly"
        monthly_anchor?: number
        weekly_anchor?:
          | "friday"
          | "monday"
          | "saturday"
          | "sunday"
          | "thursday"
          | "tuesday"
          | "wednesday"
      }
      statement_descriptor?: string
    }
    treasury?: {
      tos_acceptance?: {
        date?: number
        ip?: string
        user_agent?: string | ""
      }
    }
  }
  tos_acceptance?: {
    date?: number
    ip?: string
    service_agreement?: string
    user_agent?: string
  }
  type?: "custom" | "express" | "standard"
}

export type t_PostAccountsAccountBodySchema = {
  account_token?: string
  business_profile?: {
    mcc?: string
    monthly_estimated_revenue?: {
      amount: number
      currency: string
    }
    name?: string
    product_description?: string
    support_address?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    support_email?: string
    support_phone?: string
    support_url?: string | ""
    url?: string
  }
  business_type?: "company" | "government_entity" | "individual" | "non_profit"
  capabilities?: {
    acss_debit_payments?: {
      requested?: boolean
    }
    affirm_payments?: {
      requested?: boolean
    }
    afterpay_clearpay_payments?: {
      requested?: boolean
    }
    au_becs_debit_payments?: {
      requested?: boolean
    }
    bacs_debit_payments?: {
      requested?: boolean
    }
    bancontact_payments?: {
      requested?: boolean
    }
    bank_transfer_payments?: {
      requested?: boolean
    }
    blik_payments?: {
      requested?: boolean
    }
    boleto_payments?: {
      requested?: boolean
    }
    card_issuing?: {
      requested?: boolean
    }
    card_payments?: {
      requested?: boolean
    }
    cartes_bancaires_payments?: {
      requested?: boolean
    }
    cashapp_payments?: {
      requested?: boolean
    }
    eps_payments?: {
      requested?: boolean
    }
    fpx_payments?: {
      requested?: boolean
    }
    giropay_payments?: {
      requested?: boolean
    }
    grabpay_payments?: {
      requested?: boolean
    }
    ideal_payments?: {
      requested?: boolean
    }
    india_international_payments?: {
      requested?: boolean
    }
    jcb_payments?: {
      requested?: boolean
    }
    klarna_payments?: {
      requested?: boolean
    }
    konbini_payments?: {
      requested?: boolean
    }
    legacy_payments?: {
      requested?: boolean
    }
    link_payments?: {
      requested?: boolean
    }
    oxxo_payments?: {
      requested?: boolean
    }
    p24_payments?: {
      requested?: boolean
    }
    paynow_payments?: {
      requested?: boolean
    }
    promptpay_payments?: {
      requested?: boolean
    }
    sepa_debit_payments?: {
      requested?: boolean
    }
    sofort_payments?: {
      requested?: boolean
    }
    tax_reporting_us_1099_k?: {
      requested?: boolean
    }
    tax_reporting_us_1099_misc?: {
      requested?: boolean
    }
    transfers?: {
      requested?: boolean
    }
    treasury?: {
      requested?: boolean
    }
    us_bank_account_ach_payments?: {
      requested?: boolean
    }
    zip_payments?: {
      requested?: boolean
    }
  }
  company?: {
    address?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    address_kana?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
      town?: string
    }
    address_kanji?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
      town?: string
    }
    directors_provided?: boolean
    executives_provided?: boolean
    export_license_id?: string
    export_purpose_code?: string
    name?: string
    name_kana?: string
    name_kanji?: string
    owners_provided?: boolean
    ownership_declaration?: {
      date?: number
      ip?: string
      user_agent?: string
    }
    phone?: string
    registration_number?: string
    structure?:
      | ""
      | "free_zone_establishment"
      | "free_zone_llc"
      | "government_instrumentality"
      | "governmental_unit"
      | "incorporated_non_profit"
      | "incorporated_partnership"
      | "limited_liability_partnership"
      | "llc"
      | "multi_member_llc"
      | "private_company"
      | "private_corporation"
      | "private_partnership"
      | "public_company"
      | "public_corporation"
      | "public_partnership"
      | "single_member_llc"
      | "sole_establishment"
      | "sole_proprietorship"
      | "tax_exempt_government_instrumentality"
      | "unincorporated_association"
      | "unincorporated_non_profit"
      | "unincorporated_partnership"
    tax_id?: string
    tax_id_registrar?: string
    vat_id?: string
    verification?: {
      document?: {
        back?: string
        front?: string
      }
    }
  }
  default_currency?: string
  documents?: {
    bank_account_ownership_verification?: {
      files?: string[]
    }
    company_license?: {
      files?: string[]
    }
    company_memorandum_of_association?: {
      files?: string[]
    }
    company_ministerial_decree?: {
      files?: string[]
    }
    company_registration_verification?: {
      files?: string[]
    }
    company_tax_id_verification?: {
      files?: string[]
    }
    proof_of_registration?: {
      files?: string[]
    }
  }
  email?: string
  expand?: string[]
  external_account?: string
  individual?: {
    address?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    address_kana?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
      town?: string
    }
    address_kanji?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
      town?: string
    }
    dob?:
      | {
          day: number
          month: number
          year: number
        }
      | ""
    email?: string
    first_name?: string
    first_name_kana?: string
    first_name_kanji?: string
    full_name_aliases?: string[] | ""
    gender?: string
    id_number?: string
    id_number_secondary?: string
    last_name?: string
    last_name_kana?: string
    last_name_kanji?: string
    maiden_name?: string
    metadata?:
      | {
          [key: string]: string
        }
      | ""
    phone?: string
    political_exposure?: "existing" | "none"
    registered_address?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    ssn_last_4?: string
    verification?: {
      additional_document?: {
        back?: string
        front?: string
      }
      document?: {
        back?: string
        front?: string
      }
    }
  }
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  settings?: {
    branding?: {
      icon?: string
      logo?: string
      primary_color?: string
      secondary_color?: string
    }
    card_issuing?: {
      tos_acceptance?: {
        date?: number
        ip?: string
        user_agent?: string | ""
      }
    }
    card_payments?: {
      decline_on?: {
        avs_failure?: boolean
        cvc_failure?: boolean
      }
      statement_descriptor_prefix?: string
      statement_descriptor_prefix_kana?: string | ""
      statement_descriptor_prefix_kanji?: string | ""
    }
    payments?: {
      statement_descriptor?: string
      statement_descriptor_kana?: string
      statement_descriptor_kanji?: string
    }
    payouts?: {
      debit_negative_balances?: boolean
      schedule?: {
        delay_days?: "minimum" | number
        interval?: "daily" | "manual" | "monthly" | "weekly"
        monthly_anchor?: number
        weekly_anchor?:
          | "friday"
          | "monday"
          | "saturday"
          | "sunday"
          | "thursday"
          | "tuesday"
          | "wednesday"
      }
      statement_descriptor?: string
    }
    treasury?: {
      tos_acceptance?: {
        date?: number
        ip?: string
        user_agent?: string | ""
      }
    }
  }
  tos_acceptance?: {
    date?: number
    ip?: string
    service_agreement?: string
    user_agent?: string
  }
}

export type t_PostAccountsAccountParamSchema = {
  account: string
}

export type t_PostAccountsAccountBankAccountsBodySchema = {
  bank_account?:
    | {
        account_holder_name?: string
        account_holder_type?: "company" | "individual"
        account_number: string
        account_type?: "checking" | "futsu" | "savings" | "toza"
        country: string
        currency?: string
        documents?: {
          bank_account_ownership_verification?: {
            files?: string[]
          }
        }
        object?: "bank_account"
        routing_number?: string
      }
    | string
  default_for_currency?: boolean
  expand?: string[]
  external_account?: string
  metadata?: {
    [key: string]: string
  }
}

export type t_PostAccountsAccountBankAccountsParamSchema = {
  account: string
}

export type t_PostAccountsAccountBankAccountsIdBodySchema = {
  account_holder_name?: string
  account_holder_type?: "" | "company" | "individual"
  account_type?: "checking" | "futsu" | "savings" | "toza"
  address_city?: string
  address_country?: string
  address_line1?: string
  address_line2?: string
  address_state?: string
  address_zip?: string
  default_for_currency?: boolean
  documents?: {
    bank_account_ownership_verification?: {
      files?: string[]
    }
  }
  exp_month?: string
  exp_year?: string
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  name?: string
}

export type t_PostAccountsAccountBankAccountsIdParamSchema = {
  account: string
  id: string
}

export type t_PostAccountsAccountCapabilitiesCapabilityBodySchema = {
  expand?: string[]
  requested?: boolean
}

export type t_PostAccountsAccountCapabilitiesCapabilityParamSchema = {
  account: string
  capability: string
}

export type t_PostAccountsAccountExternalAccountsBodySchema = {
  bank_account?:
    | {
        account_holder_name?: string
        account_holder_type?: "company" | "individual"
        account_number: string
        account_type?: "checking" | "futsu" | "savings" | "toza"
        country: string
        currency?: string
        documents?: {
          bank_account_ownership_verification?: {
            files?: string[]
          }
        }
        object?: "bank_account"
        routing_number?: string
      }
    | string
  default_for_currency?: boolean
  expand?: string[]
  external_account?: string
  metadata?: {
    [key: string]: string
  }
}

export type t_PostAccountsAccountExternalAccountsParamSchema = {
  account: string
}

export type t_PostAccountsAccountExternalAccountsIdBodySchema = {
  account_holder_name?: string
  account_holder_type?: "" | "company" | "individual"
  account_type?: "checking" | "futsu" | "savings" | "toza"
  address_city?: string
  address_country?: string
  address_line1?: string
  address_line2?: string
  address_state?: string
  address_zip?: string
  default_for_currency?: boolean
  documents?: {
    bank_account_ownership_verification?: {
      files?: string[]
    }
  }
  exp_month?: string
  exp_year?: string
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  name?: string
}

export type t_PostAccountsAccountExternalAccountsIdParamSchema = {
  account: string
  id: string
}

export type t_PostAccountsAccountLoginLinksBodySchema = {
  expand?: string[]
}

export type t_PostAccountsAccountLoginLinksParamSchema = {
  account: string
}

export type t_PostAccountsAccountPeopleBodySchema = {
  address?: {
    city?: string
    country?: string
    line1?: string
    line2?: string
    postal_code?: string
    state?: string
  }
  address_kana?: {
    city?: string
    country?: string
    line1?: string
    line2?: string
    postal_code?: string
    state?: string
    town?: string
  }
  address_kanji?: {
    city?: string
    country?: string
    line1?: string
    line2?: string
    postal_code?: string
    state?: string
    town?: string
  }
  dob?:
    | {
        day: number
        month: number
        year: number
      }
    | ""
  documents?: {
    company_authorization?: {
      files?: (string | "")[]
    }
    passport?: {
      files?: (string | "")[]
    }
    visa?: {
      files?: (string | "")[]
    }
  }
  email?: string
  expand?: string[]
  first_name?: string
  first_name_kana?: string
  first_name_kanji?: string
  full_name_aliases?: string[] | ""
  gender?: string
  id_number?: string
  id_number_secondary?: string
  last_name?: string
  last_name_kana?: string
  last_name_kanji?: string
  maiden_name?: string
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  nationality?: string
  person_token?: string
  phone?: string
  political_exposure?: string
  registered_address?: {
    city?: string
    country?: string
    line1?: string
    line2?: string
    postal_code?: string
    state?: string
  }
  relationship?: {
    director?: boolean
    executive?: boolean
    owner?: boolean
    percent_ownership?: number | ""
    representative?: boolean
    title?: string
  }
  ssn_last_4?: string
  verification?: {
    additional_document?: {
      back?: string
      front?: string
    }
    document?: {
      back?: string
      front?: string
    }
  }
}

export type t_PostAccountsAccountPeopleParamSchema = {
  account: string
}

export type t_PostAccountsAccountPeoplePersonBodySchema = {
  address?: {
    city?: string
    country?: string
    line1?: string
    line2?: string
    postal_code?: string
    state?: string
  }
  address_kana?: {
    city?: string
    country?: string
    line1?: string
    line2?: string
    postal_code?: string
    state?: string
    town?: string
  }
  address_kanji?: {
    city?: string
    country?: string
    line1?: string
    line2?: string
    postal_code?: string
    state?: string
    town?: string
  }
  dob?:
    | {
        day: number
        month: number
        year: number
      }
    | ""
  documents?: {
    company_authorization?: {
      files?: (string | "")[]
    }
    passport?: {
      files?: (string | "")[]
    }
    visa?: {
      files?: (string | "")[]
    }
  }
  email?: string
  expand?: string[]
  first_name?: string
  first_name_kana?: string
  first_name_kanji?: string
  full_name_aliases?: string[] | ""
  gender?: string
  id_number?: string
  id_number_secondary?: string
  last_name?: string
  last_name_kana?: string
  last_name_kanji?: string
  maiden_name?: string
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  nationality?: string
  person_token?: string
  phone?: string
  political_exposure?: string
  registered_address?: {
    city?: string
    country?: string
    line1?: string
    line2?: string
    postal_code?: string
    state?: string
  }
  relationship?: {
    director?: boolean
    executive?: boolean
    owner?: boolean
    percent_ownership?: number | ""
    representative?: boolean
    title?: string
  }
  ssn_last_4?: string
  verification?: {
    additional_document?: {
      back?: string
      front?: string
    }
    document?: {
      back?: string
      front?: string
    }
  }
}

export type t_PostAccountsAccountPeoplePersonParamSchema = {
  account: string
  person: string
}

export type t_PostAccountsAccountPersonsBodySchema = {
  address?: {
    city?: string
    country?: string
    line1?: string
    line2?: string
    postal_code?: string
    state?: string
  }
  address_kana?: {
    city?: string
    country?: string
    line1?: string
    line2?: string
    postal_code?: string
    state?: string
    town?: string
  }
  address_kanji?: {
    city?: string
    country?: string
    line1?: string
    line2?: string
    postal_code?: string
    state?: string
    town?: string
  }
  dob?:
    | {
        day: number
        month: number
        year: number
      }
    | ""
  documents?: {
    company_authorization?: {
      files?: (string | "")[]
    }
    passport?: {
      files?: (string | "")[]
    }
    visa?: {
      files?: (string | "")[]
    }
  }
  email?: string
  expand?: string[]
  first_name?: string
  first_name_kana?: string
  first_name_kanji?: string
  full_name_aliases?: string[] | ""
  gender?: string
  id_number?: string
  id_number_secondary?: string
  last_name?: string
  last_name_kana?: string
  last_name_kanji?: string
  maiden_name?: string
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  nationality?: string
  person_token?: string
  phone?: string
  political_exposure?: string
  registered_address?: {
    city?: string
    country?: string
    line1?: string
    line2?: string
    postal_code?: string
    state?: string
  }
  relationship?: {
    director?: boolean
    executive?: boolean
    owner?: boolean
    percent_ownership?: number | ""
    representative?: boolean
    title?: string
  }
  ssn_last_4?: string
  verification?: {
    additional_document?: {
      back?: string
      front?: string
    }
    document?: {
      back?: string
      front?: string
    }
  }
}

export type t_PostAccountsAccountPersonsParamSchema = {
  account: string
}

export type t_PostAccountsAccountPersonsPersonBodySchema = {
  address?: {
    city?: string
    country?: string
    line1?: string
    line2?: string
    postal_code?: string
    state?: string
  }
  address_kana?: {
    city?: string
    country?: string
    line1?: string
    line2?: string
    postal_code?: string
    state?: string
    town?: string
  }
  address_kanji?: {
    city?: string
    country?: string
    line1?: string
    line2?: string
    postal_code?: string
    state?: string
    town?: string
  }
  dob?:
    | {
        day: number
        month: number
        year: number
      }
    | ""
  documents?: {
    company_authorization?: {
      files?: (string | "")[]
    }
    passport?: {
      files?: (string | "")[]
    }
    visa?: {
      files?: (string | "")[]
    }
  }
  email?: string
  expand?: string[]
  first_name?: string
  first_name_kana?: string
  first_name_kanji?: string
  full_name_aliases?: string[] | ""
  gender?: string
  id_number?: string
  id_number_secondary?: string
  last_name?: string
  last_name_kana?: string
  last_name_kanji?: string
  maiden_name?: string
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  nationality?: string
  person_token?: string
  phone?: string
  political_exposure?: string
  registered_address?: {
    city?: string
    country?: string
    line1?: string
    line2?: string
    postal_code?: string
    state?: string
  }
  relationship?: {
    director?: boolean
    executive?: boolean
    owner?: boolean
    percent_ownership?: number | ""
    representative?: boolean
    title?: string
  }
  ssn_last_4?: string
  verification?: {
    additional_document?: {
      back?: string
      front?: string
    }
    document?: {
      back?: string
      front?: string
    }
  }
}

export type t_PostAccountsAccountPersonsPersonParamSchema = {
  account: string
  person: string
}

export type t_PostAccountsAccountRejectBodySchema = {
  expand?: string[]
  reason: string
}

export type t_PostAccountsAccountRejectParamSchema = {
  account: string
}

export type t_PostApplePayDomainsBodySchema = {
  domain_name: string
  expand?: string[]
}

export type t_PostApplicationFeesFeeRefundsIdBodySchema = {
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostApplicationFeesFeeRefundsIdParamSchema = {
  fee: string
  id: string
}

export type t_PostApplicationFeesIdRefundBodySchema = {
  amount?: number
  directive?: string
  expand?: string[]
}

export type t_PostApplicationFeesIdRefundParamSchema = {
  id: string
}

export type t_PostApplicationFeesIdRefundsBodySchema = {
  amount?: number
  expand?: string[]
  metadata?: {
    [key: string]: string
  }
}

export type t_PostApplicationFeesIdRefundsParamSchema = {
  id: string
}

export type t_PostAppsSecretsBodySchema = {
  expand?: string[]
  expires_at?: number
  name: string
  payload: string
  scope: {
    type: "account" | "user"
    user?: string
  }
}

export type t_PostAppsSecretsDeleteBodySchema = {
  expand?: string[]
  name: string
  scope: {
    type: "account" | "user"
    user?: string
  }
}

export type t_PostBillingPortalConfigurationsBodySchema = {
  business_profile: {
    headline?: string | ""
    privacy_policy_url?: string
    terms_of_service_url?: string
  }
  default_return_url?: string | ""
  expand?: string[]
  features: {
    customer_update?: {
      allowed_updates?:
        | ("address" | "email" | "name" | "phone" | "shipping" | "tax_id")[]
        | ""
      enabled: boolean
    }
    invoice_history?: {
      enabled: boolean
    }
    payment_method_update?: {
      enabled: boolean
    }
    subscription_cancel?: {
      cancellation_reason?: {
        enabled: boolean
        options:
          | (
              | "customer_service"
              | "low_quality"
              | "missing_features"
              | "other"
              | "switched_service"
              | "too_complex"
              | "too_expensive"
              | "unused"
            )[]
          | ""
      }
      enabled: boolean
      mode?: "at_period_end" | "immediately"
      proration_behavior?: "always_invoice" | "create_prorations" | "none"
    }
    subscription_pause?: {
      enabled?: boolean
    }
    subscription_update?: {
      default_allowed_updates: ("price" | "promotion_code" | "quantity")[] | ""
      enabled: boolean
      products:
        | {
            prices: string[]
            product: string
          }[]
        | ""
      proration_behavior?: "always_invoice" | "create_prorations" | "none"
    }
  }
  login_page?: {
    enabled: boolean
  }
  metadata?: {
    [key: string]: string
  }
}

export type t_PostBillingPortalConfigurationsConfigurationBodySchema = {
  active?: boolean
  business_profile?: {
    headline?: string | ""
    privacy_policy_url?: string | ""
    terms_of_service_url?: string | ""
  }
  default_return_url?: string | ""
  expand?: string[]
  features?: {
    customer_update?: {
      allowed_updates?:
        | ("address" | "email" | "name" | "phone" | "shipping" | "tax_id")[]
        | ""
      enabled?: boolean
    }
    invoice_history?: {
      enabled: boolean
    }
    payment_method_update?: {
      enabled: boolean
    }
    subscription_cancel?: {
      cancellation_reason?: {
        enabled: boolean
        options?:
          | (
              | "customer_service"
              | "low_quality"
              | "missing_features"
              | "other"
              | "switched_service"
              | "too_complex"
              | "too_expensive"
              | "unused"
            )[]
          | ""
      }
      enabled?: boolean
      mode?: "at_period_end" | "immediately"
      proration_behavior?: "always_invoice" | "create_prorations" | "none"
    }
    subscription_pause?: {
      enabled?: boolean
    }
    subscription_update?: {
      default_allowed_updates?: ("price" | "promotion_code" | "quantity")[] | ""
      enabled?: boolean
      products?:
        | {
            prices: string[]
            product: string
          }[]
        | ""
      proration_behavior?: "always_invoice" | "create_prorations" | "none"
    }
  }
  login_page?: {
    enabled: boolean
  }
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostBillingPortalConfigurationsConfigurationParamSchema = {
  configuration: string
}

export type t_PostBillingPortalSessionsBodySchema = {
  configuration?: string
  customer: string
  expand?: string[]
  flow_data?: {
    after_completion?: {
      hosted_confirmation?: {
        custom_message?: string
      }
      redirect?: {
        return_url: string
      }
      type: "hosted_confirmation" | "portal_homepage" | "redirect"
    }
    subscription_cancel?: {
      retention?: {
        coupon_offer: {
          coupon: string
        }
        type: "coupon_offer"
      }
      subscription: string
    }
    subscription_update?: {
      subscription: string
    }
    subscription_update_confirm?: {
      discounts?: {
        coupon?: string
        promotion_code?: string
      }[]
      items: {
        id: string
        price?: string
        quantity?: number
      }[]
      subscription: string
    }
    type:
      | "payment_method_update"
      | "subscription_cancel"
      | "subscription_update"
      | "subscription_update_confirm"
  }
  locale?:
    | "auto"
    | "bg"
    | "cs"
    | "da"
    | "de"
    | "el"
    | "en"
    | "en-AU"
    | "en-CA"
    | "en-GB"
    | "en-IE"
    | "en-IN"
    | "en-NZ"
    | "en-SG"
    | "es"
    | "es-419"
    | "et"
    | "fi"
    | "fil"
    | "fr"
    | "fr-CA"
    | "hr"
    | "hu"
    | "id"
    | "it"
    | "ja"
    | "ko"
    | "lt"
    | "lv"
    | "ms"
    | "mt"
    | "nb"
    | "nl"
    | "pl"
    | "pt"
    | "pt-BR"
    | "ro"
    | "ru"
    | "sk"
    | "sl"
    | "sv"
    | "th"
    | "tr"
    | "vi"
    | "zh"
    | "zh-HK"
    | "zh-TW"
  on_behalf_of?: string
  return_url?: string
}

export type t_PostChargesBodySchema = {
  amount?: number
  application_fee?: number
  application_fee_amount?: number
  capture?: boolean
  card?:
    | {
        address_city?: string
        address_country?: string
        address_line1?: string
        address_line2?: string
        address_state?: string
        address_zip?: string
        cvc?: string
        exp_month: number
        exp_year: number
        metadata?: {
          [key: string]: string
        }
        name?: string
        number: string
        object?: "card"
      }
    | string
  currency?: string
  customer?: string
  description?: string
  destination?:
    | {
        account: string
        amount?: number
      }
    | string
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  on_behalf_of?: string
  radar_options?: {
    session?: string
  }
  receipt_email?: string
  shipping?: {
    address: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    carrier?: string
    name: string
    phone?: string
    tracking_number?: string
  }
  source?: string
  statement_descriptor?: string
  statement_descriptor_suffix?: string
  transfer_data?: {
    amount?: number
    destination: string
  }
  transfer_group?: string
}

export type t_PostChargesChargeBodySchema = {
  customer?: string
  description?: string
  expand?: string[]
  fraud_details?: {
    user_report: "" | "fraudulent" | "safe"
  }
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  receipt_email?: string
  shipping?: {
    address: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    carrier?: string
    name: string
    phone?: string
    tracking_number?: string
  }
  transfer_group?: string
}

export type t_PostChargesChargeParamSchema = {
  charge: string
}

export type t_PostChargesChargeCaptureBodySchema = {
  amount?: number
  application_fee?: number
  application_fee_amount?: number
  expand?: string[]
  receipt_email?: string
  statement_descriptor?: string
  statement_descriptor_suffix?: string
  transfer_data?: {
    amount?: number
  }
  transfer_group?: string
}

export type t_PostChargesChargeCaptureParamSchema = {
  charge: string
}

export type t_PostChargesChargeDisputeBodySchema = {
  evidence?: {
    access_activity_log?: string
    billing_address?: string
    cancellation_policy?: string
    cancellation_policy_disclosure?: string
    cancellation_rebuttal?: string
    customer_communication?: string
    customer_email_address?: string
    customer_name?: string
    customer_purchase_ip?: string
    customer_signature?: string
    duplicate_charge_documentation?: string
    duplicate_charge_explanation?: string
    duplicate_charge_id?: string
    product_description?: string
    receipt?: string
    refund_policy?: string
    refund_policy_disclosure?: string
    refund_refusal_explanation?: string
    service_date?: string
    service_documentation?: string
    shipping_address?: string
    shipping_carrier?: string
    shipping_date?: string
    shipping_documentation?: string
    shipping_tracking_number?: string
    uncategorized_file?: string
    uncategorized_text?: string
  }
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  submit?: boolean
}

export type t_PostChargesChargeDisputeParamSchema = {
  charge: string
}

export type t_PostChargesChargeDisputeCloseBodySchema = {
  expand?: string[]
}

export type t_PostChargesChargeDisputeCloseParamSchema = {
  charge: string
}

export type t_PostChargesChargeRefundBodySchema = {
  amount?: number
  expand?: string[]
  instructions_email?: string
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  payment_intent?: string
  reason?: "duplicate" | "fraudulent" | "requested_by_customer"
  refund_application_fee?: boolean
  reverse_transfer?: boolean
}

export type t_PostChargesChargeRefundParamSchema = {
  charge: string
}

export type t_PostChargesChargeRefundsBodySchema = {
  amount?: number
  currency?: string
  customer?: string
  expand?: string[]
  instructions_email?: string
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  origin?: "customer_balance"
  payment_intent?: string
  reason?: "duplicate" | "fraudulent" | "requested_by_customer"
  refund_application_fee?: boolean
  reverse_transfer?: boolean
}

export type t_PostChargesChargeRefundsParamSchema = {
  charge: string
}

export type t_PostChargesChargeRefundsRefundBodySchema = {
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostChargesChargeRefundsRefundParamSchema = {
  charge: string
  refund: string
}

export type t_PostCheckoutSessionsBodySchema = {
  after_expiration?: {
    recovery?: {
      allow_promotion_codes?: boolean
      enabled: boolean
    }
  }
  allow_promotion_codes?: boolean
  automatic_tax?: {
    enabled: boolean
  }
  billing_address_collection?: "auto" | "required"
  cancel_url?: string
  client_reference_id?: string
  consent_collection?: {
    promotions?: "auto" | "none"
    terms_of_service?: "none" | "required"
  }
  currency?: string
  custom_fields?: {
    dropdown?: {
      options: {
        label: string
        value: string
      }[]
    }
    key: string
    label: {
      custom: string
      type: "custom"
    }
    numeric?: {
      maximum_length?: number
      minimum_length?: number
    }
    optional?: boolean
    text?: {
      maximum_length?: number
      minimum_length?: number
    }
    type: "dropdown" | "numeric" | "text"
  }[]
  custom_text?: {
    shipping_address?:
      | {
          message: string
        }
      | ""
    submit?:
      | {
          message: string
        }
      | ""
    terms_of_service_acceptance?:
      | {
          message: string
        }
      | ""
  }
  customer?: string
  customer_creation?: "always" | "if_required"
  customer_email?: string
  customer_update?: {
    address?: "auto" | "never"
    name?: "auto" | "never"
    shipping?: "auto" | "never"
  }
  discounts?: {
    coupon?: string
    promotion_code?: string
  }[]
  expand?: string[]
  expires_at?: number
  invoice_creation?: {
    enabled: boolean
    invoice_data?: {
      account_tax_ids?: string[] | ""
      custom_fields?:
        | {
            name: string
            value: string
          }[]
        | ""
      description?: string
      footer?: string
      metadata?: {
        [key: string]: string
      }
      rendering_options?:
        | {
            amount_tax_display?: "" | "exclude_tax" | "include_inclusive_tax"
          }
        | ""
    }
  }
  line_items?: {
    adjustable_quantity?: {
      enabled: boolean
      maximum?: number
      minimum?: number
    }
    dynamic_tax_rates?: string[]
    price?: string
    price_data?: {
      currency: string
      product?: string
      product_data?: {
        description?: string
        images?: string[]
        metadata?: {
          [key: string]: string
        }
        name: string
        tax_code?: string
      }
      recurring?: {
        interval: "day" | "month" | "week" | "year"
        interval_count?: number
      }
      tax_behavior?: "exclusive" | "inclusive" | "unspecified"
      unit_amount?: number
      unit_amount_decimal?: string
    }
    quantity?: number
    tax_rates?: string[]
  }[]
  locale?:
    | "auto"
    | "bg"
    | "cs"
    | "da"
    | "de"
    | "el"
    | "en"
    | "en-GB"
    | "es"
    | "es-419"
    | "et"
    | "fi"
    | "fil"
    | "fr"
    | "fr-CA"
    | "hr"
    | "hu"
    | "id"
    | "it"
    | "ja"
    | "ko"
    | "lt"
    | "lv"
    | "ms"
    | "mt"
    | "nb"
    | "nl"
    | "pl"
    | "pt"
    | "pt-BR"
    | "ro"
    | "ru"
    | "sk"
    | "sl"
    | "sv"
    | "th"
    | "tr"
    | "vi"
    | "zh"
    | "zh-HK"
    | "zh-TW"
  metadata?: {
    [key: string]: string
  }
  mode?: "payment" | "setup" | "subscription"
  payment_intent_data?: {
    application_fee_amount?: number
    capture_method?: "automatic" | "automatic_async" | "manual"
    description?: string
    metadata?: {
      [key: string]: string
    }
    on_behalf_of?: string
    receipt_email?: string
    setup_future_usage?: "off_session" | "on_session"
    shipping?: {
      address: {
        city?: string
        country?: string
        line1: string
        line2?: string
        postal_code?: string
        state?: string
      }
      carrier?: string
      name: string
      phone?: string
      tracking_number?: string
    }
    statement_descriptor?: string
    statement_descriptor_suffix?: string
    transfer_data?: {
      amount?: number
      destination: string
    }
    transfer_group?: string
  }
  payment_method_collection?: "always" | "if_required"
  payment_method_configuration?: string
  payment_method_options?: {
    acss_debit?: {
      currency?: "cad" | "usd"
      mandate_options?: {
        custom_mandate_url?: string | ""
        default_for?: ("invoice" | "subscription")[]
        interval_description?: string
        payment_schedule?: "combined" | "interval" | "sporadic"
        transaction_type?: "business" | "personal"
      }
      setup_future_usage?: "none" | "off_session" | "on_session"
      verification_method?: "automatic" | "instant" | "microdeposits"
    }
    affirm?: {
      setup_future_usage?: "none"
    }
    afterpay_clearpay?: {
      setup_future_usage?: "none"
    }
    alipay?: {
      setup_future_usage?: "none"
    }
    au_becs_debit?: {
      setup_future_usage?: "none"
    }
    bacs_debit?: {
      setup_future_usage?: "none" | "off_session" | "on_session"
    }
    bancontact?: {
      setup_future_usage?: "none"
    }
    boleto?: {
      expires_after_days?: number
      setup_future_usage?: "none" | "off_session" | "on_session"
    }
    card?: {
      installments?: {
        enabled?: boolean
      }
      setup_future_usage?: "off_session" | "on_session"
      statement_descriptor_suffix_kana?: string
      statement_descriptor_suffix_kanji?: string
    }
    cashapp?: {
      setup_future_usage?: "none" | "off_session" | "on_session"
    }
    customer_balance?: {
      bank_transfer?: {
        eu_bank_transfer?: {
          country: string
        }
        requested_address_types?: (
          | "aba"
          | "iban"
          | "sepa"
          | "sort_code"
          | "spei"
          | "swift"
          | "zengin"
        )[]
        type:
          | "eu_bank_transfer"
          | "gb_bank_transfer"
          | "jp_bank_transfer"
          | "mx_bank_transfer"
          | "us_bank_transfer"
      }
      funding_type?: "bank_transfer"
      setup_future_usage?: "none"
    }
    eps?: {
      setup_future_usage?: "none"
    }
    fpx?: {
      setup_future_usage?: "none"
    }
    giropay?: {
      setup_future_usage?: "none"
    }
    grabpay?: {
      setup_future_usage?: "none"
    }
    ideal?: {
      setup_future_usage?: "none"
    }
    klarna?: {
      setup_future_usage?: "none"
    }
    konbini?: {
      expires_after_days?: number
      setup_future_usage?: "none"
    }
    link?: {
      setup_future_usage?: "none" | "off_session"
    }
    oxxo?: {
      expires_after_days?: number
      setup_future_usage?: "none"
    }
    p24?: {
      setup_future_usage?: "none"
      tos_shown_and_accepted?: boolean
    }
    paynow?: {
      setup_future_usage?: "none"
    }
    paypal?: {
      capture_method?: "" | "manual"
      preferred_locale?:
        | "cs-CZ"
        | "da-DK"
        | "de-AT"
        | "de-DE"
        | "de-LU"
        | "el-GR"
        | "en-GB"
        | "en-US"
        | "es-ES"
        | "fi-FI"
        | "fr-BE"
        | "fr-FR"
        | "fr-LU"
        | "hu-HU"
        | "it-IT"
        | "nl-BE"
        | "nl-NL"
        | "pl-PL"
        | "pt-PT"
        | "sk-SK"
        | "sv-SE"
      reference?: string
      risk_correlation_id?: string
      setup_future_usage?: "" | "none" | "off_session"
    }
    pix?: {
      expires_after_seconds?: number
    }
    sepa_debit?: {
      setup_future_usage?: "none" | "off_session" | "on_session"
    }
    sofort?: {
      setup_future_usage?: "none"
    }
    us_bank_account?: {
      financial_connections?: {
        permissions?: (
          | "balances"
          | "ownership"
          | "payment_method"
          | "transactions"
        )[]
        prefetch?: "balances"[]
      }
      setup_future_usage?: "none" | "off_session" | "on_session"
      verification_method?: "automatic" | "instant"
    }
    wechat_pay?: {
      app_id?: string
      client: "android" | "ios" | "web"
      setup_future_usage?: "none"
    }
  }
  payment_method_types?: (
    | "acss_debit"
    | "affirm"
    | "afterpay_clearpay"
    | "alipay"
    | "au_becs_debit"
    | "bacs_debit"
    | "bancontact"
    | "blik"
    | "boleto"
    | "card"
    | "cashapp"
    | "customer_balance"
    | "eps"
    | "fpx"
    | "giropay"
    | "grabpay"
    | "ideal"
    | "klarna"
    | "konbini"
    | "link"
    | "oxxo"
    | "p24"
    | "paynow"
    | "paypal"
    | "pix"
    | "promptpay"
    | "sepa_debit"
    | "sofort"
    | "us_bank_account"
    | "wechat_pay"
    | "zip"
  )[]
  phone_number_collection?: {
    enabled: boolean
  }
  setup_intent_data?: {
    description?: string
    metadata?: {
      [key: string]: string
    }
    on_behalf_of?: string
  }
  shipping_address_collection?: {
    allowed_countries: (
      | "AC"
      | "AD"
      | "AE"
      | "AF"
      | "AG"
      | "AI"
      | "AL"
      | "AM"
      | "AO"
      | "AQ"
      | "AR"
      | "AT"
      | "AU"
      | "AW"
      | "AX"
      | "AZ"
      | "BA"
      | "BB"
      | "BD"
      | "BE"
      | "BF"
      | "BG"
      | "BH"
      | "BI"
      | "BJ"
      | "BL"
      | "BM"
      | "BN"
      | "BO"
      | "BQ"
      | "BR"
      | "BS"
      | "BT"
      | "BV"
      | "BW"
      | "BY"
      | "BZ"
      | "CA"
      | "CD"
      | "CF"
      | "CG"
      | "CH"
      | "CI"
      | "CK"
      | "CL"
      | "CM"
      | "CN"
      | "CO"
      | "CR"
      | "CV"
      | "CW"
      | "CY"
      | "CZ"
      | "DE"
      | "DJ"
      | "DK"
      | "DM"
      | "DO"
      | "DZ"
      | "EC"
      | "EE"
      | "EG"
      | "EH"
      | "ER"
      | "ES"
      | "ET"
      | "FI"
      | "FJ"
      | "FK"
      | "FO"
      | "FR"
      | "GA"
      | "GB"
      | "GD"
      | "GE"
      | "GF"
      | "GG"
      | "GH"
      | "GI"
      | "GL"
      | "GM"
      | "GN"
      | "GP"
      | "GQ"
      | "GR"
      | "GS"
      | "GT"
      | "GU"
      | "GW"
      | "GY"
      | "HK"
      | "HN"
      | "HR"
      | "HT"
      | "HU"
      | "ID"
      | "IE"
      | "IL"
      | "IM"
      | "IN"
      | "IO"
      | "IQ"
      | "IS"
      | "IT"
      | "JE"
      | "JM"
      | "JO"
      | "JP"
      | "KE"
      | "KG"
      | "KH"
      | "KI"
      | "KM"
      | "KN"
      | "KR"
      | "KW"
      | "KY"
      | "KZ"
      | "LA"
      | "LB"
      | "LC"
      | "LI"
      | "LK"
      | "LR"
      | "LS"
      | "LT"
      | "LU"
      | "LV"
      | "LY"
      | "MA"
      | "MC"
      | "MD"
      | "ME"
      | "MF"
      | "MG"
      | "MK"
      | "ML"
      | "MM"
      | "MN"
      | "MO"
      | "MQ"
      | "MR"
      | "MS"
      | "MT"
      | "MU"
      | "MV"
      | "MW"
      | "MX"
      | "MY"
      | "MZ"
      | "NA"
      | "NC"
      | "NE"
      | "NG"
      | "NI"
      | "NL"
      | "NO"
      | "NP"
      | "NR"
      | "NU"
      | "NZ"
      | "OM"
      | "PA"
      | "PE"
      | "PF"
      | "PG"
      | "PH"
      | "PK"
      | "PL"
      | "PM"
      | "PN"
      | "PR"
      | "PS"
      | "PT"
      | "PY"
      | "QA"
      | "RE"
      | "RO"
      | "RS"
      | "RU"
      | "RW"
      | "SA"
      | "SB"
      | "SC"
      | "SE"
      | "SG"
      | "SH"
      | "SI"
      | "SJ"
      | "SK"
      | "SL"
      | "SM"
      | "SN"
      | "SO"
      | "SR"
      | "SS"
      | "ST"
      | "SV"
      | "SX"
      | "SZ"
      | "TA"
      | "TC"
      | "TD"
      | "TF"
      | "TG"
      | "TH"
      | "TJ"
      | "TK"
      | "TL"
      | "TM"
      | "TN"
      | "TO"
      | "TR"
      | "TT"
      | "TV"
      | "TW"
      | "TZ"
      | "UA"
      | "UG"
      | "US"
      | "UY"
      | "UZ"
      | "VA"
      | "VC"
      | "VE"
      | "VG"
      | "VN"
      | "VU"
      | "WF"
      | "WS"
      | "XK"
      | "YE"
      | "YT"
      | "ZA"
      | "ZM"
      | "ZW"
      | "ZZ"
    )[]
  }
  shipping_options?: {
    shipping_rate?: string
    shipping_rate_data?: {
      delivery_estimate?: {
        maximum?: {
          unit: "business_day" | "day" | "hour" | "month" | "week"
          value: number
        }
        minimum?: {
          unit: "business_day" | "day" | "hour" | "month" | "week"
          value: number
        }
      }
      display_name: string
      fixed_amount?: {
        amount: number
        currency: string
        currency_options?: {
          [key: string]: {
            amount: number
            tax_behavior?: "exclusive" | "inclusive" | "unspecified"
          }
        }
      }
      metadata?: {
        [key: string]: string
      }
      tax_behavior?: "exclusive" | "inclusive" | "unspecified"
      tax_code?: string
      type?: "fixed_amount"
    }
  }[]
  submit_type?: "auto" | "book" | "donate" | "pay"
  subscription_data?: {
    application_fee_percent?: number
    billing_cycle_anchor?: number
    default_tax_rates?: string[]
    description?: string
    metadata?: {
      [key: string]: string
    }
    on_behalf_of?: string
    proration_behavior?: "create_prorations" | "none"
    transfer_data?: {
      amount_percent?: number
      destination: string
    }
    trial_end?: number
    trial_period_days?: number
    trial_settings?: {
      end_behavior: {
        missing_payment_method: "cancel" | "create_invoice" | "pause"
      }
    }
  }
  success_url: string
  tax_id_collection?: {
    enabled: boolean
  }
}

export type t_PostCheckoutSessionsSessionExpireBodySchema = {
  expand?: string[]
}

export type t_PostCheckoutSessionsSessionExpireParamSchema = {
  session: string
}

export type t_PostCouponsBodySchema = {
  amount_off?: number
  applies_to?: {
    products?: string[]
  }
  currency?: string
  currency_options?: {
    [key: string]: {
      amount_off: number
    }
  }
  duration?: "forever" | "once" | "repeating"
  duration_in_months?: number
  expand?: string[]
  id?: string
  max_redemptions?: number
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  name?: string
  percent_off?: number
  redeem_by?: number
}

export type t_PostCouponsCouponBodySchema = {
  currency_options?: {
    [key: string]: {
      amount_off: number
    }
  }
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  name?: string
}

export type t_PostCouponsCouponParamSchema = {
  coupon: string
}

export type t_PostCreditNotesBodySchema = {
  amount?: number
  credit_amount?: number
  effective_at?: number
  expand?: string[]
  invoice: string
  lines?: {
    amount?: number
    description?: string
    invoice_line_item?: string
    quantity?: number
    tax_rates?: string[] | ""
    type: "custom_line_item" | "invoice_line_item"
    unit_amount?: number
    unit_amount_decimal?: string
  }[]
  memo?: string
  metadata?: {
    [key: string]: string
  }
  out_of_band_amount?: number
  reason?:
    | "duplicate"
    | "fraudulent"
    | "order_change"
    | "product_unsatisfactory"
  refund?: string
  refund_amount?: number
  shipping_cost?: {
    shipping_rate?: string
  }
}

export type t_PostCreditNotesIdBodySchema = {
  expand?: string[]
  memo?: string
  metadata?: {
    [key: string]: string
  }
}

export type t_PostCreditNotesIdParamSchema = {
  id: string
}

export type t_PostCreditNotesIdVoidBodySchema = {
  expand?: string[]
}

export type t_PostCreditNotesIdVoidParamSchema = {
  id: string
}

export type t_PostCustomersBodySchema = {
  address?:
    | {
        city?: string
        country?: string
        line1?: string
        line2?: string
        postal_code?: string
        state?: string
      }
    | ""
  balance?: number
  cash_balance?: {
    settings?: {
      reconciliation_mode?: "automatic" | "manual" | "merchant_default"
    }
  }
  coupon?: string
  description?: string
  email?: string
  expand?: string[]
  invoice_prefix?: string
  invoice_settings?: {
    custom_fields?:
      | {
          name: string
          value: string
        }[]
      | ""
    default_payment_method?: string
    footer?: string
    rendering_options?:
      | {
          amount_tax_display?: "" | "exclude_tax" | "include_inclusive_tax"
        }
      | ""
  }
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  name?: string
  next_invoice_sequence?: number
  payment_method?: string
  phone?: string
  preferred_locales?: string[]
  promotion_code?: string
  shipping?:
    | {
        address: {
          city?: string
          country?: string
          line1?: string
          line2?: string
          postal_code?: string
          state?: string
        }
        name: string
        phone?: string
      }
    | ""
  source?: string
  tax?: {
    ip_address?: string | ""
  }
  tax_exempt?: "" | "exempt" | "none" | "reverse"
  tax_id_data?: {
    type:
      | "ad_nrt"
      | "ae_trn"
      | "ar_cuit"
      | "au_abn"
      | "au_arn"
      | "bg_uic"
      | "bo_tin"
      | "br_cnpj"
      | "br_cpf"
      | "ca_bn"
      | "ca_gst_hst"
      | "ca_pst_bc"
      | "ca_pst_mb"
      | "ca_pst_sk"
      | "ca_qst"
      | "ch_vat"
      | "cl_tin"
      | "cn_tin"
      | "co_nit"
      | "cr_tin"
      | "do_rcn"
      | "ec_ruc"
      | "eg_tin"
      | "es_cif"
      | "eu_oss_vat"
      | "eu_vat"
      | "gb_vat"
      | "ge_vat"
      | "hk_br"
      | "hu_tin"
      | "id_npwp"
      | "il_vat"
      | "in_gst"
      | "is_vat"
      | "jp_cn"
      | "jp_rn"
      | "jp_trn"
      | "ke_pin"
      | "kr_brn"
      | "li_uid"
      | "mx_rfc"
      | "my_frp"
      | "my_itn"
      | "my_sst"
      | "no_vat"
      | "nz_gst"
      | "pe_ruc"
      | "ph_tin"
      | "ro_tin"
      | "rs_pib"
      | "ru_inn"
      | "ru_kpp"
      | "sa_vat"
      | "sg_gst"
      | "sg_uen"
      | "si_tin"
      | "sv_nit"
      | "th_vat"
      | "tr_tin"
      | "tw_vat"
      | "ua_vat"
      | "us_ein"
      | "uy_ruc"
      | "ve_rif"
      | "vn_tin"
      | "za_vat"
    value: string
  }[]
  test_clock?: string
}

export type t_PostCustomersCustomerBodySchema = {
  address?:
    | {
        city?: string
        country?: string
        line1?: string
        line2?: string
        postal_code?: string
        state?: string
      }
    | ""
  balance?: number
  bank_account?:
    | {
        account_holder_name?: string
        account_holder_type?: "company" | "individual"
        account_number: string
        country: string
        currency?: string
        object?: "bank_account"
        routing_number?: string
      }
    | string
  card?:
    | {
        address_city?: string
        address_country?: string
        address_line1?: string
        address_line2?: string
        address_state?: string
        address_zip?: string
        cvc?: string
        exp_month: number
        exp_year: number
        metadata?: {
          [key: string]: string
        }
        name?: string
        number: string
        object?: "card"
      }
    | string
  cash_balance?: {
    settings?: {
      reconciliation_mode?: "automatic" | "manual" | "merchant_default"
    }
  }
  coupon?: string
  default_alipay_account?: string
  default_bank_account?: string
  default_card?: string
  default_source?: string
  description?: string
  email?: string
  expand?: string[]
  invoice_prefix?: string
  invoice_settings?: {
    custom_fields?:
      | {
          name: string
          value: string
        }[]
      | ""
    default_payment_method?: string
    footer?: string
    rendering_options?:
      | {
          amount_tax_display?: "" | "exclude_tax" | "include_inclusive_tax"
        }
      | ""
  }
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  name?: string
  next_invoice_sequence?: number
  phone?: string
  preferred_locales?: string[]
  promotion_code?: string
  shipping?:
    | {
        address: {
          city?: string
          country?: string
          line1?: string
          line2?: string
          postal_code?: string
          state?: string
        }
        name: string
        phone?: string
      }
    | ""
  source?: string
  tax?: {
    ip_address?: string | ""
  }
  tax_exempt?: "" | "exempt" | "none" | "reverse"
}

export type t_PostCustomersCustomerParamSchema = {
  customer: string
}

export type t_PostCustomersCustomerBalanceTransactionsBodySchema = {
  amount: number
  currency: string
  description?: string
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostCustomersCustomerBalanceTransactionsParamSchema = {
  customer: string
}

export type t_PostCustomersCustomerBalanceTransactionsTransactionBodySchema = {
  description?: string
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostCustomersCustomerBalanceTransactionsTransactionParamSchema = {
  customer: string
  transaction: string
}

export type t_PostCustomersCustomerBankAccountsBodySchema = {
  alipay_account?: string
  bank_account?:
    | {
        account_holder_name?: string
        account_holder_type?: "company" | "individual"
        account_number: string
        country: string
        currency?: string
        object?: "bank_account"
        routing_number?: string
      }
    | string
  card?:
    | {
        address_city?: string
        address_country?: string
        address_line1?: string
        address_line2?: string
        address_state?: string
        address_zip?: string
        cvc?: string
        exp_month: number
        exp_year: number
        metadata?: {
          [key: string]: string
        }
        name?: string
        number: string
        object?: "card"
      }
    | string
  expand?: string[]
  metadata?: {
    [key: string]: string
  }
  source?: string
}

export type t_PostCustomersCustomerBankAccountsParamSchema = {
  customer: string
}

export type t_PostCustomersCustomerBankAccountsIdBodySchema = {
  account_holder_name?: string
  account_holder_type?: "company" | "individual"
  address_city?: string
  address_country?: string
  address_line1?: string
  address_line2?: string
  address_state?: string
  address_zip?: string
  exp_month?: string
  exp_year?: string
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  name?: string
  owner?: {
    address?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    email?: string
    name?: string
    phone?: string
  }
}

export type t_PostCustomersCustomerBankAccountsIdParamSchema = {
  customer: string
  id: string
}

export type t_PostCustomersCustomerBankAccountsIdVerifyBodySchema = {
  amounts?: number[]
  expand?: string[]
}

export type t_PostCustomersCustomerBankAccountsIdVerifyParamSchema = {
  customer: string
  id: string
}

export type t_PostCustomersCustomerCardsBodySchema = {
  alipay_account?: string
  bank_account?:
    | {
        account_holder_name?: string
        account_holder_type?: "company" | "individual"
        account_number: string
        country: string
        currency?: string
        object?: "bank_account"
        routing_number?: string
      }
    | string
  card?:
    | {
        address_city?: string
        address_country?: string
        address_line1?: string
        address_line2?: string
        address_state?: string
        address_zip?: string
        cvc?: string
        exp_month: number
        exp_year: number
        metadata?: {
          [key: string]: string
        }
        name?: string
        number: string
        object?: "card"
      }
    | string
  expand?: string[]
  metadata?: {
    [key: string]: string
  }
  source?: string
}

export type t_PostCustomersCustomerCardsParamSchema = {
  customer: string
}

export type t_PostCustomersCustomerCardsIdBodySchema = {
  account_holder_name?: string
  account_holder_type?: "company" | "individual"
  address_city?: string
  address_country?: string
  address_line1?: string
  address_line2?: string
  address_state?: string
  address_zip?: string
  exp_month?: string
  exp_year?: string
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  name?: string
  owner?: {
    address?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    email?: string
    name?: string
    phone?: string
  }
}

export type t_PostCustomersCustomerCardsIdParamSchema = {
  customer: string
  id: string
}

export type t_PostCustomersCustomerCashBalanceBodySchema = {
  expand?: string[]
  settings?: {
    reconciliation_mode?: "automatic" | "manual" | "merchant_default"
  }
}

export type t_PostCustomersCustomerCashBalanceParamSchema = {
  customer: string
}

export type t_PostCustomersCustomerFundingInstructionsBodySchema = {
  bank_transfer: {
    eu_bank_transfer?: {
      country: string
    }
    requested_address_types?: ("iban" | "sort_code" | "spei" | "zengin")[]
    type:
      | "eu_bank_transfer"
      | "gb_bank_transfer"
      | "jp_bank_transfer"
      | "mx_bank_transfer"
      | "us_bank_transfer"
  }
  currency: string
  expand?: string[]
  funding_type: "bank_transfer"
}

export type t_PostCustomersCustomerFundingInstructionsParamSchema = {
  customer: string
}

export type t_PostCustomersCustomerSourcesBodySchema = {
  alipay_account?: string
  bank_account?:
    | {
        account_holder_name?: string
        account_holder_type?: "company" | "individual"
        account_number: string
        country: string
        currency?: string
        object?: "bank_account"
        routing_number?: string
      }
    | string
  card?:
    | {
        address_city?: string
        address_country?: string
        address_line1?: string
        address_line2?: string
        address_state?: string
        address_zip?: string
        cvc?: string
        exp_month: number
        exp_year: number
        metadata?: {
          [key: string]: string
        }
        name?: string
        number: string
        object?: "card"
      }
    | string
  expand?: string[]
  metadata?: {
    [key: string]: string
  }
  source?: string
}

export type t_PostCustomersCustomerSourcesParamSchema = {
  customer: string
}

export type t_PostCustomersCustomerSourcesIdBodySchema = {
  account_holder_name?: string
  account_holder_type?: "company" | "individual"
  address_city?: string
  address_country?: string
  address_line1?: string
  address_line2?: string
  address_state?: string
  address_zip?: string
  exp_month?: string
  exp_year?: string
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  name?: string
  owner?: {
    address?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    email?: string
    name?: string
    phone?: string
  }
}

export type t_PostCustomersCustomerSourcesIdParamSchema = {
  customer: string
  id: string
}

export type t_PostCustomersCustomerSourcesIdVerifyBodySchema = {
  amounts?: number[]
  expand?: string[]
}

export type t_PostCustomersCustomerSourcesIdVerifyParamSchema = {
  customer: string
  id: string
}

export type t_PostCustomersCustomerSubscriptionsBodySchema = {
  add_invoice_items?: {
    price?: string
    price_data?: {
      currency: string
      product: string
      tax_behavior?: "exclusive" | "inclusive" | "unspecified"
      unit_amount?: number
      unit_amount_decimal?: string
    }
    quantity?: number
    tax_rates?: string[] | ""
  }[]
  application_fee_percent?: number
  automatic_tax?: {
    enabled: boolean
  }
  backdate_start_date?: number
  billing_cycle_anchor?: number
  billing_thresholds?:
    | {
        amount_gte?: number
        reset_billing_cycle_anchor?: boolean
      }
    | ""
  cancel_at?: number
  cancel_at_period_end?: boolean
  collection_method?: "charge_automatically" | "send_invoice"
  coupon?: string
  currency?: string
  days_until_due?: number
  default_payment_method?: string
  default_source?: string
  default_tax_rates?: string[] | ""
  expand?: string[]
  items?: {
    billing_thresholds?:
      | {
          usage_gte: number
        }
      | ""
    metadata?: {
      [key: string]: string
    }
    price?: string
    price_data?: {
      currency: string
      product: string
      recurring: {
        interval: "day" | "month" | "week" | "year"
        interval_count?: number
      }
      tax_behavior?: "exclusive" | "inclusive" | "unspecified"
      unit_amount?: number
      unit_amount_decimal?: string
    }
    quantity?: number
    tax_rates?: string[] | ""
  }[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  off_session?: boolean
  payment_behavior?:
    | "allow_incomplete"
    | "default_incomplete"
    | "error_if_incomplete"
    | "pending_if_incomplete"
  payment_settings?: {
    payment_method_options?: {
      acss_debit?:
        | {
            mandate_options?: {
              transaction_type?: "business" | "personal"
            }
            verification_method?: "automatic" | "instant" | "microdeposits"
          }
        | ""
      bancontact?:
        | {
            preferred_language?: "de" | "en" | "fr" | "nl"
          }
        | ""
      card?:
        | {
            mandate_options?: {
              amount?: number
              amount_type?: "fixed" | "maximum"
              description?: string
            }
            network?:
              | "amex"
              | "cartes_bancaires"
              | "diners"
              | "discover"
              | "eftpos_au"
              | "interac"
              | "jcb"
              | "mastercard"
              | "unionpay"
              | "unknown"
              | "visa"
            request_three_d_secure?: "any" | "automatic"
          }
        | ""
      customer_balance?:
        | {
            bank_transfer?: {
              eu_bank_transfer?: {
                country: string
              }
              type?: string
            }
            funding_type?: string
          }
        | ""
      konbini?: EmptyObject | ""
      us_bank_account?:
        | {
            financial_connections?: {
              permissions?: (
                | "balances"
                | "ownership"
                | "payment_method"
                | "transactions"
              )[]
              prefetch?: "balances"[]
            }
            verification_method?: "automatic" | "instant" | "microdeposits"
          }
        | ""
    }
    payment_method_types?:
      | (
          | "ach_credit_transfer"
          | "ach_debit"
          | "acss_debit"
          | "au_becs_debit"
          | "bacs_debit"
          | "bancontact"
          | "boleto"
          | "card"
          | "cashapp"
          | "customer_balance"
          | "fpx"
          | "giropay"
          | "grabpay"
          | "ideal"
          | "konbini"
          | "link"
          | "paynow"
          | "paypal"
          | "promptpay"
          | "sepa_debit"
          | "sofort"
          | "us_bank_account"
          | "wechat_pay"
        )[]
      | ""
    save_default_payment_method?: "off" | "on_subscription"
  }
  pending_invoice_item_interval?:
    | {
        interval: "day" | "month" | "week" | "year"
        interval_count?: number
      }
    | ""
  promotion_code?: string
  proration_behavior?: "always_invoice" | "create_prorations" | "none"
  transfer_data?: {
    amount_percent?: number
    destination: string
  }
  trial_end?: "now" | number
  trial_from_plan?: boolean
  trial_period_days?: number
  trial_settings?: {
    end_behavior: {
      missing_payment_method: "cancel" | "create_invoice" | "pause"
    }
  }
}

export type t_PostCustomersCustomerSubscriptionsParamSchema = {
  customer: string
}

export type t_PostCustomersCustomerSubscriptionsSubscriptionExposedIdBodySchema =
  {
    add_invoice_items?: {
      price?: string
      price_data?: {
        currency: string
        product: string
        tax_behavior?: "exclusive" | "inclusive" | "unspecified"
        unit_amount?: number
        unit_amount_decimal?: string
      }
      quantity?: number
      tax_rates?: string[] | ""
    }[]
    application_fee_percent?: number
    automatic_tax?: {
      enabled: boolean
    }
    billing_cycle_anchor?: "now" | "unchanged"
    billing_thresholds?:
      | {
          amount_gte?: number
          reset_billing_cycle_anchor?: boolean
        }
      | ""
    cancel_at?: number | ""
    cancel_at_period_end?: boolean
    cancellation_details?: {
      comment?: string | ""
      feedback?:
        | ""
        | "customer_service"
        | "low_quality"
        | "missing_features"
        | "other"
        | "switched_service"
        | "too_complex"
        | "too_expensive"
        | "unused"
    }
    collection_method?: "charge_automatically" | "send_invoice"
    coupon?: string
    days_until_due?: number
    default_payment_method?: string
    default_source?: string | ""
    default_tax_rates?: string[] | ""
    expand?: string[]
    items?: {
      billing_thresholds?:
        | {
            usage_gte: number
          }
        | ""
      clear_usage?: boolean
      deleted?: boolean
      id?: string
      metadata?:
        | {
            [key: string]: string
          }
        | ""
      price?: string
      price_data?: {
        currency: string
        product: string
        recurring: {
          interval: "day" | "month" | "week" | "year"
          interval_count?: number
        }
        tax_behavior?: "exclusive" | "inclusive" | "unspecified"
        unit_amount?: number
        unit_amount_decimal?: string
      }
      quantity?: number
      tax_rates?: string[] | ""
    }[]
    metadata?:
      | {
          [key: string]: string
        }
      | ""
    off_session?: boolean
    pause_collection?:
      | {
          behavior: "keep_as_draft" | "mark_uncollectible" | "void"
          resumes_at?: number
        }
      | ""
    payment_behavior?:
      | "allow_incomplete"
      | "default_incomplete"
      | "error_if_incomplete"
      | "pending_if_incomplete"
    payment_settings?: {
      payment_method_options?: {
        acss_debit?:
          | {
              mandate_options?: {
                transaction_type?: "business" | "personal"
              }
              verification_method?: "automatic" | "instant" | "microdeposits"
            }
          | ""
        bancontact?:
          | {
              preferred_language?: "de" | "en" | "fr" | "nl"
            }
          | ""
        card?:
          | {
              mandate_options?: {
                amount?: number
                amount_type?: "fixed" | "maximum"
                description?: string
              }
              network?:
                | "amex"
                | "cartes_bancaires"
                | "diners"
                | "discover"
                | "eftpos_au"
                | "interac"
                | "jcb"
                | "mastercard"
                | "unionpay"
                | "unknown"
                | "visa"
              request_three_d_secure?: "any" | "automatic"
            }
          | ""
        customer_balance?:
          | {
              bank_transfer?: {
                eu_bank_transfer?: {
                  country: string
                }
                type?: string
              }
              funding_type?: string
            }
          | ""
        konbini?: EmptyObject | ""
        us_bank_account?:
          | {
              financial_connections?: {
                permissions?: (
                  | "balances"
                  | "ownership"
                  | "payment_method"
                  | "transactions"
                )[]
                prefetch?: "balances"[]
              }
              verification_method?: "automatic" | "instant" | "microdeposits"
            }
          | ""
      }
      payment_method_types?:
        | (
            | "ach_credit_transfer"
            | "ach_debit"
            | "acss_debit"
            | "au_becs_debit"
            | "bacs_debit"
            | "bancontact"
            | "boleto"
            | "card"
            | "cashapp"
            | "customer_balance"
            | "fpx"
            | "giropay"
            | "grabpay"
            | "ideal"
            | "konbini"
            | "link"
            | "paynow"
            | "paypal"
            | "promptpay"
            | "sepa_debit"
            | "sofort"
            | "us_bank_account"
            | "wechat_pay"
          )[]
        | ""
      save_default_payment_method?: "off" | "on_subscription"
    }
    pending_invoice_item_interval?:
      | {
          interval: "day" | "month" | "week" | "year"
          interval_count?: number
        }
      | ""
    promotion_code?: string
    proration_behavior?: "always_invoice" | "create_prorations" | "none"
    proration_date?: number
    transfer_data?:
      | {
          amount_percent?: number
          destination: string
        }
      | ""
    trial_end?: "now" | number
    trial_from_plan?: boolean
    trial_settings?: {
      end_behavior: {
        missing_payment_method: "cancel" | "create_invoice" | "pause"
      }
    }
  }

export type t_PostCustomersCustomerSubscriptionsSubscriptionExposedIdParamSchema =
  {
    customer: string
    subscription_exposed_id: string
  }

export type t_PostCustomersCustomerTaxIdsBodySchema = {
  expand?: string[]
  type:
    | "ad_nrt"
    | "ae_trn"
    | "ar_cuit"
    | "au_abn"
    | "au_arn"
    | "bg_uic"
    | "bo_tin"
    | "br_cnpj"
    | "br_cpf"
    | "ca_bn"
    | "ca_gst_hst"
    | "ca_pst_bc"
    | "ca_pst_mb"
    | "ca_pst_sk"
    | "ca_qst"
    | "ch_vat"
    | "cl_tin"
    | "cn_tin"
    | "co_nit"
    | "cr_tin"
    | "do_rcn"
    | "ec_ruc"
    | "eg_tin"
    | "es_cif"
    | "eu_oss_vat"
    | "eu_vat"
    | "gb_vat"
    | "ge_vat"
    | "hk_br"
    | "hu_tin"
    | "id_npwp"
    | "il_vat"
    | "in_gst"
    | "is_vat"
    | "jp_cn"
    | "jp_rn"
    | "jp_trn"
    | "ke_pin"
    | "kr_brn"
    | "li_uid"
    | "mx_rfc"
    | "my_frp"
    | "my_itn"
    | "my_sst"
    | "no_vat"
    | "nz_gst"
    | "pe_ruc"
    | "ph_tin"
    | "ro_tin"
    | "rs_pib"
    | "ru_inn"
    | "ru_kpp"
    | "sa_vat"
    | "sg_gst"
    | "sg_uen"
    | "si_tin"
    | "sv_nit"
    | "th_vat"
    | "tr_tin"
    | "tw_vat"
    | "ua_vat"
    | "us_ein"
    | "uy_ruc"
    | "ve_rif"
    | "vn_tin"
    | "za_vat"
  value: string
}

export type t_PostCustomersCustomerTaxIdsParamSchema = {
  customer: string
}

export type t_PostDisputesDisputeBodySchema = {
  evidence?: {
    access_activity_log?: string
    billing_address?: string
    cancellation_policy?: string
    cancellation_policy_disclosure?: string
    cancellation_rebuttal?: string
    customer_communication?: string
    customer_email_address?: string
    customer_name?: string
    customer_purchase_ip?: string
    customer_signature?: string
    duplicate_charge_documentation?: string
    duplicate_charge_explanation?: string
    duplicate_charge_id?: string
    product_description?: string
    receipt?: string
    refund_policy?: string
    refund_policy_disclosure?: string
    refund_refusal_explanation?: string
    service_date?: string
    service_documentation?: string
    shipping_address?: string
    shipping_carrier?: string
    shipping_date?: string
    shipping_documentation?: string
    shipping_tracking_number?: string
    uncategorized_file?: string
    uncategorized_text?: string
  }
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  submit?: boolean
}

export type t_PostDisputesDisputeParamSchema = {
  dispute: string
}

export type t_PostDisputesDisputeCloseBodySchema = {
  expand?: string[]
}

export type t_PostDisputesDisputeCloseParamSchema = {
  dispute: string
}

export type t_PostEphemeralKeysBodySchema = {
  customer?: string
  expand?: string[]
  issuing_card?: string
  nonce?: string
  verification_session?: string
}

export type t_PostFileLinksBodySchema = {
  expand?: string[]
  expires_at?: number
  file: string
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostFileLinksLinkBodySchema = {
  expand?: string[]
  expires_at?: "now" | number | ""
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostFileLinksLinkParamSchema = {
  link: string
}

export type t_PostFilesBodySchema = {
  expand?: string[]
  file: string
  file_link_data?: {
    create: boolean
    expires_at?: number
    metadata?:
      | {
          [key: string]: string
        }
      | ""
  }
  purpose:
    | "account_requirement"
    | "additional_verification"
    | "business_icon"
    | "business_logo"
    | "customer_signature"
    | "dispute_evidence"
    | "identity_document"
    | "pci_document"
    | "tax_document_user_upload"
    | "terminal_reader_splashscreen"
}

export type t_PostFinancialConnectionsAccountsAccountDisconnectBodySchema = {
  expand?: string[]
}

export type t_PostFinancialConnectionsAccountsAccountDisconnectParamSchema = {
  account: string
}

export type t_PostFinancialConnectionsAccountsAccountRefreshBodySchema = {
  expand?: string[]
  features: ("balance" | "ownership")[]
}

export type t_PostFinancialConnectionsAccountsAccountRefreshParamSchema = {
  account: string
}

export type t_PostFinancialConnectionsSessionsBodySchema = {
  account_holder: {
    account?: string
    customer?: string
    type: "account" | "customer"
  }
  expand?: string[]
  filters?: {
    countries: string[]
  }
  permissions: ("balances" | "ownership" | "payment_method" | "transactions")[]
  prefetch?: ("balances" | "ownership")[]
  return_url?: string
}

export type t_PostIdentityVerificationSessionsBodySchema = {
  expand?: string[]
  metadata?: {
    [key: string]: string
  }
  options?: {
    document?:
      | {
          allowed_types?: ("driving_license" | "id_card" | "passport")[]
          require_id_number?: boolean
          require_live_capture?: boolean
          require_matching_selfie?: boolean
        }
      | ""
  }
  return_url?: string
  type: "document" | "id_number"
}

export type t_PostIdentityVerificationSessionsSessionBodySchema = {
  expand?: string[]
  metadata?: {
    [key: string]: string
  }
  options?: {
    document?:
      | {
          allowed_types?: ("driving_license" | "id_card" | "passport")[]
          require_id_number?: boolean
          require_live_capture?: boolean
          require_matching_selfie?: boolean
        }
      | ""
  }
  type?: "document" | "id_number"
}

export type t_PostIdentityVerificationSessionsSessionParamSchema = {
  session: string
}

export type t_PostIdentityVerificationSessionsSessionCancelBodySchema = {
  expand?: string[]
}

export type t_PostIdentityVerificationSessionsSessionCancelParamSchema = {
  session: string
}

export type t_PostIdentityVerificationSessionsSessionRedactBodySchema = {
  expand?: string[]
}

export type t_PostIdentityVerificationSessionsSessionRedactParamSchema = {
  session: string
}

export type t_PostInvoiceitemsBodySchema = {
  amount?: number
  currency?: string
  customer: string
  description?: string
  discountable?: boolean
  discounts?:
    | {
        coupon?: string
        discount?: string
      }[]
    | ""
  expand?: string[]
  invoice?: string
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  period?: {
    end: number
    start: number
  }
  price?: string
  price_data?: {
    currency: string
    product: string
    tax_behavior?: "exclusive" | "inclusive" | "unspecified"
    unit_amount?: number
    unit_amount_decimal?: string
  }
  quantity?: number
  subscription?: string
  tax_behavior?: "exclusive" | "inclusive" | "unspecified"
  tax_code?: string | ""
  tax_rates?: string[]
  unit_amount?: number
  unit_amount_decimal?: string
}

export type t_PostInvoiceitemsInvoiceitemBodySchema = {
  amount?: number
  description?: string
  discountable?: boolean
  discounts?:
    | {
        coupon?: string
        discount?: string
      }[]
    | ""
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  period?: {
    end: number
    start: number
  }
  price?: string
  price_data?: {
    currency: string
    product: string
    tax_behavior?: "exclusive" | "inclusive" | "unspecified"
    unit_amount?: number
    unit_amount_decimal?: string
  }
  quantity?: number
  tax_behavior?: "exclusive" | "inclusive" | "unspecified"
  tax_code?: string | ""
  tax_rates?: string[] | ""
  unit_amount?: number
  unit_amount_decimal?: string
}

export type t_PostInvoiceitemsInvoiceitemParamSchema = {
  invoiceitem: string
}

export type t_PostInvoicesBodySchema = {
  account_tax_ids?: string[] | ""
  application_fee_amount?: number
  auto_advance?: boolean
  automatic_tax?: {
    enabled: boolean
  }
  collection_method?: "charge_automatically" | "send_invoice"
  currency?: string
  custom_fields?:
    | {
        name: string
        value: string
      }[]
    | ""
  customer?: string
  days_until_due?: number
  default_payment_method?: string
  default_source?: string
  default_tax_rates?: string[]
  description?: string
  discounts?:
    | {
        coupon?: string
        discount?: string
      }[]
    | ""
  due_date?: number
  effective_at?: number
  expand?: string[]
  footer?: string
  from_invoice?: {
    action: "revision"
    invoice: string
  }
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  on_behalf_of?: string
  payment_settings?: {
    default_mandate?: string | ""
    payment_method_options?: {
      acss_debit?:
        | {
            mandate_options?: {
              transaction_type?: "business" | "personal"
            }
            verification_method?: "automatic" | "instant" | "microdeposits"
          }
        | ""
      bancontact?:
        | {
            preferred_language?: "de" | "en" | "fr" | "nl"
          }
        | ""
      card?:
        | {
            installments?: {
              enabled?: boolean
              plan?:
                | {
                    count: number
                    interval: "month"
                    type: "fixed_count"
                  }
                | ""
            }
            request_three_d_secure?: "any" | "automatic"
          }
        | ""
      customer_balance?:
        | {
            bank_transfer?: {
              eu_bank_transfer?: {
                country: string
              }
              type?: string
            }
            funding_type?: string
          }
        | ""
      konbini?: EmptyObject | ""
      us_bank_account?:
        | {
            financial_connections?: {
              permissions?: (
                | "balances"
                | "ownership"
                | "payment_method"
                | "transactions"
              )[]
              prefetch?: "balances"[]
            }
            verification_method?: "automatic" | "instant" | "microdeposits"
          }
        | ""
    }
    payment_method_types?:
      | (
          | "ach_credit_transfer"
          | "ach_debit"
          | "acss_debit"
          | "au_becs_debit"
          | "bacs_debit"
          | "bancontact"
          | "boleto"
          | "card"
          | "cashapp"
          | "customer_balance"
          | "fpx"
          | "giropay"
          | "grabpay"
          | "ideal"
          | "konbini"
          | "link"
          | "paynow"
          | "paypal"
          | "promptpay"
          | "sepa_debit"
          | "sofort"
          | "us_bank_account"
          | "wechat_pay"
        )[]
      | ""
  }
  pending_invoice_items_behavior?: "exclude" | "include" | "include_and_require"
  rendering?: {
    amount_tax_display?: "" | "exclude_tax" | "include_inclusive_tax"
    pdf?: {
      page_size?: "a4" | "auto" | "letter"
    }
  }
  rendering_options?:
    | {
        amount_tax_display?: "" | "exclude_tax" | "include_inclusive_tax"
      }
    | ""
  shipping_cost?: {
    shipping_rate?: string
    shipping_rate_data?: {
      delivery_estimate?: {
        maximum?: {
          unit: "business_day" | "day" | "hour" | "month" | "week"
          value: number
        }
        minimum?: {
          unit: "business_day" | "day" | "hour" | "month" | "week"
          value: number
        }
      }
      display_name: string
      fixed_amount?: {
        amount: number
        currency: string
        currency_options?: {
          [key: string]: {
            amount: number
            tax_behavior?: "exclusive" | "inclusive" | "unspecified"
          }
        }
      }
      metadata?: {
        [key: string]: string
      }
      tax_behavior?: "exclusive" | "inclusive" | "unspecified"
      tax_code?: string
      type?: "fixed_amount"
    }
  }
  shipping_details?: {
    address: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    name: string
    phone?: string | ""
  }
  statement_descriptor?: string
  subscription?: string
  transfer_data?: {
    amount?: number
    destination: string
  }
}

export type t_PostInvoicesInvoiceBodySchema = {
  account_tax_ids?: string[] | ""
  application_fee_amount?: number
  auto_advance?: boolean
  automatic_tax?: {
    enabled: boolean
  }
  collection_method?: "charge_automatically" | "send_invoice"
  custom_fields?:
    | {
        name: string
        value: string
      }[]
    | ""
  days_until_due?: number
  default_payment_method?: string
  default_source?: string | ""
  default_tax_rates?: string[] | ""
  description?: string
  discounts?:
    | {
        coupon?: string
        discount?: string
      }[]
    | ""
  due_date?: number
  effective_at?: number | ""
  expand?: string[]
  footer?: string
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  on_behalf_of?: string | ""
  payment_settings?: {
    default_mandate?: string | ""
    payment_method_options?: {
      acss_debit?:
        | {
            mandate_options?: {
              transaction_type?: "business" | "personal"
            }
            verification_method?: "automatic" | "instant" | "microdeposits"
          }
        | ""
      bancontact?:
        | {
            preferred_language?: "de" | "en" | "fr" | "nl"
          }
        | ""
      card?:
        | {
            installments?: {
              enabled?: boolean
              plan?:
                | {
                    count: number
                    interval: "month"
                    type: "fixed_count"
                  }
                | ""
            }
            request_three_d_secure?: "any" | "automatic"
          }
        | ""
      customer_balance?:
        | {
            bank_transfer?: {
              eu_bank_transfer?: {
                country: string
              }
              type?: string
            }
            funding_type?: string
          }
        | ""
      konbini?: EmptyObject | ""
      us_bank_account?:
        | {
            financial_connections?: {
              permissions?: (
                | "balances"
                | "ownership"
                | "payment_method"
                | "transactions"
              )[]
              prefetch?: "balances"[]
            }
            verification_method?: "automatic" | "instant" | "microdeposits"
          }
        | ""
    }
    payment_method_types?:
      | (
          | "ach_credit_transfer"
          | "ach_debit"
          | "acss_debit"
          | "au_becs_debit"
          | "bacs_debit"
          | "bancontact"
          | "boleto"
          | "card"
          | "cashapp"
          | "customer_balance"
          | "fpx"
          | "giropay"
          | "grabpay"
          | "ideal"
          | "konbini"
          | "link"
          | "paynow"
          | "paypal"
          | "promptpay"
          | "sepa_debit"
          | "sofort"
          | "us_bank_account"
          | "wechat_pay"
        )[]
      | ""
  }
  rendering?: {
    amount_tax_display?: "" | "exclude_tax" | "include_inclusive_tax"
    pdf?: {
      page_size?: "a4" | "auto" | "letter"
    }
  }
  rendering_options?:
    | {
        amount_tax_display?: "" | "exclude_tax" | "include_inclusive_tax"
      }
    | ""
  shipping_cost?:
    | {
        shipping_rate?: string
        shipping_rate_data?: {
          delivery_estimate?: {
            maximum?: {
              unit: "business_day" | "day" | "hour" | "month" | "week"
              value: number
            }
            minimum?: {
              unit: "business_day" | "day" | "hour" | "month" | "week"
              value: number
            }
          }
          display_name: string
          fixed_amount?: {
            amount: number
            currency: string
            currency_options?: {
              [key: string]: {
                amount: number
                tax_behavior?: "exclusive" | "inclusive" | "unspecified"
              }
            }
          }
          metadata?: {
            [key: string]: string
          }
          tax_behavior?: "exclusive" | "inclusive" | "unspecified"
          tax_code?: string
          type?: "fixed_amount"
        }
      }
    | ""
  shipping_details?:
    | {
        address: {
          city?: string
          country?: string
          line1?: string
          line2?: string
          postal_code?: string
          state?: string
        }
        name: string
        phone?: string | ""
      }
    | ""
  statement_descriptor?: string
  transfer_data?:
    | {
        amount?: number
        destination: string
      }
    | ""
}

export type t_PostInvoicesInvoiceParamSchema = {
  invoice: string
}

export type t_PostInvoicesInvoiceFinalizeBodySchema = {
  auto_advance?: boolean
  expand?: string[]
}

export type t_PostInvoicesInvoiceFinalizeParamSchema = {
  invoice: string
}

export type t_PostInvoicesInvoiceMarkUncollectibleBodySchema = {
  expand?: string[]
}

export type t_PostInvoicesInvoiceMarkUncollectibleParamSchema = {
  invoice: string
}

export type t_PostInvoicesInvoicePayBodySchema = {
  expand?: string[]
  forgive?: boolean
  mandate?: string | ""
  off_session?: boolean
  paid_out_of_band?: boolean
  payment_method?: string
  source?: string
}

export type t_PostInvoicesInvoicePayParamSchema = {
  invoice: string
}

export type t_PostInvoicesInvoiceSendBodySchema = {
  expand?: string[]
}

export type t_PostInvoicesInvoiceSendParamSchema = {
  invoice: string
}

export type t_PostInvoicesInvoiceVoidBodySchema = {
  expand?: string[]
}

export type t_PostInvoicesInvoiceVoidParamSchema = {
  invoice: string
}

export type t_PostIssuingAuthorizationsAuthorizationBodySchema = {
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostIssuingAuthorizationsAuthorizationParamSchema = {
  authorization: string
}

export type t_PostIssuingAuthorizationsAuthorizationApproveBodySchema = {
  amount?: number
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostIssuingAuthorizationsAuthorizationApproveParamSchema = {
  authorization: string
}

export type t_PostIssuingAuthorizationsAuthorizationDeclineBodySchema = {
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostIssuingAuthorizationsAuthorizationDeclineParamSchema = {
  authorization: string
}

export type t_PostIssuingCardholdersBodySchema = {
  billing: {
    address: {
      city: string
      country: string
      line1: string
      line2?: string
      postal_code: string
      state?: string
    }
  }
  company?: {
    tax_id?: string
  }
  email?: string
  expand?: string[]
  individual?: {
    card_issuing?: {
      user_terms_acceptance?: {
        date?: number
        ip?: string
        user_agent?: string | ""
      }
    }
    dob?: {
      day: number
      month: number
      year: number
    }
    first_name?: string
    last_name?: string
    verification?: {
      document?: {
        back?: string
        front?: string
      }
    }
  }
  metadata?: {
    [key: string]: string
  }
  name: string
  phone_number?: string
  preferred_locales?: ("de" | "en" | "es" | "fr" | "it")[]
  spending_controls?: {
    allowed_categories?: (
      | "ac_refrigeration_repair"
      | "accounting_bookkeeping_services"
      | "advertising_services"
      | "agricultural_cooperative"
      | "airlines_air_carriers"
      | "airports_flying_fields"
      | "ambulance_services"
      | "amusement_parks_carnivals"
      | "antique_reproductions"
      | "antique_shops"
      | "aquariums"
      | "architectural_surveying_services"
      | "art_dealers_and_galleries"
      | "artists_supply_and_craft_shops"
      | "auto_and_home_supply_stores"
      | "auto_body_repair_shops"
      | "auto_paint_shops"
      | "auto_service_shops"
      | "automated_cash_disburse"
      | "automated_fuel_dispensers"
      | "automobile_associations"
      | "automotive_parts_and_accessories_stores"
      | "automotive_tire_stores"
      | "bail_and_bond_payments"
      | "bakeries"
      | "bands_orchestras"
      | "barber_and_beauty_shops"
      | "betting_casino_gambling"
      | "bicycle_shops"
      | "billiard_pool_establishments"
      | "boat_dealers"
      | "boat_rentals_and_leases"
      | "book_stores"
      | "books_periodicals_and_newspapers"
      | "bowling_alleys"
      | "bus_lines"
      | "business_secretarial_schools"
      | "buying_shopping_services"
      | "cable_satellite_and_other_pay_television_and_radio"
      | "camera_and_photographic_supply_stores"
      | "candy_nut_and_confectionery_stores"
      | "car_and_truck_dealers_new_used"
      | "car_and_truck_dealers_used_only"
      | "car_rental_agencies"
      | "car_washes"
      | "carpentry_services"
      | "carpet_upholstery_cleaning"
      | "caterers"
      | "charitable_and_social_service_organizations_fundraising"
      | "chemicals_and_allied_products"
      | "child_care_services"
      | "childrens_and_infants_wear_stores"
      | "chiropodists_podiatrists"
      | "chiropractors"
      | "cigar_stores_and_stands"
      | "civic_social_fraternal_associations"
      | "cleaning_and_maintenance"
      | "clothing_rental"
      | "colleges_universities"
      | "commercial_equipment"
      | "commercial_footwear"
      | "commercial_photography_art_and_graphics"
      | "commuter_transport_and_ferries"
      | "computer_network_services"
      | "computer_programming"
      | "computer_repair"
      | "computer_software_stores"
      | "computers_peripherals_and_software"
      | "concrete_work_services"
      | "construction_materials"
      | "consulting_public_relations"
      | "correspondence_schools"
      | "cosmetic_stores"
      | "counseling_services"
      | "country_clubs"
      | "courier_services"
      | "court_costs"
      | "credit_reporting_agencies"
      | "cruise_lines"
      | "dairy_products_stores"
      | "dance_hall_studios_schools"
      | "dating_escort_services"
      | "dentists_orthodontists"
      | "department_stores"
      | "detective_agencies"
      | "digital_goods_applications"
      | "digital_goods_games"
      | "digital_goods_large_volume"
      | "digital_goods_media"
      | "direct_marketing_catalog_merchant"
      | "direct_marketing_combination_catalog_and_retail_merchant"
      | "direct_marketing_inbound_telemarketing"
      | "direct_marketing_insurance_services"
      | "direct_marketing_other"
      | "direct_marketing_outbound_telemarketing"
      | "direct_marketing_subscription"
      | "direct_marketing_travel"
      | "discount_stores"
      | "doctors"
      | "door_to_door_sales"
      | "drapery_window_covering_and_upholstery_stores"
      | "drinking_places"
      | "drug_stores_and_pharmacies"
      | "drugs_drug_proprietaries_and_druggist_sundries"
      | "dry_cleaners"
      | "durable_goods"
      | "duty_free_stores"
      | "eating_places_restaurants"
      | "educational_services"
      | "electric_razor_stores"
      | "electric_vehicle_charging"
      | "electrical_parts_and_equipment"
      | "electrical_services"
      | "electronics_repair_shops"
      | "electronics_stores"
      | "elementary_secondary_schools"
      | "emergency_services_gcas_visa_use_only"
      | "employment_temp_agencies"
      | "equipment_rental"
      | "exterminating_services"
      | "family_clothing_stores"
      | "fast_food_restaurants"
      | "financial_institutions"
      | "fines_government_administrative_entities"
      | "fireplace_fireplace_screens_and_accessories_stores"
      | "floor_covering_stores"
      | "florists"
      | "florists_supplies_nursery_stock_and_flowers"
      | "freezer_and_locker_meat_provisioners"
      | "fuel_dealers_non_automotive"
      | "funeral_services_crematories"
      | "furniture_home_furnishings_and_equipment_stores_except_appliances"
      | "furniture_repair_refinishing"
      | "furriers_and_fur_shops"
      | "general_services"
      | "gift_card_novelty_and_souvenir_shops"
      | "glass_paint_and_wallpaper_stores"
      | "glassware_crystal_stores"
      | "golf_courses_public"
      | "government_licensed_horse_dog_racing_us_region_only"
      | "government_licensed_online_casions_online_gambling_us_region_only"
      | "government_owned_lotteries_non_us_region"
      | "government_owned_lotteries_us_region_only"
      | "government_services"
      | "grocery_stores_supermarkets"
      | "hardware_equipment_and_supplies"
      | "hardware_stores"
      | "health_and_beauty_spas"
      | "hearing_aids_sales_and_supplies"
      | "heating_plumbing_a_c"
      | "hobby_toy_and_game_shops"
      | "home_supply_warehouse_stores"
      | "hospitals"
      | "hotels_motels_and_resorts"
      | "household_appliance_stores"
      | "industrial_supplies"
      | "information_retrieval_services"
      | "insurance_default"
      | "insurance_underwriting_premiums"
      | "intra_company_purchases"
      | "jewelry_stores_watches_clocks_and_silverware_stores"
      | "landscaping_services"
      | "laundries"
      | "laundry_cleaning_services"
      | "legal_services_attorneys"
      | "luggage_and_leather_goods_stores"
      | "lumber_building_materials_stores"
      | "manual_cash_disburse"
      | "marinas_service_and_supplies"
      | "marketplaces"
      | "masonry_stonework_and_plaster"
      | "massage_parlors"
      | "medical_and_dental_labs"
      | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
      | "medical_services"
      | "membership_organizations"
      | "mens_and_boys_clothing_and_accessories_stores"
      | "mens_womens_clothing_stores"
      | "metal_service_centers"
      | "miscellaneous"
      | "miscellaneous_apparel_and_accessory_shops"
      | "miscellaneous_auto_dealers"
      | "miscellaneous_business_services"
      | "miscellaneous_food_stores"
      | "miscellaneous_general_merchandise"
      | "miscellaneous_general_services"
      | "miscellaneous_home_furnishing_specialty_stores"
      | "miscellaneous_publishing_and_printing"
      | "miscellaneous_recreation_services"
      | "miscellaneous_repair_shops"
      | "miscellaneous_specialty_retail"
      | "mobile_home_dealers"
      | "motion_picture_theaters"
      | "motor_freight_carriers_and_trucking"
      | "motor_homes_dealers"
      | "motor_vehicle_supplies_and_new_parts"
      | "motorcycle_shops_and_dealers"
      | "motorcycle_shops_dealers"
      | "music_stores_musical_instruments_pianos_and_sheet_music"
      | "news_dealers_and_newsstands"
      | "non_fi_money_orders"
      | "non_fi_stored_value_card_purchase_load"
      | "nondurable_goods"
      | "nurseries_lawn_and_garden_supply_stores"
      | "nursing_personal_care"
      | "office_and_commercial_furniture"
      | "opticians_eyeglasses"
      | "optometrists_ophthalmologist"
      | "orthopedic_goods_prosthetic_devices"
      | "osteopaths"
      | "package_stores_beer_wine_and_liquor"
      | "paints_varnishes_and_supplies"
      | "parking_lots_garages"
      | "passenger_railways"
      | "pawn_shops"
      | "pet_shops_pet_food_and_supplies"
      | "petroleum_and_petroleum_products"
      | "photo_developing"
      | "photographic_photocopy_microfilm_equipment_and_supplies"
      | "photographic_studios"
      | "picture_video_production"
      | "piece_goods_notions_and_other_dry_goods"
      | "plumbing_heating_equipment_and_supplies"
      | "political_organizations"
      | "postal_services_government_only"
      | "precious_stones_and_metals_watches_and_jewelry"
      | "professional_services"
      | "public_warehousing_and_storage"
      | "quick_copy_repro_and_blueprint"
      | "railroads"
      | "real_estate_agents_and_managers_rentals"
      | "record_stores"
      | "recreational_vehicle_rentals"
      | "religious_goods_stores"
      | "religious_organizations"
      | "roofing_siding_sheet_metal"
      | "secretarial_support_services"
      | "security_brokers_dealers"
      | "service_stations"
      | "sewing_needlework_fabric_and_piece_goods_stores"
      | "shoe_repair_hat_cleaning"
      | "shoe_stores"
      | "small_appliance_repair"
      | "snowmobile_dealers"
      | "special_trade_services"
      | "specialty_cleaning"
      | "sporting_goods_stores"
      | "sporting_recreation_camps"
      | "sports_and_riding_apparel_stores"
      | "sports_clubs_fields"
      | "stamp_and_coin_stores"
      | "stationary_office_supplies_printing_and_writing_paper"
      | "stationery_stores_office_and_school_supply_stores"
      | "swimming_pools_sales"
      | "t_ui_travel_germany"
      | "tailors_alterations"
      | "tax_payments_government_agencies"
      | "tax_preparation_services"
      | "taxicabs_limousines"
      | "telecommunication_equipment_and_telephone_sales"
      | "telecommunication_services"
      | "telegraph_services"
      | "tent_and_awning_shops"
      | "testing_laboratories"
      | "theatrical_ticket_agencies"
      | "timeshares"
      | "tire_retreading_and_repair"
      | "tolls_bridge_fees"
      | "tourist_attractions_and_exhibits"
      | "towing_services"
      | "trailer_parks_campgrounds"
      | "transportation_services"
      | "travel_agencies_tour_operators"
      | "truck_stop_iteration"
      | "truck_utility_trailer_rentals"
      | "typesetting_plate_making_and_related_services"
      | "typewriter_stores"
      | "u_s_federal_government_agencies_or_departments"
      | "uniforms_commercial_clothing"
      | "used_merchandise_and_secondhand_stores"
      | "utilities"
      | "variety_stores"
      | "veterinary_services"
      | "video_amusement_game_supplies"
      | "video_game_arcades"
      | "video_tape_rental_stores"
      | "vocational_trade_schools"
      | "watch_jewelry_repair"
      | "welding_repair"
      | "wholesale_clubs"
      | "wig_and_toupee_stores"
      | "wires_money_orders"
      | "womens_accessory_and_specialty_shops"
      | "womens_ready_to_wear_stores"
      | "wrecking_and_salvage_yards"
    )[]
    blocked_categories?: (
      | "ac_refrigeration_repair"
      | "accounting_bookkeeping_services"
      | "advertising_services"
      | "agricultural_cooperative"
      | "airlines_air_carriers"
      | "airports_flying_fields"
      | "ambulance_services"
      | "amusement_parks_carnivals"
      | "antique_reproductions"
      | "antique_shops"
      | "aquariums"
      | "architectural_surveying_services"
      | "art_dealers_and_galleries"
      | "artists_supply_and_craft_shops"
      | "auto_and_home_supply_stores"
      | "auto_body_repair_shops"
      | "auto_paint_shops"
      | "auto_service_shops"
      | "automated_cash_disburse"
      | "automated_fuel_dispensers"
      | "automobile_associations"
      | "automotive_parts_and_accessories_stores"
      | "automotive_tire_stores"
      | "bail_and_bond_payments"
      | "bakeries"
      | "bands_orchestras"
      | "barber_and_beauty_shops"
      | "betting_casino_gambling"
      | "bicycle_shops"
      | "billiard_pool_establishments"
      | "boat_dealers"
      | "boat_rentals_and_leases"
      | "book_stores"
      | "books_periodicals_and_newspapers"
      | "bowling_alleys"
      | "bus_lines"
      | "business_secretarial_schools"
      | "buying_shopping_services"
      | "cable_satellite_and_other_pay_television_and_radio"
      | "camera_and_photographic_supply_stores"
      | "candy_nut_and_confectionery_stores"
      | "car_and_truck_dealers_new_used"
      | "car_and_truck_dealers_used_only"
      | "car_rental_agencies"
      | "car_washes"
      | "carpentry_services"
      | "carpet_upholstery_cleaning"
      | "caterers"
      | "charitable_and_social_service_organizations_fundraising"
      | "chemicals_and_allied_products"
      | "child_care_services"
      | "childrens_and_infants_wear_stores"
      | "chiropodists_podiatrists"
      | "chiropractors"
      | "cigar_stores_and_stands"
      | "civic_social_fraternal_associations"
      | "cleaning_and_maintenance"
      | "clothing_rental"
      | "colleges_universities"
      | "commercial_equipment"
      | "commercial_footwear"
      | "commercial_photography_art_and_graphics"
      | "commuter_transport_and_ferries"
      | "computer_network_services"
      | "computer_programming"
      | "computer_repair"
      | "computer_software_stores"
      | "computers_peripherals_and_software"
      | "concrete_work_services"
      | "construction_materials"
      | "consulting_public_relations"
      | "correspondence_schools"
      | "cosmetic_stores"
      | "counseling_services"
      | "country_clubs"
      | "courier_services"
      | "court_costs"
      | "credit_reporting_agencies"
      | "cruise_lines"
      | "dairy_products_stores"
      | "dance_hall_studios_schools"
      | "dating_escort_services"
      | "dentists_orthodontists"
      | "department_stores"
      | "detective_agencies"
      | "digital_goods_applications"
      | "digital_goods_games"
      | "digital_goods_large_volume"
      | "digital_goods_media"
      | "direct_marketing_catalog_merchant"
      | "direct_marketing_combination_catalog_and_retail_merchant"
      | "direct_marketing_inbound_telemarketing"
      | "direct_marketing_insurance_services"
      | "direct_marketing_other"
      | "direct_marketing_outbound_telemarketing"
      | "direct_marketing_subscription"
      | "direct_marketing_travel"
      | "discount_stores"
      | "doctors"
      | "door_to_door_sales"
      | "drapery_window_covering_and_upholstery_stores"
      | "drinking_places"
      | "drug_stores_and_pharmacies"
      | "drugs_drug_proprietaries_and_druggist_sundries"
      | "dry_cleaners"
      | "durable_goods"
      | "duty_free_stores"
      | "eating_places_restaurants"
      | "educational_services"
      | "electric_razor_stores"
      | "electric_vehicle_charging"
      | "electrical_parts_and_equipment"
      | "electrical_services"
      | "electronics_repair_shops"
      | "electronics_stores"
      | "elementary_secondary_schools"
      | "emergency_services_gcas_visa_use_only"
      | "employment_temp_agencies"
      | "equipment_rental"
      | "exterminating_services"
      | "family_clothing_stores"
      | "fast_food_restaurants"
      | "financial_institutions"
      | "fines_government_administrative_entities"
      | "fireplace_fireplace_screens_and_accessories_stores"
      | "floor_covering_stores"
      | "florists"
      | "florists_supplies_nursery_stock_and_flowers"
      | "freezer_and_locker_meat_provisioners"
      | "fuel_dealers_non_automotive"
      | "funeral_services_crematories"
      | "furniture_home_furnishings_and_equipment_stores_except_appliances"
      | "furniture_repair_refinishing"
      | "furriers_and_fur_shops"
      | "general_services"
      | "gift_card_novelty_and_souvenir_shops"
      | "glass_paint_and_wallpaper_stores"
      | "glassware_crystal_stores"
      | "golf_courses_public"
      | "government_licensed_horse_dog_racing_us_region_only"
      | "government_licensed_online_casions_online_gambling_us_region_only"
      | "government_owned_lotteries_non_us_region"
      | "government_owned_lotteries_us_region_only"
      | "government_services"
      | "grocery_stores_supermarkets"
      | "hardware_equipment_and_supplies"
      | "hardware_stores"
      | "health_and_beauty_spas"
      | "hearing_aids_sales_and_supplies"
      | "heating_plumbing_a_c"
      | "hobby_toy_and_game_shops"
      | "home_supply_warehouse_stores"
      | "hospitals"
      | "hotels_motels_and_resorts"
      | "household_appliance_stores"
      | "industrial_supplies"
      | "information_retrieval_services"
      | "insurance_default"
      | "insurance_underwriting_premiums"
      | "intra_company_purchases"
      | "jewelry_stores_watches_clocks_and_silverware_stores"
      | "landscaping_services"
      | "laundries"
      | "laundry_cleaning_services"
      | "legal_services_attorneys"
      | "luggage_and_leather_goods_stores"
      | "lumber_building_materials_stores"
      | "manual_cash_disburse"
      | "marinas_service_and_supplies"
      | "marketplaces"
      | "masonry_stonework_and_plaster"
      | "massage_parlors"
      | "medical_and_dental_labs"
      | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
      | "medical_services"
      | "membership_organizations"
      | "mens_and_boys_clothing_and_accessories_stores"
      | "mens_womens_clothing_stores"
      | "metal_service_centers"
      | "miscellaneous"
      | "miscellaneous_apparel_and_accessory_shops"
      | "miscellaneous_auto_dealers"
      | "miscellaneous_business_services"
      | "miscellaneous_food_stores"
      | "miscellaneous_general_merchandise"
      | "miscellaneous_general_services"
      | "miscellaneous_home_furnishing_specialty_stores"
      | "miscellaneous_publishing_and_printing"
      | "miscellaneous_recreation_services"
      | "miscellaneous_repair_shops"
      | "miscellaneous_specialty_retail"
      | "mobile_home_dealers"
      | "motion_picture_theaters"
      | "motor_freight_carriers_and_trucking"
      | "motor_homes_dealers"
      | "motor_vehicle_supplies_and_new_parts"
      | "motorcycle_shops_and_dealers"
      | "motorcycle_shops_dealers"
      | "music_stores_musical_instruments_pianos_and_sheet_music"
      | "news_dealers_and_newsstands"
      | "non_fi_money_orders"
      | "non_fi_stored_value_card_purchase_load"
      | "nondurable_goods"
      | "nurseries_lawn_and_garden_supply_stores"
      | "nursing_personal_care"
      | "office_and_commercial_furniture"
      | "opticians_eyeglasses"
      | "optometrists_ophthalmologist"
      | "orthopedic_goods_prosthetic_devices"
      | "osteopaths"
      | "package_stores_beer_wine_and_liquor"
      | "paints_varnishes_and_supplies"
      | "parking_lots_garages"
      | "passenger_railways"
      | "pawn_shops"
      | "pet_shops_pet_food_and_supplies"
      | "petroleum_and_petroleum_products"
      | "photo_developing"
      | "photographic_photocopy_microfilm_equipment_and_supplies"
      | "photographic_studios"
      | "picture_video_production"
      | "piece_goods_notions_and_other_dry_goods"
      | "plumbing_heating_equipment_and_supplies"
      | "political_organizations"
      | "postal_services_government_only"
      | "precious_stones_and_metals_watches_and_jewelry"
      | "professional_services"
      | "public_warehousing_and_storage"
      | "quick_copy_repro_and_blueprint"
      | "railroads"
      | "real_estate_agents_and_managers_rentals"
      | "record_stores"
      | "recreational_vehicle_rentals"
      | "religious_goods_stores"
      | "religious_organizations"
      | "roofing_siding_sheet_metal"
      | "secretarial_support_services"
      | "security_brokers_dealers"
      | "service_stations"
      | "sewing_needlework_fabric_and_piece_goods_stores"
      | "shoe_repair_hat_cleaning"
      | "shoe_stores"
      | "small_appliance_repair"
      | "snowmobile_dealers"
      | "special_trade_services"
      | "specialty_cleaning"
      | "sporting_goods_stores"
      | "sporting_recreation_camps"
      | "sports_and_riding_apparel_stores"
      | "sports_clubs_fields"
      | "stamp_and_coin_stores"
      | "stationary_office_supplies_printing_and_writing_paper"
      | "stationery_stores_office_and_school_supply_stores"
      | "swimming_pools_sales"
      | "t_ui_travel_germany"
      | "tailors_alterations"
      | "tax_payments_government_agencies"
      | "tax_preparation_services"
      | "taxicabs_limousines"
      | "telecommunication_equipment_and_telephone_sales"
      | "telecommunication_services"
      | "telegraph_services"
      | "tent_and_awning_shops"
      | "testing_laboratories"
      | "theatrical_ticket_agencies"
      | "timeshares"
      | "tire_retreading_and_repair"
      | "tolls_bridge_fees"
      | "tourist_attractions_and_exhibits"
      | "towing_services"
      | "trailer_parks_campgrounds"
      | "transportation_services"
      | "travel_agencies_tour_operators"
      | "truck_stop_iteration"
      | "truck_utility_trailer_rentals"
      | "typesetting_plate_making_and_related_services"
      | "typewriter_stores"
      | "u_s_federal_government_agencies_or_departments"
      | "uniforms_commercial_clothing"
      | "used_merchandise_and_secondhand_stores"
      | "utilities"
      | "variety_stores"
      | "veterinary_services"
      | "video_amusement_game_supplies"
      | "video_game_arcades"
      | "video_tape_rental_stores"
      | "vocational_trade_schools"
      | "watch_jewelry_repair"
      | "welding_repair"
      | "wholesale_clubs"
      | "wig_and_toupee_stores"
      | "wires_money_orders"
      | "womens_accessory_and_specialty_shops"
      | "womens_ready_to_wear_stores"
      | "wrecking_and_salvage_yards"
    )[]
    spending_limits?: {
      amount: number
      categories?: (
        | "ac_refrigeration_repair"
        | "accounting_bookkeeping_services"
        | "advertising_services"
        | "agricultural_cooperative"
        | "airlines_air_carriers"
        | "airports_flying_fields"
        | "ambulance_services"
        | "amusement_parks_carnivals"
        | "antique_reproductions"
        | "antique_shops"
        | "aquariums"
        | "architectural_surveying_services"
        | "art_dealers_and_galleries"
        | "artists_supply_and_craft_shops"
        | "auto_and_home_supply_stores"
        | "auto_body_repair_shops"
        | "auto_paint_shops"
        | "auto_service_shops"
        | "automated_cash_disburse"
        | "automated_fuel_dispensers"
        | "automobile_associations"
        | "automotive_parts_and_accessories_stores"
        | "automotive_tire_stores"
        | "bail_and_bond_payments"
        | "bakeries"
        | "bands_orchestras"
        | "barber_and_beauty_shops"
        | "betting_casino_gambling"
        | "bicycle_shops"
        | "billiard_pool_establishments"
        | "boat_dealers"
        | "boat_rentals_and_leases"
        | "book_stores"
        | "books_periodicals_and_newspapers"
        | "bowling_alleys"
        | "bus_lines"
        | "business_secretarial_schools"
        | "buying_shopping_services"
        | "cable_satellite_and_other_pay_television_and_radio"
        | "camera_and_photographic_supply_stores"
        | "candy_nut_and_confectionery_stores"
        | "car_and_truck_dealers_new_used"
        | "car_and_truck_dealers_used_only"
        | "car_rental_agencies"
        | "car_washes"
        | "carpentry_services"
        | "carpet_upholstery_cleaning"
        | "caterers"
        | "charitable_and_social_service_organizations_fundraising"
        | "chemicals_and_allied_products"
        | "child_care_services"
        | "childrens_and_infants_wear_stores"
        | "chiropodists_podiatrists"
        | "chiropractors"
        | "cigar_stores_and_stands"
        | "civic_social_fraternal_associations"
        | "cleaning_and_maintenance"
        | "clothing_rental"
        | "colleges_universities"
        | "commercial_equipment"
        | "commercial_footwear"
        | "commercial_photography_art_and_graphics"
        | "commuter_transport_and_ferries"
        | "computer_network_services"
        | "computer_programming"
        | "computer_repair"
        | "computer_software_stores"
        | "computers_peripherals_and_software"
        | "concrete_work_services"
        | "construction_materials"
        | "consulting_public_relations"
        | "correspondence_schools"
        | "cosmetic_stores"
        | "counseling_services"
        | "country_clubs"
        | "courier_services"
        | "court_costs"
        | "credit_reporting_agencies"
        | "cruise_lines"
        | "dairy_products_stores"
        | "dance_hall_studios_schools"
        | "dating_escort_services"
        | "dentists_orthodontists"
        | "department_stores"
        | "detective_agencies"
        | "digital_goods_applications"
        | "digital_goods_games"
        | "digital_goods_large_volume"
        | "digital_goods_media"
        | "direct_marketing_catalog_merchant"
        | "direct_marketing_combination_catalog_and_retail_merchant"
        | "direct_marketing_inbound_telemarketing"
        | "direct_marketing_insurance_services"
        | "direct_marketing_other"
        | "direct_marketing_outbound_telemarketing"
        | "direct_marketing_subscription"
        | "direct_marketing_travel"
        | "discount_stores"
        | "doctors"
        | "door_to_door_sales"
        | "drapery_window_covering_and_upholstery_stores"
        | "drinking_places"
        | "drug_stores_and_pharmacies"
        | "drugs_drug_proprietaries_and_druggist_sundries"
        | "dry_cleaners"
        | "durable_goods"
        | "duty_free_stores"
        | "eating_places_restaurants"
        | "educational_services"
        | "electric_razor_stores"
        | "electric_vehicle_charging"
        | "electrical_parts_and_equipment"
        | "electrical_services"
        | "electronics_repair_shops"
        | "electronics_stores"
        | "elementary_secondary_schools"
        | "emergency_services_gcas_visa_use_only"
        | "employment_temp_agencies"
        | "equipment_rental"
        | "exterminating_services"
        | "family_clothing_stores"
        | "fast_food_restaurants"
        | "financial_institutions"
        | "fines_government_administrative_entities"
        | "fireplace_fireplace_screens_and_accessories_stores"
        | "floor_covering_stores"
        | "florists"
        | "florists_supplies_nursery_stock_and_flowers"
        | "freezer_and_locker_meat_provisioners"
        | "fuel_dealers_non_automotive"
        | "funeral_services_crematories"
        | "furniture_home_furnishings_and_equipment_stores_except_appliances"
        | "furniture_repair_refinishing"
        | "furriers_and_fur_shops"
        | "general_services"
        | "gift_card_novelty_and_souvenir_shops"
        | "glass_paint_and_wallpaper_stores"
        | "glassware_crystal_stores"
        | "golf_courses_public"
        | "government_licensed_horse_dog_racing_us_region_only"
        | "government_licensed_online_casions_online_gambling_us_region_only"
        | "government_owned_lotteries_non_us_region"
        | "government_owned_lotteries_us_region_only"
        | "government_services"
        | "grocery_stores_supermarkets"
        | "hardware_equipment_and_supplies"
        | "hardware_stores"
        | "health_and_beauty_spas"
        | "hearing_aids_sales_and_supplies"
        | "heating_plumbing_a_c"
        | "hobby_toy_and_game_shops"
        | "home_supply_warehouse_stores"
        | "hospitals"
        | "hotels_motels_and_resorts"
        | "household_appliance_stores"
        | "industrial_supplies"
        | "information_retrieval_services"
        | "insurance_default"
        | "insurance_underwriting_premiums"
        | "intra_company_purchases"
        | "jewelry_stores_watches_clocks_and_silverware_stores"
        | "landscaping_services"
        | "laundries"
        | "laundry_cleaning_services"
        | "legal_services_attorneys"
        | "luggage_and_leather_goods_stores"
        | "lumber_building_materials_stores"
        | "manual_cash_disburse"
        | "marinas_service_and_supplies"
        | "marketplaces"
        | "masonry_stonework_and_plaster"
        | "massage_parlors"
        | "medical_and_dental_labs"
        | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
        | "medical_services"
        | "membership_organizations"
        | "mens_and_boys_clothing_and_accessories_stores"
        | "mens_womens_clothing_stores"
        | "metal_service_centers"
        | "miscellaneous"
        | "miscellaneous_apparel_and_accessory_shops"
        | "miscellaneous_auto_dealers"
        | "miscellaneous_business_services"
        | "miscellaneous_food_stores"
        | "miscellaneous_general_merchandise"
        | "miscellaneous_general_services"
        | "miscellaneous_home_furnishing_specialty_stores"
        | "miscellaneous_publishing_and_printing"
        | "miscellaneous_recreation_services"
        | "miscellaneous_repair_shops"
        | "miscellaneous_specialty_retail"
        | "mobile_home_dealers"
        | "motion_picture_theaters"
        | "motor_freight_carriers_and_trucking"
        | "motor_homes_dealers"
        | "motor_vehicle_supplies_and_new_parts"
        | "motorcycle_shops_and_dealers"
        | "motorcycle_shops_dealers"
        | "music_stores_musical_instruments_pianos_and_sheet_music"
        | "news_dealers_and_newsstands"
        | "non_fi_money_orders"
        | "non_fi_stored_value_card_purchase_load"
        | "nondurable_goods"
        | "nurseries_lawn_and_garden_supply_stores"
        | "nursing_personal_care"
        | "office_and_commercial_furniture"
        | "opticians_eyeglasses"
        | "optometrists_ophthalmologist"
        | "orthopedic_goods_prosthetic_devices"
        | "osteopaths"
        | "package_stores_beer_wine_and_liquor"
        | "paints_varnishes_and_supplies"
        | "parking_lots_garages"
        | "passenger_railways"
        | "pawn_shops"
        | "pet_shops_pet_food_and_supplies"
        | "petroleum_and_petroleum_products"
        | "photo_developing"
        | "photographic_photocopy_microfilm_equipment_and_supplies"
        | "photographic_studios"
        | "picture_video_production"
        | "piece_goods_notions_and_other_dry_goods"
        | "plumbing_heating_equipment_and_supplies"
        | "political_organizations"
        | "postal_services_government_only"
        | "precious_stones_and_metals_watches_and_jewelry"
        | "professional_services"
        | "public_warehousing_and_storage"
        | "quick_copy_repro_and_blueprint"
        | "railroads"
        | "real_estate_agents_and_managers_rentals"
        | "record_stores"
        | "recreational_vehicle_rentals"
        | "religious_goods_stores"
        | "religious_organizations"
        | "roofing_siding_sheet_metal"
        | "secretarial_support_services"
        | "security_brokers_dealers"
        | "service_stations"
        | "sewing_needlework_fabric_and_piece_goods_stores"
        | "shoe_repair_hat_cleaning"
        | "shoe_stores"
        | "small_appliance_repair"
        | "snowmobile_dealers"
        | "special_trade_services"
        | "specialty_cleaning"
        | "sporting_goods_stores"
        | "sporting_recreation_camps"
        | "sports_and_riding_apparel_stores"
        | "sports_clubs_fields"
        | "stamp_and_coin_stores"
        | "stationary_office_supplies_printing_and_writing_paper"
        | "stationery_stores_office_and_school_supply_stores"
        | "swimming_pools_sales"
        | "t_ui_travel_germany"
        | "tailors_alterations"
        | "tax_payments_government_agencies"
        | "tax_preparation_services"
        | "taxicabs_limousines"
        | "telecommunication_equipment_and_telephone_sales"
        | "telecommunication_services"
        | "telegraph_services"
        | "tent_and_awning_shops"
        | "testing_laboratories"
        | "theatrical_ticket_agencies"
        | "timeshares"
        | "tire_retreading_and_repair"
        | "tolls_bridge_fees"
        | "tourist_attractions_and_exhibits"
        | "towing_services"
        | "trailer_parks_campgrounds"
        | "transportation_services"
        | "travel_agencies_tour_operators"
        | "truck_stop_iteration"
        | "truck_utility_trailer_rentals"
        | "typesetting_plate_making_and_related_services"
        | "typewriter_stores"
        | "u_s_federal_government_agencies_or_departments"
        | "uniforms_commercial_clothing"
        | "used_merchandise_and_secondhand_stores"
        | "utilities"
        | "variety_stores"
        | "veterinary_services"
        | "video_amusement_game_supplies"
        | "video_game_arcades"
        | "video_tape_rental_stores"
        | "vocational_trade_schools"
        | "watch_jewelry_repair"
        | "welding_repair"
        | "wholesale_clubs"
        | "wig_and_toupee_stores"
        | "wires_money_orders"
        | "womens_accessory_and_specialty_shops"
        | "womens_ready_to_wear_stores"
        | "wrecking_and_salvage_yards"
      )[]
      interval:
        | "all_time"
        | "daily"
        | "monthly"
        | "per_authorization"
        | "weekly"
        | "yearly"
    }[]
    spending_limits_currency?: string
  }
  status?: "active" | "inactive"
  type?: "company" | "individual"
}

export type t_PostIssuingCardholdersCardholderBodySchema = {
  billing?: {
    address: {
      city: string
      country: string
      line1: string
      line2?: string
      postal_code: string
      state?: string
    }
  }
  company?: {
    tax_id?: string
  }
  email?: string
  expand?: string[]
  individual?: {
    card_issuing?: {
      user_terms_acceptance?: {
        date?: number
        ip?: string
        user_agent?: string | ""
      }
    }
    dob?: {
      day: number
      month: number
      year: number
    }
    first_name?: string
    last_name?: string
    verification?: {
      document?: {
        back?: string
        front?: string
      }
    }
  }
  metadata?: {
    [key: string]: string
  }
  phone_number?: string
  preferred_locales?: ("de" | "en" | "es" | "fr" | "it")[]
  spending_controls?: {
    allowed_categories?: (
      | "ac_refrigeration_repair"
      | "accounting_bookkeeping_services"
      | "advertising_services"
      | "agricultural_cooperative"
      | "airlines_air_carriers"
      | "airports_flying_fields"
      | "ambulance_services"
      | "amusement_parks_carnivals"
      | "antique_reproductions"
      | "antique_shops"
      | "aquariums"
      | "architectural_surveying_services"
      | "art_dealers_and_galleries"
      | "artists_supply_and_craft_shops"
      | "auto_and_home_supply_stores"
      | "auto_body_repair_shops"
      | "auto_paint_shops"
      | "auto_service_shops"
      | "automated_cash_disburse"
      | "automated_fuel_dispensers"
      | "automobile_associations"
      | "automotive_parts_and_accessories_stores"
      | "automotive_tire_stores"
      | "bail_and_bond_payments"
      | "bakeries"
      | "bands_orchestras"
      | "barber_and_beauty_shops"
      | "betting_casino_gambling"
      | "bicycle_shops"
      | "billiard_pool_establishments"
      | "boat_dealers"
      | "boat_rentals_and_leases"
      | "book_stores"
      | "books_periodicals_and_newspapers"
      | "bowling_alleys"
      | "bus_lines"
      | "business_secretarial_schools"
      | "buying_shopping_services"
      | "cable_satellite_and_other_pay_television_and_radio"
      | "camera_and_photographic_supply_stores"
      | "candy_nut_and_confectionery_stores"
      | "car_and_truck_dealers_new_used"
      | "car_and_truck_dealers_used_only"
      | "car_rental_agencies"
      | "car_washes"
      | "carpentry_services"
      | "carpet_upholstery_cleaning"
      | "caterers"
      | "charitable_and_social_service_organizations_fundraising"
      | "chemicals_and_allied_products"
      | "child_care_services"
      | "childrens_and_infants_wear_stores"
      | "chiropodists_podiatrists"
      | "chiropractors"
      | "cigar_stores_and_stands"
      | "civic_social_fraternal_associations"
      | "cleaning_and_maintenance"
      | "clothing_rental"
      | "colleges_universities"
      | "commercial_equipment"
      | "commercial_footwear"
      | "commercial_photography_art_and_graphics"
      | "commuter_transport_and_ferries"
      | "computer_network_services"
      | "computer_programming"
      | "computer_repair"
      | "computer_software_stores"
      | "computers_peripherals_and_software"
      | "concrete_work_services"
      | "construction_materials"
      | "consulting_public_relations"
      | "correspondence_schools"
      | "cosmetic_stores"
      | "counseling_services"
      | "country_clubs"
      | "courier_services"
      | "court_costs"
      | "credit_reporting_agencies"
      | "cruise_lines"
      | "dairy_products_stores"
      | "dance_hall_studios_schools"
      | "dating_escort_services"
      | "dentists_orthodontists"
      | "department_stores"
      | "detective_agencies"
      | "digital_goods_applications"
      | "digital_goods_games"
      | "digital_goods_large_volume"
      | "digital_goods_media"
      | "direct_marketing_catalog_merchant"
      | "direct_marketing_combination_catalog_and_retail_merchant"
      | "direct_marketing_inbound_telemarketing"
      | "direct_marketing_insurance_services"
      | "direct_marketing_other"
      | "direct_marketing_outbound_telemarketing"
      | "direct_marketing_subscription"
      | "direct_marketing_travel"
      | "discount_stores"
      | "doctors"
      | "door_to_door_sales"
      | "drapery_window_covering_and_upholstery_stores"
      | "drinking_places"
      | "drug_stores_and_pharmacies"
      | "drugs_drug_proprietaries_and_druggist_sundries"
      | "dry_cleaners"
      | "durable_goods"
      | "duty_free_stores"
      | "eating_places_restaurants"
      | "educational_services"
      | "electric_razor_stores"
      | "electric_vehicle_charging"
      | "electrical_parts_and_equipment"
      | "electrical_services"
      | "electronics_repair_shops"
      | "electronics_stores"
      | "elementary_secondary_schools"
      | "emergency_services_gcas_visa_use_only"
      | "employment_temp_agencies"
      | "equipment_rental"
      | "exterminating_services"
      | "family_clothing_stores"
      | "fast_food_restaurants"
      | "financial_institutions"
      | "fines_government_administrative_entities"
      | "fireplace_fireplace_screens_and_accessories_stores"
      | "floor_covering_stores"
      | "florists"
      | "florists_supplies_nursery_stock_and_flowers"
      | "freezer_and_locker_meat_provisioners"
      | "fuel_dealers_non_automotive"
      | "funeral_services_crematories"
      | "furniture_home_furnishings_and_equipment_stores_except_appliances"
      | "furniture_repair_refinishing"
      | "furriers_and_fur_shops"
      | "general_services"
      | "gift_card_novelty_and_souvenir_shops"
      | "glass_paint_and_wallpaper_stores"
      | "glassware_crystal_stores"
      | "golf_courses_public"
      | "government_licensed_horse_dog_racing_us_region_only"
      | "government_licensed_online_casions_online_gambling_us_region_only"
      | "government_owned_lotteries_non_us_region"
      | "government_owned_lotteries_us_region_only"
      | "government_services"
      | "grocery_stores_supermarkets"
      | "hardware_equipment_and_supplies"
      | "hardware_stores"
      | "health_and_beauty_spas"
      | "hearing_aids_sales_and_supplies"
      | "heating_plumbing_a_c"
      | "hobby_toy_and_game_shops"
      | "home_supply_warehouse_stores"
      | "hospitals"
      | "hotels_motels_and_resorts"
      | "household_appliance_stores"
      | "industrial_supplies"
      | "information_retrieval_services"
      | "insurance_default"
      | "insurance_underwriting_premiums"
      | "intra_company_purchases"
      | "jewelry_stores_watches_clocks_and_silverware_stores"
      | "landscaping_services"
      | "laundries"
      | "laundry_cleaning_services"
      | "legal_services_attorneys"
      | "luggage_and_leather_goods_stores"
      | "lumber_building_materials_stores"
      | "manual_cash_disburse"
      | "marinas_service_and_supplies"
      | "marketplaces"
      | "masonry_stonework_and_plaster"
      | "massage_parlors"
      | "medical_and_dental_labs"
      | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
      | "medical_services"
      | "membership_organizations"
      | "mens_and_boys_clothing_and_accessories_stores"
      | "mens_womens_clothing_stores"
      | "metal_service_centers"
      | "miscellaneous"
      | "miscellaneous_apparel_and_accessory_shops"
      | "miscellaneous_auto_dealers"
      | "miscellaneous_business_services"
      | "miscellaneous_food_stores"
      | "miscellaneous_general_merchandise"
      | "miscellaneous_general_services"
      | "miscellaneous_home_furnishing_specialty_stores"
      | "miscellaneous_publishing_and_printing"
      | "miscellaneous_recreation_services"
      | "miscellaneous_repair_shops"
      | "miscellaneous_specialty_retail"
      | "mobile_home_dealers"
      | "motion_picture_theaters"
      | "motor_freight_carriers_and_trucking"
      | "motor_homes_dealers"
      | "motor_vehicle_supplies_and_new_parts"
      | "motorcycle_shops_and_dealers"
      | "motorcycle_shops_dealers"
      | "music_stores_musical_instruments_pianos_and_sheet_music"
      | "news_dealers_and_newsstands"
      | "non_fi_money_orders"
      | "non_fi_stored_value_card_purchase_load"
      | "nondurable_goods"
      | "nurseries_lawn_and_garden_supply_stores"
      | "nursing_personal_care"
      | "office_and_commercial_furniture"
      | "opticians_eyeglasses"
      | "optometrists_ophthalmologist"
      | "orthopedic_goods_prosthetic_devices"
      | "osteopaths"
      | "package_stores_beer_wine_and_liquor"
      | "paints_varnishes_and_supplies"
      | "parking_lots_garages"
      | "passenger_railways"
      | "pawn_shops"
      | "pet_shops_pet_food_and_supplies"
      | "petroleum_and_petroleum_products"
      | "photo_developing"
      | "photographic_photocopy_microfilm_equipment_and_supplies"
      | "photographic_studios"
      | "picture_video_production"
      | "piece_goods_notions_and_other_dry_goods"
      | "plumbing_heating_equipment_and_supplies"
      | "political_organizations"
      | "postal_services_government_only"
      | "precious_stones_and_metals_watches_and_jewelry"
      | "professional_services"
      | "public_warehousing_and_storage"
      | "quick_copy_repro_and_blueprint"
      | "railroads"
      | "real_estate_agents_and_managers_rentals"
      | "record_stores"
      | "recreational_vehicle_rentals"
      | "religious_goods_stores"
      | "religious_organizations"
      | "roofing_siding_sheet_metal"
      | "secretarial_support_services"
      | "security_brokers_dealers"
      | "service_stations"
      | "sewing_needlework_fabric_and_piece_goods_stores"
      | "shoe_repair_hat_cleaning"
      | "shoe_stores"
      | "small_appliance_repair"
      | "snowmobile_dealers"
      | "special_trade_services"
      | "specialty_cleaning"
      | "sporting_goods_stores"
      | "sporting_recreation_camps"
      | "sports_and_riding_apparel_stores"
      | "sports_clubs_fields"
      | "stamp_and_coin_stores"
      | "stationary_office_supplies_printing_and_writing_paper"
      | "stationery_stores_office_and_school_supply_stores"
      | "swimming_pools_sales"
      | "t_ui_travel_germany"
      | "tailors_alterations"
      | "tax_payments_government_agencies"
      | "tax_preparation_services"
      | "taxicabs_limousines"
      | "telecommunication_equipment_and_telephone_sales"
      | "telecommunication_services"
      | "telegraph_services"
      | "tent_and_awning_shops"
      | "testing_laboratories"
      | "theatrical_ticket_agencies"
      | "timeshares"
      | "tire_retreading_and_repair"
      | "tolls_bridge_fees"
      | "tourist_attractions_and_exhibits"
      | "towing_services"
      | "trailer_parks_campgrounds"
      | "transportation_services"
      | "travel_agencies_tour_operators"
      | "truck_stop_iteration"
      | "truck_utility_trailer_rentals"
      | "typesetting_plate_making_and_related_services"
      | "typewriter_stores"
      | "u_s_federal_government_agencies_or_departments"
      | "uniforms_commercial_clothing"
      | "used_merchandise_and_secondhand_stores"
      | "utilities"
      | "variety_stores"
      | "veterinary_services"
      | "video_amusement_game_supplies"
      | "video_game_arcades"
      | "video_tape_rental_stores"
      | "vocational_trade_schools"
      | "watch_jewelry_repair"
      | "welding_repair"
      | "wholesale_clubs"
      | "wig_and_toupee_stores"
      | "wires_money_orders"
      | "womens_accessory_and_specialty_shops"
      | "womens_ready_to_wear_stores"
      | "wrecking_and_salvage_yards"
    )[]
    blocked_categories?: (
      | "ac_refrigeration_repair"
      | "accounting_bookkeeping_services"
      | "advertising_services"
      | "agricultural_cooperative"
      | "airlines_air_carriers"
      | "airports_flying_fields"
      | "ambulance_services"
      | "amusement_parks_carnivals"
      | "antique_reproductions"
      | "antique_shops"
      | "aquariums"
      | "architectural_surveying_services"
      | "art_dealers_and_galleries"
      | "artists_supply_and_craft_shops"
      | "auto_and_home_supply_stores"
      | "auto_body_repair_shops"
      | "auto_paint_shops"
      | "auto_service_shops"
      | "automated_cash_disburse"
      | "automated_fuel_dispensers"
      | "automobile_associations"
      | "automotive_parts_and_accessories_stores"
      | "automotive_tire_stores"
      | "bail_and_bond_payments"
      | "bakeries"
      | "bands_orchestras"
      | "barber_and_beauty_shops"
      | "betting_casino_gambling"
      | "bicycle_shops"
      | "billiard_pool_establishments"
      | "boat_dealers"
      | "boat_rentals_and_leases"
      | "book_stores"
      | "books_periodicals_and_newspapers"
      | "bowling_alleys"
      | "bus_lines"
      | "business_secretarial_schools"
      | "buying_shopping_services"
      | "cable_satellite_and_other_pay_television_and_radio"
      | "camera_and_photographic_supply_stores"
      | "candy_nut_and_confectionery_stores"
      | "car_and_truck_dealers_new_used"
      | "car_and_truck_dealers_used_only"
      | "car_rental_agencies"
      | "car_washes"
      | "carpentry_services"
      | "carpet_upholstery_cleaning"
      | "caterers"
      | "charitable_and_social_service_organizations_fundraising"
      | "chemicals_and_allied_products"
      | "child_care_services"
      | "childrens_and_infants_wear_stores"
      | "chiropodists_podiatrists"
      | "chiropractors"
      | "cigar_stores_and_stands"
      | "civic_social_fraternal_associations"
      | "cleaning_and_maintenance"
      | "clothing_rental"
      | "colleges_universities"
      | "commercial_equipment"
      | "commercial_footwear"
      | "commercial_photography_art_and_graphics"
      | "commuter_transport_and_ferries"
      | "computer_network_services"
      | "computer_programming"
      | "computer_repair"
      | "computer_software_stores"
      | "computers_peripherals_and_software"
      | "concrete_work_services"
      | "construction_materials"
      | "consulting_public_relations"
      | "correspondence_schools"
      | "cosmetic_stores"
      | "counseling_services"
      | "country_clubs"
      | "courier_services"
      | "court_costs"
      | "credit_reporting_agencies"
      | "cruise_lines"
      | "dairy_products_stores"
      | "dance_hall_studios_schools"
      | "dating_escort_services"
      | "dentists_orthodontists"
      | "department_stores"
      | "detective_agencies"
      | "digital_goods_applications"
      | "digital_goods_games"
      | "digital_goods_large_volume"
      | "digital_goods_media"
      | "direct_marketing_catalog_merchant"
      | "direct_marketing_combination_catalog_and_retail_merchant"
      | "direct_marketing_inbound_telemarketing"
      | "direct_marketing_insurance_services"
      | "direct_marketing_other"
      | "direct_marketing_outbound_telemarketing"
      | "direct_marketing_subscription"
      | "direct_marketing_travel"
      | "discount_stores"
      | "doctors"
      | "door_to_door_sales"
      | "drapery_window_covering_and_upholstery_stores"
      | "drinking_places"
      | "drug_stores_and_pharmacies"
      | "drugs_drug_proprietaries_and_druggist_sundries"
      | "dry_cleaners"
      | "durable_goods"
      | "duty_free_stores"
      | "eating_places_restaurants"
      | "educational_services"
      | "electric_razor_stores"
      | "electric_vehicle_charging"
      | "electrical_parts_and_equipment"
      | "electrical_services"
      | "electronics_repair_shops"
      | "electronics_stores"
      | "elementary_secondary_schools"
      | "emergency_services_gcas_visa_use_only"
      | "employment_temp_agencies"
      | "equipment_rental"
      | "exterminating_services"
      | "family_clothing_stores"
      | "fast_food_restaurants"
      | "financial_institutions"
      | "fines_government_administrative_entities"
      | "fireplace_fireplace_screens_and_accessories_stores"
      | "floor_covering_stores"
      | "florists"
      | "florists_supplies_nursery_stock_and_flowers"
      | "freezer_and_locker_meat_provisioners"
      | "fuel_dealers_non_automotive"
      | "funeral_services_crematories"
      | "furniture_home_furnishings_and_equipment_stores_except_appliances"
      | "furniture_repair_refinishing"
      | "furriers_and_fur_shops"
      | "general_services"
      | "gift_card_novelty_and_souvenir_shops"
      | "glass_paint_and_wallpaper_stores"
      | "glassware_crystal_stores"
      | "golf_courses_public"
      | "government_licensed_horse_dog_racing_us_region_only"
      | "government_licensed_online_casions_online_gambling_us_region_only"
      | "government_owned_lotteries_non_us_region"
      | "government_owned_lotteries_us_region_only"
      | "government_services"
      | "grocery_stores_supermarkets"
      | "hardware_equipment_and_supplies"
      | "hardware_stores"
      | "health_and_beauty_spas"
      | "hearing_aids_sales_and_supplies"
      | "heating_plumbing_a_c"
      | "hobby_toy_and_game_shops"
      | "home_supply_warehouse_stores"
      | "hospitals"
      | "hotels_motels_and_resorts"
      | "household_appliance_stores"
      | "industrial_supplies"
      | "information_retrieval_services"
      | "insurance_default"
      | "insurance_underwriting_premiums"
      | "intra_company_purchases"
      | "jewelry_stores_watches_clocks_and_silverware_stores"
      | "landscaping_services"
      | "laundries"
      | "laundry_cleaning_services"
      | "legal_services_attorneys"
      | "luggage_and_leather_goods_stores"
      | "lumber_building_materials_stores"
      | "manual_cash_disburse"
      | "marinas_service_and_supplies"
      | "marketplaces"
      | "masonry_stonework_and_plaster"
      | "massage_parlors"
      | "medical_and_dental_labs"
      | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
      | "medical_services"
      | "membership_organizations"
      | "mens_and_boys_clothing_and_accessories_stores"
      | "mens_womens_clothing_stores"
      | "metal_service_centers"
      | "miscellaneous"
      | "miscellaneous_apparel_and_accessory_shops"
      | "miscellaneous_auto_dealers"
      | "miscellaneous_business_services"
      | "miscellaneous_food_stores"
      | "miscellaneous_general_merchandise"
      | "miscellaneous_general_services"
      | "miscellaneous_home_furnishing_specialty_stores"
      | "miscellaneous_publishing_and_printing"
      | "miscellaneous_recreation_services"
      | "miscellaneous_repair_shops"
      | "miscellaneous_specialty_retail"
      | "mobile_home_dealers"
      | "motion_picture_theaters"
      | "motor_freight_carriers_and_trucking"
      | "motor_homes_dealers"
      | "motor_vehicle_supplies_and_new_parts"
      | "motorcycle_shops_and_dealers"
      | "motorcycle_shops_dealers"
      | "music_stores_musical_instruments_pianos_and_sheet_music"
      | "news_dealers_and_newsstands"
      | "non_fi_money_orders"
      | "non_fi_stored_value_card_purchase_load"
      | "nondurable_goods"
      | "nurseries_lawn_and_garden_supply_stores"
      | "nursing_personal_care"
      | "office_and_commercial_furniture"
      | "opticians_eyeglasses"
      | "optometrists_ophthalmologist"
      | "orthopedic_goods_prosthetic_devices"
      | "osteopaths"
      | "package_stores_beer_wine_and_liquor"
      | "paints_varnishes_and_supplies"
      | "parking_lots_garages"
      | "passenger_railways"
      | "pawn_shops"
      | "pet_shops_pet_food_and_supplies"
      | "petroleum_and_petroleum_products"
      | "photo_developing"
      | "photographic_photocopy_microfilm_equipment_and_supplies"
      | "photographic_studios"
      | "picture_video_production"
      | "piece_goods_notions_and_other_dry_goods"
      | "plumbing_heating_equipment_and_supplies"
      | "political_organizations"
      | "postal_services_government_only"
      | "precious_stones_and_metals_watches_and_jewelry"
      | "professional_services"
      | "public_warehousing_and_storage"
      | "quick_copy_repro_and_blueprint"
      | "railroads"
      | "real_estate_agents_and_managers_rentals"
      | "record_stores"
      | "recreational_vehicle_rentals"
      | "religious_goods_stores"
      | "religious_organizations"
      | "roofing_siding_sheet_metal"
      | "secretarial_support_services"
      | "security_brokers_dealers"
      | "service_stations"
      | "sewing_needlework_fabric_and_piece_goods_stores"
      | "shoe_repair_hat_cleaning"
      | "shoe_stores"
      | "small_appliance_repair"
      | "snowmobile_dealers"
      | "special_trade_services"
      | "specialty_cleaning"
      | "sporting_goods_stores"
      | "sporting_recreation_camps"
      | "sports_and_riding_apparel_stores"
      | "sports_clubs_fields"
      | "stamp_and_coin_stores"
      | "stationary_office_supplies_printing_and_writing_paper"
      | "stationery_stores_office_and_school_supply_stores"
      | "swimming_pools_sales"
      | "t_ui_travel_germany"
      | "tailors_alterations"
      | "tax_payments_government_agencies"
      | "tax_preparation_services"
      | "taxicabs_limousines"
      | "telecommunication_equipment_and_telephone_sales"
      | "telecommunication_services"
      | "telegraph_services"
      | "tent_and_awning_shops"
      | "testing_laboratories"
      | "theatrical_ticket_agencies"
      | "timeshares"
      | "tire_retreading_and_repair"
      | "tolls_bridge_fees"
      | "tourist_attractions_and_exhibits"
      | "towing_services"
      | "trailer_parks_campgrounds"
      | "transportation_services"
      | "travel_agencies_tour_operators"
      | "truck_stop_iteration"
      | "truck_utility_trailer_rentals"
      | "typesetting_plate_making_and_related_services"
      | "typewriter_stores"
      | "u_s_federal_government_agencies_or_departments"
      | "uniforms_commercial_clothing"
      | "used_merchandise_and_secondhand_stores"
      | "utilities"
      | "variety_stores"
      | "veterinary_services"
      | "video_amusement_game_supplies"
      | "video_game_arcades"
      | "video_tape_rental_stores"
      | "vocational_trade_schools"
      | "watch_jewelry_repair"
      | "welding_repair"
      | "wholesale_clubs"
      | "wig_and_toupee_stores"
      | "wires_money_orders"
      | "womens_accessory_and_specialty_shops"
      | "womens_ready_to_wear_stores"
      | "wrecking_and_salvage_yards"
    )[]
    spending_limits?: {
      amount: number
      categories?: (
        | "ac_refrigeration_repair"
        | "accounting_bookkeeping_services"
        | "advertising_services"
        | "agricultural_cooperative"
        | "airlines_air_carriers"
        | "airports_flying_fields"
        | "ambulance_services"
        | "amusement_parks_carnivals"
        | "antique_reproductions"
        | "antique_shops"
        | "aquariums"
        | "architectural_surveying_services"
        | "art_dealers_and_galleries"
        | "artists_supply_and_craft_shops"
        | "auto_and_home_supply_stores"
        | "auto_body_repair_shops"
        | "auto_paint_shops"
        | "auto_service_shops"
        | "automated_cash_disburse"
        | "automated_fuel_dispensers"
        | "automobile_associations"
        | "automotive_parts_and_accessories_stores"
        | "automotive_tire_stores"
        | "bail_and_bond_payments"
        | "bakeries"
        | "bands_orchestras"
        | "barber_and_beauty_shops"
        | "betting_casino_gambling"
        | "bicycle_shops"
        | "billiard_pool_establishments"
        | "boat_dealers"
        | "boat_rentals_and_leases"
        | "book_stores"
        | "books_periodicals_and_newspapers"
        | "bowling_alleys"
        | "bus_lines"
        | "business_secretarial_schools"
        | "buying_shopping_services"
        | "cable_satellite_and_other_pay_television_and_radio"
        | "camera_and_photographic_supply_stores"
        | "candy_nut_and_confectionery_stores"
        | "car_and_truck_dealers_new_used"
        | "car_and_truck_dealers_used_only"
        | "car_rental_agencies"
        | "car_washes"
        | "carpentry_services"
        | "carpet_upholstery_cleaning"
        | "caterers"
        | "charitable_and_social_service_organizations_fundraising"
        | "chemicals_and_allied_products"
        | "child_care_services"
        | "childrens_and_infants_wear_stores"
        | "chiropodists_podiatrists"
        | "chiropractors"
        | "cigar_stores_and_stands"
        | "civic_social_fraternal_associations"
        | "cleaning_and_maintenance"
        | "clothing_rental"
        | "colleges_universities"
        | "commercial_equipment"
        | "commercial_footwear"
        | "commercial_photography_art_and_graphics"
        | "commuter_transport_and_ferries"
        | "computer_network_services"
        | "computer_programming"
        | "computer_repair"
        | "computer_software_stores"
        | "computers_peripherals_and_software"
        | "concrete_work_services"
        | "construction_materials"
        | "consulting_public_relations"
        | "correspondence_schools"
        | "cosmetic_stores"
        | "counseling_services"
        | "country_clubs"
        | "courier_services"
        | "court_costs"
        | "credit_reporting_agencies"
        | "cruise_lines"
        | "dairy_products_stores"
        | "dance_hall_studios_schools"
        | "dating_escort_services"
        | "dentists_orthodontists"
        | "department_stores"
        | "detective_agencies"
        | "digital_goods_applications"
        | "digital_goods_games"
        | "digital_goods_large_volume"
        | "digital_goods_media"
        | "direct_marketing_catalog_merchant"
        | "direct_marketing_combination_catalog_and_retail_merchant"
        | "direct_marketing_inbound_telemarketing"
        | "direct_marketing_insurance_services"
        | "direct_marketing_other"
        | "direct_marketing_outbound_telemarketing"
        | "direct_marketing_subscription"
        | "direct_marketing_travel"
        | "discount_stores"
        | "doctors"
        | "door_to_door_sales"
        | "drapery_window_covering_and_upholstery_stores"
        | "drinking_places"
        | "drug_stores_and_pharmacies"
        | "drugs_drug_proprietaries_and_druggist_sundries"
        | "dry_cleaners"
        | "durable_goods"
        | "duty_free_stores"
        | "eating_places_restaurants"
        | "educational_services"
        | "electric_razor_stores"
        | "electric_vehicle_charging"
        | "electrical_parts_and_equipment"
        | "electrical_services"
        | "electronics_repair_shops"
        | "electronics_stores"
        | "elementary_secondary_schools"
        | "emergency_services_gcas_visa_use_only"
        | "employment_temp_agencies"
        | "equipment_rental"
        | "exterminating_services"
        | "family_clothing_stores"
        | "fast_food_restaurants"
        | "financial_institutions"
        | "fines_government_administrative_entities"
        | "fireplace_fireplace_screens_and_accessories_stores"
        | "floor_covering_stores"
        | "florists"
        | "florists_supplies_nursery_stock_and_flowers"
        | "freezer_and_locker_meat_provisioners"
        | "fuel_dealers_non_automotive"
        | "funeral_services_crematories"
        | "furniture_home_furnishings_and_equipment_stores_except_appliances"
        | "furniture_repair_refinishing"
        | "furriers_and_fur_shops"
        | "general_services"
        | "gift_card_novelty_and_souvenir_shops"
        | "glass_paint_and_wallpaper_stores"
        | "glassware_crystal_stores"
        | "golf_courses_public"
        | "government_licensed_horse_dog_racing_us_region_only"
        | "government_licensed_online_casions_online_gambling_us_region_only"
        | "government_owned_lotteries_non_us_region"
        | "government_owned_lotteries_us_region_only"
        | "government_services"
        | "grocery_stores_supermarkets"
        | "hardware_equipment_and_supplies"
        | "hardware_stores"
        | "health_and_beauty_spas"
        | "hearing_aids_sales_and_supplies"
        | "heating_plumbing_a_c"
        | "hobby_toy_and_game_shops"
        | "home_supply_warehouse_stores"
        | "hospitals"
        | "hotels_motels_and_resorts"
        | "household_appliance_stores"
        | "industrial_supplies"
        | "information_retrieval_services"
        | "insurance_default"
        | "insurance_underwriting_premiums"
        | "intra_company_purchases"
        | "jewelry_stores_watches_clocks_and_silverware_stores"
        | "landscaping_services"
        | "laundries"
        | "laundry_cleaning_services"
        | "legal_services_attorneys"
        | "luggage_and_leather_goods_stores"
        | "lumber_building_materials_stores"
        | "manual_cash_disburse"
        | "marinas_service_and_supplies"
        | "marketplaces"
        | "masonry_stonework_and_plaster"
        | "massage_parlors"
        | "medical_and_dental_labs"
        | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
        | "medical_services"
        | "membership_organizations"
        | "mens_and_boys_clothing_and_accessories_stores"
        | "mens_womens_clothing_stores"
        | "metal_service_centers"
        | "miscellaneous"
        | "miscellaneous_apparel_and_accessory_shops"
        | "miscellaneous_auto_dealers"
        | "miscellaneous_business_services"
        | "miscellaneous_food_stores"
        | "miscellaneous_general_merchandise"
        | "miscellaneous_general_services"
        | "miscellaneous_home_furnishing_specialty_stores"
        | "miscellaneous_publishing_and_printing"
        | "miscellaneous_recreation_services"
        | "miscellaneous_repair_shops"
        | "miscellaneous_specialty_retail"
        | "mobile_home_dealers"
        | "motion_picture_theaters"
        | "motor_freight_carriers_and_trucking"
        | "motor_homes_dealers"
        | "motor_vehicle_supplies_and_new_parts"
        | "motorcycle_shops_and_dealers"
        | "motorcycle_shops_dealers"
        | "music_stores_musical_instruments_pianos_and_sheet_music"
        | "news_dealers_and_newsstands"
        | "non_fi_money_orders"
        | "non_fi_stored_value_card_purchase_load"
        | "nondurable_goods"
        | "nurseries_lawn_and_garden_supply_stores"
        | "nursing_personal_care"
        | "office_and_commercial_furniture"
        | "opticians_eyeglasses"
        | "optometrists_ophthalmologist"
        | "orthopedic_goods_prosthetic_devices"
        | "osteopaths"
        | "package_stores_beer_wine_and_liquor"
        | "paints_varnishes_and_supplies"
        | "parking_lots_garages"
        | "passenger_railways"
        | "pawn_shops"
        | "pet_shops_pet_food_and_supplies"
        | "petroleum_and_petroleum_products"
        | "photo_developing"
        | "photographic_photocopy_microfilm_equipment_and_supplies"
        | "photographic_studios"
        | "picture_video_production"
        | "piece_goods_notions_and_other_dry_goods"
        | "plumbing_heating_equipment_and_supplies"
        | "political_organizations"
        | "postal_services_government_only"
        | "precious_stones_and_metals_watches_and_jewelry"
        | "professional_services"
        | "public_warehousing_and_storage"
        | "quick_copy_repro_and_blueprint"
        | "railroads"
        | "real_estate_agents_and_managers_rentals"
        | "record_stores"
        | "recreational_vehicle_rentals"
        | "religious_goods_stores"
        | "religious_organizations"
        | "roofing_siding_sheet_metal"
        | "secretarial_support_services"
        | "security_brokers_dealers"
        | "service_stations"
        | "sewing_needlework_fabric_and_piece_goods_stores"
        | "shoe_repair_hat_cleaning"
        | "shoe_stores"
        | "small_appliance_repair"
        | "snowmobile_dealers"
        | "special_trade_services"
        | "specialty_cleaning"
        | "sporting_goods_stores"
        | "sporting_recreation_camps"
        | "sports_and_riding_apparel_stores"
        | "sports_clubs_fields"
        | "stamp_and_coin_stores"
        | "stationary_office_supplies_printing_and_writing_paper"
        | "stationery_stores_office_and_school_supply_stores"
        | "swimming_pools_sales"
        | "t_ui_travel_germany"
        | "tailors_alterations"
        | "tax_payments_government_agencies"
        | "tax_preparation_services"
        | "taxicabs_limousines"
        | "telecommunication_equipment_and_telephone_sales"
        | "telecommunication_services"
        | "telegraph_services"
        | "tent_and_awning_shops"
        | "testing_laboratories"
        | "theatrical_ticket_agencies"
        | "timeshares"
        | "tire_retreading_and_repair"
        | "tolls_bridge_fees"
        | "tourist_attractions_and_exhibits"
        | "towing_services"
        | "trailer_parks_campgrounds"
        | "transportation_services"
        | "travel_agencies_tour_operators"
        | "truck_stop_iteration"
        | "truck_utility_trailer_rentals"
        | "typesetting_plate_making_and_related_services"
        | "typewriter_stores"
        | "u_s_federal_government_agencies_or_departments"
        | "uniforms_commercial_clothing"
        | "used_merchandise_and_secondhand_stores"
        | "utilities"
        | "variety_stores"
        | "veterinary_services"
        | "video_amusement_game_supplies"
        | "video_game_arcades"
        | "video_tape_rental_stores"
        | "vocational_trade_schools"
        | "watch_jewelry_repair"
        | "welding_repair"
        | "wholesale_clubs"
        | "wig_and_toupee_stores"
        | "wires_money_orders"
        | "womens_accessory_and_specialty_shops"
        | "womens_ready_to_wear_stores"
        | "wrecking_and_salvage_yards"
      )[]
      interval:
        | "all_time"
        | "daily"
        | "monthly"
        | "per_authorization"
        | "weekly"
        | "yearly"
    }[]
    spending_limits_currency?: string
  }
  status?: "active" | "inactive"
}

export type t_PostIssuingCardholdersCardholderParamSchema = {
  cardholder: string
}

export type t_PostIssuingCardsBodySchema = {
  cardholder?: string
  currency: string
  expand?: string[]
  financial_account?: string
  metadata?: {
    [key: string]: string
  }
  replacement_for?: string
  replacement_reason?: "damaged" | "expired" | "lost" | "stolen"
  shipping?: {
    address: {
      city: string
      country: string
      line1: string
      line2?: string
      postal_code: string
      state?: string
    }
    customs?: {
      eori_number?: string
    }
    name: string
    phone_number?: string
    require_signature?: boolean
    service?: "express" | "priority" | "standard"
    type?: "bulk" | "individual"
  }
  spending_controls?: {
    allowed_categories?: (
      | "ac_refrigeration_repair"
      | "accounting_bookkeeping_services"
      | "advertising_services"
      | "agricultural_cooperative"
      | "airlines_air_carriers"
      | "airports_flying_fields"
      | "ambulance_services"
      | "amusement_parks_carnivals"
      | "antique_reproductions"
      | "antique_shops"
      | "aquariums"
      | "architectural_surveying_services"
      | "art_dealers_and_galleries"
      | "artists_supply_and_craft_shops"
      | "auto_and_home_supply_stores"
      | "auto_body_repair_shops"
      | "auto_paint_shops"
      | "auto_service_shops"
      | "automated_cash_disburse"
      | "automated_fuel_dispensers"
      | "automobile_associations"
      | "automotive_parts_and_accessories_stores"
      | "automotive_tire_stores"
      | "bail_and_bond_payments"
      | "bakeries"
      | "bands_orchestras"
      | "barber_and_beauty_shops"
      | "betting_casino_gambling"
      | "bicycle_shops"
      | "billiard_pool_establishments"
      | "boat_dealers"
      | "boat_rentals_and_leases"
      | "book_stores"
      | "books_periodicals_and_newspapers"
      | "bowling_alleys"
      | "bus_lines"
      | "business_secretarial_schools"
      | "buying_shopping_services"
      | "cable_satellite_and_other_pay_television_and_radio"
      | "camera_and_photographic_supply_stores"
      | "candy_nut_and_confectionery_stores"
      | "car_and_truck_dealers_new_used"
      | "car_and_truck_dealers_used_only"
      | "car_rental_agencies"
      | "car_washes"
      | "carpentry_services"
      | "carpet_upholstery_cleaning"
      | "caterers"
      | "charitable_and_social_service_organizations_fundraising"
      | "chemicals_and_allied_products"
      | "child_care_services"
      | "childrens_and_infants_wear_stores"
      | "chiropodists_podiatrists"
      | "chiropractors"
      | "cigar_stores_and_stands"
      | "civic_social_fraternal_associations"
      | "cleaning_and_maintenance"
      | "clothing_rental"
      | "colleges_universities"
      | "commercial_equipment"
      | "commercial_footwear"
      | "commercial_photography_art_and_graphics"
      | "commuter_transport_and_ferries"
      | "computer_network_services"
      | "computer_programming"
      | "computer_repair"
      | "computer_software_stores"
      | "computers_peripherals_and_software"
      | "concrete_work_services"
      | "construction_materials"
      | "consulting_public_relations"
      | "correspondence_schools"
      | "cosmetic_stores"
      | "counseling_services"
      | "country_clubs"
      | "courier_services"
      | "court_costs"
      | "credit_reporting_agencies"
      | "cruise_lines"
      | "dairy_products_stores"
      | "dance_hall_studios_schools"
      | "dating_escort_services"
      | "dentists_orthodontists"
      | "department_stores"
      | "detective_agencies"
      | "digital_goods_applications"
      | "digital_goods_games"
      | "digital_goods_large_volume"
      | "digital_goods_media"
      | "direct_marketing_catalog_merchant"
      | "direct_marketing_combination_catalog_and_retail_merchant"
      | "direct_marketing_inbound_telemarketing"
      | "direct_marketing_insurance_services"
      | "direct_marketing_other"
      | "direct_marketing_outbound_telemarketing"
      | "direct_marketing_subscription"
      | "direct_marketing_travel"
      | "discount_stores"
      | "doctors"
      | "door_to_door_sales"
      | "drapery_window_covering_and_upholstery_stores"
      | "drinking_places"
      | "drug_stores_and_pharmacies"
      | "drugs_drug_proprietaries_and_druggist_sundries"
      | "dry_cleaners"
      | "durable_goods"
      | "duty_free_stores"
      | "eating_places_restaurants"
      | "educational_services"
      | "electric_razor_stores"
      | "electric_vehicle_charging"
      | "electrical_parts_and_equipment"
      | "electrical_services"
      | "electronics_repair_shops"
      | "electronics_stores"
      | "elementary_secondary_schools"
      | "emergency_services_gcas_visa_use_only"
      | "employment_temp_agencies"
      | "equipment_rental"
      | "exterminating_services"
      | "family_clothing_stores"
      | "fast_food_restaurants"
      | "financial_institutions"
      | "fines_government_administrative_entities"
      | "fireplace_fireplace_screens_and_accessories_stores"
      | "floor_covering_stores"
      | "florists"
      | "florists_supplies_nursery_stock_and_flowers"
      | "freezer_and_locker_meat_provisioners"
      | "fuel_dealers_non_automotive"
      | "funeral_services_crematories"
      | "furniture_home_furnishings_and_equipment_stores_except_appliances"
      | "furniture_repair_refinishing"
      | "furriers_and_fur_shops"
      | "general_services"
      | "gift_card_novelty_and_souvenir_shops"
      | "glass_paint_and_wallpaper_stores"
      | "glassware_crystal_stores"
      | "golf_courses_public"
      | "government_licensed_horse_dog_racing_us_region_only"
      | "government_licensed_online_casions_online_gambling_us_region_only"
      | "government_owned_lotteries_non_us_region"
      | "government_owned_lotteries_us_region_only"
      | "government_services"
      | "grocery_stores_supermarkets"
      | "hardware_equipment_and_supplies"
      | "hardware_stores"
      | "health_and_beauty_spas"
      | "hearing_aids_sales_and_supplies"
      | "heating_plumbing_a_c"
      | "hobby_toy_and_game_shops"
      | "home_supply_warehouse_stores"
      | "hospitals"
      | "hotels_motels_and_resorts"
      | "household_appliance_stores"
      | "industrial_supplies"
      | "information_retrieval_services"
      | "insurance_default"
      | "insurance_underwriting_premiums"
      | "intra_company_purchases"
      | "jewelry_stores_watches_clocks_and_silverware_stores"
      | "landscaping_services"
      | "laundries"
      | "laundry_cleaning_services"
      | "legal_services_attorneys"
      | "luggage_and_leather_goods_stores"
      | "lumber_building_materials_stores"
      | "manual_cash_disburse"
      | "marinas_service_and_supplies"
      | "marketplaces"
      | "masonry_stonework_and_plaster"
      | "massage_parlors"
      | "medical_and_dental_labs"
      | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
      | "medical_services"
      | "membership_organizations"
      | "mens_and_boys_clothing_and_accessories_stores"
      | "mens_womens_clothing_stores"
      | "metal_service_centers"
      | "miscellaneous"
      | "miscellaneous_apparel_and_accessory_shops"
      | "miscellaneous_auto_dealers"
      | "miscellaneous_business_services"
      | "miscellaneous_food_stores"
      | "miscellaneous_general_merchandise"
      | "miscellaneous_general_services"
      | "miscellaneous_home_furnishing_specialty_stores"
      | "miscellaneous_publishing_and_printing"
      | "miscellaneous_recreation_services"
      | "miscellaneous_repair_shops"
      | "miscellaneous_specialty_retail"
      | "mobile_home_dealers"
      | "motion_picture_theaters"
      | "motor_freight_carriers_and_trucking"
      | "motor_homes_dealers"
      | "motor_vehicle_supplies_and_new_parts"
      | "motorcycle_shops_and_dealers"
      | "motorcycle_shops_dealers"
      | "music_stores_musical_instruments_pianos_and_sheet_music"
      | "news_dealers_and_newsstands"
      | "non_fi_money_orders"
      | "non_fi_stored_value_card_purchase_load"
      | "nondurable_goods"
      | "nurseries_lawn_and_garden_supply_stores"
      | "nursing_personal_care"
      | "office_and_commercial_furniture"
      | "opticians_eyeglasses"
      | "optometrists_ophthalmologist"
      | "orthopedic_goods_prosthetic_devices"
      | "osteopaths"
      | "package_stores_beer_wine_and_liquor"
      | "paints_varnishes_and_supplies"
      | "parking_lots_garages"
      | "passenger_railways"
      | "pawn_shops"
      | "pet_shops_pet_food_and_supplies"
      | "petroleum_and_petroleum_products"
      | "photo_developing"
      | "photographic_photocopy_microfilm_equipment_and_supplies"
      | "photographic_studios"
      | "picture_video_production"
      | "piece_goods_notions_and_other_dry_goods"
      | "plumbing_heating_equipment_and_supplies"
      | "political_organizations"
      | "postal_services_government_only"
      | "precious_stones_and_metals_watches_and_jewelry"
      | "professional_services"
      | "public_warehousing_and_storage"
      | "quick_copy_repro_and_blueprint"
      | "railroads"
      | "real_estate_agents_and_managers_rentals"
      | "record_stores"
      | "recreational_vehicle_rentals"
      | "religious_goods_stores"
      | "religious_organizations"
      | "roofing_siding_sheet_metal"
      | "secretarial_support_services"
      | "security_brokers_dealers"
      | "service_stations"
      | "sewing_needlework_fabric_and_piece_goods_stores"
      | "shoe_repair_hat_cleaning"
      | "shoe_stores"
      | "small_appliance_repair"
      | "snowmobile_dealers"
      | "special_trade_services"
      | "specialty_cleaning"
      | "sporting_goods_stores"
      | "sporting_recreation_camps"
      | "sports_and_riding_apparel_stores"
      | "sports_clubs_fields"
      | "stamp_and_coin_stores"
      | "stationary_office_supplies_printing_and_writing_paper"
      | "stationery_stores_office_and_school_supply_stores"
      | "swimming_pools_sales"
      | "t_ui_travel_germany"
      | "tailors_alterations"
      | "tax_payments_government_agencies"
      | "tax_preparation_services"
      | "taxicabs_limousines"
      | "telecommunication_equipment_and_telephone_sales"
      | "telecommunication_services"
      | "telegraph_services"
      | "tent_and_awning_shops"
      | "testing_laboratories"
      | "theatrical_ticket_agencies"
      | "timeshares"
      | "tire_retreading_and_repair"
      | "tolls_bridge_fees"
      | "tourist_attractions_and_exhibits"
      | "towing_services"
      | "trailer_parks_campgrounds"
      | "transportation_services"
      | "travel_agencies_tour_operators"
      | "truck_stop_iteration"
      | "truck_utility_trailer_rentals"
      | "typesetting_plate_making_and_related_services"
      | "typewriter_stores"
      | "u_s_federal_government_agencies_or_departments"
      | "uniforms_commercial_clothing"
      | "used_merchandise_and_secondhand_stores"
      | "utilities"
      | "variety_stores"
      | "veterinary_services"
      | "video_amusement_game_supplies"
      | "video_game_arcades"
      | "video_tape_rental_stores"
      | "vocational_trade_schools"
      | "watch_jewelry_repair"
      | "welding_repair"
      | "wholesale_clubs"
      | "wig_and_toupee_stores"
      | "wires_money_orders"
      | "womens_accessory_and_specialty_shops"
      | "womens_ready_to_wear_stores"
      | "wrecking_and_salvage_yards"
    )[]
    blocked_categories?: (
      | "ac_refrigeration_repair"
      | "accounting_bookkeeping_services"
      | "advertising_services"
      | "agricultural_cooperative"
      | "airlines_air_carriers"
      | "airports_flying_fields"
      | "ambulance_services"
      | "amusement_parks_carnivals"
      | "antique_reproductions"
      | "antique_shops"
      | "aquariums"
      | "architectural_surveying_services"
      | "art_dealers_and_galleries"
      | "artists_supply_and_craft_shops"
      | "auto_and_home_supply_stores"
      | "auto_body_repair_shops"
      | "auto_paint_shops"
      | "auto_service_shops"
      | "automated_cash_disburse"
      | "automated_fuel_dispensers"
      | "automobile_associations"
      | "automotive_parts_and_accessories_stores"
      | "automotive_tire_stores"
      | "bail_and_bond_payments"
      | "bakeries"
      | "bands_orchestras"
      | "barber_and_beauty_shops"
      | "betting_casino_gambling"
      | "bicycle_shops"
      | "billiard_pool_establishments"
      | "boat_dealers"
      | "boat_rentals_and_leases"
      | "book_stores"
      | "books_periodicals_and_newspapers"
      | "bowling_alleys"
      | "bus_lines"
      | "business_secretarial_schools"
      | "buying_shopping_services"
      | "cable_satellite_and_other_pay_television_and_radio"
      | "camera_and_photographic_supply_stores"
      | "candy_nut_and_confectionery_stores"
      | "car_and_truck_dealers_new_used"
      | "car_and_truck_dealers_used_only"
      | "car_rental_agencies"
      | "car_washes"
      | "carpentry_services"
      | "carpet_upholstery_cleaning"
      | "caterers"
      | "charitable_and_social_service_organizations_fundraising"
      | "chemicals_and_allied_products"
      | "child_care_services"
      | "childrens_and_infants_wear_stores"
      | "chiropodists_podiatrists"
      | "chiropractors"
      | "cigar_stores_and_stands"
      | "civic_social_fraternal_associations"
      | "cleaning_and_maintenance"
      | "clothing_rental"
      | "colleges_universities"
      | "commercial_equipment"
      | "commercial_footwear"
      | "commercial_photography_art_and_graphics"
      | "commuter_transport_and_ferries"
      | "computer_network_services"
      | "computer_programming"
      | "computer_repair"
      | "computer_software_stores"
      | "computers_peripherals_and_software"
      | "concrete_work_services"
      | "construction_materials"
      | "consulting_public_relations"
      | "correspondence_schools"
      | "cosmetic_stores"
      | "counseling_services"
      | "country_clubs"
      | "courier_services"
      | "court_costs"
      | "credit_reporting_agencies"
      | "cruise_lines"
      | "dairy_products_stores"
      | "dance_hall_studios_schools"
      | "dating_escort_services"
      | "dentists_orthodontists"
      | "department_stores"
      | "detective_agencies"
      | "digital_goods_applications"
      | "digital_goods_games"
      | "digital_goods_large_volume"
      | "digital_goods_media"
      | "direct_marketing_catalog_merchant"
      | "direct_marketing_combination_catalog_and_retail_merchant"
      | "direct_marketing_inbound_telemarketing"
      | "direct_marketing_insurance_services"
      | "direct_marketing_other"
      | "direct_marketing_outbound_telemarketing"
      | "direct_marketing_subscription"
      | "direct_marketing_travel"
      | "discount_stores"
      | "doctors"
      | "door_to_door_sales"
      | "drapery_window_covering_and_upholstery_stores"
      | "drinking_places"
      | "drug_stores_and_pharmacies"
      | "drugs_drug_proprietaries_and_druggist_sundries"
      | "dry_cleaners"
      | "durable_goods"
      | "duty_free_stores"
      | "eating_places_restaurants"
      | "educational_services"
      | "electric_razor_stores"
      | "electric_vehicle_charging"
      | "electrical_parts_and_equipment"
      | "electrical_services"
      | "electronics_repair_shops"
      | "electronics_stores"
      | "elementary_secondary_schools"
      | "emergency_services_gcas_visa_use_only"
      | "employment_temp_agencies"
      | "equipment_rental"
      | "exterminating_services"
      | "family_clothing_stores"
      | "fast_food_restaurants"
      | "financial_institutions"
      | "fines_government_administrative_entities"
      | "fireplace_fireplace_screens_and_accessories_stores"
      | "floor_covering_stores"
      | "florists"
      | "florists_supplies_nursery_stock_and_flowers"
      | "freezer_and_locker_meat_provisioners"
      | "fuel_dealers_non_automotive"
      | "funeral_services_crematories"
      | "furniture_home_furnishings_and_equipment_stores_except_appliances"
      | "furniture_repair_refinishing"
      | "furriers_and_fur_shops"
      | "general_services"
      | "gift_card_novelty_and_souvenir_shops"
      | "glass_paint_and_wallpaper_stores"
      | "glassware_crystal_stores"
      | "golf_courses_public"
      | "government_licensed_horse_dog_racing_us_region_only"
      | "government_licensed_online_casions_online_gambling_us_region_only"
      | "government_owned_lotteries_non_us_region"
      | "government_owned_lotteries_us_region_only"
      | "government_services"
      | "grocery_stores_supermarkets"
      | "hardware_equipment_and_supplies"
      | "hardware_stores"
      | "health_and_beauty_spas"
      | "hearing_aids_sales_and_supplies"
      | "heating_plumbing_a_c"
      | "hobby_toy_and_game_shops"
      | "home_supply_warehouse_stores"
      | "hospitals"
      | "hotels_motels_and_resorts"
      | "household_appliance_stores"
      | "industrial_supplies"
      | "information_retrieval_services"
      | "insurance_default"
      | "insurance_underwriting_premiums"
      | "intra_company_purchases"
      | "jewelry_stores_watches_clocks_and_silverware_stores"
      | "landscaping_services"
      | "laundries"
      | "laundry_cleaning_services"
      | "legal_services_attorneys"
      | "luggage_and_leather_goods_stores"
      | "lumber_building_materials_stores"
      | "manual_cash_disburse"
      | "marinas_service_and_supplies"
      | "marketplaces"
      | "masonry_stonework_and_plaster"
      | "massage_parlors"
      | "medical_and_dental_labs"
      | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
      | "medical_services"
      | "membership_organizations"
      | "mens_and_boys_clothing_and_accessories_stores"
      | "mens_womens_clothing_stores"
      | "metal_service_centers"
      | "miscellaneous"
      | "miscellaneous_apparel_and_accessory_shops"
      | "miscellaneous_auto_dealers"
      | "miscellaneous_business_services"
      | "miscellaneous_food_stores"
      | "miscellaneous_general_merchandise"
      | "miscellaneous_general_services"
      | "miscellaneous_home_furnishing_specialty_stores"
      | "miscellaneous_publishing_and_printing"
      | "miscellaneous_recreation_services"
      | "miscellaneous_repair_shops"
      | "miscellaneous_specialty_retail"
      | "mobile_home_dealers"
      | "motion_picture_theaters"
      | "motor_freight_carriers_and_trucking"
      | "motor_homes_dealers"
      | "motor_vehicle_supplies_and_new_parts"
      | "motorcycle_shops_and_dealers"
      | "motorcycle_shops_dealers"
      | "music_stores_musical_instruments_pianos_and_sheet_music"
      | "news_dealers_and_newsstands"
      | "non_fi_money_orders"
      | "non_fi_stored_value_card_purchase_load"
      | "nondurable_goods"
      | "nurseries_lawn_and_garden_supply_stores"
      | "nursing_personal_care"
      | "office_and_commercial_furniture"
      | "opticians_eyeglasses"
      | "optometrists_ophthalmologist"
      | "orthopedic_goods_prosthetic_devices"
      | "osteopaths"
      | "package_stores_beer_wine_and_liquor"
      | "paints_varnishes_and_supplies"
      | "parking_lots_garages"
      | "passenger_railways"
      | "pawn_shops"
      | "pet_shops_pet_food_and_supplies"
      | "petroleum_and_petroleum_products"
      | "photo_developing"
      | "photographic_photocopy_microfilm_equipment_and_supplies"
      | "photographic_studios"
      | "picture_video_production"
      | "piece_goods_notions_and_other_dry_goods"
      | "plumbing_heating_equipment_and_supplies"
      | "political_organizations"
      | "postal_services_government_only"
      | "precious_stones_and_metals_watches_and_jewelry"
      | "professional_services"
      | "public_warehousing_and_storage"
      | "quick_copy_repro_and_blueprint"
      | "railroads"
      | "real_estate_agents_and_managers_rentals"
      | "record_stores"
      | "recreational_vehicle_rentals"
      | "religious_goods_stores"
      | "religious_organizations"
      | "roofing_siding_sheet_metal"
      | "secretarial_support_services"
      | "security_brokers_dealers"
      | "service_stations"
      | "sewing_needlework_fabric_and_piece_goods_stores"
      | "shoe_repair_hat_cleaning"
      | "shoe_stores"
      | "small_appliance_repair"
      | "snowmobile_dealers"
      | "special_trade_services"
      | "specialty_cleaning"
      | "sporting_goods_stores"
      | "sporting_recreation_camps"
      | "sports_and_riding_apparel_stores"
      | "sports_clubs_fields"
      | "stamp_and_coin_stores"
      | "stationary_office_supplies_printing_and_writing_paper"
      | "stationery_stores_office_and_school_supply_stores"
      | "swimming_pools_sales"
      | "t_ui_travel_germany"
      | "tailors_alterations"
      | "tax_payments_government_agencies"
      | "tax_preparation_services"
      | "taxicabs_limousines"
      | "telecommunication_equipment_and_telephone_sales"
      | "telecommunication_services"
      | "telegraph_services"
      | "tent_and_awning_shops"
      | "testing_laboratories"
      | "theatrical_ticket_agencies"
      | "timeshares"
      | "tire_retreading_and_repair"
      | "tolls_bridge_fees"
      | "tourist_attractions_and_exhibits"
      | "towing_services"
      | "trailer_parks_campgrounds"
      | "transportation_services"
      | "travel_agencies_tour_operators"
      | "truck_stop_iteration"
      | "truck_utility_trailer_rentals"
      | "typesetting_plate_making_and_related_services"
      | "typewriter_stores"
      | "u_s_federal_government_agencies_or_departments"
      | "uniforms_commercial_clothing"
      | "used_merchandise_and_secondhand_stores"
      | "utilities"
      | "variety_stores"
      | "veterinary_services"
      | "video_amusement_game_supplies"
      | "video_game_arcades"
      | "video_tape_rental_stores"
      | "vocational_trade_schools"
      | "watch_jewelry_repair"
      | "welding_repair"
      | "wholesale_clubs"
      | "wig_and_toupee_stores"
      | "wires_money_orders"
      | "womens_accessory_and_specialty_shops"
      | "womens_ready_to_wear_stores"
      | "wrecking_and_salvage_yards"
    )[]
    spending_limits?: {
      amount: number
      categories?: (
        | "ac_refrigeration_repair"
        | "accounting_bookkeeping_services"
        | "advertising_services"
        | "agricultural_cooperative"
        | "airlines_air_carriers"
        | "airports_flying_fields"
        | "ambulance_services"
        | "amusement_parks_carnivals"
        | "antique_reproductions"
        | "antique_shops"
        | "aquariums"
        | "architectural_surveying_services"
        | "art_dealers_and_galleries"
        | "artists_supply_and_craft_shops"
        | "auto_and_home_supply_stores"
        | "auto_body_repair_shops"
        | "auto_paint_shops"
        | "auto_service_shops"
        | "automated_cash_disburse"
        | "automated_fuel_dispensers"
        | "automobile_associations"
        | "automotive_parts_and_accessories_stores"
        | "automotive_tire_stores"
        | "bail_and_bond_payments"
        | "bakeries"
        | "bands_orchestras"
        | "barber_and_beauty_shops"
        | "betting_casino_gambling"
        | "bicycle_shops"
        | "billiard_pool_establishments"
        | "boat_dealers"
        | "boat_rentals_and_leases"
        | "book_stores"
        | "books_periodicals_and_newspapers"
        | "bowling_alleys"
        | "bus_lines"
        | "business_secretarial_schools"
        | "buying_shopping_services"
        | "cable_satellite_and_other_pay_television_and_radio"
        | "camera_and_photographic_supply_stores"
        | "candy_nut_and_confectionery_stores"
        | "car_and_truck_dealers_new_used"
        | "car_and_truck_dealers_used_only"
        | "car_rental_agencies"
        | "car_washes"
        | "carpentry_services"
        | "carpet_upholstery_cleaning"
        | "caterers"
        | "charitable_and_social_service_organizations_fundraising"
        | "chemicals_and_allied_products"
        | "child_care_services"
        | "childrens_and_infants_wear_stores"
        | "chiropodists_podiatrists"
        | "chiropractors"
        | "cigar_stores_and_stands"
        | "civic_social_fraternal_associations"
        | "cleaning_and_maintenance"
        | "clothing_rental"
        | "colleges_universities"
        | "commercial_equipment"
        | "commercial_footwear"
        | "commercial_photography_art_and_graphics"
        | "commuter_transport_and_ferries"
        | "computer_network_services"
        | "computer_programming"
        | "computer_repair"
        | "computer_software_stores"
        | "computers_peripherals_and_software"
        | "concrete_work_services"
        | "construction_materials"
        | "consulting_public_relations"
        | "correspondence_schools"
        | "cosmetic_stores"
        | "counseling_services"
        | "country_clubs"
        | "courier_services"
        | "court_costs"
        | "credit_reporting_agencies"
        | "cruise_lines"
        | "dairy_products_stores"
        | "dance_hall_studios_schools"
        | "dating_escort_services"
        | "dentists_orthodontists"
        | "department_stores"
        | "detective_agencies"
        | "digital_goods_applications"
        | "digital_goods_games"
        | "digital_goods_large_volume"
        | "digital_goods_media"
        | "direct_marketing_catalog_merchant"
        | "direct_marketing_combination_catalog_and_retail_merchant"
        | "direct_marketing_inbound_telemarketing"
        | "direct_marketing_insurance_services"
        | "direct_marketing_other"
        | "direct_marketing_outbound_telemarketing"
        | "direct_marketing_subscription"
        | "direct_marketing_travel"
        | "discount_stores"
        | "doctors"
        | "door_to_door_sales"
        | "drapery_window_covering_and_upholstery_stores"
        | "drinking_places"
        | "drug_stores_and_pharmacies"
        | "drugs_drug_proprietaries_and_druggist_sundries"
        | "dry_cleaners"
        | "durable_goods"
        | "duty_free_stores"
        | "eating_places_restaurants"
        | "educational_services"
        | "electric_razor_stores"
        | "electric_vehicle_charging"
        | "electrical_parts_and_equipment"
        | "electrical_services"
        | "electronics_repair_shops"
        | "electronics_stores"
        | "elementary_secondary_schools"
        | "emergency_services_gcas_visa_use_only"
        | "employment_temp_agencies"
        | "equipment_rental"
        | "exterminating_services"
        | "family_clothing_stores"
        | "fast_food_restaurants"
        | "financial_institutions"
        | "fines_government_administrative_entities"
        | "fireplace_fireplace_screens_and_accessories_stores"
        | "floor_covering_stores"
        | "florists"
        | "florists_supplies_nursery_stock_and_flowers"
        | "freezer_and_locker_meat_provisioners"
        | "fuel_dealers_non_automotive"
        | "funeral_services_crematories"
        | "furniture_home_furnishings_and_equipment_stores_except_appliances"
        | "furniture_repair_refinishing"
        | "furriers_and_fur_shops"
        | "general_services"
        | "gift_card_novelty_and_souvenir_shops"
        | "glass_paint_and_wallpaper_stores"
        | "glassware_crystal_stores"
        | "golf_courses_public"
        | "government_licensed_horse_dog_racing_us_region_only"
        | "government_licensed_online_casions_online_gambling_us_region_only"
        | "government_owned_lotteries_non_us_region"
        | "government_owned_lotteries_us_region_only"
        | "government_services"
        | "grocery_stores_supermarkets"
        | "hardware_equipment_and_supplies"
        | "hardware_stores"
        | "health_and_beauty_spas"
        | "hearing_aids_sales_and_supplies"
        | "heating_plumbing_a_c"
        | "hobby_toy_and_game_shops"
        | "home_supply_warehouse_stores"
        | "hospitals"
        | "hotels_motels_and_resorts"
        | "household_appliance_stores"
        | "industrial_supplies"
        | "information_retrieval_services"
        | "insurance_default"
        | "insurance_underwriting_premiums"
        | "intra_company_purchases"
        | "jewelry_stores_watches_clocks_and_silverware_stores"
        | "landscaping_services"
        | "laundries"
        | "laundry_cleaning_services"
        | "legal_services_attorneys"
        | "luggage_and_leather_goods_stores"
        | "lumber_building_materials_stores"
        | "manual_cash_disburse"
        | "marinas_service_and_supplies"
        | "marketplaces"
        | "masonry_stonework_and_plaster"
        | "massage_parlors"
        | "medical_and_dental_labs"
        | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
        | "medical_services"
        | "membership_organizations"
        | "mens_and_boys_clothing_and_accessories_stores"
        | "mens_womens_clothing_stores"
        | "metal_service_centers"
        | "miscellaneous"
        | "miscellaneous_apparel_and_accessory_shops"
        | "miscellaneous_auto_dealers"
        | "miscellaneous_business_services"
        | "miscellaneous_food_stores"
        | "miscellaneous_general_merchandise"
        | "miscellaneous_general_services"
        | "miscellaneous_home_furnishing_specialty_stores"
        | "miscellaneous_publishing_and_printing"
        | "miscellaneous_recreation_services"
        | "miscellaneous_repair_shops"
        | "miscellaneous_specialty_retail"
        | "mobile_home_dealers"
        | "motion_picture_theaters"
        | "motor_freight_carriers_and_trucking"
        | "motor_homes_dealers"
        | "motor_vehicle_supplies_and_new_parts"
        | "motorcycle_shops_and_dealers"
        | "motorcycle_shops_dealers"
        | "music_stores_musical_instruments_pianos_and_sheet_music"
        | "news_dealers_and_newsstands"
        | "non_fi_money_orders"
        | "non_fi_stored_value_card_purchase_load"
        | "nondurable_goods"
        | "nurseries_lawn_and_garden_supply_stores"
        | "nursing_personal_care"
        | "office_and_commercial_furniture"
        | "opticians_eyeglasses"
        | "optometrists_ophthalmologist"
        | "orthopedic_goods_prosthetic_devices"
        | "osteopaths"
        | "package_stores_beer_wine_and_liquor"
        | "paints_varnishes_and_supplies"
        | "parking_lots_garages"
        | "passenger_railways"
        | "pawn_shops"
        | "pet_shops_pet_food_and_supplies"
        | "petroleum_and_petroleum_products"
        | "photo_developing"
        | "photographic_photocopy_microfilm_equipment_and_supplies"
        | "photographic_studios"
        | "picture_video_production"
        | "piece_goods_notions_and_other_dry_goods"
        | "plumbing_heating_equipment_and_supplies"
        | "political_organizations"
        | "postal_services_government_only"
        | "precious_stones_and_metals_watches_and_jewelry"
        | "professional_services"
        | "public_warehousing_and_storage"
        | "quick_copy_repro_and_blueprint"
        | "railroads"
        | "real_estate_agents_and_managers_rentals"
        | "record_stores"
        | "recreational_vehicle_rentals"
        | "religious_goods_stores"
        | "religious_organizations"
        | "roofing_siding_sheet_metal"
        | "secretarial_support_services"
        | "security_brokers_dealers"
        | "service_stations"
        | "sewing_needlework_fabric_and_piece_goods_stores"
        | "shoe_repair_hat_cleaning"
        | "shoe_stores"
        | "small_appliance_repair"
        | "snowmobile_dealers"
        | "special_trade_services"
        | "specialty_cleaning"
        | "sporting_goods_stores"
        | "sporting_recreation_camps"
        | "sports_and_riding_apparel_stores"
        | "sports_clubs_fields"
        | "stamp_and_coin_stores"
        | "stationary_office_supplies_printing_and_writing_paper"
        | "stationery_stores_office_and_school_supply_stores"
        | "swimming_pools_sales"
        | "t_ui_travel_germany"
        | "tailors_alterations"
        | "tax_payments_government_agencies"
        | "tax_preparation_services"
        | "taxicabs_limousines"
        | "telecommunication_equipment_and_telephone_sales"
        | "telecommunication_services"
        | "telegraph_services"
        | "tent_and_awning_shops"
        | "testing_laboratories"
        | "theatrical_ticket_agencies"
        | "timeshares"
        | "tire_retreading_and_repair"
        | "tolls_bridge_fees"
        | "tourist_attractions_and_exhibits"
        | "towing_services"
        | "trailer_parks_campgrounds"
        | "transportation_services"
        | "travel_agencies_tour_operators"
        | "truck_stop_iteration"
        | "truck_utility_trailer_rentals"
        | "typesetting_plate_making_and_related_services"
        | "typewriter_stores"
        | "u_s_federal_government_agencies_or_departments"
        | "uniforms_commercial_clothing"
        | "used_merchandise_and_secondhand_stores"
        | "utilities"
        | "variety_stores"
        | "veterinary_services"
        | "video_amusement_game_supplies"
        | "video_game_arcades"
        | "video_tape_rental_stores"
        | "vocational_trade_schools"
        | "watch_jewelry_repair"
        | "welding_repair"
        | "wholesale_clubs"
        | "wig_and_toupee_stores"
        | "wires_money_orders"
        | "womens_accessory_and_specialty_shops"
        | "womens_ready_to_wear_stores"
        | "wrecking_and_salvage_yards"
      )[]
      interval:
        | "all_time"
        | "daily"
        | "monthly"
        | "per_authorization"
        | "weekly"
        | "yearly"
    }[]
  }
  status?: "active" | "inactive"
  type: "physical" | "virtual"
}

export type t_PostIssuingCardsCardBodySchema = {
  cancellation_reason?: "lost" | "stolen"
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  pin?: {
    encrypted_number?: string
  }
  spending_controls?: {
    allowed_categories?: (
      | "ac_refrigeration_repair"
      | "accounting_bookkeeping_services"
      | "advertising_services"
      | "agricultural_cooperative"
      | "airlines_air_carriers"
      | "airports_flying_fields"
      | "ambulance_services"
      | "amusement_parks_carnivals"
      | "antique_reproductions"
      | "antique_shops"
      | "aquariums"
      | "architectural_surveying_services"
      | "art_dealers_and_galleries"
      | "artists_supply_and_craft_shops"
      | "auto_and_home_supply_stores"
      | "auto_body_repair_shops"
      | "auto_paint_shops"
      | "auto_service_shops"
      | "automated_cash_disburse"
      | "automated_fuel_dispensers"
      | "automobile_associations"
      | "automotive_parts_and_accessories_stores"
      | "automotive_tire_stores"
      | "bail_and_bond_payments"
      | "bakeries"
      | "bands_orchestras"
      | "barber_and_beauty_shops"
      | "betting_casino_gambling"
      | "bicycle_shops"
      | "billiard_pool_establishments"
      | "boat_dealers"
      | "boat_rentals_and_leases"
      | "book_stores"
      | "books_periodicals_and_newspapers"
      | "bowling_alleys"
      | "bus_lines"
      | "business_secretarial_schools"
      | "buying_shopping_services"
      | "cable_satellite_and_other_pay_television_and_radio"
      | "camera_and_photographic_supply_stores"
      | "candy_nut_and_confectionery_stores"
      | "car_and_truck_dealers_new_used"
      | "car_and_truck_dealers_used_only"
      | "car_rental_agencies"
      | "car_washes"
      | "carpentry_services"
      | "carpet_upholstery_cleaning"
      | "caterers"
      | "charitable_and_social_service_organizations_fundraising"
      | "chemicals_and_allied_products"
      | "child_care_services"
      | "childrens_and_infants_wear_stores"
      | "chiropodists_podiatrists"
      | "chiropractors"
      | "cigar_stores_and_stands"
      | "civic_social_fraternal_associations"
      | "cleaning_and_maintenance"
      | "clothing_rental"
      | "colleges_universities"
      | "commercial_equipment"
      | "commercial_footwear"
      | "commercial_photography_art_and_graphics"
      | "commuter_transport_and_ferries"
      | "computer_network_services"
      | "computer_programming"
      | "computer_repair"
      | "computer_software_stores"
      | "computers_peripherals_and_software"
      | "concrete_work_services"
      | "construction_materials"
      | "consulting_public_relations"
      | "correspondence_schools"
      | "cosmetic_stores"
      | "counseling_services"
      | "country_clubs"
      | "courier_services"
      | "court_costs"
      | "credit_reporting_agencies"
      | "cruise_lines"
      | "dairy_products_stores"
      | "dance_hall_studios_schools"
      | "dating_escort_services"
      | "dentists_orthodontists"
      | "department_stores"
      | "detective_agencies"
      | "digital_goods_applications"
      | "digital_goods_games"
      | "digital_goods_large_volume"
      | "digital_goods_media"
      | "direct_marketing_catalog_merchant"
      | "direct_marketing_combination_catalog_and_retail_merchant"
      | "direct_marketing_inbound_telemarketing"
      | "direct_marketing_insurance_services"
      | "direct_marketing_other"
      | "direct_marketing_outbound_telemarketing"
      | "direct_marketing_subscription"
      | "direct_marketing_travel"
      | "discount_stores"
      | "doctors"
      | "door_to_door_sales"
      | "drapery_window_covering_and_upholstery_stores"
      | "drinking_places"
      | "drug_stores_and_pharmacies"
      | "drugs_drug_proprietaries_and_druggist_sundries"
      | "dry_cleaners"
      | "durable_goods"
      | "duty_free_stores"
      | "eating_places_restaurants"
      | "educational_services"
      | "electric_razor_stores"
      | "electric_vehicle_charging"
      | "electrical_parts_and_equipment"
      | "electrical_services"
      | "electronics_repair_shops"
      | "electronics_stores"
      | "elementary_secondary_schools"
      | "emergency_services_gcas_visa_use_only"
      | "employment_temp_agencies"
      | "equipment_rental"
      | "exterminating_services"
      | "family_clothing_stores"
      | "fast_food_restaurants"
      | "financial_institutions"
      | "fines_government_administrative_entities"
      | "fireplace_fireplace_screens_and_accessories_stores"
      | "floor_covering_stores"
      | "florists"
      | "florists_supplies_nursery_stock_and_flowers"
      | "freezer_and_locker_meat_provisioners"
      | "fuel_dealers_non_automotive"
      | "funeral_services_crematories"
      | "furniture_home_furnishings_and_equipment_stores_except_appliances"
      | "furniture_repair_refinishing"
      | "furriers_and_fur_shops"
      | "general_services"
      | "gift_card_novelty_and_souvenir_shops"
      | "glass_paint_and_wallpaper_stores"
      | "glassware_crystal_stores"
      | "golf_courses_public"
      | "government_licensed_horse_dog_racing_us_region_only"
      | "government_licensed_online_casions_online_gambling_us_region_only"
      | "government_owned_lotteries_non_us_region"
      | "government_owned_lotteries_us_region_only"
      | "government_services"
      | "grocery_stores_supermarkets"
      | "hardware_equipment_and_supplies"
      | "hardware_stores"
      | "health_and_beauty_spas"
      | "hearing_aids_sales_and_supplies"
      | "heating_plumbing_a_c"
      | "hobby_toy_and_game_shops"
      | "home_supply_warehouse_stores"
      | "hospitals"
      | "hotels_motels_and_resorts"
      | "household_appliance_stores"
      | "industrial_supplies"
      | "information_retrieval_services"
      | "insurance_default"
      | "insurance_underwriting_premiums"
      | "intra_company_purchases"
      | "jewelry_stores_watches_clocks_and_silverware_stores"
      | "landscaping_services"
      | "laundries"
      | "laundry_cleaning_services"
      | "legal_services_attorneys"
      | "luggage_and_leather_goods_stores"
      | "lumber_building_materials_stores"
      | "manual_cash_disburse"
      | "marinas_service_and_supplies"
      | "marketplaces"
      | "masonry_stonework_and_plaster"
      | "massage_parlors"
      | "medical_and_dental_labs"
      | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
      | "medical_services"
      | "membership_organizations"
      | "mens_and_boys_clothing_and_accessories_stores"
      | "mens_womens_clothing_stores"
      | "metal_service_centers"
      | "miscellaneous"
      | "miscellaneous_apparel_and_accessory_shops"
      | "miscellaneous_auto_dealers"
      | "miscellaneous_business_services"
      | "miscellaneous_food_stores"
      | "miscellaneous_general_merchandise"
      | "miscellaneous_general_services"
      | "miscellaneous_home_furnishing_specialty_stores"
      | "miscellaneous_publishing_and_printing"
      | "miscellaneous_recreation_services"
      | "miscellaneous_repair_shops"
      | "miscellaneous_specialty_retail"
      | "mobile_home_dealers"
      | "motion_picture_theaters"
      | "motor_freight_carriers_and_trucking"
      | "motor_homes_dealers"
      | "motor_vehicle_supplies_and_new_parts"
      | "motorcycle_shops_and_dealers"
      | "motorcycle_shops_dealers"
      | "music_stores_musical_instruments_pianos_and_sheet_music"
      | "news_dealers_and_newsstands"
      | "non_fi_money_orders"
      | "non_fi_stored_value_card_purchase_load"
      | "nondurable_goods"
      | "nurseries_lawn_and_garden_supply_stores"
      | "nursing_personal_care"
      | "office_and_commercial_furniture"
      | "opticians_eyeglasses"
      | "optometrists_ophthalmologist"
      | "orthopedic_goods_prosthetic_devices"
      | "osteopaths"
      | "package_stores_beer_wine_and_liquor"
      | "paints_varnishes_and_supplies"
      | "parking_lots_garages"
      | "passenger_railways"
      | "pawn_shops"
      | "pet_shops_pet_food_and_supplies"
      | "petroleum_and_petroleum_products"
      | "photo_developing"
      | "photographic_photocopy_microfilm_equipment_and_supplies"
      | "photographic_studios"
      | "picture_video_production"
      | "piece_goods_notions_and_other_dry_goods"
      | "plumbing_heating_equipment_and_supplies"
      | "political_organizations"
      | "postal_services_government_only"
      | "precious_stones_and_metals_watches_and_jewelry"
      | "professional_services"
      | "public_warehousing_and_storage"
      | "quick_copy_repro_and_blueprint"
      | "railroads"
      | "real_estate_agents_and_managers_rentals"
      | "record_stores"
      | "recreational_vehicle_rentals"
      | "religious_goods_stores"
      | "religious_organizations"
      | "roofing_siding_sheet_metal"
      | "secretarial_support_services"
      | "security_brokers_dealers"
      | "service_stations"
      | "sewing_needlework_fabric_and_piece_goods_stores"
      | "shoe_repair_hat_cleaning"
      | "shoe_stores"
      | "small_appliance_repair"
      | "snowmobile_dealers"
      | "special_trade_services"
      | "specialty_cleaning"
      | "sporting_goods_stores"
      | "sporting_recreation_camps"
      | "sports_and_riding_apparel_stores"
      | "sports_clubs_fields"
      | "stamp_and_coin_stores"
      | "stationary_office_supplies_printing_and_writing_paper"
      | "stationery_stores_office_and_school_supply_stores"
      | "swimming_pools_sales"
      | "t_ui_travel_germany"
      | "tailors_alterations"
      | "tax_payments_government_agencies"
      | "tax_preparation_services"
      | "taxicabs_limousines"
      | "telecommunication_equipment_and_telephone_sales"
      | "telecommunication_services"
      | "telegraph_services"
      | "tent_and_awning_shops"
      | "testing_laboratories"
      | "theatrical_ticket_agencies"
      | "timeshares"
      | "tire_retreading_and_repair"
      | "tolls_bridge_fees"
      | "tourist_attractions_and_exhibits"
      | "towing_services"
      | "trailer_parks_campgrounds"
      | "transportation_services"
      | "travel_agencies_tour_operators"
      | "truck_stop_iteration"
      | "truck_utility_trailer_rentals"
      | "typesetting_plate_making_and_related_services"
      | "typewriter_stores"
      | "u_s_federal_government_agencies_or_departments"
      | "uniforms_commercial_clothing"
      | "used_merchandise_and_secondhand_stores"
      | "utilities"
      | "variety_stores"
      | "veterinary_services"
      | "video_amusement_game_supplies"
      | "video_game_arcades"
      | "video_tape_rental_stores"
      | "vocational_trade_schools"
      | "watch_jewelry_repair"
      | "welding_repair"
      | "wholesale_clubs"
      | "wig_and_toupee_stores"
      | "wires_money_orders"
      | "womens_accessory_and_specialty_shops"
      | "womens_ready_to_wear_stores"
      | "wrecking_and_salvage_yards"
    )[]
    blocked_categories?: (
      | "ac_refrigeration_repair"
      | "accounting_bookkeeping_services"
      | "advertising_services"
      | "agricultural_cooperative"
      | "airlines_air_carriers"
      | "airports_flying_fields"
      | "ambulance_services"
      | "amusement_parks_carnivals"
      | "antique_reproductions"
      | "antique_shops"
      | "aquariums"
      | "architectural_surveying_services"
      | "art_dealers_and_galleries"
      | "artists_supply_and_craft_shops"
      | "auto_and_home_supply_stores"
      | "auto_body_repair_shops"
      | "auto_paint_shops"
      | "auto_service_shops"
      | "automated_cash_disburse"
      | "automated_fuel_dispensers"
      | "automobile_associations"
      | "automotive_parts_and_accessories_stores"
      | "automotive_tire_stores"
      | "bail_and_bond_payments"
      | "bakeries"
      | "bands_orchestras"
      | "barber_and_beauty_shops"
      | "betting_casino_gambling"
      | "bicycle_shops"
      | "billiard_pool_establishments"
      | "boat_dealers"
      | "boat_rentals_and_leases"
      | "book_stores"
      | "books_periodicals_and_newspapers"
      | "bowling_alleys"
      | "bus_lines"
      | "business_secretarial_schools"
      | "buying_shopping_services"
      | "cable_satellite_and_other_pay_television_and_radio"
      | "camera_and_photographic_supply_stores"
      | "candy_nut_and_confectionery_stores"
      | "car_and_truck_dealers_new_used"
      | "car_and_truck_dealers_used_only"
      | "car_rental_agencies"
      | "car_washes"
      | "carpentry_services"
      | "carpet_upholstery_cleaning"
      | "caterers"
      | "charitable_and_social_service_organizations_fundraising"
      | "chemicals_and_allied_products"
      | "child_care_services"
      | "childrens_and_infants_wear_stores"
      | "chiropodists_podiatrists"
      | "chiropractors"
      | "cigar_stores_and_stands"
      | "civic_social_fraternal_associations"
      | "cleaning_and_maintenance"
      | "clothing_rental"
      | "colleges_universities"
      | "commercial_equipment"
      | "commercial_footwear"
      | "commercial_photography_art_and_graphics"
      | "commuter_transport_and_ferries"
      | "computer_network_services"
      | "computer_programming"
      | "computer_repair"
      | "computer_software_stores"
      | "computers_peripherals_and_software"
      | "concrete_work_services"
      | "construction_materials"
      | "consulting_public_relations"
      | "correspondence_schools"
      | "cosmetic_stores"
      | "counseling_services"
      | "country_clubs"
      | "courier_services"
      | "court_costs"
      | "credit_reporting_agencies"
      | "cruise_lines"
      | "dairy_products_stores"
      | "dance_hall_studios_schools"
      | "dating_escort_services"
      | "dentists_orthodontists"
      | "department_stores"
      | "detective_agencies"
      | "digital_goods_applications"
      | "digital_goods_games"
      | "digital_goods_large_volume"
      | "digital_goods_media"
      | "direct_marketing_catalog_merchant"
      | "direct_marketing_combination_catalog_and_retail_merchant"
      | "direct_marketing_inbound_telemarketing"
      | "direct_marketing_insurance_services"
      | "direct_marketing_other"
      | "direct_marketing_outbound_telemarketing"
      | "direct_marketing_subscription"
      | "direct_marketing_travel"
      | "discount_stores"
      | "doctors"
      | "door_to_door_sales"
      | "drapery_window_covering_and_upholstery_stores"
      | "drinking_places"
      | "drug_stores_and_pharmacies"
      | "drugs_drug_proprietaries_and_druggist_sundries"
      | "dry_cleaners"
      | "durable_goods"
      | "duty_free_stores"
      | "eating_places_restaurants"
      | "educational_services"
      | "electric_razor_stores"
      | "electric_vehicle_charging"
      | "electrical_parts_and_equipment"
      | "electrical_services"
      | "electronics_repair_shops"
      | "electronics_stores"
      | "elementary_secondary_schools"
      | "emergency_services_gcas_visa_use_only"
      | "employment_temp_agencies"
      | "equipment_rental"
      | "exterminating_services"
      | "family_clothing_stores"
      | "fast_food_restaurants"
      | "financial_institutions"
      | "fines_government_administrative_entities"
      | "fireplace_fireplace_screens_and_accessories_stores"
      | "floor_covering_stores"
      | "florists"
      | "florists_supplies_nursery_stock_and_flowers"
      | "freezer_and_locker_meat_provisioners"
      | "fuel_dealers_non_automotive"
      | "funeral_services_crematories"
      | "furniture_home_furnishings_and_equipment_stores_except_appliances"
      | "furniture_repair_refinishing"
      | "furriers_and_fur_shops"
      | "general_services"
      | "gift_card_novelty_and_souvenir_shops"
      | "glass_paint_and_wallpaper_stores"
      | "glassware_crystal_stores"
      | "golf_courses_public"
      | "government_licensed_horse_dog_racing_us_region_only"
      | "government_licensed_online_casions_online_gambling_us_region_only"
      | "government_owned_lotteries_non_us_region"
      | "government_owned_lotteries_us_region_only"
      | "government_services"
      | "grocery_stores_supermarkets"
      | "hardware_equipment_and_supplies"
      | "hardware_stores"
      | "health_and_beauty_spas"
      | "hearing_aids_sales_and_supplies"
      | "heating_plumbing_a_c"
      | "hobby_toy_and_game_shops"
      | "home_supply_warehouse_stores"
      | "hospitals"
      | "hotels_motels_and_resorts"
      | "household_appliance_stores"
      | "industrial_supplies"
      | "information_retrieval_services"
      | "insurance_default"
      | "insurance_underwriting_premiums"
      | "intra_company_purchases"
      | "jewelry_stores_watches_clocks_and_silverware_stores"
      | "landscaping_services"
      | "laundries"
      | "laundry_cleaning_services"
      | "legal_services_attorneys"
      | "luggage_and_leather_goods_stores"
      | "lumber_building_materials_stores"
      | "manual_cash_disburse"
      | "marinas_service_and_supplies"
      | "marketplaces"
      | "masonry_stonework_and_plaster"
      | "massage_parlors"
      | "medical_and_dental_labs"
      | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
      | "medical_services"
      | "membership_organizations"
      | "mens_and_boys_clothing_and_accessories_stores"
      | "mens_womens_clothing_stores"
      | "metal_service_centers"
      | "miscellaneous"
      | "miscellaneous_apparel_and_accessory_shops"
      | "miscellaneous_auto_dealers"
      | "miscellaneous_business_services"
      | "miscellaneous_food_stores"
      | "miscellaneous_general_merchandise"
      | "miscellaneous_general_services"
      | "miscellaneous_home_furnishing_specialty_stores"
      | "miscellaneous_publishing_and_printing"
      | "miscellaneous_recreation_services"
      | "miscellaneous_repair_shops"
      | "miscellaneous_specialty_retail"
      | "mobile_home_dealers"
      | "motion_picture_theaters"
      | "motor_freight_carriers_and_trucking"
      | "motor_homes_dealers"
      | "motor_vehicle_supplies_and_new_parts"
      | "motorcycle_shops_and_dealers"
      | "motorcycle_shops_dealers"
      | "music_stores_musical_instruments_pianos_and_sheet_music"
      | "news_dealers_and_newsstands"
      | "non_fi_money_orders"
      | "non_fi_stored_value_card_purchase_load"
      | "nondurable_goods"
      | "nurseries_lawn_and_garden_supply_stores"
      | "nursing_personal_care"
      | "office_and_commercial_furniture"
      | "opticians_eyeglasses"
      | "optometrists_ophthalmologist"
      | "orthopedic_goods_prosthetic_devices"
      | "osteopaths"
      | "package_stores_beer_wine_and_liquor"
      | "paints_varnishes_and_supplies"
      | "parking_lots_garages"
      | "passenger_railways"
      | "pawn_shops"
      | "pet_shops_pet_food_and_supplies"
      | "petroleum_and_petroleum_products"
      | "photo_developing"
      | "photographic_photocopy_microfilm_equipment_and_supplies"
      | "photographic_studios"
      | "picture_video_production"
      | "piece_goods_notions_and_other_dry_goods"
      | "plumbing_heating_equipment_and_supplies"
      | "political_organizations"
      | "postal_services_government_only"
      | "precious_stones_and_metals_watches_and_jewelry"
      | "professional_services"
      | "public_warehousing_and_storage"
      | "quick_copy_repro_and_blueprint"
      | "railroads"
      | "real_estate_agents_and_managers_rentals"
      | "record_stores"
      | "recreational_vehicle_rentals"
      | "religious_goods_stores"
      | "religious_organizations"
      | "roofing_siding_sheet_metal"
      | "secretarial_support_services"
      | "security_brokers_dealers"
      | "service_stations"
      | "sewing_needlework_fabric_and_piece_goods_stores"
      | "shoe_repair_hat_cleaning"
      | "shoe_stores"
      | "small_appliance_repair"
      | "snowmobile_dealers"
      | "special_trade_services"
      | "specialty_cleaning"
      | "sporting_goods_stores"
      | "sporting_recreation_camps"
      | "sports_and_riding_apparel_stores"
      | "sports_clubs_fields"
      | "stamp_and_coin_stores"
      | "stationary_office_supplies_printing_and_writing_paper"
      | "stationery_stores_office_and_school_supply_stores"
      | "swimming_pools_sales"
      | "t_ui_travel_germany"
      | "tailors_alterations"
      | "tax_payments_government_agencies"
      | "tax_preparation_services"
      | "taxicabs_limousines"
      | "telecommunication_equipment_and_telephone_sales"
      | "telecommunication_services"
      | "telegraph_services"
      | "tent_and_awning_shops"
      | "testing_laboratories"
      | "theatrical_ticket_agencies"
      | "timeshares"
      | "tire_retreading_and_repair"
      | "tolls_bridge_fees"
      | "tourist_attractions_and_exhibits"
      | "towing_services"
      | "trailer_parks_campgrounds"
      | "transportation_services"
      | "travel_agencies_tour_operators"
      | "truck_stop_iteration"
      | "truck_utility_trailer_rentals"
      | "typesetting_plate_making_and_related_services"
      | "typewriter_stores"
      | "u_s_federal_government_agencies_or_departments"
      | "uniforms_commercial_clothing"
      | "used_merchandise_and_secondhand_stores"
      | "utilities"
      | "variety_stores"
      | "veterinary_services"
      | "video_amusement_game_supplies"
      | "video_game_arcades"
      | "video_tape_rental_stores"
      | "vocational_trade_schools"
      | "watch_jewelry_repair"
      | "welding_repair"
      | "wholesale_clubs"
      | "wig_and_toupee_stores"
      | "wires_money_orders"
      | "womens_accessory_and_specialty_shops"
      | "womens_ready_to_wear_stores"
      | "wrecking_and_salvage_yards"
    )[]
    spending_limits?: {
      amount: number
      categories?: (
        | "ac_refrigeration_repair"
        | "accounting_bookkeeping_services"
        | "advertising_services"
        | "agricultural_cooperative"
        | "airlines_air_carriers"
        | "airports_flying_fields"
        | "ambulance_services"
        | "amusement_parks_carnivals"
        | "antique_reproductions"
        | "antique_shops"
        | "aquariums"
        | "architectural_surveying_services"
        | "art_dealers_and_galleries"
        | "artists_supply_and_craft_shops"
        | "auto_and_home_supply_stores"
        | "auto_body_repair_shops"
        | "auto_paint_shops"
        | "auto_service_shops"
        | "automated_cash_disburse"
        | "automated_fuel_dispensers"
        | "automobile_associations"
        | "automotive_parts_and_accessories_stores"
        | "automotive_tire_stores"
        | "bail_and_bond_payments"
        | "bakeries"
        | "bands_orchestras"
        | "barber_and_beauty_shops"
        | "betting_casino_gambling"
        | "bicycle_shops"
        | "billiard_pool_establishments"
        | "boat_dealers"
        | "boat_rentals_and_leases"
        | "book_stores"
        | "books_periodicals_and_newspapers"
        | "bowling_alleys"
        | "bus_lines"
        | "business_secretarial_schools"
        | "buying_shopping_services"
        | "cable_satellite_and_other_pay_television_and_radio"
        | "camera_and_photographic_supply_stores"
        | "candy_nut_and_confectionery_stores"
        | "car_and_truck_dealers_new_used"
        | "car_and_truck_dealers_used_only"
        | "car_rental_agencies"
        | "car_washes"
        | "carpentry_services"
        | "carpet_upholstery_cleaning"
        | "caterers"
        | "charitable_and_social_service_organizations_fundraising"
        | "chemicals_and_allied_products"
        | "child_care_services"
        | "childrens_and_infants_wear_stores"
        | "chiropodists_podiatrists"
        | "chiropractors"
        | "cigar_stores_and_stands"
        | "civic_social_fraternal_associations"
        | "cleaning_and_maintenance"
        | "clothing_rental"
        | "colleges_universities"
        | "commercial_equipment"
        | "commercial_footwear"
        | "commercial_photography_art_and_graphics"
        | "commuter_transport_and_ferries"
        | "computer_network_services"
        | "computer_programming"
        | "computer_repair"
        | "computer_software_stores"
        | "computers_peripherals_and_software"
        | "concrete_work_services"
        | "construction_materials"
        | "consulting_public_relations"
        | "correspondence_schools"
        | "cosmetic_stores"
        | "counseling_services"
        | "country_clubs"
        | "courier_services"
        | "court_costs"
        | "credit_reporting_agencies"
        | "cruise_lines"
        | "dairy_products_stores"
        | "dance_hall_studios_schools"
        | "dating_escort_services"
        | "dentists_orthodontists"
        | "department_stores"
        | "detective_agencies"
        | "digital_goods_applications"
        | "digital_goods_games"
        | "digital_goods_large_volume"
        | "digital_goods_media"
        | "direct_marketing_catalog_merchant"
        | "direct_marketing_combination_catalog_and_retail_merchant"
        | "direct_marketing_inbound_telemarketing"
        | "direct_marketing_insurance_services"
        | "direct_marketing_other"
        | "direct_marketing_outbound_telemarketing"
        | "direct_marketing_subscription"
        | "direct_marketing_travel"
        | "discount_stores"
        | "doctors"
        | "door_to_door_sales"
        | "drapery_window_covering_and_upholstery_stores"
        | "drinking_places"
        | "drug_stores_and_pharmacies"
        | "drugs_drug_proprietaries_and_druggist_sundries"
        | "dry_cleaners"
        | "durable_goods"
        | "duty_free_stores"
        | "eating_places_restaurants"
        | "educational_services"
        | "electric_razor_stores"
        | "electric_vehicle_charging"
        | "electrical_parts_and_equipment"
        | "electrical_services"
        | "electronics_repair_shops"
        | "electronics_stores"
        | "elementary_secondary_schools"
        | "emergency_services_gcas_visa_use_only"
        | "employment_temp_agencies"
        | "equipment_rental"
        | "exterminating_services"
        | "family_clothing_stores"
        | "fast_food_restaurants"
        | "financial_institutions"
        | "fines_government_administrative_entities"
        | "fireplace_fireplace_screens_and_accessories_stores"
        | "floor_covering_stores"
        | "florists"
        | "florists_supplies_nursery_stock_and_flowers"
        | "freezer_and_locker_meat_provisioners"
        | "fuel_dealers_non_automotive"
        | "funeral_services_crematories"
        | "furniture_home_furnishings_and_equipment_stores_except_appliances"
        | "furniture_repair_refinishing"
        | "furriers_and_fur_shops"
        | "general_services"
        | "gift_card_novelty_and_souvenir_shops"
        | "glass_paint_and_wallpaper_stores"
        | "glassware_crystal_stores"
        | "golf_courses_public"
        | "government_licensed_horse_dog_racing_us_region_only"
        | "government_licensed_online_casions_online_gambling_us_region_only"
        | "government_owned_lotteries_non_us_region"
        | "government_owned_lotteries_us_region_only"
        | "government_services"
        | "grocery_stores_supermarkets"
        | "hardware_equipment_and_supplies"
        | "hardware_stores"
        | "health_and_beauty_spas"
        | "hearing_aids_sales_and_supplies"
        | "heating_plumbing_a_c"
        | "hobby_toy_and_game_shops"
        | "home_supply_warehouse_stores"
        | "hospitals"
        | "hotels_motels_and_resorts"
        | "household_appliance_stores"
        | "industrial_supplies"
        | "information_retrieval_services"
        | "insurance_default"
        | "insurance_underwriting_premiums"
        | "intra_company_purchases"
        | "jewelry_stores_watches_clocks_and_silverware_stores"
        | "landscaping_services"
        | "laundries"
        | "laundry_cleaning_services"
        | "legal_services_attorneys"
        | "luggage_and_leather_goods_stores"
        | "lumber_building_materials_stores"
        | "manual_cash_disburse"
        | "marinas_service_and_supplies"
        | "marketplaces"
        | "masonry_stonework_and_plaster"
        | "massage_parlors"
        | "medical_and_dental_labs"
        | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
        | "medical_services"
        | "membership_organizations"
        | "mens_and_boys_clothing_and_accessories_stores"
        | "mens_womens_clothing_stores"
        | "metal_service_centers"
        | "miscellaneous"
        | "miscellaneous_apparel_and_accessory_shops"
        | "miscellaneous_auto_dealers"
        | "miscellaneous_business_services"
        | "miscellaneous_food_stores"
        | "miscellaneous_general_merchandise"
        | "miscellaneous_general_services"
        | "miscellaneous_home_furnishing_specialty_stores"
        | "miscellaneous_publishing_and_printing"
        | "miscellaneous_recreation_services"
        | "miscellaneous_repair_shops"
        | "miscellaneous_specialty_retail"
        | "mobile_home_dealers"
        | "motion_picture_theaters"
        | "motor_freight_carriers_and_trucking"
        | "motor_homes_dealers"
        | "motor_vehicle_supplies_and_new_parts"
        | "motorcycle_shops_and_dealers"
        | "motorcycle_shops_dealers"
        | "music_stores_musical_instruments_pianos_and_sheet_music"
        | "news_dealers_and_newsstands"
        | "non_fi_money_orders"
        | "non_fi_stored_value_card_purchase_load"
        | "nondurable_goods"
        | "nurseries_lawn_and_garden_supply_stores"
        | "nursing_personal_care"
        | "office_and_commercial_furniture"
        | "opticians_eyeglasses"
        | "optometrists_ophthalmologist"
        | "orthopedic_goods_prosthetic_devices"
        | "osteopaths"
        | "package_stores_beer_wine_and_liquor"
        | "paints_varnishes_and_supplies"
        | "parking_lots_garages"
        | "passenger_railways"
        | "pawn_shops"
        | "pet_shops_pet_food_and_supplies"
        | "petroleum_and_petroleum_products"
        | "photo_developing"
        | "photographic_photocopy_microfilm_equipment_and_supplies"
        | "photographic_studios"
        | "picture_video_production"
        | "piece_goods_notions_and_other_dry_goods"
        | "plumbing_heating_equipment_and_supplies"
        | "political_organizations"
        | "postal_services_government_only"
        | "precious_stones_and_metals_watches_and_jewelry"
        | "professional_services"
        | "public_warehousing_and_storage"
        | "quick_copy_repro_and_blueprint"
        | "railroads"
        | "real_estate_agents_and_managers_rentals"
        | "record_stores"
        | "recreational_vehicle_rentals"
        | "religious_goods_stores"
        | "religious_organizations"
        | "roofing_siding_sheet_metal"
        | "secretarial_support_services"
        | "security_brokers_dealers"
        | "service_stations"
        | "sewing_needlework_fabric_and_piece_goods_stores"
        | "shoe_repair_hat_cleaning"
        | "shoe_stores"
        | "small_appliance_repair"
        | "snowmobile_dealers"
        | "special_trade_services"
        | "specialty_cleaning"
        | "sporting_goods_stores"
        | "sporting_recreation_camps"
        | "sports_and_riding_apparel_stores"
        | "sports_clubs_fields"
        | "stamp_and_coin_stores"
        | "stationary_office_supplies_printing_and_writing_paper"
        | "stationery_stores_office_and_school_supply_stores"
        | "swimming_pools_sales"
        | "t_ui_travel_germany"
        | "tailors_alterations"
        | "tax_payments_government_agencies"
        | "tax_preparation_services"
        | "taxicabs_limousines"
        | "telecommunication_equipment_and_telephone_sales"
        | "telecommunication_services"
        | "telegraph_services"
        | "tent_and_awning_shops"
        | "testing_laboratories"
        | "theatrical_ticket_agencies"
        | "timeshares"
        | "tire_retreading_and_repair"
        | "tolls_bridge_fees"
        | "tourist_attractions_and_exhibits"
        | "towing_services"
        | "trailer_parks_campgrounds"
        | "transportation_services"
        | "travel_agencies_tour_operators"
        | "truck_stop_iteration"
        | "truck_utility_trailer_rentals"
        | "typesetting_plate_making_and_related_services"
        | "typewriter_stores"
        | "u_s_federal_government_agencies_or_departments"
        | "uniforms_commercial_clothing"
        | "used_merchandise_and_secondhand_stores"
        | "utilities"
        | "variety_stores"
        | "veterinary_services"
        | "video_amusement_game_supplies"
        | "video_game_arcades"
        | "video_tape_rental_stores"
        | "vocational_trade_schools"
        | "watch_jewelry_repair"
        | "welding_repair"
        | "wholesale_clubs"
        | "wig_and_toupee_stores"
        | "wires_money_orders"
        | "womens_accessory_and_specialty_shops"
        | "womens_ready_to_wear_stores"
        | "wrecking_and_salvage_yards"
      )[]
      interval:
        | "all_time"
        | "daily"
        | "monthly"
        | "per_authorization"
        | "weekly"
        | "yearly"
    }[]
  }
  status?: "active" | "canceled" | "inactive"
}

export type t_PostIssuingCardsCardParamSchema = {
  card: string
}

export type t_PostIssuingDisputesBodySchema = {
  amount?: number
  evidence?: {
    canceled?:
      | {
          additional_documentation?: string | ""
          canceled_at?: number | ""
          cancellation_policy_provided?: boolean | ""
          cancellation_reason?: string | ""
          expected_at?: number | ""
          explanation?: string | ""
          product_description?: string | ""
          product_type?: "" | "merchandise" | "service"
          return_status?: "" | "merchant_rejected" | "successful"
          returned_at?: number | ""
        }
      | ""
    duplicate?:
      | {
          additional_documentation?: string | ""
          card_statement?: string | ""
          cash_receipt?: string | ""
          check_image?: string | ""
          explanation?: string | ""
          original_transaction?: string
        }
      | ""
    fraudulent?:
      | {
          additional_documentation?: string | ""
          explanation?: string | ""
        }
      | ""
    merchandise_not_as_described?:
      | {
          additional_documentation?: string | ""
          explanation?: string | ""
          received_at?: number | ""
          return_description?: string | ""
          return_status?: "" | "merchant_rejected" | "successful"
          returned_at?: number | ""
        }
      | ""
    not_received?:
      | {
          additional_documentation?: string | ""
          expected_at?: number | ""
          explanation?: string | ""
          product_description?: string | ""
          product_type?: "" | "merchandise" | "service"
        }
      | ""
    other?:
      | {
          additional_documentation?: string | ""
          explanation?: string | ""
          product_description?: string | ""
          product_type?: "" | "merchandise" | "service"
        }
      | ""
    reason?:
      | "canceled"
      | "duplicate"
      | "fraudulent"
      | "merchandise_not_as_described"
      | "not_received"
      | "other"
      | "service_not_as_described"
    service_not_as_described?:
      | {
          additional_documentation?: string | ""
          canceled_at?: number | ""
          cancellation_reason?: string | ""
          explanation?: string | ""
          received_at?: number | ""
        }
      | ""
  }
  expand?: string[]
  metadata?: {
    [key: string]: string
  }
  transaction?: string
  treasury?: {
    received_debit: string
  }
}

export type t_PostIssuingDisputesDisputeBodySchema = {
  amount?: number
  evidence?: {
    canceled?:
      | {
          additional_documentation?: string | ""
          canceled_at?: number | ""
          cancellation_policy_provided?: boolean | ""
          cancellation_reason?: string | ""
          expected_at?: number | ""
          explanation?: string | ""
          product_description?: string | ""
          product_type?: "" | "merchandise" | "service"
          return_status?: "" | "merchant_rejected" | "successful"
          returned_at?: number | ""
        }
      | ""
    duplicate?:
      | {
          additional_documentation?: string | ""
          card_statement?: string | ""
          cash_receipt?: string | ""
          check_image?: string | ""
          explanation?: string | ""
          original_transaction?: string
        }
      | ""
    fraudulent?:
      | {
          additional_documentation?: string | ""
          explanation?: string | ""
        }
      | ""
    merchandise_not_as_described?:
      | {
          additional_documentation?: string | ""
          explanation?: string | ""
          received_at?: number | ""
          return_description?: string | ""
          return_status?: "" | "merchant_rejected" | "successful"
          returned_at?: number | ""
        }
      | ""
    not_received?:
      | {
          additional_documentation?: string | ""
          expected_at?: number | ""
          explanation?: string | ""
          product_description?: string | ""
          product_type?: "" | "merchandise" | "service"
        }
      | ""
    other?:
      | {
          additional_documentation?: string | ""
          explanation?: string | ""
          product_description?: string | ""
          product_type?: "" | "merchandise" | "service"
        }
      | ""
    reason?:
      | "canceled"
      | "duplicate"
      | "fraudulent"
      | "merchandise_not_as_described"
      | "not_received"
      | "other"
      | "service_not_as_described"
    service_not_as_described?:
      | {
          additional_documentation?: string | ""
          canceled_at?: number | ""
          cancellation_reason?: string | ""
          explanation?: string | ""
          received_at?: number | ""
        }
      | ""
  }
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostIssuingDisputesDisputeParamSchema = {
  dispute: string
}

export type t_PostIssuingDisputesDisputeSubmitBodySchema = {
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostIssuingDisputesDisputeSubmitParamSchema = {
  dispute: string
}

export type t_PostIssuingSettlementsSettlementBodySchema = {
  expand?: string[]
  metadata?: {
    [key: string]: string
  }
}

export type t_PostIssuingSettlementsSettlementParamSchema = {
  settlement: string
}

export type t_PostIssuingTransactionsTransactionBodySchema = {
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostIssuingTransactionsTransactionParamSchema = {
  transaction: string
}

export type t_PostLinkAccountSessionsBodySchema = {
  account_holder: {
    account?: string
    customer?: string
    type: "account" | "customer"
  }
  expand?: string[]
  filters?: {
    countries: string[]
  }
  permissions: ("balances" | "ownership" | "payment_method" | "transactions")[]
  prefetch?: ("balances" | "ownership")[]
  return_url?: string
}

export type t_PostLinkedAccountsAccountDisconnectBodySchema = {
  expand?: string[]
}

export type t_PostLinkedAccountsAccountDisconnectParamSchema = {
  account: string
}

export type t_PostLinkedAccountsAccountRefreshBodySchema = {
  expand?: string[]
  features: ("balance" | "ownership")[]
}

export type t_PostLinkedAccountsAccountRefreshParamSchema = {
  account: string
}

export type t_PostPaymentIntentsBodySchema = {
  amount: number
  application_fee_amount?: number
  automatic_payment_methods?: {
    allow_redirects?: "always" | "never"
    enabled: boolean
  }
  capture_method?: "automatic" | "automatic_async" | "manual"
  confirm?: boolean
  confirmation_method?: "automatic" | "manual"
  currency: string
  customer?: string
  description?: string
  error_on_requires_action?: boolean
  expand?: string[]
  mandate?: string
  mandate_data?:
    | {
        customer_acceptance: {
          accepted_at?: number
          offline?: EmptyObject
          online?: {
            ip_address: string
            user_agent: string
          }
          type: "offline" | "online"
        }
      }
    | ""
  metadata?: {
    [key: string]: string
  }
  off_session?: boolean | "one_off" | "recurring"
  on_behalf_of?: string
  payment_method?: string
  payment_method_configuration?: string
  payment_method_data?: {
    acss_debit?: {
      account_number: string
      institution_number: string
      transit_number: string
    }
    affirm?: EmptyObject
    afterpay_clearpay?: EmptyObject
    alipay?: EmptyObject
    au_becs_debit?: {
      account_number: string
      bsb_number: string
    }
    bacs_debit?: {
      account_number?: string
      sort_code?: string
    }
    bancontact?: EmptyObject
    billing_details?: {
      address?:
        | {
            city?: string
            country?: string
            line1?: string
            line2?: string
            postal_code?: string
            state?: string
          }
        | ""
      email?: string | ""
      name?: string | ""
      phone?: string | ""
    }
    blik?: EmptyObject
    boleto?: {
      tax_id: string
    }
    cashapp?: EmptyObject
    customer_balance?: EmptyObject
    eps?: {
      bank?:
        | "arzte_und_apotheker_bank"
        | "austrian_anadi_bank_ag"
        | "bank_austria"
        | "bankhaus_carl_spangler"
        | "bankhaus_schelhammer_und_schattera_ag"
        | "bawag_psk_ag"
        | "bks_bank_ag"
        | "brull_kallmus_bank_ag"
        | "btv_vier_lander_bank"
        | "capital_bank_grawe_gruppe_ag"
        | "deutsche_bank_ag"
        | "dolomitenbank"
        | "easybank_ag"
        | "erste_bank_und_sparkassen"
        | "hypo_alpeadriabank_international_ag"
        | "hypo_bank_burgenland_aktiengesellschaft"
        | "hypo_noe_lb_fur_niederosterreich_u_wien"
        | "hypo_oberosterreich_salzburg_steiermark"
        | "hypo_tirol_bank_ag"
        | "hypo_vorarlberg_bank_ag"
        | "marchfelder_bank"
        | "oberbank_ag"
        | "raiffeisen_bankengruppe_osterreich"
        | "schoellerbank_ag"
        | "sparda_bank_wien"
        | "volksbank_gruppe"
        | "volkskreditbank_ag"
        | "vr_bank_braunau"
    }
    fpx?: {
      bank:
        | "affin_bank"
        | "agrobank"
        | "alliance_bank"
        | "ambank"
        | "bank_islam"
        | "bank_muamalat"
        | "bank_of_china"
        | "bank_rakyat"
        | "bsn"
        | "cimb"
        | "deutsche_bank"
        | "hong_leong_bank"
        | "hsbc"
        | "kfh"
        | "maybank2e"
        | "maybank2u"
        | "ocbc"
        | "pb_enterprise"
        | "public_bank"
        | "rhb"
        | "standard_chartered"
        | "uob"
    }
    giropay?: EmptyObject
    grabpay?: EmptyObject
    ideal?: {
      bank?:
        | "abn_amro"
        | "asn_bank"
        | "bunq"
        | "handelsbanken"
        | "ing"
        | "knab"
        | "moneyou"
        | "n26"
        | "rabobank"
        | "regiobank"
        | "revolut"
        | "sns_bank"
        | "triodos_bank"
        | "van_lanschot"
        | "yoursafe"
    }
    interac_present?: EmptyObject
    klarna?: {
      dob?: {
        day: number
        month: number
        year: number
      }
    }
    konbini?: EmptyObject
    link?: EmptyObject
    metadata?: {
      [key: string]: string
    }
    oxxo?: EmptyObject
    p24?: {
      bank?:
        | "alior_bank"
        | "bank_millennium"
        | "bank_nowy_bfg_sa"
        | "bank_pekao_sa"
        | "banki_spbdzielcze"
        | "blik"
        | "bnp_paribas"
        | "boz"
        | "citi_handlowy"
        | "credit_agricole"
        | "envelobank"
        | "etransfer_pocztowy24"
        | "getin_bank"
        | "ideabank"
        | "ing"
        | "inteligo"
        | "mbank_mtransfer"
        | "nest_przelew"
        | "noble_pay"
        | "pbac_z_ipko"
        | "plus_bank"
        | "santander_przelew24"
        | "tmobile_usbugi_bankowe"
        | "toyota_bank"
        | "volkswagen_bank"
    }
    paynow?: EmptyObject
    paypal?: EmptyObject
    pix?: EmptyObject
    promptpay?: EmptyObject
    radar_options?: {
      session?: string
    }
    sepa_debit?: {
      iban: string
    }
    sofort?: {
      country: "AT" | "BE" | "DE" | "ES" | "IT" | "NL"
    }
    type:
      | "acss_debit"
      | "affirm"
      | "afterpay_clearpay"
      | "alipay"
      | "au_becs_debit"
      | "bacs_debit"
      | "bancontact"
      | "blik"
      | "boleto"
      | "cashapp"
      | "customer_balance"
      | "eps"
      | "fpx"
      | "giropay"
      | "grabpay"
      | "ideal"
      | "klarna"
      | "konbini"
      | "link"
      | "oxxo"
      | "p24"
      | "paynow"
      | "paypal"
      | "pix"
      | "promptpay"
      | "sepa_debit"
      | "sofort"
      | "us_bank_account"
      | "wechat_pay"
      | "zip"
    us_bank_account?: {
      account_holder_type?: "company" | "individual"
      account_number?: string
      account_type?: "checking" | "savings"
      financial_connections_account?: string
      routing_number?: string
    }
    wechat_pay?: EmptyObject
    zip?: EmptyObject
  }
  payment_method_options?: {
    acss_debit?:
      | {
          mandate_options?: {
            custom_mandate_url?: string | ""
            interval_description?: string
            payment_schedule?: "combined" | "interval" | "sporadic"
            transaction_type?: "business" | "personal"
          }
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
          verification_method?: "automatic" | "instant" | "microdeposits"
        }
      | ""
    affirm?:
      | {
          capture_method?: "" | "manual"
          preferred_locale?: string
          setup_future_usage?: "none"
        }
      | ""
    afterpay_clearpay?:
      | {
          capture_method?: "" | "manual"
          reference?: string
          setup_future_usage?: "none"
        }
      | ""
    alipay?:
      | {
          setup_future_usage?: "" | "none" | "off_session"
        }
      | ""
    au_becs_debit?:
      | {
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
        }
      | ""
    bacs_debit?:
      | {
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
        }
      | ""
    bancontact?:
      | {
          preferred_language?: "de" | "en" | "fr" | "nl"
          setup_future_usage?: "" | "none" | "off_session"
        }
      | ""
    blik?:
      | {
          code?: string
        }
      | ""
    boleto?:
      | {
          expires_after_days?: number
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
        }
      | ""
    card?:
      | {
          capture_method?: "" | "manual"
          cvc_token?: string
          installments?: {
            enabled?: boolean
            plan?:
              | {
                  count: number
                  interval: "month"
                  type: "fixed_count"
                }
              | ""
          }
          mandate_options?: {
            amount: number
            amount_type: "fixed" | "maximum"
            description?: string
            end_date?: number
            interval: "day" | "month" | "sporadic" | "week" | "year"
            interval_count?: number
            reference: string
            start_date: number
            supported_types?: "india"[]
          }
          network?:
            | "amex"
            | "cartes_bancaires"
            | "diners"
            | "discover"
            | "eftpos_au"
            | "interac"
            | "jcb"
            | "mastercard"
            | "unionpay"
            | "unknown"
            | "visa"
          request_three_d_secure?: "any" | "automatic"
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
          statement_descriptor_suffix_kana?: string | ""
          statement_descriptor_suffix_kanji?: string | ""
        }
      | ""
    card_present?:
      | {
          request_extended_authorization?: boolean
          request_incremental_authorization_support?: boolean
        }
      | ""
    cashapp?:
      | {
          capture_method?: "" | "manual"
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
        }
      | ""
    customer_balance?:
      | {
          bank_transfer?: {
            eu_bank_transfer?: {
              country: string
            }
            requested_address_types?: (
              | "aba"
              | "iban"
              | "sepa"
              | "sort_code"
              | "spei"
              | "swift"
              | "zengin"
            )[]
            type:
              | "eu_bank_transfer"
              | "gb_bank_transfer"
              | "jp_bank_transfer"
              | "mx_bank_transfer"
              | "us_bank_transfer"
          }
          funding_type?: "bank_transfer"
          setup_future_usage?: "none"
        }
      | ""
    eps?:
      | {
          setup_future_usage?: "none"
        }
      | ""
    fpx?:
      | {
          setup_future_usage?: "none"
        }
      | ""
    giropay?:
      | {
          setup_future_usage?: "none"
        }
      | ""
    grabpay?:
      | {
          setup_future_usage?: "none"
        }
      | ""
    ideal?:
      | {
          setup_future_usage?: "" | "none" | "off_session"
        }
      | ""
    interac_present?: EmptyObject | ""
    klarna?:
      | {
          capture_method?: "" | "manual"
          preferred_locale?:
            | "cs-CZ"
            | "da-DK"
            | "de-AT"
            | "de-CH"
            | "de-DE"
            | "el-GR"
            | "en-AT"
            | "en-AU"
            | "en-BE"
            | "en-CA"
            | "en-CH"
            | "en-CZ"
            | "en-DE"
            | "en-DK"
            | "en-ES"
            | "en-FI"
            | "en-FR"
            | "en-GB"
            | "en-GR"
            | "en-IE"
            | "en-IT"
            | "en-NL"
            | "en-NO"
            | "en-NZ"
            | "en-PL"
            | "en-PT"
            | "en-SE"
            | "en-US"
            | "es-ES"
            | "es-US"
            | "fi-FI"
            | "fr-BE"
            | "fr-CA"
            | "fr-CH"
            | "fr-FR"
            | "it-CH"
            | "it-IT"
            | "nb-NO"
            | "nl-BE"
            | "nl-NL"
            | "pl-PL"
            | "pt-PT"
            | "sv-FI"
            | "sv-SE"
          setup_future_usage?: "none"
        }
      | ""
    konbini?:
      | {
          confirmation_number?: string | ""
          expires_after_days?: number | ""
          expires_at?: number | ""
          product_description?: string | ""
          setup_future_usage?: "none"
        }
      | ""
    link?:
      | {
          capture_method?: "" | "manual"
          setup_future_usage?: "" | "none" | "off_session"
        }
      | ""
    oxxo?:
      | {
          expires_after_days?: number
          setup_future_usage?: "none"
        }
      | ""
    p24?:
      | {
          setup_future_usage?: "none"
          tos_shown_and_accepted?: boolean
        }
      | ""
    paynow?:
      | {
          setup_future_usage?: "none"
        }
      | ""
    paypal?:
      | {
          capture_method?: "" | "manual"
          preferred_locale?:
            | "cs-CZ"
            | "da-DK"
            | "de-AT"
            | "de-DE"
            | "de-LU"
            | "el-GR"
            | "en-GB"
            | "en-US"
            | "es-ES"
            | "fi-FI"
            | "fr-BE"
            | "fr-FR"
            | "fr-LU"
            | "hu-HU"
            | "it-IT"
            | "nl-BE"
            | "nl-NL"
            | "pl-PL"
            | "pt-PT"
            | "sk-SK"
            | "sv-SE"
          reference?: string
          risk_correlation_id?: string
          setup_future_usage?: "" | "none" | "off_session"
        }
      | ""
    pix?:
      | {
          expires_after_seconds?: number
          expires_at?: number
          setup_future_usage?: "none"
        }
      | ""
    promptpay?:
      | {
          setup_future_usage?: "none"
        }
      | ""
    sepa_debit?:
      | {
          mandate_options?: EmptyObject
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
        }
      | ""
    sofort?:
      | {
          preferred_language?:
            | ""
            | "de"
            | "en"
            | "es"
            | "fr"
            | "it"
            | "nl"
            | "pl"
          setup_future_usage?: "" | "none" | "off_session"
        }
      | ""
    us_bank_account?:
      | {
          financial_connections?: {
            permissions?: (
              | "balances"
              | "ownership"
              | "payment_method"
              | "transactions"
            )[]
            prefetch?: "balances"[]
            return_url?: string
          }
          networks?: {
            requested?: ("ach" | "us_domestic_wire")[]
          }
          preferred_settlement_speed?: "" | "fastest" | "standard"
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
          verification_method?: "automatic" | "instant" | "microdeposits"
        }
      | ""
    wechat_pay?:
      | {
          app_id?: string
          client: "android" | "ios" | "web"
          setup_future_usage?: "none"
        }
      | ""
    zip?:
      | {
          setup_future_usage?: "none"
        }
      | ""
  }
  payment_method_types?: string[]
  radar_options?: {
    session?: string
  }
  receipt_email?: string
  return_url?: string
  setup_future_usage?: "off_session" | "on_session"
  shipping?: {
    address: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    carrier?: string
    name: string
    phone?: string
    tracking_number?: string
  }
  statement_descriptor?: string
  statement_descriptor_suffix?: string
  transfer_data?: {
    amount?: number
    destination: string
  }
  transfer_group?: string
  use_stripe_sdk?: boolean
}

export type t_PostPaymentIntentsIntentBodySchema = {
  amount?: number
  application_fee_amount?: number | ""
  capture_method?: "automatic" | "automatic_async" | "manual"
  currency?: string
  customer?: string
  description?: string
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  payment_method?: string
  payment_method_configuration?: string
  payment_method_data?: {
    acss_debit?: {
      account_number: string
      institution_number: string
      transit_number: string
    }
    affirm?: EmptyObject
    afterpay_clearpay?: EmptyObject
    alipay?: EmptyObject
    au_becs_debit?: {
      account_number: string
      bsb_number: string
    }
    bacs_debit?: {
      account_number?: string
      sort_code?: string
    }
    bancontact?: EmptyObject
    billing_details?: {
      address?:
        | {
            city?: string
            country?: string
            line1?: string
            line2?: string
            postal_code?: string
            state?: string
          }
        | ""
      email?: string | ""
      name?: string | ""
      phone?: string | ""
    }
    blik?: EmptyObject
    boleto?: {
      tax_id: string
    }
    cashapp?: EmptyObject
    customer_balance?: EmptyObject
    eps?: {
      bank?:
        | "arzte_und_apotheker_bank"
        | "austrian_anadi_bank_ag"
        | "bank_austria"
        | "bankhaus_carl_spangler"
        | "bankhaus_schelhammer_und_schattera_ag"
        | "bawag_psk_ag"
        | "bks_bank_ag"
        | "brull_kallmus_bank_ag"
        | "btv_vier_lander_bank"
        | "capital_bank_grawe_gruppe_ag"
        | "deutsche_bank_ag"
        | "dolomitenbank"
        | "easybank_ag"
        | "erste_bank_und_sparkassen"
        | "hypo_alpeadriabank_international_ag"
        | "hypo_bank_burgenland_aktiengesellschaft"
        | "hypo_noe_lb_fur_niederosterreich_u_wien"
        | "hypo_oberosterreich_salzburg_steiermark"
        | "hypo_tirol_bank_ag"
        | "hypo_vorarlberg_bank_ag"
        | "marchfelder_bank"
        | "oberbank_ag"
        | "raiffeisen_bankengruppe_osterreich"
        | "schoellerbank_ag"
        | "sparda_bank_wien"
        | "volksbank_gruppe"
        | "volkskreditbank_ag"
        | "vr_bank_braunau"
    }
    fpx?: {
      bank:
        | "affin_bank"
        | "agrobank"
        | "alliance_bank"
        | "ambank"
        | "bank_islam"
        | "bank_muamalat"
        | "bank_of_china"
        | "bank_rakyat"
        | "bsn"
        | "cimb"
        | "deutsche_bank"
        | "hong_leong_bank"
        | "hsbc"
        | "kfh"
        | "maybank2e"
        | "maybank2u"
        | "ocbc"
        | "pb_enterprise"
        | "public_bank"
        | "rhb"
        | "standard_chartered"
        | "uob"
    }
    giropay?: EmptyObject
    grabpay?: EmptyObject
    ideal?: {
      bank?:
        | "abn_amro"
        | "asn_bank"
        | "bunq"
        | "handelsbanken"
        | "ing"
        | "knab"
        | "moneyou"
        | "n26"
        | "rabobank"
        | "regiobank"
        | "revolut"
        | "sns_bank"
        | "triodos_bank"
        | "van_lanschot"
        | "yoursafe"
    }
    interac_present?: EmptyObject
    klarna?: {
      dob?: {
        day: number
        month: number
        year: number
      }
    }
    konbini?: EmptyObject
    link?: EmptyObject
    metadata?: {
      [key: string]: string
    }
    oxxo?: EmptyObject
    p24?: {
      bank?:
        | "alior_bank"
        | "bank_millennium"
        | "bank_nowy_bfg_sa"
        | "bank_pekao_sa"
        | "banki_spbdzielcze"
        | "blik"
        | "bnp_paribas"
        | "boz"
        | "citi_handlowy"
        | "credit_agricole"
        | "envelobank"
        | "etransfer_pocztowy24"
        | "getin_bank"
        | "ideabank"
        | "ing"
        | "inteligo"
        | "mbank_mtransfer"
        | "nest_przelew"
        | "noble_pay"
        | "pbac_z_ipko"
        | "plus_bank"
        | "santander_przelew24"
        | "tmobile_usbugi_bankowe"
        | "toyota_bank"
        | "volkswagen_bank"
    }
    paynow?: EmptyObject
    paypal?: EmptyObject
    pix?: EmptyObject
    promptpay?: EmptyObject
    radar_options?: {
      session?: string
    }
    sepa_debit?: {
      iban: string
    }
    sofort?: {
      country: "AT" | "BE" | "DE" | "ES" | "IT" | "NL"
    }
    type:
      | "acss_debit"
      | "affirm"
      | "afterpay_clearpay"
      | "alipay"
      | "au_becs_debit"
      | "bacs_debit"
      | "bancontact"
      | "blik"
      | "boleto"
      | "cashapp"
      | "customer_balance"
      | "eps"
      | "fpx"
      | "giropay"
      | "grabpay"
      | "ideal"
      | "klarna"
      | "konbini"
      | "link"
      | "oxxo"
      | "p24"
      | "paynow"
      | "paypal"
      | "pix"
      | "promptpay"
      | "sepa_debit"
      | "sofort"
      | "us_bank_account"
      | "wechat_pay"
      | "zip"
    us_bank_account?: {
      account_holder_type?: "company" | "individual"
      account_number?: string
      account_type?: "checking" | "savings"
      financial_connections_account?: string
      routing_number?: string
    }
    wechat_pay?: EmptyObject
    zip?: EmptyObject
  }
  payment_method_options?: {
    acss_debit?:
      | {
          mandate_options?: {
            custom_mandate_url?: string | ""
            interval_description?: string
            payment_schedule?: "combined" | "interval" | "sporadic"
            transaction_type?: "business" | "personal"
          }
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
          verification_method?: "automatic" | "instant" | "microdeposits"
        }
      | ""
    affirm?:
      | {
          capture_method?: "" | "manual"
          preferred_locale?: string
          setup_future_usage?: "none"
        }
      | ""
    afterpay_clearpay?:
      | {
          capture_method?: "" | "manual"
          reference?: string
          setup_future_usage?: "none"
        }
      | ""
    alipay?:
      | {
          setup_future_usage?: "" | "none" | "off_session"
        }
      | ""
    au_becs_debit?:
      | {
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
        }
      | ""
    bacs_debit?:
      | {
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
        }
      | ""
    bancontact?:
      | {
          preferred_language?: "de" | "en" | "fr" | "nl"
          setup_future_usage?: "" | "none" | "off_session"
        }
      | ""
    blik?:
      | {
          code?: string
        }
      | ""
    boleto?:
      | {
          expires_after_days?: number
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
        }
      | ""
    card?:
      | {
          capture_method?: "" | "manual"
          cvc_token?: string
          installments?: {
            enabled?: boolean
            plan?:
              | {
                  count: number
                  interval: "month"
                  type: "fixed_count"
                }
              | ""
          }
          mandate_options?: {
            amount: number
            amount_type: "fixed" | "maximum"
            description?: string
            end_date?: number
            interval: "day" | "month" | "sporadic" | "week" | "year"
            interval_count?: number
            reference: string
            start_date: number
            supported_types?: "india"[]
          }
          network?:
            | "amex"
            | "cartes_bancaires"
            | "diners"
            | "discover"
            | "eftpos_au"
            | "interac"
            | "jcb"
            | "mastercard"
            | "unionpay"
            | "unknown"
            | "visa"
          request_three_d_secure?: "any" | "automatic"
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
          statement_descriptor_suffix_kana?: string | ""
          statement_descriptor_suffix_kanji?: string | ""
        }
      | ""
    card_present?:
      | {
          request_extended_authorization?: boolean
          request_incremental_authorization_support?: boolean
        }
      | ""
    cashapp?:
      | {
          capture_method?: "" | "manual"
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
        }
      | ""
    customer_balance?:
      | {
          bank_transfer?: {
            eu_bank_transfer?: {
              country: string
            }
            requested_address_types?: (
              | "aba"
              | "iban"
              | "sepa"
              | "sort_code"
              | "spei"
              | "swift"
              | "zengin"
            )[]
            type:
              | "eu_bank_transfer"
              | "gb_bank_transfer"
              | "jp_bank_transfer"
              | "mx_bank_transfer"
              | "us_bank_transfer"
          }
          funding_type?: "bank_transfer"
          setup_future_usage?: "none"
        }
      | ""
    eps?:
      | {
          setup_future_usage?: "none"
        }
      | ""
    fpx?:
      | {
          setup_future_usage?: "none"
        }
      | ""
    giropay?:
      | {
          setup_future_usage?: "none"
        }
      | ""
    grabpay?:
      | {
          setup_future_usage?: "none"
        }
      | ""
    ideal?:
      | {
          setup_future_usage?: "" | "none" | "off_session"
        }
      | ""
    interac_present?: EmptyObject | ""
    klarna?:
      | {
          capture_method?: "" | "manual"
          preferred_locale?:
            | "cs-CZ"
            | "da-DK"
            | "de-AT"
            | "de-CH"
            | "de-DE"
            | "el-GR"
            | "en-AT"
            | "en-AU"
            | "en-BE"
            | "en-CA"
            | "en-CH"
            | "en-CZ"
            | "en-DE"
            | "en-DK"
            | "en-ES"
            | "en-FI"
            | "en-FR"
            | "en-GB"
            | "en-GR"
            | "en-IE"
            | "en-IT"
            | "en-NL"
            | "en-NO"
            | "en-NZ"
            | "en-PL"
            | "en-PT"
            | "en-SE"
            | "en-US"
            | "es-ES"
            | "es-US"
            | "fi-FI"
            | "fr-BE"
            | "fr-CA"
            | "fr-CH"
            | "fr-FR"
            | "it-CH"
            | "it-IT"
            | "nb-NO"
            | "nl-BE"
            | "nl-NL"
            | "pl-PL"
            | "pt-PT"
            | "sv-FI"
            | "sv-SE"
          setup_future_usage?: "none"
        }
      | ""
    konbini?:
      | {
          confirmation_number?: string | ""
          expires_after_days?: number | ""
          expires_at?: number | ""
          product_description?: string | ""
          setup_future_usage?: "none"
        }
      | ""
    link?:
      | {
          capture_method?: "" | "manual"
          setup_future_usage?: "" | "none" | "off_session"
        }
      | ""
    oxxo?:
      | {
          expires_after_days?: number
          setup_future_usage?: "none"
        }
      | ""
    p24?:
      | {
          setup_future_usage?: "none"
          tos_shown_and_accepted?: boolean
        }
      | ""
    paynow?:
      | {
          setup_future_usage?: "none"
        }
      | ""
    paypal?:
      | {
          capture_method?: "" | "manual"
          preferred_locale?:
            | "cs-CZ"
            | "da-DK"
            | "de-AT"
            | "de-DE"
            | "de-LU"
            | "el-GR"
            | "en-GB"
            | "en-US"
            | "es-ES"
            | "fi-FI"
            | "fr-BE"
            | "fr-FR"
            | "fr-LU"
            | "hu-HU"
            | "it-IT"
            | "nl-BE"
            | "nl-NL"
            | "pl-PL"
            | "pt-PT"
            | "sk-SK"
            | "sv-SE"
          reference?: string
          risk_correlation_id?: string
          setup_future_usage?: "" | "none" | "off_session"
        }
      | ""
    pix?:
      | {
          expires_after_seconds?: number
          expires_at?: number
          setup_future_usage?: "none"
        }
      | ""
    promptpay?:
      | {
          setup_future_usage?: "none"
        }
      | ""
    sepa_debit?:
      | {
          mandate_options?: EmptyObject
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
        }
      | ""
    sofort?:
      | {
          preferred_language?:
            | ""
            | "de"
            | "en"
            | "es"
            | "fr"
            | "it"
            | "nl"
            | "pl"
          setup_future_usage?: "" | "none" | "off_session"
        }
      | ""
    us_bank_account?:
      | {
          financial_connections?: {
            permissions?: (
              | "balances"
              | "ownership"
              | "payment_method"
              | "transactions"
            )[]
            prefetch?: "balances"[]
            return_url?: string
          }
          networks?: {
            requested?: ("ach" | "us_domestic_wire")[]
          }
          preferred_settlement_speed?: "" | "fastest" | "standard"
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
          verification_method?: "automatic" | "instant" | "microdeposits"
        }
      | ""
    wechat_pay?:
      | {
          app_id?: string
          client: "android" | "ios" | "web"
          setup_future_usage?: "none"
        }
      | ""
    zip?:
      | {
          setup_future_usage?: "none"
        }
      | ""
  }
  payment_method_types?: string[]
  receipt_email?: string | ""
  setup_future_usage?: "" | "off_session" | "on_session"
  shipping?:
    | {
        address: {
          city?: string
          country?: string
          line1?: string
          line2?: string
          postal_code?: string
          state?: string
        }
        carrier?: string
        name: string
        phone?: string
        tracking_number?: string
      }
    | ""
  statement_descriptor?: string
  statement_descriptor_suffix?: string
  transfer_data?: {
    amount?: number
  }
  transfer_group?: string
}

export type t_PostPaymentIntentsIntentParamSchema = {
  intent: string
}

export type t_PostPaymentIntentsIntentApplyCustomerBalanceBodySchema = {
  amount?: number
  currency?: string
  expand?: string[]
}

export type t_PostPaymentIntentsIntentApplyCustomerBalanceParamSchema = {
  intent: string
}

export type t_PostPaymentIntentsIntentCancelBodySchema = {
  cancellation_reason?:
    | "abandoned"
    | "duplicate"
    | "fraudulent"
    | "requested_by_customer"
  expand?: string[]
}

export type t_PostPaymentIntentsIntentCancelParamSchema = {
  intent: string
}

export type t_PostPaymentIntentsIntentCaptureBodySchema = {
  amount_to_capture?: number
  application_fee_amount?: number
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  statement_descriptor?: string
  statement_descriptor_suffix?: string
  transfer_data?: {
    amount?: number
  }
}

export type t_PostPaymentIntentsIntentCaptureParamSchema = {
  intent: string
}

export type t_PostPaymentIntentsIntentConfirmBodySchema = {
  capture_method?: "automatic" | "automatic_async" | "manual"
  client_secret?: string
  error_on_requires_action?: boolean
  expand?: string[]
  mandate?: string
  mandate_data?:
    | {
        customer_acceptance: {
          accepted_at?: number
          offline?: EmptyObject
          online?: {
            ip_address: string
            user_agent: string
          }
          type: "offline" | "online"
        }
      }
    | ""
    | {
        customer_acceptance: {
          online: {
            ip_address?: string
            user_agent?: string
          }
          type: "online"
        }
      }
  off_session?: boolean | "one_off" | "recurring"
  payment_method?: string
  payment_method_data?: {
    acss_debit?: {
      account_number: string
      institution_number: string
      transit_number: string
    }
    affirm?: EmptyObject
    afterpay_clearpay?: EmptyObject
    alipay?: EmptyObject
    au_becs_debit?: {
      account_number: string
      bsb_number: string
    }
    bacs_debit?: {
      account_number?: string
      sort_code?: string
    }
    bancontact?: EmptyObject
    billing_details?: {
      address?:
        | {
            city?: string
            country?: string
            line1?: string
            line2?: string
            postal_code?: string
            state?: string
          }
        | ""
      email?: string | ""
      name?: string | ""
      phone?: string | ""
    }
    blik?: EmptyObject
    boleto?: {
      tax_id: string
    }
    cashapp?: EmptyObject
    customer_balance?: EmptyObject
    eps?: {
      bank?:
        | "arzte_und_apotheker_bank"
        | "austrian_anadi_bank_ag"
        | "bank_austria"
        | "bankhaus_carl_spangler"
        | "bankhaus_schelhammer_und_schattera_ag"
        | "bawag_psk_ag"
        | "bks_bank_ag"
        | "brull_kallmus_bank_ag"
        | "btv_vier_lander_bank"
        | "capital_bank_grawe_gruppe_ag"
        | "deutsche_bank_ag"
        | "dolomitenbank"
        | "easybank_ag"
        | "erste_bank_und_sparkassen"
        | "hypo_alpeadriabank_international_ag"
        | "hypo_bank_burgenland_aktiengesellschaft"
        | "hypo_noe_lb_fur_niederosterreich_u_wien"
        | "hypo_oberosterreich_salzburg_steiermark"
        | "hypo_tirol_bank_ag"
        | "hypo_vorarlberg_bank_ag"
        | "marchfelder_bank"
        | "oberbank_ag"
        | "raiffeisen_bankengruppe_osterreich"
        | "schoellerbank_ag"
        | "sparda_bank_wien"
        | "volksbank_gruppe"
        | "volkskreditbank_ag"
        | "vr_bank_braunau"
    }
    fpx?: {
      bank:
        | "affin_bank"
        | "agrobank"
        | "alliance_bank"
        | "ambank"
        | "bank_islam"
        | "bank_muamalat"
        | "bank_of_china"
        | "bank_rakyat"
        | "bsn"
        | "cimb"
        | "deutsche_bank"
        | "hong_leong_bank"
        | "hsbc"
        | "kfh"
        | "maybank2e"
        | "maybank2u"
        | "ocbc"
        | "pb_enterprise"
        | "public_bank"
        | "rhb"
        | "standard_chartered"
        | "uob"
    }
    giropay?: EmptyObject
    grabpay?: EmptyObject
    ideal?: {
      bank?:
        | "abn_amro"
        | "asn_bank"
        | "bunq"
        | "handelsbanken"
        | "ing"
        | "knab"
        | "moneyou"
        | "n26"
        | "rabobank"
        | "regiobank"
        | "revolut"
        | "sns_bank"
        | "triodos_bank"
        | "van_lanschot"
        | "yoursafe"
    }
    interac_present?: EmptyObject
    klarna?: {
      dob?: {
        day: number
        month: number
        year: number
      }
    }
    konbini?: EmptyObject
    link?: EmptyObject
    metadata?: {
      [key: string]: string
    }
    oxxo?: EmptyObject
    p24?: {
      bank?:
        | "alior_bank"
        | "bank_millennium"
        | "bank_nowy_bfg_sa"
        | "bank_pekao_sa"
        | "banki_spbdzielcze"
        | "blik"
        | "bnp_paribas"
        | "boz"
        | "citi_handlowy"
        | "credit_agricole"
        | "envelobank"
        | "etransfer_pocztowy24"
        | "getin_bank"
        | "ideabank"
        | "ing"
        | "inteligo"
        | "mbank_mtransfer"
        | "nest_przelew"
        | "noble_pay"
        | "pbac_z_ipko"
        | "plus_bank"
        | "santander_przelew24"
        | "tmobile_usbugi_bankowe"
        | "toyota_bank"
        | "volkswagen_bank"
    }
    paynow?: EmptyObject
    paypal?: EmptyObject
    pix?: EmptyObject
    promptpay?: EmptyObject
    radar_options?: {
      session?: string
    }
    sepa_debit?: {
      iban: string
    }
    sofort?: {
      country: "AT" | "BE" | "DE" | "ES" | "IT" | "NL"
    }
    type:
      | "acss_debit"
      | "affirm"
      | "afterpay_clearpay"
      | "alipay"
      | "au_becs_debit"
      | "bacs_debit"
      | "bancontact"
      | "blik"
      | "boleto"
      | "cashapp"
      | "customer_balance"
      | "eps"
      | "fpx"
      | "giropay"
      | "grabpay"
      | "ideal"
      | "klarna"
      | "konbini"
      | "link"
      | "oxxo"
      | "p24"
      | "paynow"
      | "paypal"
      | "pix"
      | "promptpay"
      | "sepa_debit"
      | "sofort"
      | "us_bank_account"
      | "wechat_pay"
      | "zip"
    us_bank_account?: {
      account_holder_type?: "company" | "individual"
      account_number?: string
      account_type?: "checking" | "savings"
      financial_connections_account?: string
      routing_number?: string
    }
    wechat_pay?: EmptyObject
    zip?: EmptyObject
  }
  payment_method_options?: {
    acss_debit?:
      | {
          mandate_options?: {
            custom_mandate_url?: string | ""
            interval_description?: string
            payment_schedule?: "combined" | "interval" | "sporadic"
            transaction_type?: "business" | "personal"
          }
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
          verification_method?: "automatic" | "instant" | "microdeposits"
        }
      | ""
    affirm?:
      | {
          capture_method?: "" | "manual"
          preferred_locale?: string
          setup_future_usage?: "none"
        }
      | ""
    afterpay_clearpay?:
      | {
          capture_method?: "" | "manual"
          reference?: string
          setup_future_usage?: "none"
        }
      | ""
    alipay?:
      | {
          setup_future_usage?: "" | "none" | "off_session"
        }
      | ""
    au_becs_debit?:
      | {
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
        }
      | ""
    bacs_debit?:
      | {
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
        }
      | ""
    bancontact?:
      | {
          preferred_language?: "de" | "en" | "fr" | "nl"
          setup_future_usage?: "" | "none" | "off_session"
        }
      | ""
    blik?:
      | {
          code?: string
        }
      | ""
    boleto?:
      | {
          expires_after_days?: number
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
        }
      | ""
    card?:
      | {
          capture_method?: "" | "manual"
          cvc_token?: string
          installments?: {
            enabled?: boolean
            plan?:
              | {
                  count: number
                  interval: "month"
                  type: "fixed_count"
                }
              | ""
          }
          mandate_options?: {
            amount: number
            amount_type: "fixed" | "maximum"
            description?: string
            end_date?: number
            interval: "day" | "month" | "sporadic" | "week" | "year"
            interval_count?: number
            reference: string
            start_date: number
            supported_types?: "india"[]
          }
          network?:
            | "amex"
            | "cartes_bancaires"
            | "diners"
            | "discover"
            | "eftpos_au"
            | "interac"
            | "jcb"
            | "mastercard"
            | "unionpay"
            | "unknown"
            | "visa"
          request_three_d_secure?: "any" | "automatic"
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
          statement_descriptor_suffix_kana?: string | ""
          statement_descriptor_suffix_kanji?: string | ""
        }
      | ""
    card_present?:
      | {
          request_extended_authorization?: boolean
          request_incremental_authorization_support?: boolean
        }
      | ""
    cashapp?:
      | {
          capture_method?: "" | "manual"
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
        }
      | ""
    customer_balance?:
      | {
          bank_transfer?: {
            eu_bank_transfer?: {
              country: string
            }
            requested_address_types?: (
              | "aba"
              | "iban"
              | "sepa"
              | "sort_code"
              | "spei"
              | "swift"
              | "zengin"
            )[]
            type:
              | "eu_bank_transfer"
              | "gb_bank_transfer"
              | "jp_bank_transfer"
              | "mx_bank_transfer"
              | "us_bank_transfer"
          }
          funding_type?: "bank_transfer"
          setup_future_usage?: "none"
        }
      | ""
    eps?:
      | {
          setup_future_usage?: "none"
        }
      | ""
    fpx?:
      | {
          setup_future_usage?: "none"
        }
      | ""
    giropay?:
      | {
          setup_future_usage?: "none"
        }
      | ""
    grabpay?:
      | {
          setup_future_usage?: "none"
        }
      | ""
    ideal?:
      | {
          setup_future_usage?: "" | "none" | "off_session"
        }
      | ""
    interac_present?: EmptyObject | ""
    klarna?:
      | {
          capture_method?: "" | "manual"
          preferred_locale?:
            | "cs-CZ"
            | "da-DK"
            | "de-AT"
            | "de-CH"
            | "de-DE"
            | "el-GR"
            | "en-AT"
            | "en-AU"
            | "en-BE"
            | "en-CA"
            | "en-CH"
            | "en-CZ"
            | "en-DE"
            | "en-DK"
            | "en-ES"
            | "en-FI"
            | "en-FR"
            | "en-GB"
            | "en-GR"
            | "en-IE"
            | "en-IT"
            | "en-NL"
            | "en-NO"
            | "en-NZ"
            | "en-PL"
            | "en-PT"
            | "en-SE"
            | "en-US"
            | "es-ES"
            | "es-US"
            | "fi-FI"
            | "fr-BE"
            | "fr-CA"
            | "fr-CH"
            | "fr-FR"
            | "it-CH"
            | "it-IT"
            | "nb-NO"
            | "nl-BE"
            | "nl-NL"
            | "pl-PL"
            | "pt-PT"
            | "sv-FI"
            | "sv-SE"
          setup_future_usage?: "none"
        }
      | ""
    konbini?:
      | {
          confirmation_number?: string | ""
          expires_after_days?: number | ""
          expires_at?: number | ""
          product_description?: string | ""
          setup_future_usage?: "none"
        }
      | ""
    link?:
      | {
          capture_method?: "" | "manual"
          setup_future_usage?: "" | "none" | "off_session"
        }
      | ""
    oxxo?:
      | {
          expires_after_days?: number
          setup_future_usage?: "none"
        }
      | ""
    p24?:
      | {
          setup_future_usage?: "none"
          tos_shown_and_accepted?: boolean
        }
      | ""
    paynow?:
      | {
          setup_future_usage?: "none"
        }
      | ""
    paypal?:
      | {
          capture_method?: "" | "manual"
          preferred_locale?:
            | "cs-CZ"
            | "da-DK"
            | "de-AT"
            | "de-DE"
            | "de-LU"
            | "el-GR"
            | "en-GB"
            | "en-US"
            | "es-ES"
            | "fi-FI"
            | "fr-BE"
            | "fr-FR"
            | "fr-LU"
            | "hu-HU"
            | "it-IT"
            | "nl-BE"
            | "nl-NL"
            | "pl-PL"
            | "pt-PT"
            | "sk-SK"
            | "sv-SE"
          reference?: string
          risk_correlation_id?: string
          setup_future_usage?: "" | "none" | "off_session"
        }
      | ""
    pix?:
      | {
          expires_after_seconds?: number
          expires_at?: number
          setup_future_usage?: "none"
        }
      | ""
    promptpay?:
      | {
          setup_future_usage?: "none"
        }
      | ""
    sepa_debit?:
      | {
          mandate_options?: EmptyObject
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
        }
      | ""
    sofort?:
      | {
          preferred_language?:
            | ""
            | "de"
            | "en"
            | "es"
            | "fr"
            | "it"
            | "nl"
            | "pl"
          setup_future_usage?: "" | "none" | "off_session"
        }
      | ""
    us_bank_account?:
      | {
          financial_connections?: {
            permissions?: (
              | "balances"
              | "ownership"
              | "payment_method"
              | "transactions"
            )[]
            prefetch?: "balances"[]
            return_url?: string
          }
          networks?: {
            requested?: ("ach" | "us_domestic_wire")[]
          }
          preferred_settlement_speed?: "" | "fastest" | "standard"
          setup_future_usage?: "" | "none" | "off_session" | "on_session"
          verification_method?: "automatic" | "instant" | "microdeposits"
        }
      | ""
    wechat_pay?:
      | {
          app_id?: string
          client: "android" | "ios" | "web"
          setup_future_usage?: "none"
        }
      | ""
    zip?:
      | {
          setup_future_usage?: "none"
        }
      | ""
  }
  payment_method_types?: string[]
  radar_options?: {
    session?: string
  }
  receipt_email?: string | ""
  return_url?: string
  setup_future_usage?: "" | "off_session" | "on_session"
  shipping?:
    | {
        address: {
          city?: string
          country?: string
          line1?: string
          line2?: string
          postal_code?: string
          state?: string
        }
        carrier?: string
        name: string
        phone?: string
        tracking_number?: string
      }
    | ""
  use_stripe_sdk?: boolean
}

export type t_PostPaymentIntentsIntentConfirmParamSchema = {
  intent: string
}

export type t_PostPaymentIntentsIntentIncrementAuthorizationBodySchema = {
  amount: number
  application_fee_amount?: number
  description?: string
  expand?: string[]
  metadata?: {
    [key: string]: string
  }
  statement_descriptor?: string
  transfer_data?: {
    amount?: number
  }
}

export type t_PostPaymentIntentsIntentIncrementAuthorizationParamSchema = {
  intent: string
}

export type t_PostPaymentIntentsIntentVerifyMicrodepositsBodySchema = {
  amounts?: number[]
  client_secret?: string
  descriptor_code?: string
  expand?: string[]
}

export type t_PostPaymentIntentsIntentVerifyMicrodepositsParamSchema = {
  intent: string
}

export type t_PostPaymentLinksBodySchema = {
  after_completion?: {
    hosted_confirmation?: {
      custom_message?: string
    }
    redirect?: {
      url: string
    }
    type: "hosted_confirmation" | "redirect"
  }
  allow_promotion_codes?: boolean
  application_fee_amount?: number
  application_fee_percent?: number
  automatic_tax?: {
    enabled: boolean
  }
  billing_address_collection?: "auto" | "required"
  consent_collection?: {
    promotions?: "auto" | "none"
    terms_of_service?: "none" | "required"
  }
  currency?: string
  custom_fields?: {
    dropdown?: {
      options: {
        label: string
        value: string
      }[]
    }
    key: string
    label: {
      custom: string
      type: "custom"
    }
    numeric?: {
      maximum_length?: number
      minimum_length?: number
    }
    optional?: boolean
    text?: {
      maximum_length?: number
      minimum_length?: number
    }
    type: "dropdown" | "numeric" | "text"
  }[]
  custom_text?: {
    shipping_address?:
      | {
          message: string
        }
      | ""
    submit?:
      | {
          message: string
        }
      | ""
    terms_of_service_acceptance?:
      | {
          message: string
        }
      | ""
  }
  customer_creation?: "always" | "if_required"
  expand?: string[]
  invoice_creation?: {
    enabled: boolean
    invoice_data?: {
      account_tax_ids?: string[] | ""
      custom_fields?:
        | {
            name: string
            value: string
          }[]
        | ""
      description?: string
      footer?: string
      metadata?:
        | {
            [key: string]: string
          }
        | ""
      rendering_options?:
        | {
            amount_tax_display?: "" | "exclude_tax" | "include_inclusive_tax"
          }
        | ""
    }
  }
  line_items: {
    adjustable_quantity?: {
      enabled: boolean
      maximum?: number
      minimum?: number
    }
    price: string
    quantity: number
  }[]
  metadata?: {
    [key: string]: string
  }
  on_behalf_of?: string
  payment_intent_data?: {
    capture_method?: "automatic" | "automatic_async" | "manual"
    setup_future_usage?: "off_session" | "on_session"
  }
  payment_method_collection?: "always" | "if_required"
  payment_method_types?: (
    | "affirm"
    | "afterpay_clearpay"
    | "alipay"
    | "au_becs_debit"
    | "bacs_debit"
    | "bancontact"
    | "blik"
    | "boleto"
    | "card"
    | "cashapp"
    | "eps"
    | "fpx"
    | "giropay"
    | "grabpay"
    | "ideal"
    | "klarna"
    | "konbini"
    | "link"
    | "oxxo"
    | "p24"
    | "paynow"
    | "paypal"
    | "pix"
    | "promptpay"
    | "sepa_debit"
    | "sofort"
    | "us_bank_account"
    | "wechat_pay"
  )[]
  phone_number_collection?: {
    enabled: boolean
  }
  shipping_address_collection?: {
    allowed_countries: (
      | "AC"
      | "AD"
      | "AE"
      | "AF"
      | "AG"
      | "AI"
      | "AL"
      | "AM"
      | "AO"
      | "AQ"
      | "AR"
      | "AT"
      | "AU"
      | "AW"
      | "AX"
      | "AZ"
      | "BA"
      | "BB"
      | "BD"
      | "BE"
      | "BF"
      | "BG"
      | "BH"
      | "BI"
      | "BJ"
      | "BL"
      | "BM"
      | "BN"
      | "BO"
      | "BQ"
      | "BR"
      | "BS"
      | "BT"
      | "BV"
      | "BW"
      | "BY"
      | "BZ"
      | "CA"
      | "CD"
      | "CF"
      | "CG"
      | "CH"
      | "CI"
      | "CK"
      | "CL"
      | "CM"
      | "CN"
      | "CO"
      | "CR"
      | "CV"
      | "CW"
      | "CY"
      | "CZ"
      | "DE"
      | "DJ"
      | "DK"
      | "DM"
      | "DO"
      | "DZ"
      | "EC"
      | "EE"
      | "EG"
      | "EH"
      | "ER"
      | "ES"
      | "ET"
      | "FI"
      | "FJ"
      | "FK"
      | "FO"
      | "FR"
      | "GA"
      | "GB"
      | "GD"
      | "GE"
      | "GF"
      | "GG"
      | "GH"
      | "GI"
      | "GL"
      | "GM"
      | "GN"
      | "GP"
      | "GQ"
      | "GR"
      | "GS"
      | "GT"
      | "GU"
      | "GW"
      | "GY"
      | "HK"
      | "HN"
      | "HR"
      | "HT"
      | "HU"
      | "ID"
      | "IE"
      | "IL"
      | "IM"
      | "IN"
      | "IO"
      | "IQ"
      | "IS"
      | "IT"
      | "JE"
      | "JM"
      | "JO"
      | "JP"
      | "KE"
      | "KG"
      | "KH"
      | "KI"
      | "KM"
      | "KN"
      | "KR"
      | "KW"
      | "KY"
      | "KZ"
      | "LA"
      | "LB"
      | "LC"
      | "LI"
      | "LK"
      | "LR"
      | "LS"
      | "LT"
      | "LU"
      | "LV"
      | "LY"
      | "MA"
      | "MC"
      | "MD"
      | "ME"
      | "MF"
      | "MG"
      | "MK"
      | "ML"
      | "MM"
      | "MN"
      | "MO"
      | "MQ"
      | "MR"
      | "MS"
      | "MT"
      | "MU"
      | "MV"
      | "MW"
      | "MX"
      | "MY"
      | "MZ"
      | "NA"
      | "NC"
      | "NE"
      | "NG"
      | "NI"
      | "NL"
      | "NO"
      | "NP"
      | "NR"
      | "NU"
      | "NZ"
      | "OM"
      | "PA"
      | "PE"
      | "PF"
      | "PG"
      | "PH"
      | "PK"
      | "PL"
      | "PM"
      | "PN"
      | "PR"
      | "PS"
      | "PT"
      | "PY"
      | "QA"
      | "RE"
      | "RO"
      | "RS"
      | "RU"
      | "RW"
      | "SA"
      | "SB"
      | "SC"
      | "SE"
      | "SG"
      | "SH"
      | "SI"
      | "SJ"
      | "SK"
      | "SL"
      | "SM"
      | "SN"
      | "SO"
      | "SR"
      | "SS"
      | "ST"
      | "SV"
      | "SX"
      | "SZ"
      | "TA"
      | "TC"
      | "TD"
      | "TF"
      | "TG"
      | "TH"
      | "TJ"
      | "TK"
      | "TL"
      | "TM"
      | "TN"
      | "TO"
      | "TR"
      | "TT"
      | "TV"
      | "TW"
      | "TZ"
      | "UA"
      | "UG"
      | "US"
      | "UY"
      | "UZ"
      | "VA"
      | "VC"
      | "VE"
      | "VG"
      | "VN"
      | "VU"
      | "WF"
      | "WS"
      | "XK"
      | "YE"
      | "YT"
      | "ZA"
      | "ZM"
      | "ZW"
      | "ZZ"
    )[]
  }
  shipping_options?: {
    shipping_rate?: string
  }[]
  submit_type?: "auto" | "book" | "donate" | "pay"
  subscription_data?: {
    description?: string
    trial_period_days?: number
  }
  tax_id_collection?: {
    enabled: boolean
  }
  transfer_data?: {
    amount?: number
    destination: string
  }
}

export type t_PostPaymentLinksPaymentLinkBodySchema = {
  active?: boolean
  after_completion?: {
    hosted_confirmation?: {
      custom_message?: string
    }
    redirect?: {
      url: string
    }
    type: "hosted_confirmation" | "redirect"
  }
  allow_promotion_codes?: boolean
  automatic_tax?: {
    enabled: boolean
  }
  billing_address_collection?: "auto" | "required"
  custom_fields?:
    | {
        dropdown?: {
          options: {
            label: string
            value: string
          }[]
        }
        key: string
        label: {
          custom: string
          type: "custom"
        }
        numeric?: {
          maximum_length?: number
          minimum_length?: number
        }
        optional?: boolean
        text?: {
          maximum_length?: number
          minimum_length?: number
        }
        type: "dropdown" | "numeric" | "text"
      }[]
    | ""
  custom_text?: {
    shipping_address?:
      | {
          message: string
        }
      | ""
    submit?:
      | {
          message: string
        }
      | ""
    terms_of_service_acceptance?:
      | {
          message: string
        }
      | ""
  }
  customer_creation?: "always" | "if_required"
  expand?: string[]
  invoice_creation?: {
    enabled: boolean
    invoice_data?: {
      account_tax_ids?: string[] | ""
      custom_fields?:
        | {
            name: string
            value: string
          }[]
        | ""
      description?: string
      footer?: string
      metadata?:
        | {
            [key: string]: string
          }
        | ""
      rendering_options?:
        | {
            amount_tax_display?: "" | "exclude_tax" | "include_inclusive_tax"
          }
        | ""
    }
  }
  line_items?: {
    adjustable_quantity?: {
      enabled: boolean
      maximum?: number
      minimum?: number
    }
    id: string
    quantity?: number
  }[]
  metadata?: {
    [key: string]: string
  }
  payment_method_collection?: "always" | "if_required"
  payment_method_types?:
    | (
        | "affirm"
        | "afterpay_clearpay"
        | "alipay"
        | "au_becs_debit"
        | "bacs_debit"
        | "bancontact"
        | "blik"
        | "boleto"
        | "card"
        | "cashapp"
        | "eps"
        | "fpx"
        | "giropay"
        | "grabpay"
        | "ideal"
        | "klarna"
        | "konbini"
        | "link"
        | "oxxo"
        | "p24"
        | "paynow"
        | "paypal"
        | "pix"
        | "promptpay"
        | "sepa_debit"
        | "sofort"
        | "us_bank_account"
        | "wechat_pay"
      )[]
    | ""
  shipping_address_collection?:
    | {
        allowed_countries: (
          | "AC"
          | "AD"
          | "AE"
          | "AF"
          | "AG"
          | "AI"
          | "AL"
          | "AM"
          | "AO"
          | "AQ"
          | "AR"
          | "AT"
          | "AU"
          | "AW"
          | "AX"
          | "AZ"
          | "BA"
          | "BB"
          | "BD"
          | "BE"
          | "BF"
          | "BG"
          | "BH"
          | "BI"
          | "BJ"
          | "BL"
          | "BM"
          | "BN"
          | "BO"
          | "BQ"
          | "BR"
          | "BS"
          | "BT"
          | "BV"
          | "BW"
          | "BY"
          | "BZ"
          | "CA"
          | "CD"
          | "CF"
          | "CG"
          | "CH"
          | "CI"
          | "CK"
          | "CL"
          | "CM"
          | "CN"
          | "CO"
          | "CR"
          | "CV"
          | "CW"
          | "CY"
          | "CZ"
          | "DE"
          | "DJ"
          | "DK"
          | "DM"
          | "DO"
          | "DZ"
          | "EC"
          | "EE"
          | "EG"
          | "EH"
          | "ER"
          | "ES"
          | "ET"
          | "FI"
          | "FJ"
          | "FK"
          | "FO"
          | "FR"
          | "GA"
          | "GB"
          | "GD"
          | "GE"
          | "GF"
          | "GG"
          | "GH"
          | "GI"
          | "GL"
          | "GM"
          | "GN"
          | "GP"
          | "GQ"
          | "GR"
          | "GS"
          | "GT"
          | "GU"
          | "GW"
          | "GY"
          | "HK"
          | "HN"
          | "HR"
          | "HT"
          | "HU"
          | "ID"
          | "IE"
          | "IL"
          | "IM"
          | "IN"
          | "IO"
          | "IQ"
          | "IS"
          | "IT"
          | "JE"
          | "JM"
          | "JO"
          | "JP"
          | "KE"
          | "KG"
          | "KH"
          | "KI"
          | "KM"
          | "KN"
          | "KR"
          | "KW"
          | "KY"
          | "KZ"
          | "LA"
          | "LB"
          | "LC"
          | "LI"
          | "LK"
          | "LR"
          | "LS"
          | "LT"
          | "LU"
          | "LV"
          | "LY"
          | "MA"
          | "MC"
          | "MD"
          | "ME"
          | "MF"
          | "MG"
          | "MK"
          | "ML"
          | "MM"
          | "MN"
          | "MO"
          | "MQ"
          | "MR"
          | "MS"
          | "MT"
          | "MU"
          | "MV"
          | "MW"
          | "MX"
          | "MY"
          | "MZ"
          | "NA"
          | "NC"
          | "NE"
          | "NG"
          | "NI"
          | "NL"
          | "NO"
          | "NP"
          | "NR"
          | "NU"
          | "NZ"
          | "OM"
          | "PA"
          | "PE"
          | "PF"
          | "PG"
          | "PH"
          | "PK"
          | "PL"
          | "PM"
          | "PN"
          | "PR"
          | "PS"
          | "PT"
          | "PY"
          | "QA"
          | "RE"
          | "RO"
          | "RS"
          | "RU"
          | "RW"
          | "SA"
          | "SB"
          | "SC"
          | "SE"
          | "SG"
          | "SH"
          | "SI"
          | "SJ"
          | "SK"
          | "SL"
          | "SM"
          | "SN"
          | "SO"
          | "SR"
          | "SS"
          | "ST"
          | "SV"
          | "SX"
          | "SZ"
          | "TA"
          | "TC"
          | "TD"
          | "TF"
          | "TG"
          | "TH"
          | "TJ"
          | "TK"
          | "TL"
          | "TM"
          | "TN"
          | "TO"
          | "TR"
          | "TT"
          | "TV"
          | "TW"
          | "TZ"
          | "UA"
          | "UG"
          | "US"
          | "UY"
          | "UZ"
          | "VA"
          | "VC"
          | "VE"
          | "VG"
          | "VN"
          | "VU"
          | "WF"
          | "WS"
          | "XK"
          | "YE"
          | "YT"
          | "ZA"
          | "ZM"
          | "ZW"
          | "ZZ"
        )[]
      }
    | ""
}

export type t_PostPaymentLinksPaymentLinkParamSchema = {
  payment_link: string
}

export type t_PostPaymentMethodConfigurationsBodySchema = {
  acss_debit?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  affirm?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  afterpay_clearpay?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  alipay?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  apple_pay?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  apple_pay_later?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  au_becs_debit?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  bacs_debit?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  bancontact?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  blik?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  boleto?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  card?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  cartes_bancaires?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  cashapp?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  eps?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  expand?: string[]
  fpx?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  giropay?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  google_pay?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  grabpay?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  ideal?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  jcb?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  klarna?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  konbini?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  link?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  name?: string
  oxxo?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  p24?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  parent?: string
  paynow?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  paypal?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  promptpay?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  sepa_debit?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  sofort?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  us_bank_account?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  wechat_pay?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
}

export type t_PostPaymentMethodConfigurationsConfigurationBodySchema = {
  acss_debit?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  active?: boolean
  affirm?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  afterpay_clearpay?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  alipay?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  apple_pay?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  apple_pay_later?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  au_becs_debit?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  bacs_debit?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  bancontact?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  blik?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  boleto?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  card?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  cartes_bancaires?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  cashapp?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  eps?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  expand?: string[]
  fpx?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  giropay?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  google_pay?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  grabpay?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  ideal?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  jcb?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  klarna?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  konbini?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  link?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  name?: string
  oxxo?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  p24?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  paynow?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  paypal?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  promptpay?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  sepa_debit?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  sofort?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  us_bank_account?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
  wechat_pay?: {
    display_preference?: {
      preference?: "none" | "off" | "on"
    }
  }
}

export type t_PostPaymentMethodConfigurationsConfigurationParamSchema = {
  configuration: string
}

export type t_PostPaymentMethodDomainsBodySchema = {
  domain_name: string
  enabled?: boolean
  expand?: string[]
}

export type t_PostPaymentMethodDomainsPaymentMethodDomainBodySchema = {
  enabled?: boolean
  expand?: string[]
}

export type t_PostPaymentMethodDomainsPaymentMethodDomainParamSchema = {
  payment_method_domain: string
}

export type t_PostPaymentMethodDomainsPaymentMethodDomainValidateBodySchema = {
  expand?: string[]
}

export type t_PostPaymentMethodDomainsPaymentMethodDomainValidateParamSchema = {
  payment_method_domain: string
}

export type t_PostPaymentMethodsBodySchema = {
  acss_debit?: {
    account_number: string
    institution_number: string
    transit_number: string
  }
  affirm?: EmptyObject
  afterpay_clearpay?: EmptyObject
  alipay?: EmptyObject
  au_becs_debit?: {
    account_number: string
    bsb_number: string
  }
  bacs_debit?: {
    account_number?: string
    sort_code?: string
  }
  bancontact?: EmptyObject
  billing_details?: {
    address?:
      | {
          city?: string
          country?: string
          line1?: string
          line2?: string
          postal_code?: string
          state?: string
        }
      | ""
    email?: string | ""
    name?: string | ""
    phone?: string | ""
  }
  blik?: EmptyObject
  boleto?: {
    tax_id: string
  }
  card?:
    | {
        cvc?: string
        exp_month: number
        exp_year: number
        number: string
      }
    | {
        token: string
      }
  cashapp?: EmptyObject
  customer?: string
  customer_balance?: EmptyObject
  eps?: {
    bank?:
      | "arzte_und_apotheker_bank"
      | "austrian_anadi_bank_ag"
      | "bank_austria"
      | "bankhaus_carl_spangler"
      | "bankhaus_schelhammer_und_schattera_ag"
      | "bawag_psk_ag"
      | "bks_bank_ag"
      | "brull_kallmus_bank_ag"
      | "btv_vier_lander_bank"
      | "capital_bank_grawe_gruppe_ag"
      | "deutsche_bank_ag"
      | "dolomitenbank"
      | "easybank_ag"
      | "erste_bank_und_sparkassen"
      | "hypo_alpeadriabank_international_ag"
      | "hypo_bank_burgenland_aktiengesellschaft"
      | "hypo_noe_lb_fur_niederosterreich_u_wien"
      | "hypo_oberosterreich_salzburg_steiermark"
      | "hypo_tirol_bank_ag"
      | "hypo_vorarlberg_bank_ag"
      | "marchfelder_bank"
      | "oberbank_ag"
      | "raiffeisen_bankengruppe_osterreich"
      | "schoellerbank_ag"
      | "sparda_bank_wien"
      | "volksbank_gruppe"
      | "volkskreditbank_ag"
      | "vr_bank_braunau"
  }
  expand?: string[]
  fpx?: {
    bank:
      | "affin_bank"
      | "agrobank"
      | "alliance_bank"
      | "ambank"
      | "bank_islam"
      | "bank_muamalat"
      | "bank_of_china"
      | "bank_rakyat"
      | "bsn"
      | "cimb"
      | "deutsche_bank"
      | "hong_leong_bank"
      | "hsbc"
      | "kfh"
      | "maybank2e"
      | "maybank2u"
      | "ocbc"
      | "pb_enterprise"
      | "public_bank"
      | "rhb"
      | "standard_chartered"
      | "uob"
  }
  giropay?: EmptyObject
  grabpay?: EmptyObject
  ideal?: {
    bank?:
      | "abn_amro"
      | "asn_bank"
      | "bunq"
      | "handelsbanken"
      | "ing"
      | "knab"
      | "moneyou"
      | "n26"
      | "rabobank"
      | "regiobank"
      | "revolut"
      | "sns_bank"
      | "triodos_bank"
      | "van_lanschot"
      | "yoursafe"
  }
  interac_present?: EmptyObject
  klarna?: {
    dob?: {
      day: number
      month: number
      year: number
    }
  }
  konbini?: EmptyObject
  link?: EmptyObject
  metadata?: {
    [key: string]: string
  }
  oxxo?: EmptyObject
  p24?: {
    bank?:
      | "alior_bank"
      | "bank_millennium"
      | "bank_nowy_bfg_sa"
      | "bank_pekao_sa"
      | "banki_spbdzielcze"
      | "blik"
      | "bnp_paribas"
      | "boz"
      | "citi_handlowy"
      | "credit_agricole"
      | "envelobank"
      | "etransfer_pocztowy24"
      | "getin_bank"
      | "ideabank"
      | "ing"
      | "inteligo"
      | "mbank_mtransfer"
      | "nest_przelew"
      | "noble_pay"
      | "pbac_z_ipko"
      | "plus_bank"
      | "santander_przelew24"
      | "tmobile_usbugi_bankowe"
      | "toyota_bank"
      | "volkswagen_bank"
  }
  payment_method?: string
  paynow?: EmptyObject
  paypal?: EmptyObject
  pix?: EmptyObject
  promptpay?: EmptyObject
  radar_options?: {
    session?: string
  }
  sepa_debit?: {
    iban: string
  }
  sofort?: {
    country: "AT" | "BE" | "DE" | "ES" | "IT" | "NL"
  }
  type?:
    | "acss_debit"
    | "affirm"
    | "afterpay_clearpay"
    | "alipay"
    | "au_becs_debit"
    | "bacs_debit"
    | "bancontact"
    | "blik"
    | "boleto"
    | "card"
    | "cashapp"
    | "customer_balance"
    | "eps"
    | "fpx"
    | "giropay"
    | "grabpay"
    | "ideal"
    | "klarna"
    | "konbini"
    | "link"
    | "oxxo"
    | "p24"
    | "paynow"
    | "paypal"
    | "pix"
    | "promptpay"
    | "sepa_debit"
    | "sofort"
    | "us_bank_account"
    | "wechat_pay"
    | "zip"
  us_bank_account?: {
    account_holder_type?: "company" | "individual"
    account_number?: string
    account_type?: "checking" | "savings"
    financial_connections_account?: string
    routing_number?: string
  }
  wechat_pay?: EmptyObject
  zip?: EmptyObject
}

export type t_PostPaymentMethodsPaymentMethodBodySchema = {
  billing_details?: {
    address?:
      | {
          city?: string
          country?: string
          line1?: string
          line2?: string
          postal_code?: string
          state?: string
        }
      | ""
    email?: string | ""
    name?: string | ""
    phone?: string | ""
  }
  card?: {
    exp_month?: number
    exp_year?: number
  }
  expand?: string[]
  link?: EmptyObject
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  us_bank_account?: {
    account_holder_type?: "company" | "individual"
  }
}

export type t_PostPaymentMethodsPaymentMethodParamSchema = {
  payment_method: string
}

export type t_PostPaymentMethodsPaymentMethodAttachBodySchema = {
  customer: string
  expand?: string[]
}

export type t_PostPaymentMethodsPaymentMethodAttachParamSchema = {
  payment_method: string
}

export type t_PostPaymentMethodsPaymentMethodDetachBodySchema = {
  expand?: string[]
}

export type t_PostPaymentMethodsPaymentMethodDetachParamSchema = {
  payment_method: string
}

export type t_PostPayoutsBodySchema = {
  amount: number
  currency: string
  description?: string
  destination?: string
  expand?: string[]
  metadata?: {
    [key: string]: string
  }
  method?: "instant" | "standard"
  source_type?: "bank_account" | "card" | "fpx"
  statement_descriptor?: string
}

export type t_PostPayoutsPayoutBodySchema = {
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostPayoutsPayoutParamSchema = {
  payout: string
}

export type t_PostPayoutsPayoutCancelBodySchema = {
  expand?: string[]
}

export type t_PostPayoutsPayoutCancelParamSchema = {
  payout: string
}

export type t_PostPayoutsPayoutReverseBodySchema = {
  expand?: string[]
  metadata?: {
    [key: string]: string
  }
}

export type t_PostPayoutsPayoutReverseParamSchema = {
  payout: string
}

export type t_PostPlansBodySchema = {
  active?: boolean
  aggregate_usage?: "last_during_period" | "last_ever" | "max" | "sum"
  amount?: number
  amount_decimal?: string
  billing_scheme?: "per_unit" | "tiered"
  currency: string
  expand?: string[]
  id?: string
  interval: "day" | "month" | "week" | "year"
  interval_count?: number
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  nickname?: string
  product?:
    | {
        active?: boolean
        id?: string
        metadata?: {
          [key: string]: string
        }
        name: string
        statement_descriptor?: string
        tax_code?: string
        unit_label?: string
      }
    | string
  tiers?: {
    flat_amount?: number
    flat_amount_decimal?: string
    unit_amount?: number
    unit_amount_decimal?: string
    up_to: "inf" | number
  }[]
  tiers_mode?: "graduated" | "volume"
  transform_usage?: {
    divide_by: number
    round: "down" | "up"
  }
  trial_period_days?: number
  usage_type?: "licensed" | "metered"
}

export type t_PostPlansPlanBodySchema = {
  active?: boolean
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  nickname?: string
  product?: string
  trial_period_days?: number
}

export type t_PostPlansPlanParamSchema = {
  plan: string
}

export type t_PostPricesBodySchema = {
  active?: boolean
  billing_scheme?: "per_unit" | "tiered"
  currency: string
  currency_options?: {
    [key: string]: {
      custom_unit_amount?: {
        enabled: boolean
        maximum?: number
        minimum?: number
        preset?: number
      }
      tax_behavior?: "exclusive" | "inclusive" | "unspecified"
      tiers?: {
        flat_amount?: number
        flat_amount_decimal?: string
        unit_amount?: number
        unit_amount_decimal?: string
        up_to: "inf" | number
      }[]
      unit_amount?: number
      unit_amount_decimal?: string
    }
  }
  custom_unit_amount?: {
    enabled: boolean
    maximum?: number
    minimum?: number
    preset?: number
  }
  expand?: string[]
  lookup_key?: string
  metadata?: {
    [key: string]: string
  }
  nickname?: string
  product?: string
  product_data?: {
    active?: boolean
    id?: string
    metadata?: {
      [key: string]: string
    }
    name: string
    statement_descriptor?: string
    tax_code?: string
    unit_label?: string
  }
  recurring?: {
    aggregate_usage?: "last_during_period" | "last_ever" | "max" | "sum"
    interval: "day" | "month" | "week" | "year"
    interval_count?: number
    usage_type?: "licensed" | "metered"
  }
  tax_behavior?: "exclusive" | "inclusive" | "unspecified"
  tiers?: {
    flat_amount?: number
    flat_amount_decimal?: string
    unit_amount?: number
    unit_amount_decimal?: string
    up_to: "inf" | number
  }[]
  tiers_mode?: "graduated" | "volume"
  transfer_lookup_key?: boolean
  transform_quantity?: {
    divide_by: number
    round: "down" | "up"
  }
  unit_amount?: number
  unit_amount_decimal?: string
}

export type t_PostPricesPriceBodySchema = {
  active?: boolean
  currency_options?:
    | {
        [key: string]: {
          custom_unit_amount?: {
            enabled: boolean
            maximum?: number
            minimum?: number
            preset?: number
          }
          tax_behavior?: "exclusive" | "inclusive" | "unspecified"
          tiers?: {
            flat_amount?: number
            flat_amount_decimal?: string
            unit_amount?: number
            unit_amount_decimal?: string
            up_to: "inf" | number
          }[]
          unit_amount?: number
          unit_amount_decimal?: string
        }
      }
    | ""
  expand?: string[]
  lookup_key?: string
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  nickname?: string
  tax_behavior?: "exclusive" | "inclusive" | "unspecified"
  transfer_lookup_key?: boolean
}

export type t_PostPricesPriceParamSchema = {
  price: string
}

export type t_PostProductsBodySchema = {
  active?: boolean
  default_price_data?: {
    currency: string
    currency_options?: {
      [key: string]: {
        custom_unit_amount?: {
          enabled: boolean
          maximum?: number
          minimum?: number
          preset?: number
        }
        tax_behavior?: "exclusive" | "inclusive" | "unspecified"
        tiers?: {
          flat_amount?: number
          flat_amount_decimal?: string
          unit_amount?: number
          unit_amount_decimal?: string
          up_to: "inf" | number
        }[]
        unit_amount?: number
        unit_amount_decimal?: string
      }
    }
    recurring?: {
      interval: "day" | "month" | "week" | "year"
      interval_count?: number
    }
    tax_behavior?: "exclusive" | "inclusive" | "unspecified"
    unit_amount?: number
    unit_amount_decimal?: string
  }
  description?: string
  expand?: string[]
  features?: {
    name: string
  }[]
  id?: string
  images?: string[]
  metadata?: {
    [key: string]: string
  }
  name: string
  package_dimensions?: {
    height: number
    length: number
    weight: number
    width: number
  }
  shippable?: boolean
  statement_descriptor?: string
  tax_code?: string
  unit_label?: string
  url?: string
}

export type t_PostProductsIdBodySchema = {
  active?: boolean
  default_price?: string
  description?: string | ""
  expand?: string[]
  features?:
    | {
        name: string
      }[]
    | ""
  images?: string[] | ""
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  name?: string
  package_dimensions?:
    | {
        height: number
        length: number
        weight: number
        width: number
      }
    | ""
  shippable?: boolean
  statement_descriptor?: string
  tax_code?: string | ""
  unit_label?: string | ""
  url?: string | ""
}

export type t_PostProductsIdParamSchema = {
  id: string
}

export type t_PostPromotionCodesBodySchema = {
  active?: boolean
  code?: string
  coupon: string
  customer?: string
  expand?: string[]
  expires_at?: number
  max_redemptions?: number
  metadata?: {
    [key: string]: string
  }
  restrictions?: {
    currency_options?: {
      [key: string]: {
        minimum_amount?: number
      }
    }
    first_time_transaction?: boolean
    minimum_amount?: number
    minimum_amount_currency?: string
  }
}

export type t_PostPromotionCodesPromotionCodeBodySchema = {
  active?: boolean
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  restrictions?: {
    currency_options?: {
      [key: string]: {
        minimum_amount?: number
      }
    }
  }
}

export type t_PostPromotionCodesPromotionCodeParamSchema = {
  promotion_code: string
}

export type t_PostQuotesBodySchema = {
  application_fee_amount?: number | ""
  application_fee_percent?: number | ""
  automatic_tax?: {
    enabled: boolean
  }
  collection_method?: "charge_automatically" | "send_invoice"
  customer?: string
  default_tax_rates?: string[] | ""
  description?: string | ""
  discounts?:
    | {
        coupon?: string
        discount?: string
      }[]
    | ""
  expand?: string[]
  expires_at?: number
  footer?: string | ""
  from_quote?: {
    is_revision?: boolean
    quote: string
  }
  header?: string | ""
  invoice_settings?: {
    days_until_due?: number
  }
  line_items?: {
    price?: string
    price_data?: {
      currency: string
      product: string
      recurring?: {
        interval: "day" | "month" | "week" | "year"
        interval_count?: number
      }
      tax_behavior?: "exclusive" | "inclusive" | "unspecified"
      unit_amount?: number
      unit_amount_decimal?: string
    }
    quantity?: number
    tax_rates?: string[] | ""
  }[]
  metadata?: {
    [key: string]: string
  }
  on_behalf_of?: string | ""
  subscription_data?: {
    description?: string
    effective_date?: "current_period_end" | number | ""
    trial_period_days?: number | ""
  }
  test_clock?: string
  transfer_data?:
    | {
        amount?: number
        amount_percent?: number
        destination: string
      }
    | ""
}

export type t_PostQuotesQuoteBodySchema = {
  application_fee_amount?: number | ""
  application_fee_percent?: number | ""
  automatic_tax?: {
    enabled: boolean
  }
  collection_method?: "charge_automatically" | "send_invoice"
  customer?: string
  default_tax_rates?: string[] | ""
  description?: string | ""
  discounts?:
    | {
        coupon?: string
        discount?: string
      }[]
    | ""
  expand?: string[]
  expires_at?: number
  footer?: string | ""
  header?: string | ""
  invoice_settings?: {
    days_until_due?: number
  }
  line_items?: {
    id?: string
    price?: string
    price_data?: {
      currency: string
      product: string
      recurring?: {
        interval: "day" | "month" | "week" | "year"
        interval_count?: number
      }
      tax_behavior?: "exclusive" | "inclusive" | "unspecified"
      unit_amount?: number
      unit_amount_decimal?: string
    }
    quantity?: number
    tax_rates?: string[] | ""
  }[]
  metadata?: {
    [key: string]: string
  }
  on_behalf_of?: string | ""
  subscription_data?: {
    description?: string | ""
    effective_date?: "current_period_end" | number | ""
    trial_period_days?: number | ""
  }
  transfer_data?:
    | {
        amount?: number
        amount_percent?: number
        destination: string
      }
    | ""
}

export type t_PostQuotesQuoteParamSchema = {
  quote: string
}

export type t_PostQuotesQuoteAcceptBodySchema = {
  expand?: string[]
}

export type t_PostQuotesQuoteAcceptParamSchema = {
  quote: string
}

export type t_PostQuotesQuoteCancelBodySchema = {
  expand?: string[]
}

export type t_PostQuotesQuoteCancelParamSchema = {
  quote: string
}

export type t_PostQuotesQuoteFinalizeBodySchema = {
  expand?: string[]
  expires_at?: number
}

export type t_PostQuotesQuoteFinalizeParamSchema = {
  quote: string
}

export type t_PostRadarValueListItemsBodySchema = {
  expand?: string[]
  value: string
  value_list: string
}

export type t_PostRadarValueListsBodySchema = {
  alias: string
  expand?: string[]
  item_type?:
    | "card_bin"
    | "card_fingerprint"
    | "case_sensitive_string"
    | "country"
    | "customer_id"
    | "email"
    | "ip_address"
    | "sepa_debit_fingerprint"
    | "string"
    | "us_bank_account_fingerprint"
  metadata?: {
    [key: string]: string
  }
  name: string
}

export type t_PostRadarValueListsValueListBodySchema = {
  alias?: string
  expand?: string[]
  metadata?: {
    [key: string]: string
  }
  name?: string
}

export type t_PostRadarValueListsValueListParamSchema = {
  value_list: string
}

export type t_PostRefundsBodySchema = {
  amount?: number
  charge?: string
  currency?: string
  customer?: string
  expand?: string[]
  instructions_email?: string
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  origin?: "customer_balance"
  payment_intent?: string
  reason?: "duplicate" | "fraudulent" | "requested_by_customer"
  refund_application_fee?: boolean
  reverse_transfer?: boolean
}

export type t_PostRefundsRefundBodySchema = {
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostRefundsRefundParamSchema = {
  refund: string
}

export type t_PostRefundsRefundCancelBodySchema = {
  expand?: string[]
}

export type t_PostRefundsRefundCancelParamSchema = {
  refund: string
}

export type t_PostReportingReportRunsBodySchema = {
  expand?: string[]
  parameters?: {
    columns?: string[]
    connected_account?: string
    currency?: string
    interval_end?: number
    interval_start?: number
    payout?: string
    reporting_category?:
      | "advance"
      | "advance_funding"
      | "anticipation_repayment"
      | "charge"
      | "charge_failure"
      | "connect_collection_transfer"
      | "connect_reserved_funds"
      | "contribution"
      | "dispute"
      | "dispute_reversal"
      | "fee"
      | "financing_paydown"
      | "financing_paydown_reversal"
      | "financing_payout"
      | "financing_payout_reversal"
      | "issuing_authorization_hold"
      | "issuing_authorization_release"
      | "issuing_dispute"
      | "issuing_transaction"
      | "network_cost"
      | "obligation"
      | "other_adjustment"
      | "partial_capture_reversal"
      | "payout"
      | "payout_reversal"
      | "platform_earning"
      | "platform_earning_refund"
      | "refund"
      | "refund_failure"
      | "risk_reserved_funds"
      | "tax"
      | "topup"
      | "topup_reversal"
      | "transfer"
      | "transfer_reversal"
    timezone?:
      | "Africa/Abidjan"
      | "Africa/Accra"
      | "Africa/Addis_Ababa"
      | "Africa/Algiers"
      | "Africa/Asmara"
      | "Africa/Asmera"
      | "Africa/Bamako"
      | "Africa/Bangui"
      | "Africa/Banjul"
      | "Africa/Bissau"
      | "Africa/Blantyre"
      | "Africa/Brazzaville"
      | "Africa/Bujumbura"
      | "Africa/Cairo"
      | "Africa/Casablanca"
      | "Africa/Ceuta"
      | "Africa/Conakry"
      | "Africa/Dakar"
      | "Africa/Dar_es_Salaam"
      | "Africa/Djibouti"
      | "Africa/Douala"
      | "Africa/El_Aaiun"
      | "Africa/Freetown"
      | "Africa/Gaborone"
      | "Africa/Harare"
      | "Africa/Johannesburg"
      | "Africa/Juba"
      | "Africa/Kampala"
      | "Africa/Khartoum"
      | "Africa/Kigali"
      | "Africa/Kinshasa"
      | "Africa/Lagos"
      | "Africa/Libreville"
      | "Africa/Lome"
      | "Africa/Luanda"
      | "Africa/Lubumbashi"
      | "Africa/Lusaka"
      | "Africa/Malabo"
      | "Africa/Maputo"
      | "Africa/Maseru"
      | "Africa/Mbabane"
      | "Africa/Mogadishu"
      | "Africa/Monrovia"
      | "Africa/Nairobi"
      | "Africa/Ndjamena"
      | "Africa/Niamey"
      | "Africa/Nouakchott"
      | "Africa/Ouagadougou"
      | "Africa/Porto-Novo"
      | "Africa/Sao_Tome"
      | "Africa/Timbuktu"
      | "Africa/Tripoli"
      | "Africa/Tunis"
      | "Africa/Windhoek"
      | "America/Adak"
      | "America/Anchorage"
      | "America/Anguilla"
      | "America/Antigua"
      | "America/Araguaina"
      | "America/Argentina/Buenos_Aires"
      | "America/Argentina/Catamarca"
      | "America/Argentina/ComodRivadavia"
      | "America/Argentina/Cordoba"
      | "America/Argentina/Jujuy"
      | "America/Argentina/La_Rioja"
      | "America/Argentina/Mendoza"
      | "America/Argentina/Rio_Gallegos"
      | "America/Argentina/Salta"
      | "America/Argentina/San_Juan"
      | "America/Argentina/San_Luis"
      | "America/Argentina/Tucuman"
      | "America/Argentina/Ushuaia"
      | "America/Aruba"
      | "America/Asuncion"
      | "America/Atikokan"
      | "America/Atka"
      | "America/Bahia"
      | "America/Bahia_Banderas"
      | "America/Barbados"
      | "America/Belem"
      | "America/Belize"
      | "America/Blanc-Sablon"
      | "America/Boa_Vista"
      | "America/Bogota"
      | "America/Boise"
      | "America/Buenos_Aires"
      | "America/Cambridge_Bay"
      | "America/Campo_Grande"
      | "America/Cancun"
      | "America/Caracas"
      | "America/Catamarca"
      | "America/Cayenne"
      | "America/Cayman"
      | "America/Chicago"
      | "America/Chihuahua"
      | "America/Ciudad_Juarez"
      | "America/Coral_Harbour"
      | "America/Cordoba"
      | "America/Costa_Rica"
      | "America/Creston"
      | "America/Cuiaba"
      | "America/Curacao"
      | "America/Danmarkshavn"
      | "America/Dawson"
      | "America/Dawson_Creek"
      | "America/Denver"
      | "America/Detroit"
      | "America/Dominica"
      | "America/Edmonton"
      | "America/Eirunepe"
      | "America/El_Salvador"
      | "America/Ensenada"
      | "America/Fort_Nelson"
      | "America/Fort_Wayne"
      | "America/Fortaleza"
      | "America/Glace_Bay"
      | "America/Godthab"
      | "America/Goose_Bay"
      | "America/Grand_Turk"
      | "America/Grenada"
      | "America/Guadeloupe"
      | "America/Guatemala"
      | "America/Guayaquil"
      | "America/Guyana"
      | "America/Halifax"
      | "America/Havana"
      | "America/Hermosillo"
      | "America/Indiana/Indianapolis"
      | "America/Indiana/Knox"
      | "America/Indiana/Marengo"
      | "America/Indiana/Petersburg"
      | "America/Indiana/Tell_City"
      | "America/Indiana/Vevay"
      | "America/Indiana/Vincennes"
      | "America/Indiana/Winamac"
      | "America/Indianapolis"
      | "America/Inuvik"
      | "America/Iqaluit"
      | "America/Jamaica"
      | "America/Jujuy"
      | "America/Juneau"
      | "America/Kentucky/Louisville"
      | "America/Kentucky/Monticello"
      | "America/Knox_IN"
      | "America/Kralendijk"
      | "America/La_Paz"
      | "America/Lima"
      | "America/Los_Angeles"
      | "America/Louisville"
      | "America/Lower_Princes"
      | "America/Maceio"
      | "America/Managua"
      | "America/Manaus"
      | "America/Marigot"
      | "America/Martinique"
      | "America/Matamoros"
      | "America/Mazatlan"
      | "America/Mendoza"
      | "America/Menominee"
      | "America/Merida"
      | "America/Metlakatla"
      | "America/Mexico_City"
      | "America/Miquelon"
      | "America/Moncton"
      | "America/Monterrey"
      | "America/Montevideo"
      | "America/Montreal"
      | "America/Montserrat"
      | "America/Nassau"
      | "America/New_York"
      | "America/Nipigon"
      | "America/Nome"
      | "America/Noronha"
      | "America/North_Dakota/Beulah"
      | "America/North_Dakota/Center"
      | "America/North_Dakota/New_Salem"
      | "America/Nuuk"
      | "America/Ojinaga"
      | "America/Panama"
      | "America/Pangnirtung"
      | "America/Paramaribo"
      | "America/Phoenix"
      | "America/Port-au-Prince"
      | "America/Port_of_Spain"
      | "America/Porto_Acre"
      | "America/Porto_Velho"
      | "America/Puerto_Rico"
      | "America/Punta_Arenas"
      | "America/Rainy_River"
      | "America/Rankin_Inlet"
      | "America/Recife"
      | "America/Regina"
      | "America/Resolute"
      | "America/Rio_Branco"
      | "America/Rosario"
      | "America/Santa_Isabel"
      | "America/Santarem"
      | "America/Santiago"
      | "America/Santo_Domingo"
      | "America/Sao_Paulo"
      | "America/Scoresbysund"
      | "America/Shiprock"
      | "America/Sitka"
      | "America/St_Barthelemy"
      | "America/St_Johns"
      | "America/St_Kitts"
      | "America/St_Lucia"
      | "America/St_Thomas"
      | "America/St_Vincent"
      | "America/Swift_Current"
      | "America/Tegucigalpa"
      | "America/Thule"
      | "America/Thunder_Bay"
      | "America/Tijuana"
      | "America/Toronto"
      | "America/Tortola"
      | "America/Vancouver"
      | "America/Virgin"
      | "America/Whitehorse"
      | "America/Winnipeg"
      | "America/Yakutat"
      | "America/Yellowknife"
      | "Antarctica/Casey"
      | "Antarctica/Davis"
      | "Antarctica/DumontDUrville"
      | "Antarctica/Macquarie"
      | "Antarctica/Mawson"
      | "Antarctica/McMurdo"
      | "Antarctica/Palmer"
      | "Antarctica/Rothera"
      | "Antarctica/South_Pole"
      | "Antarctica/Syowa"
      | "Antarctica/Troll"
      | "Antarctica/Vostok"
      | "Arctic/Longyearbyen"
      | "Asia/Aden"
      | "Asia/Almaty"
      | "Asia/Amman"
      | "Asia/Anadyr"
      | "Asia/Aqtau"
      | "Asia/Aqtobe"
      | "Asia/Ashgabat"
      | "Asia/Ashkhabad"
      | "Asia/Atyrau"
      | "Asia/Baghdad"
      | "Asia/Bahrain"
      | "Asia/Baku"
      | "Asia/Bangkok"
      | "Asia/Barnaul"
      | "Asia/Beirut"
      | "Asia/Bishkek"
      | "Asia/Brunei"
      | "Asia/Calcutta"
      | "Asia/Chita"
      | "Asia/Choibalsan"
      | "Asia/Chongqing"
      | "Asia/Chungking"
      | "Asia/Colombo"
      | "Asia/Dacca"
      | "Asia/Damascus"
      | "Asia/Dhaka"
      | "Asia/Dili"
      | "Asia/Dubai"
      | "Asia/Dushanbe"
      | "Asia/Famagusta"
      | "Asia/Gaza"
      | "Asia/Harbin"
      | "Asia/Hebron"
      | "Asia/Ho_Chi_Minh"
      | "Asia/Hong_Kong"
      | "Asia/Hovd"
      | "Asia/Irkutsk"
      | "Asia/Istanbul"
      | "Asia/Jakarta"
      | "Asia/Jayapura"
      | "Asia/Jerusalem"
      | "Asia/Kabul"
      | "Asia/Kamchatka"
      | "Asia/Karachi"
      | "Asia/Kashgar"
      | "Asia/Kathmandu"
      | "Asia/Katmandu"
      | "Asia/Khandyga"
      | "Asia/Kolkata"
      | "Asia/Krasnoyarsk"
      | "Asia/Kuala_Lumpur"
      | "Asia/Kuching"
      | "Asia/Kuwait"
      | "Asia/Macao"
      | "Asia/Macau"
      | "Asia/Magadan"
      | "Asia/Makassar"
      | "Asia/Manila"
      | "Asia/Muscat"
      | "Asia/Nicosia"
      | "Asia/Novokuznetsk"
      | "Asia/Novosibirsk"
      | "Asia/Omsk"
      | "Asia/Oral"
      | "Asia/Phnom_Penh"
      | "Asia/Pontianak"
      | "Asia/Pyongyang"
      | "Asia/Qatar"
      | "Asia/Qostanay"
      | "Asia/Qyzylorda"
      | "Asia/Rangoon"
      | "Asia/Riyadh"
      | "Asia/Saigon"
      | "Asia/Sakhalin"
      | "Asia/Samarkand"
      | "Asia/Seoul"
      | "Asia/Shanghai"
      | "Asia/Singapore"
      | "Asia/Srednekolymsk"
      | "Asia/Taipei"
      | "Asia/Tashkent"
      | "Asia/Tbilisi"
      | "Asia/Tehran"
      | "Asia/Tel_Aviv"
      | "Asia/Thimbu"
      | "Asia/Thimphu"
      | "Asia/Tokyo"
      | "Asia/Tomsk"
      | "Asia/Ujung_Pandang"
      | "Asia/Ulaanbaatar"
      | "Asia/Ulan_Bator"
      | "Asia/Urumqi"
      | "Asia/Ust-Nera"
      | "Asia/Vientiane"
      | "Asia/Vladivostok"
      | "Asia/Yakutsk"
      | "Asia/Yangon"
      | "Asia/Yekaterinburg"
      | "Asia/Yerevan"
      | "Atlantic/Azores"
      | "Atlantic/Bermuda"
      | "Atlantic/Canary"
      | "Atlantic/Cape_Verde"
      | "Atlantic/Faeroe"
      | "Atlantic/Faroe"
      | "Atlantic/Jan_Mayen"
      | "Atlantic/Madeira"
      | "Atlantic/Reykjavik"
      | "Atlantic/South_Georgia"
      | "Atlantic/St_Helena"
      | "Atlantic/Stanley"
      | "Australia/ACT"
      | "Australia/Adelaide"
      | "Australia/Brisbane"
      | "Australia/Broken_Hill"
      | "Australia/Canberra"
      | "Australia/Currie"
      | "Australia/Darwin"
      | "Australia/Eucla"
      | "Australia/Hobart"
      | "Australia/LHI"
      | "Australia/Lindeman"
      | "Australia/Lord_Howe"
      | "Australia/Melbourne"
      | "Australia/NSW"
      | "Australia/North"
      | "Australia/Perth"
      | "Australia/Queensland"
      | "Australia/South"
      | "Australia/Sydney"
      | "Australia/Tasmania"
      | "Australia/Victoria"
      | "Australia/West"
      | "Australia/Yancowinna"
      | "Brazil/Acre"
      | "Brazil/DeNoronha"
      | "Brazil/East"
      | "Brazil/West"
      | "CET"
      | "CST6CDT"
      | "Canada/Atlantic"
      | "Canada/Central"
      | "Canada/Eastern"
      | "Canada/Mountain"
      | "Canada/Newfoundland"
      | "Canada/Pacific"
      | "Canada/Saskatchewan"
      | "Canada/Yukon"
      | "Chile/Continental"
      | "Chile/EasterIsland"
      | "Cuba"
      | "EET"
      | "EST"
      | "EST5EDT"
      | "Egypt"
      | "Eire"
      | "Etc/GMT"
      | "Etc/GMT+0"
      | "Etc/GMT+1"
      | "Etc/GMT+10"
      | "Etc/GMT+11"
      | "Etc/GMT+12"
      | "Etc/GMT+2"
      | "Etc/GMT+3"
      | "Etc/GMT+4"
      | "Etc/GMT+5"
      | "Etc/GMT+6"
      | "Etc/GMT+7"
      | "Etc/GMT+8"
      | "Etc/GMT+9"
      | "Etc/GMT-0"
      | "Etc/GMT-1"
      | "Etc/GMT-10"
      | "Etc/GMT-11"
      | "Etc/GMT-12"
      | "Etc/GMT-13"
      | "Etc/GMT-14"
      | "Etc/GMT-2"
      | "Etc/GMT-3"
      | "Etc/GMT-4"
      | "Etc/GMT-5"
      | "Etc/GMT-6"
      | "Etc/GMT-7"
      | "Etc/GMT-8"
      | "Etc/GMT-9"
      | "Etc/GMT0"
      | "Etc/Greenwich"
      | "Etc/UCT"
      | "Etc/UTC"
      | "Etc/Universal"
      | "Etc/Zulu"
      | "Europe/Amsterdam"
      | "Europe/Andorra"
      | "Europe/Astrakhan"
      | "Europe/Athens"
      | "Europe/Belfast"
      | "Europe/Belgrade"
      | "Europe/Berlin"
      | "Europe/Bratislava"
      | "Europe/Brussels"
      | "Europe/Bucharest"
      | "Europe/Budapest"
      | "Europe/Busingen"
      | "Europe/Chisinau"
      | "Europe/Copenhagen"
      | "Europe/Dublin"
      | "Europe/Gibraltar"
      | "Europe/Guernsey"
      | "Europe/Helsinki"
      | "Europe/Isle_of_Man"
      | "Europe/Istanbul"
      | "Europe/Jersey"
      | "Europe/Kaliningrad"
      | "Europe/Kiev"
      | "Europe/Kirov"
      | "Europe/Kyiv"
      | "Europe/Lisbon"
      | "Europe/Ljubljana"
      | "Europe/London"
      | "Europe/Luxembourg"
      | "Europe/Madrid"
      | "Europe/Malta"
      | "Europe/Mariehamn"
      | "Europe/Minsk"
      | "Europe/Monaco"
      | "Europe/Moscow"
      | "Europe/Nicosia"
      | "Europe/Oslo"
      | "Europe/Paris"
      | "Europe/Podgorica"
      | "Europe/Prague"
      | "Europe/Riga"
      | "Europe/Rome"
      | "Europe/Samara"
      | "Europe/San_Marino"
      | "Europe/Sarajevo"
      | "Europe/Saratov"
      | "Europe/Simferopol"
      | "Europe/Skopje"
      | "Europe/Sofia"
      | "Europe/Stockholm"
      | "Europe/Tallinn"
      | "Europe/Tirane"
      | "Europe/Tiraspol"
      | "Europe/Ulyanovsk"
      | "Europe/Uzhgorod"
      | "Europe/Vaduz"
      | "Europe/Vatican"
      | "Europe/Vienna"
      | "Europe/Vilnius"
      | "Europe/Volgograd"
      | "Europe/Warsaw"
      | "Europe/Zagreb"
      | "Europe/Zaporozhye"
      | "Europe/Zurich"
      | "Factory"
      | "GB"
      | "GB-Eire"
      | "GMT"
      | "GMT+0"
      | "GMT-0"
      | "GMT0"
      | "Greenwich"
      | "HST"
      | "Hongkong"
      | "Iceland"
      | "Indian/Antananarivo"
      | "Indian/Chagos"
      | "Indian/Christmas"
      | "Indian/Cocos"
      | "Indian/Comoro"
      | "Indian/Kerguelen"
      | "Indian/Mahe"
      | "Indian/Maldives"
      | "Indian/Mauritius"
      | "Indian/Mayotte"
      | "Indian/Reunion"
      | "Iran"
      | "Israel"
      | "Jamaica"
      | "Japan"
      | "Kwajalein"
      | "Libya"
      | "MET"
      | "MST"
      | "MST7MDT"
      | "Mexico/BajaNorte"
      | "Mexico/BajaSur"
      | "Mexico/General"
      | "NZ"
      | "NZ-CHAT"
      | "Navajo"
      | "PRC"
      | "PST8PDT"
      | "Pacific/Apia"
      | "Pacific/Auckland"
      | "Pacific/Bougainville"
      | "Pacific/Chatham"
      | "Pacific/Chuuk"
      | "Pacific/Easter"
      | "Pacific/Efate"
      | "Pacific/Enderbury"
      | "Pacific/Fakaofo"
      | "Pacific/Fiji"
      | "Pacific/Funafuti"
      | "Pacific/Galapagos"
      | "Pacific/Gambier"
      | "Pacific/Guadalcanal"
      | "Pacific/Guam"
      | "Pacific/Honolulu"
      | "Pacific/Johnston"
      | "Pacific/Kanton"
      | "Pacific/Kiritimati"
      | "Pacific/Kosrae"
      | "Pacific/Kwajalein"
      | "Pacific/Majuro"
      | "Pacific/Marquesas"
      | "Pacific/Midway"
      | "Pacific/Nauru"
      | "Pacific/Niue"
      | "Pacific/Norfolk"
      | "Pacific/Noumea"
      | "Pacific/Pago_Pago"
      | "Pacific/Palau"
      | "Pacific/Pitcairn"
      | "Pacific/Pohnpei"
      | "Pacific/Ponape"
      | "Pacific/Port_Moresby"
      | "Pacific/Rarotonga"
      | "Pacific/Saipan"
      | "Pacific/Samoa"
      | "Pacific/Tahiti"
      | "Pacific/Tarawa"
      | "Pacific/Tongatapu"
      | "Pacific/Truk"
      | "Pacific/Wake"
      | "Pacific/Wallis"
      | "Pacific/Yap"
      | "Poland"
      | "Portugal"
      | "ROC"
      | "ROK"
      | "Singapore"
      | "Turkey"
      | "UCT"
      | "US/Alaska"
      | "US/Aleutian"
      | "US/Arizona"
      | "US/Central"
      | "US/East-Indiana"
      | "US/Eastern"
      | "US/Hawaii"
      | "US/Indiana-Starke"
      | "US/Michigan"
      | "US/Mountain"
      | "US/Pacific"
      | "US/Pacific-New"
      | "US/Samoa"
      | "UTC"
      | "Universal"
      | "W-SU"
      | "WET"
      | "Zulu"
  }
  report_type: string
}

export type t_PostReviewsReviewApproveBodySchema = {
  expand?: string[]
}

export type t_PostReviewsReviewApproveParamSchema = {
  review: string
}

export type t_PostSetupIntentsBodySchema = {
  attach_to_self?: boolean
  automatic_payment_methods?: {
    allow_redirects?: "always" | "never"
    enabled: boolean
  }
  confirm?: boolean
  customer?: string
  description?: string
  expand?: string[]
  flow_directions?: ("inbound" | "outbound")[]
  mandate_data?:
    | {
        customer_acceptance: {
          accepted_at?: number
          offline?: EmptyObject
          online?: {
            ip_address: string
            user_agent: string
          }
          type: "offline" | "online"
        }
      }
    | ""
  metadata?: {
    [key: string]: string
  }
  on_behalf_of?: string
  payment_method?: string
  payment_method_configuration?: string
  payment_method_data?: {
    acss_debit?: {
      account_number: string
      institution_number: string
      transit_number: string
    }
    affirm?: EmptyObject
    afterpay_clearpay?: EmptyObject
    alipay?: EmptyObject
    au_becs_debit?: {
      account_number: string
      bsb_number: string
    }
    bacs_debit?: {
      account_number?: string
      sort_code?: string
    }
    bancontact?: EmptyObject
    billing_details?: {
      address?:
        | {
            city?: string
            country?: string
            line1?: string
            line2?: string
            postal_code?: string
            state?: string
          }
        | ""
      email?: string | ""
      name?: string | ""
      phone?: string | ""
    }
    blik?: EmptyObject
    boleto?: {
      tax_id: string
    }
    cashapp?: EmptyObject
    customer_balance?: EmptyObject
    eps?: {
      bank?:
        | "arzte_und_apotheker_bank"
        | "austrian_anadi_bank_ag"
        | "bank_austria"
        | "bankhaus_carl_spangler"
        | "bankhaus_schelhammer_und_schattera_ag"
        | "bawag_psk_ag"
        | "bks_bank_ag"
        | "brull_kallmus_bank_ag"
        | "btv_vier_lander_bank"
        | "capital_bank_grawe_gruppe_ag"
        | "deutsche_bank_ag"
        | "dolomitenbank"
        | "easybank_ag"
        | "erste_bank_und_sparkassen"
        | "hypo_alpeadriabank_international_ag"
        | "hypo_bank_burgenland_aktiengesellschaft"
        | "hypo_noe_lb_fur_niederosterreich_u_wien"
        | "hypo_oberosterreich_salzburg_steiermark"
        | "hypo_tirol_bank_ag"
        | "hypo_vorarlberg_bank_ag"
        | "marchfelder_bank"
        | "oberbank_ag"
        | "raiffeisen_bankengruppe_osterreich"
        | "schoellerbank_ag"
        | "sparda_bank_wien"
        | "volksbank_gruppe"
        | "volkskreditbank_ag"
        | "vr_bank_braunau"
    }
    fpx?: {
      bank:
        | "affin_bank"
        | "agrobank"
        | "alliance_bank"
        | "ambank"
        | "bank_islam"
        | "bank_muamalat"
        | "bank_of_china"
        | "bank_rakyat"
        | "bsn"
        | "cimb"
        | "deutsche_bank"
        | "hong_leong_bank"
        | "hsbc"
        | "kfh"
        | "maybank2e"
        | "maybank2u"
        | "ocbc"
        | "pb_enterprise"
        | "public_bank"
        | "rhb"
        | "standard_chartered"
        | "uob"
    }
    giropay?: EmptyObject
    grabpay?: EmptyObject
    ideal?: {
      bank?:
        | "abn_amro"
        | "asn_bank"
        | "bunq"
        | "handelsbanken"
        | "ing"
        | "knab"
        | "moneyou"
        | "n26"
        | "rabobank"
        | "regiobank"
        | "revolut"
        | "sns_bank"
        | "triodos_bank"
        | "van_lanschot"
        | "yoursafe"
    }
    interac_present?: EmptyObject
    klarna?: {
      dob?: {
        day: number
        month: number
        year: number
      }
    }
    konbini?: EmptyObject
    link?: EmptyObject
    metadata?: {
      [key: string]: string
    }
    oxxo?: EmptyObject
    p24?: {
      bank?:
        | "alior_bank"
        | "bank_millennium"
        | "bank_nowy_bfg_sa"
        | "bank_pekao_sa"
        | "banki_spbdzielcze"
        | "blik"
        | "bnp_paribas"
        | "boz"
        | "citi_handlowy"
        | "credit_agricole"
        | "envelobank"
        | "etransfer_pocztowy24"
        | "getin_bank"
        | "ideabank"
        | "ing"
        | "inteligo"
        | "mbank_mtransfer"
        | "nest_przelew"
        | "noble_pay"
        | "pbac_z_ipko"
        | "plus_bank"
        | "santander_przelew24"
        | "tmobile_usbugi_bankowe"
        | "toyota_bank"
        | "volkswagen_bank"
    }
    paynow?: EmptyObject
    paypal?: EmptyObject
    pix?: EmptyObject
    promptpay?: EmptyObject
    radar_options?: {
      session?: string
    }
    sepa_debit?: {
      iban: string
    }
    sofort?: {
      country: "AT" | "BE" | "DE" | "ES" | "IT" | "NL"
    }
    type:
      | "acss_debit"
      | "affirm"
      | "afterpay_clearpay"
      | "alipay"
      | "au_becs_debit"
      | "bacs_debit"
      | "bancontact"
      | "blik"
      | "boleto"
      | "cashapp"
      | "customer_balance"
      | "eps"
      | "fpx"
      | "giropay"
      | "grabpay"
      | "ideal"
      | "klarna"
      | "konbini"
      | "link"
      | "oxxo"
      | "p24"
      | "paynow"
      | "paypal"
      | "pix"
      | "promptpay"
      | "sepa_debit"
      | "sofort"
      | "us_bank_account"
      | "wechat_pay"
      | "zip"
    us_bank_account?: {
      account_holder_type?: "company" | "individual"
      account_number?: string
      account_type?: "checking" | "savings"
      financial_connections_account?: string
      routing_number?: string
    }
    wechat_pay?: EmptyObject
    zip?: EmptyObject
  }
  payment_method_options?: {
    acss_debit?: {
      currency?: "cad" | "usd"
      mandate_options?: {
        custom_mandate_url?: string | ""
        default_for?: ("invoice" | "subscription")[]
        interval_description?: string
        payment_schedule?: "combined" | "interval" | "sporadic"
        transaction_type?: "business" | "personal"
      }
      verification_method?: "automatic" | "instant" | "microdeposits"
    }
    card?: {
      mandate_options?: {
        amount: number
        amount_type: "fixed" | "maximum"
        currency: string
        description?: string
        end_date?: number
        interval: "day" | "month" | "sporadic" | "week" | "year"
        interval_count?: number
        reference: string
        start_date: number
        supported_types?: "india"[]
      }
      network?:
        | "amex"
        | "cartes_bancaires"
        | "diners"
        | "discover"
        | "eftpos_au"
        | "interac"
        | "jcb"
        | "mastercard"
        | "unionpay"
        | "unknown"
        | "visa"
      request_three_d_secure?: "any" | "automatic"
    }
    link?: EmptyObject
    paypal?: {
      billing_agreement_id?: string
    }
    sepa_debit?: {
      mandate_options?: EmptyObject
    }
    us_bank_account?: {
      financial_connections?: {
        permissions?: (
          | "balances"
          | "ownership"
          | "payment_method"
          | "transactions"
        )[]
        prefetch?: "balances"[]
        return_url?: string
      }
      networks?: {
        requested?: ("ach" | "us_domestic_wire")[]
      }
      verification_method?: "automatic" | "instant" | "microdeposits"
    }
  }
  payment_method_types?: string[]
  return_url?: string
  single_use?: {
    amount: number
    currency: string
  }
  usage?: "off_session" | "on_session"
  use_stripe_sdk?: boolean
}

export type t_PostSetupIntentsIntentBodySchema = {
  attach_to_self?: boolean
  customer?: string
  description?: string
  expand?: string[]
  flow_directions?: ("inbound" | "outbound")[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  payment_method?: string
  payment_method_configuration?: string
  payment_method_data?: {
    acss_debit?: {
      account_number: string
      institution_number: string
      transit_number: string
    }
    affirm?: EmptyObject
    afterpay_clearpay?: EmptyObject
    alipay?: EmptyObject
    au_becs_debit?: {
      account_number: string
      bsb_number: string
    }
    bacs_debit?: {
      account_number?: string
      sort_code?: string
    }
    bancontact?: EmptyObject
    billing_details?: {
      address?:
        | {
            city?: string
            country?: string
            line1?: string
            line2?: string
            postal_code?: string
            state?: string
          }
        | ""
      email?: string | ""
      name?: string | ""
      phone?: string | ""
    }
    blik?: EmptyObject
    boleto?: {
      tax_id: string
    }
    cashapp?: EmptyObject
    customer_balance?: EmptyObject
    eps?: {
      bank?:
        | "arzte_und_apotheker_bank"
        | "austrian_anadi_bank_ag"
        | "bank_austria"
        | "bankhaus_carl_spangler"
        | "bankhaus_schelhammer_und_schattera_ag"
        | "bawag_psk_ag"
        | "bks_bank_ag"
        | "brull_kallmus_bank_ag"
        | "btv_vier_lander_bank"
        | "capital_bank_grawe_gruppe_ag"
        | "deutsche_bank_ag"
        | "dolomitenbank"
        | "easybank_ag"
        | "erste_bank_und_sparkassen"
        | "hypo_alpeadriabank_international_ag"
        | "hypo_bank_burgenland_aktiengesellschaft"
        | "hypo_noe_lb_fur_niederosterreich_u_wien"
        | "hypo_oberosterreich_salzburg_steiermark"
        | "hypo_tirol_bank_ag"
        | "hypo_vorarlberg_bank_ag"
        | "marchfelder_bank"
        | "oberbank_ag"
        | "raiffeisen_bankengruppe_osterreich"
        | "schoellerbank_ag"
        | "sparda_bank_wien"
        | "volksbank_gruppe"
        | "volkskreditbank_ag"
        | "vr_bank_braunau"
    }
    fpx?: {
      bank:
        | "affin_bank"
        | "agrobank"
        | "alliance_bank"
        | "ambank"
        | "bank_islam"
        | "bank_muamalat"
        | "bank_of_china"
        | "bank_rakyat"
        | "bsn"
        | "cimb"
        | "deutsche_bank"
        | "hong_leong_bank"
        | "hsbc"
        | "kfh"
        | "maybank2e"
        | "maybank2u"
        | "ocbc"
        | "pb_enterprise"
        | "public_bank"
        | "rhb"
        | "standard_chartered"
        | "uob"
    }
    giropay?: EmptyObject
    grabpay?: EmptyObject
    ideal?: {
      bank?:
        | "abn_amro"
        | "asn_bank"
        | "bunq"
        | "handelsbanken"
        | "ing"
        | "knab"
        | "moneyou"
        | "n26"
        | "rabobank"
        | "regiobank"
        | "revolut"
        | "sns_bank"
        | "triodos_bank"
        | "van_lanschot"
        | "yoursafe"
    }
    interac_present?: EmptyObject
    klarna?: {
      dob?: {
        day: number
        month: number
        year: number
      }
    }
    konbini?: EmptyObject
    link?: EmptyObject
    metadata?: {
      [key: string]: string
    }
    oxxo?: EmptyObject
    p24?: {
      bank?:
        | "alior_bank"
        | "bank_millennium"
        | "bank_nowy_bfg_sa"
        | "bank_pekao_sa"
        | "banki_spbdzielcze"
        | "blik"
        | "bnp_paribas"
        | "boz"
        | "citi_handlowy"
        | "credit_agricole"
        | "envelobank"
        | "etransfer_pocztowy24"
        | "getin_bank"
        | "ideabank"
        | "ing"
        | "inteligo"
        | "mbank_mtransfer"
        | "nest_przelew"
        | "noble_pay"
        | "pbac_z_ipko"
        | "plus_bank"
        | "santander_przelew24"
        | "tmobile_usbugi_bankowe"
        | "toyota_bank"
        | "volkswagen_bank"
    }
    paynow?: EmptyObject
    paypal?: EmptyObject
    pix?: EmptyObject
    promptpay?: EmptyObject
    radar_options?: {
      session?: string
    }
    sepa_debit?: {
      iban: string
    }
    sofort?: {
      country: "AT" | "BE" | "DE" | "ES" | "IT" | "NL"
    }
    type:
      | "acss_debit"
      | "affirm"
      | "afterpay_clearpay"
      | "alipay"
      | "au_becs_debit"
      | "bacs_debit"
      | "bancontact"
      | "blik"
      | "boleto"
      | "cashapp"
      | "customer_balance"
      | "eps"
      | "fpx"
      | "giropay"
      | "grabpay"
      | "ideal"
      | "klarna"
      | "konbini"
      | "link"
      | "oxxo"
      | "p24"
      | "paynow"
      | "paypal"
      | "pix"
      | "promptpay"
      | "sepa_debit"
      | "sofort"
      | "us_bank_account"
      | "wechat_pay"
      | "zip"
    us_bank_account?: {
      account_holder_type?: "company" | "individual"
      account_number?: string
      account_type?: "checking" | "savings"
      financial_connections_account?: string
      routing_number?: string
    }
    wechat_pay?: EmptyObject
    zip?: EmptyObject
  }
  payment_method_options?: {
    acss_debit?: {
      currency?: "cad" | "usd"
      mandate_options?: {
        custom_mandate_url?: string | ""
        default_for?: ("invoice" | "subscription")[]
        interval_description?: string
        payment_schedule?: "combined" | "interval" | "sporadic"
        transaction_type?: "business" | "personal"
      }
      verification_method?: "automatic" | "instant" | "microdeposits"
    }
    card?: {
      mandate_options?: {
        amount: number
        amount_type: "fixed" | "maximum"
        currency: string
        description?: string
        end_date?: number
        interval: "day" | "month" | "sporadic" | "week" | "year"
        interval_count?: number
        reference: string
        start_date: number
        supported_types?: "india"[]
      }
      network?:
        | "amex"
        | "cartes_bancaires"
        | "diners"
        | "discover"
        | "eftpos_au"
        | "interac"
        | "jcb"
        | "mastercard"
        | "unionpay"
        | "unknown"
        | "visa"
      request_three_d_secure?: "any" | "automatic"
    }
    link?: EmptyObject
    paypal?: {
      billing_agreement_id?: string
    }
    sepa_debit?: {
      mandate_options?: EmptyObject
    }
    us_bank_account?: {
      financial_connections?: {
        permissions?: (
          | "balances"
          | "ownership"
          | "payment_method"
          | "transactions"
        )[]
        prefetch?: "balances"[]
        return_url?: string
      }
      networks?: {
        requested?: ("ach" | "us_domestic_wire")[]
      }
      verification_method?: "automatic" | "instant" | "microdeposits"
    }
  }
  payment_method_types?: string[]
}

export type t_PostSetupIntentsIntentParamSchema = {
  intent: string
}

export type t_PostSetupIntentsIntentCancelBodySchema = {
  cancellation_reason?: "abandoned" | "duplicate" | "requested_by_customer"
  expand?: string[]
}

export type t_PostSetupIntentsIntentCancelParamSchema = {
  intent: string
}

export type t_PostSetupIntentsIntentConfirmBodySchema = {
  client_secret?: string
  expand?: string[]
  mandate_data?:
    | {
        customer_acceptance: {
          accepted_at?: number
          offline?: EmptyObject
          online?: {
            ip_address: string
            user_agent: string
          }
          type: "offline" | "online"
        }
      }
    | ""
    | {
        customer_acceptance: {
          online: {
            ip_address?: string
            user_agent?: string
          }
          type: "online"
        }
      }
  payment_method?: string
  payment_method_data?: {
    acss_debit?: {
      account_number: string
      institution_number: string
      transit_number: string
    }
    affirm?: EmptyObject
    afterpay_clearpay?: EmptyObject
    alipay?: EmptyObject
    au_becs_debit?: {
      account_number: string
      bsb_number: string
    }
    bacs_debit?: {
      account_number?: string
      sort_code?: string
    }
    bancontact?: EmptyObject
    billing_details?: {
      address?:
        | {
            city?: string
            country?: string
            line1?: string
            line2?: string
            postal_code?: string
            state?: string
          }
        | ""
      email?: string | ""
      name?: string | ""
      phone?: string | ""
    }
    blik?: EmptyObject
    boleto?: {
      tax_id: string
    }
    cashapp?: EmptyObject
    customer_balance?: EmptyObject
    eps?: {
      bank?:
        | "arzte_und_apotheker_bank"
        | "austrian_anadi_bank_ag"
        | "bank_austria"
        | "bankhaus_carl_spangler"
        | "bankhaus_schelhammer_und_schattera_ag"
        | "bawag_psk_ag"
        | "bks_bank_ag"
        | "brull_kallmus_bank_ag"
        | "btv_vier_lander_bank"
        | "capital_bank_grawe_gruppe_ag"
        | "deutsche_bank_ag"
        | "dolomitenbank"
        | "easybank_ag"
        | "erste_bank_und_sparkassen"
        | "hypo_alpeadriabank_international_ag"
        | "hypo_bank_burgenland_aktiengesellschaft"
        | "hypo_noe_lb_fur_niederosterreich_u_wien"
        | "hypo_oberosterreich_salzburg_steiermark"
        | "hypo_tirol_bank_ag"
        | "hypo_vorarlberg_bank_ag"
        | "marchfelder_bank"
        | "oberbank_ag"
        | "raiffeisen_bankengruppe_osterreich"
        | "schoellerbank_ag"
        | "sparda_bank_wien"
        | "volksbank_gruppe"
        | "volkskreditbank_ag"
        | "vr_bank_braunau"
    }
    fpx?: {
      bank:
        | "affin_bank"
        | "agrobank"
        | "alliance_bank"
        | "ambank"
        | "bank_islam"
        | "bank_muamalat"
        | "bank_of_china"
        | "bank_rakyat"
        | "bsn"
        | "cimb"
        | "deutsche_bank"
        | "hong_leong_bank"
        | "hsbc"
        | "kfh"
        | "maybank2e"
        | "maybank2u"
        | "ocbc"
        | "pb_enterprise"
        | "public_bank"
        | "rhb"
        | "standard_chartered"
        | "uob"
    }
    giropay?: EmptyObject
    grabpay?: EmptyObject
    ideal?: {
      bank?:
        | "abn_amro"
        | "asn_bank"
        | "bunq"
        | "handelsbanken"
        | "ing"
        | "knab"
        | "moneyou"
        | "n26"
        | "rabobank"
        | "regiobank"
        | "revolut"
        | "sns_bank"
        | "triodos_bank"
        | "van_lanschot"
        | "yoursafe"
    }
    interac_present?: EmptyObject
    klarna?: {
      dob?: {
        day: number
        month: number
        year: number
      }
    }
    konbini?: EmptyObject
    link?: EmptyObject
    metadata?: {
      [key: string]: string
    }
    oxxo?: EmptyObject
    p24?: {
      bank?:
        | "alior_bank"
        | "bank_millennium"
        | "bank_nowy_bfg_sa"
        | "bank_pekao_sa"
        | "banki_spbdzielcze"
        | "blik"
        | "bnp_paribas"
        | "boz"
        | "citi_handlowy"
        | "credit_agricole"
        | "envelobank"
        | "etransfer_pocztowy24"
        | "getin_bank"
        | "ideabank"
        | "ing"
        | "inteligo"
        | "mbank_mtransfer"
        | "nest_przelew"
        | "noble_pay"
        | "pbac_z_ipko"
        | "plus_bank"
        | "santander_przelew24"
        | "tmobile_usbugi_bankowe"
        | "toyota_bank"
        | "volkswagen_bank"
    }
    paynow?: EmptyObject
    paypal?: EmptyObject
    pix?: EmptyObject
    promptpay?: EmptyObject
    radar_options?: {
      session?: string
    }
    sepa_debit?: {
      iban: string
    }
    sofort?: {
      country: "AT" | "BE" | "DE" | "ES" | "IT" | "NL"
    }
    type:
      | "acss_debit"
      | "affirm"
      | "afterpay_clearpay"
      | "alipay"
      | "au_becs_debit"
      | "bacs_debit"
      | "bancontact"
      | "blik"
      | "boleto"
      | "cashapp"
      | "customer_balance"
      | "eps"
      | "fpx"
      | "giropay"
      | "grabpay"
      | "ideal"
      | "klarna"
      | "konbini"
      | "link"
      | "oxxo"
      | "p24"
      | "paynow"
      | "paypal"
      | "pix"
      | "promptpay"
      | "sepa_debit"
      | "sofort"
      | "us_bank_account"
      | "wechat_pay"
      | "zip"
    us_bank_account?: {
      account_holder_type?: "company" | "individual"
      account_number?: string
      account_type?: "checking" | "savings"
      financial_connections_account?: string
      routing_number?: string
    }
    wechat_pay?: EmptyObject
    zip?: EmptyObject
  }
  payment_method_options?: {
    acss_debit?: {
      currency?: "cad" | "usd"
      mandate_options?: {
        custom_mandate_url?: string | ""
        default_for?: ("invoice" | "subscription")[]
        interval_description?: string
        payment_schedule?: "combined" | "interval" | "sporadic"
        transaction_type?: "business" | "personal"
      }
      verification_method?: "automatic" | "instant" | "microdeposits"
    }
    card?: {
      mandate_options?: {
        amount: number
        amount_type: "fixed" | "maximum"
        currency: string
        description?: string
        end_date?: number
        interval: "day" | "month" | "sporadic" | "week" | "year"
        interval_count?: number
        reference: string
        start_date: number
        supported_types?: "india"[]
      }
      network?:
        | "amex"
        | "cartes_bancaires"
        | "diners"
        | "discover"
        | "eftpos_au"
        | "interac"
        | "jcb"
        | "mastercard"
        | "unionpay"
        | "unknown"
        | "visa"
      request_three_d_secure?: "any" | "automatic"
    }
    link?: EmptyObject
    paypal?: {
      billing_agreement_id?: string
    }
    sepa_debit?: {
      mandate_options?: EmptyObject
    }
    us_bank_account?: {
      financial_connections?: {
        permissions?: (
          | "balances"
          | "ownership"
          | "payment_method"
          | "transactions"
        )[]
        prefetch?: "balances"[]
        return_url?: string
      }
      networks?: {
        requested?: ("ach" | "us_domestic_wire")[]
      }
      verification_method?: "automatic" | "instant" | "microdeposits"
    }
  }
  return_url?: string
  use_stripe_sdk?: boolean
}

export type t_PostSetupIntentsIntentConfirmParamSchema = {
  intent: string
}

export type t_PostSetupIntentsIntentVerifyMicrodepositsBodySchema = {
  amounts?: number[]
  client_secret?: string
  descriptor_code?: string
  expand?: string[]
}

export type t_PostSetupIntentsIntentVerifyMicrodepositsParamSchema = {
  intent: string
}

export type t_PostShippingRatesBodySchema = {
  delivery_estimate?: {
    maximum?: {
      unit: "business_day" | "day" | "hour" | "month" | "week"
      value: number
    }
    minimum?: {
      unit: "business_day" | "day" | "hour" | "month" | "week"
      value: number
    }
  }
  display_name: string
  expand?: string[]
  fixed_amount?: {
    amount: number
    currency: string
    currency_options?: {
      [key: string]: {
        amount: number
        tax_behavior?: "exclusive" | "inclusive" | "unspecified"
      }
    }
  }
  metadata?: {
    [key: string]: string
  }
  tax_behavior?: "exclusive" | "inclusive" | "unspecified"
  tax_code?: string
  type?: "fixed_amount"
}

export type t_PostShippingRatesShippingRateTokenBodySchema = {
  active?: boolean
  expand?: string[]
  fixed_amount?: {
    currency_options?: {
      [key: string]: {
        amount?: number
        tax_behavior?: "exclusive" | "inclusive" | "unspecified"
      }
    }
  }
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  tax_behavior?: "exclusive" | "inclusive" | "unspecified"
}

export type t_PostShippingRatesShippingRateTokenParamSchema = {
  shipping_rate_token: string
}

export type t_PostSourcesBodySchema = {
  amount?: number
  currency?: string
  customer?: string
  expand?: string[]
  flow?: "code_verification" | "none" | "receiver" | "redirect"
  mandate?: {
    acceptance?: {
      date?: number
      ip?: string
      offline?: {
        contact_email: string
      }
      online?: {
        date?: number
        ip?: string
        user_agent?: string
      }
      status: "accepted" | "pending" | "refused" | "revoked"
      type?: "offline" | "online"
      user_agent?: string
    }
    amount?: number | ""
    currency?: string
    interval?: "one_time" | "scheduled" | "variable"
    notification_method?:
      | "deprecated_none"
      | "email"
      | "manual"
      | "none"
      | "stripe_email"
  }
  metadata?: {
    [key: string]: string
  }
  original_source?: string
  owner?: {
    address?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    email?: string
    name?: string
    phone?: string
  }
  receiver?: {
    refund_attributes_method?: "email" | "manual" | "none"
  }
  redirect?: {
    return_url: string
  }
  source_order?: {
    items?: {
      amount?: number
      currency?: string
      description?: string
      parent?: string
      quantity?: number
      type?: "discount" | "shipping" | "sku" | "tax"
    }[]
    shipping?: {
      address: {
        city?: string
        country?: string
        line1: string
        line2?: string
        postal_code?: string
        state?: string
      }
      carrier?: string
      name?: string
      phone?: string
      tracking_number?: string
    }
  }
  statement_descriptor?: string
  token?: string
  type?: string
  usage?: "reusable" | "single_use"
}

export type t_PostSourcesSourceBodySchema = {
  amount?: number
  expand?: string[]
  mandate?: {
    acceptance?: {
      date?: number
      ip?: string
      offline?: {
        contact_email: string
      }
      online?: {
        date?: number
        ip?: string
        user_agent?: string
      }
      status: "accepted" | "pending" | "refused" | "revoked"
      type?: "offline" | "online"
      user_agent?: string
    }
    amount?: number | ""
    currency?: string
    interval?: "one_time" | "scheduled" | "variable"
    notification_method?:
      | "deprecated_none"
      | "email"
      | "manual"
      | "none"
      | "stripe_email"
  }
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  owner?: {
    address?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    email?: string
    name?: string
    phone?: string
  }
  source_order?: {
    items?: {
      amount?: number
      currency?: string
      description?: string
      parent?: string
      quantity?: number
      type?: "discount" | "shipping" | "sku" | "tax"
    }[]
    shipping?: {
      address: {
        city?: string
        country?: string
        line1: string
        line2?: string
        postal_code?: string
        state?: string
      }
      carrier?: string
      name?: string
      phone?: string
      tracking_number?: string
    }
  }
}

export type t_PostSourcesSourceParamSchema = {
  source: string
}

export type t_PostSourcesSourceVerifyBodySchema = {
  expand?: string[]
  values: string[]
}

export type t_PostSourcesSourceVerifyParamSchema = {
  source: string
}

export type t_PostSubscriptionItemsBodySchema = {
  billing_thresholds?:
    | {
        usage_gte: number
      }
    | ""
  expand?: string[]
  metadata?: {
    [key: string]: string
  }
  payment_behavior?:
    | "allow_incomplete"
    | "default_incomplete"
    | "error_if_incomplete"
    | "pending_if_incomplete"
  price?: string
  price_data?: {
    currency: string
    product: string
    recurring: {
      interval: "day" | "month" | "week" | "year"
      interval_count?: number
    }
    tax_behavior?: "exclusive" | "inclusive" | "unspecified"
    unit_amount?: number
    unit_amount_decimal?: string
  }
  proration_behavior?: "always_invoice" | "create_prorations" | "none"
  proration_date?: number
  quantity?: number
  subscription: string
  tax_rates?: string[] | ""
}

export type t_PostSubscriptionItemsItemBodySchema = {
  billing_thresholds?:
    | {
        usage_gte: number
      }
    | ""
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  off_session?: boolean
  payment_behavior?:
    | "allow_incomplete"
    | "default_incomplete"
    | "error_if_incomplete"
    | "pending_if_incomplete"
  price?: string
  price_data?: {
    currency: string
    product: string
    recurring: {
      interval: "day" | "month" | "week" | "year"
      interval_count?: number
    }
    tax_behavior?: "exclusive" | "inclusive" | "unspecified"
    unit_amount?: number
    unit_amount_decimal?: string
  }
  proration_behavior?: "always_invoice" | "create_prorations" | "none"
  proration_date?: number
  quantity?: number
  tax_rates?: string[] | ""
}

export type t_PostSubscriptionItemsItemParamSchema = {
  item: string
}

export type t_PostSubscriptionItemsSubscriptionItemUsageRecordsBodySchema = {
  action?: "increment" | "set"
  expand?: string[]
  quantity: number
  timestamp?: "now" | number
}

export type t_PostSubscriptionItemsSubscriptionItemUsageRecordsParamSchema = {
  subscription_item: string
}

export type t_PostSubscriptionSchedulesBodySchema = {
  customer?: string
  default_settings?: {
    application_fee_percent?: number
    automatic_tax?: {
      enabled: boolean
    }
    billing_cycle_anchor?: "automatic" | "phase_start"
    billing_thresholds?:
      | {
          amount_gte?: number
          reset_billing_cycle_anchor?: boolean
        }
      | ""
    collection_method?: "charge_automatically" | "send_invoice"
    default_payment_method?: string
    description?: string | ""
    invoice_settings?: {
      days_until_due?: number
    }
    on_behalf_of?: string | ""
    transfer_data?:
      | {
          amount_percent?: number
          destination: string
        }
      | ""
  }
  end_behavior?: "cancel" | "none" | "release" | "renew"
  expand?: string[]
  from_subscription?: string
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  phases?: {
    add_invoice_items?: {
      price?: string
      price_data?: {
        currency: string
        product: string
        tax_behavior?: "exclusive" | "inclusive" | "unspecified"
        unit_amount?: number
        unit_amount_decimal?: string
      }
      quantity?: number
      tax_rates?: string[] | ""
    }[]
    application_fee_percent?: number
    automatic_tax?: {
      enabled: boolean
    }
    billing_cycle_anchor?: "automatic" | "phase_start"
    billing_thresholds?:
      | {
          amount_gte?: number
          reset_billing_cycle_anchor?: boolean
        }
      | ""
    collection_method?: "charge_automatically" | "send_invoice"
    coupon?: string
    currency?: string
    default_payment_method?: string
    default_tax_rates?: string[] | ""
    description?: string | ""
    end_date?: number
    invoice_settings?: {
      days_until_due?: number
    }
    items: {
      billing_thresholds?:
        | {
            usage_gte: number
          }
        | ""
      metadata?: {
        [key: string]: string
      }
      price?: string
      price_data?: {
        currency: string
        product: string
        recurring: {
          interval: "day" | "month" | "week" | "year"
          interval_count?: number
        }
        tax_behavior?: "exclusive" | "inclusive" | "unspecified"
        unit_amount?: number
        unit_amount_decimal?: string
      }
      quantity?: number
      tax_rates?: string[] | ""
    }[]
    iterations?: number
    metadata?: {
      [key: string]: string
    }
    on_behalf_of?: string
    proration_behavior?: "always_invoice" | "create_prorations" | "none"
    transfer_data?: {
      amount_percent?: number
      destination: string
    }
    trial?: boolean
    trial_end?: number
  }[]
  start_date?: number | "now"
}

export type t_PostSubscriptionSchedulesScheduleBodySchema = {
  default_settings?: {
    application_fee_percent?: number
    automatic_tax?: {
      enabled: boolean
    }
    billing_cycle_anchor?: "automatic" | "phase_start"
    billing_thresholds?:
      | {
          amount_gte?: number
          reset_billing_cycle_anchor?: boolean
        }
      | ""
    collection_method?: "charge_automatically" | "send_invoice"
    default_payment_method?: string
    description?: string | ""
    invoice_settings?: {
      days_until_due?: number
    }
    on_behalf_of?: string | ""
    transfer_data?:
      | {
          amount_percent?: number
          destination: string
        }
      | ""
  }
  end_behavior?: "cancel" | "none" | "release" | "renew"
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  phases?: {
    add_invoice_items?: {
      price?: string
      price_data?: {
        currency: string
        product: string
        tax_behavior?: "exclusive" | "inclusive" | "unspecified"
        unit_amount?: number
        unit_amount_decimal?: string
      }
      quantity?: number
      tax_rates?: string[] | ""
    }[]
    application_fee_percent?: number
    automatic_tax?: {
      enabled: boolean
    }
    billing_cycle_anchor?: "automatic" | "phase_start"
    billing_thresholds?:
      | {
          amount_gte?: number
          reset_billing_cycle_anchor?: boolean
        }
      | ""
    collection_method?: "charge_automatically" | "send_invoice"
    coupon?: string
    default_payment_method?: string
    default_tax_rates?: string[] | ""
    description?: string | ""
    end_date?: number | "now"
    invoice_settings?: {
      days_until_due?: number
    }
    items: {
      billing_thresholds?:
        | {
            usage_gte: number
          }
        | ""
      metadata?: {
        [key: string]: string
      }
      price?: string
      price_data?: {
        currency: string
        product: string
        recurring: {
          interval: "day" | "month" | "week" | "year"
          interval_count?: number
        }
        tax_behavior?: "exclusive" | "inclusive" | "unspecified"
        unit_amount?: number
        unit_amount_decimal?: string
      }
      quantity?: number
      tax_rates?: string[] | ""
    }[]
    iterations?: number
    metadata?: {
      [key: string]: string
    }
    on_behalf_of?: string
    proration_behavior?: "always_invoice" | "create_prorations" | "none"
    start_date?: number | "now"
    transfer_data?: {
      amount_percent?: number
      destination: string
    }
    trial?: boolean
    trial_end?: number | "now"
  }[]
  proration_behavior?: "always_invoice" | "create_prorations" | "none"
}

export type t_PostSubscriptionSchedulesScheduleParamSchema = {
  schedule: string
}

export type t_PostSubscriptionSchedulesScheduleCancelBodySchema = {
  expand?: string[]
  invoice_now?: boolean
  prorate?: boolean
}

export type t_PostSubscriptionSchedulesScheduleCancelParamSchema = {
  schedule: string
}

export type t_PostSubscriptionSchedulesScheduleReleaseBodySchema = {
  expand?: string[]
  preserve_cancel_date?: boolean
}

export type t_PostSubscriptionSchedulesScheduleReleaseParamSchema = {
  schedule: string
}

export type t_PostSubscriptionsBodySchema = {
  add_invoice_items?: {
    price?: string
    price_data?: {
      currency: string
      product: string
      tax_behavior?: "exclusive" | "inclusive" | "unspecified"
      unit_amount?: number
      unit_amount_decimal?: string
    }
    quantity?: number
    tax_rates?: string[] | ""
  }[]
  application_fee_percent?: number
  automatic_tax?: {
    enabled: boolean
  }
  backdate_start_date?: number
  billing_cycle_anchor?: number
  billing_thresholds?:
    | {
        amount_gte?: number
        reset_billing_cycle_anchor?: boolean
      }
    | ""
  cancel_at?: number
  cancel_at_period_end?: boolean
  collection_method?: "charge_automatically" | "send_invoice"
  coupon?: string
  currency?: string
  customer: string
  days_until_due?: number
  default_payment_method?: string
  default_source?: string
  default_tax_rates?: string[] | ""
  description?: string
  expand?: string[]
  items?: {
    billing_thresholds?:
      | {
          usage_gte: number
        }
      | ""
    metadata?: {
      [key: string]: string
    }
    price?: string
    price_data?: {
      currency: string
      product: string
      recurring: {
        interval: "day" | "month" | "week" | "year"
        interval_count?: number
      }
      tax_behavior?: "exclusive" | "inclusive" | "unspecified"
      unit_amount?: number
      unit_amount_decimal?: string
    }
    quantity?: number
    tax_rates?: string[] | ""
  }[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  off_session?: boolean
  on_behalf_of?: string | ""
  payment_behavior?:
    | "allow_incomplete"
    | "default_incomplete"
    | "error_if_incomplete"
    | "pending_if_incomplete"
  payment_settings?: {
    payment_method_options?: {
      acss_debit?:
        | {
            mandate_options?: {
              transaction_type?: "business" | "personal"
            }
            verification_method?: "automatic" | "instant" | "microdeposits"
          }
        | ""
      bancontact?:
        | {
            preferred_language?: "de" | "en" | "fr" | "nl"
          }
        | ""
      card?:
        | {
            mandate_options?: {
              amount?: number
              amount_type?: "fixed" | "maximum"
              description?: string
            }
            network?:
              | "amex"
              | "cartes_bancaires"
              | "diners"
              | "discover"
              | "eftpos_au"
              | "interac"
              | "jcb"
              | "mastercard"
              | "unionpay"
              | "unknown"
              | "visa"
            request_three_d_secure?: "any" | "automatic"
          }
        | ""
      customer_balance?:
        | {
            bank_transfer?: {
              eu_bank_transfer?: {
                country: string
              }
              type?: string
            }
            funding_type?: string
          }
        | ""
      konbini?: EmptyObject | ""
      us_bank_account?:
        | {
            financial_connections?: {
              permissions?: (
                | "balances"
                | "ownership"
                | "payment_method"
                | "transactions"
              )[]
              prefetch?: "balances"[]
            }
            verification_method?: "automatic" | "instant" | "microdeposits"
          }
        | ""
    }
    payment_method_types?:
      | (
          | "ach_credit_transfer"
          | "ach_debit"
          | "acss_debit"
          | "au_becs_debit"
          | "bacs_debit"
          | "bancontact"
          | "boleto"
          | "card"
          | "cashapp"
          | "customer_balance"
          | "fpx"
          | "giropay"
          | "grabpay"
          | "ideal"
          | "konbini"
          | "link"
          | "paynow"
          | "paypal"
          | "promptpay"
          | "sepa_debit"
          | "sofort"
          | "us_bank_account"
          | "wechat_pay"
        )[]
      | ""
    save_default_payment_method?: "off" | "on_subscription"
  }
  pending_invoice_item_interval?:
    | {
        interval: "day" | "month" | "week" | "year"
        interval_count?: number
      }
    | ""
  promotion_code?: string
  proration_behavior?: "always_invoice" | "create_prorations" | "none"
  transfer_data?: {
    amount_percent?: number
    destination: string
  }
  trial_end?: "now" | number
  trial_from_plan?: boolean
  trial_period_days?: number
  trial_settings?: {
    end_behavior: {
      missing_payment_method: "cancel" | "create_invoice" | "pause"
    }
  }
}

export type t_PostSubscriptionsSubscriptionExposedIdBodySchema = {
  add_invoice_items?: {
    price?: string
    price_data?: {
      currency: string
      product: string
      tax_behavior?: "exclusive" | "inclusive" | "unspecified"
      unit_amount?: number
      unit_amount_decimal?: string
    }
    quantity?: number
    tax_rates?: string[] | ""
  }[]
  application_fee_percent?: number
  automatic_tax?: {
    enabled: boolean
  }
  billing_cycle_anchor?: "now" | "unchanged"
  billing_thresholds?:
    | {
        amount_gte?: number
        reset_billing_cycle_anchor?: boolean
      }
    | ""
  cancel_at?: number | ""
  cancel_at_period_end?: boolean
  cancellation_details?: {
    comment?: string | ""
    feedback?:
      | ""
      | "customer_service"
      | "low_quality"
      | "missing_features"
      | "other"
      | "switched_service"
      | "too_complex"
      | "too_expensive"
      | "unused"
  }
  collection_method?: "charge_automatically" | "send_invoice"
  coupon?: string
  days_until_due?: number
  default_payment_method?: string
  default_source?: string | ""
  default_tax_rates?: string[] | ""
  description?: string | ""
  expand?: string[]
  items?: {
    billing_thresholds?:
      | {
          usage_gte: number
        }
      | ""
    clear_usage?: boolean
    deleted?: boolean
    id?: string
    metadata?:
      | {
          [key: string]: string
        }
      | ""
    price?: string
    price_data?: {
      currency: string
      product: string
      recurring: {
        interval: "day" | "month" | "week" | "year"
        interval_count?: number
      }
      tax_behavior?: "exclusive" | "inclusive" | "unspecified"
      unit_amount?: number
      unit_amount_decimal?: string
    }
    quantity?: number
    tax_rates?: string[] | ""
  }[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  off_session?: boolean
  on_behalf_of?: string | ""
  pause_collection?:
    | {
        behavior: "keep_as_draft" | "mark_uncollectible" | "void"
        resumes_at?: number
      }
    | ""
  payment_behavior?:
    | "allow_incomplete"
    | "default_incomplete"
    | "error_if_incomplete"
    | "pending_if_incomplete"
  payment_settings?: {
    payment_method_options?: {
      acss_debit?:
        | {
            mandate_options?: {
              transaction_type?: "business" | "personal"
            }
            verification_method?: "automatic" | "instant" | "microdeposits"
          }
        | ""
      bancontact?:
        | {
            preferred_language?: "de" | "en" | "fr" | "nl"
          }
        | ""
      card?:
        | {
            mandate_options?: {
              amount?: number
              amount_type?: "fixed" | "maximum"
              description?: string
            }
            network?:
              | "amex"
              | "cartes_bancaires"
              | "diners"
              | "discover"
              | "eftpos_au"
              | "interac"
              | "jcb"
              | "mastercard"
              | "unionpay"
              | "unknown"
              | "visa"
            request_three_d_secure?: "any" | "automatic"
          }
        | ""
      customer_balance?:
        | {
            bank_transfer?: {
              eu_bank_transfer?: {
                country: string
              }
              type?: string
            }
            funding_type?: string
          }
        | ""
      konbini?: EmptyObject | ""
      us_bank_account?:
        | {
            financial_connections?: {
              permissions?: (
                | "balances"
                | "ownership"
                | "payment_method"
                | "transactions"
              )[]
              prefetch?: "balances"[]
            }
            verification_method?: "automatic" | "instant" | "microdeposits"
          }
        | ""
    }
    payment_method_types?:
      | (
          | "ach_credit_transfer"
          | "ach_debit"
          | "acss_debit"
          | "au_becs_debit"
          | "bacs_debit"
          | "bancontact"
          | "boleto"
          | "card"
          | "cashapp"
          | "customer_balance"
          | "fpx"
          | "giropay"
          | "grabpay"
          | "ideal"
          | "konbini"
          | "link"
          | "paynow"
          | "paypal"
          | "promptpay"
          | "sepa_debit"
          | "sofort"
          | "us_bank_account"
          | "wechat_pay"
        )[]
      | ""
    save_default_payment_method?: "off" | "on_subscription"
  }
  pending_invoice_item_interval?:
    | {
        interval: "day" | "month" | "week" | "year"
        interval_count?: number
      }
    | ""
  promotion_code?: string
  proration_behavior?: "always_invoice" | "create_prorations" | "none"
  proration_date?: number
  transfer_data?:
    | {
        amount_percent?: number
        destination: string
      }
    | ""
  trial_end?: "now" | number
  trial_from_plan?: boolean
  trial_settings?: {
    end_behavior: {
      missing_payment_method: "cancel" | "create_invoice" | "pause"
    }
  }
}

export type t_PostSubscriptionsSubscriptionExposedIdParamSchema = {
  subscription_exposed_id: string
}

export type t_PostSubscriptionsSubscriptionResumeBodySchema = {
  billing_cycle_anchor?: "now" | "unchanged"
  expand?: string[]
  proration_behavior?: "always_invoice" | "create_prorations" | "none"
  proration_date?: number
}

export type t_PostSubscriptionsSubscriptionResumeParamSchema = {
  subscription: string
}

export type t_PostTaxCalculationsBodySchema = {
  currency: string
  customer?: string
  customer_details?: {
    address?: {
      city?: string | ""
      country: string
      line1?: string | ""
      line2?: string | ""
      postal_code?: string | ""
      state?: string | ""
    }
    address_source?: "billing" | "shipping"
    ip_address?: string
    tax_ids?: {
      type:
        | "ad_nrt"
        | "ae_trn"
        | "ar_cuit"
        | "au_abn"
        | "au_arn"
        | "bg_uic"
        | "bo_tin"
        | "br_cnpj"
        | "br_cpf"
        | "ca_bn"
        | "ca_gst_hst"
        | "ca_pst_bc"
        | "ca_pst_mb"
        | "ca_pst_sk"
        | "ca_qst"
        | "ch_vat"
        | "cl_tin"
        | "cn_tin"
        | "co_nit"
        | "cr_tin"
        | "do_rcn"
        | "ec_ruc"
        | "eg_tin"
        | "es_cif"
        | "eu_oss_vat"
        | "eu_vat"
        | "gb_vat"
        | "ge_vat"
        | "hk_br"
        | "hu_tin"
        | "id_npwp"
        | "il_vat"
        | "in_gst"
        | "is_vat"
        | "jp_cn"
        | "jp_rn"
        | "jp_trn"
        | "ke_pin"
        | "kr_brn"
        | "li_uid"
        | "mx_rfc"
        | "my_frp"
        | "my_itn"
        | "my_sst"
        | "no_vat"
        | "nz_gst"
        | "pe_ruc"
        | "ph_tin"
        | "ro_tin"
        | "rs_pib"
        | "ru_inn"
        | "ru_kpp"
        | "sa_vat"
        | "sg_gst"
        | "sg_uen"
        | "si_tin"
        | "sv_nit"
        | "th_vat"
        | "tr_tin"
        | "tw_vat"
        | "ua_vat"
        | "us_ein"
        | "uy_ruc"
        | "ve_rif"
        | "vn_tin"
        | "za_vat"
      value: string
    }[]
    taxability_override?: "customer_exempt" | "none" | "reverse_charge"
  }
  expand?: string[]
  line_items: {
    amount: number
    product?: string
    quantity?: number
    reference?: string
    tax_behavior?: "exclusive" | "inclusive"
    tax_code?: string
  }[]
  shipping_cost?: {
    amount?: number
    shipping_rate?: string
    tax_behavior?: "exclusive" | "inclusive"
    tax_code?: string
  }
  tax_date?: number
}

export type t_PostTaxRatesBodySchema = {
  active?: boolean
  country?: string
  description?: string
  display_name: string
  expand?: string[]
  inclusive: boolean
  jurisdiction?: string
  metadata?: {
    [key: string]: string
  }
  percentage: number
  state?: string
  tax_type?:
    | "amusement_tax"
    | "communications_tax"
    | "gst"
    | "hst"
    | "igst"
    | "jct"
    | "lease_tax"
    | "pst"
    | "qst"
    | "rst"
    | "sales_tax"
    | "service_tax"
    | "vat"
}

export type t_PostTaxRatesTaxRateBodySchema = {
  active?: boolean
  country?: string
  description?: string
  display_name?: string
  expand?: string[]
  jurisdiction?: string
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  state?: string
  tax_type?:
    | "amusement_tax"
    | "communications_tax"
    | "gst"
    | "hst"
    | "igst"
    | "jct"
    | "lease_tax"
    | "pst"
    | "qst"
    | "rst"
    | "sales_tax"
    | "service_tax"
    | "vat"
}

export type t_PostTaxRatesTaxRateParamSchema = {
  tax_rate: string
}

export type t_PostTaxSettingsBodySchema = {
  defaults?: {
    tax_behavior?: "exclusive" | "inclusive" | "inferred_by_currency"
    tax_code?: string
  }
  expand?: string[]
  head_office?: {
    address: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
  }
}

export type t_PostTaxTransactionsCreateFromCalculationBodySchema = {
  calculation: string
  expand?: string[]
  metadata?: {
    [key: string]: string
  }
  reference: string
}

export type t_PostTaxTransactionsCreateReversalBodySchema = {
  expand?: string[]
  flat_amount?: number
  line_items?: {
    amount: number
    amount_tax: number
    metadata?: {
      [key: string]: string
    }
    original_line_item: string
    quantity?: number
    reference: string
  }[]
  metadata?: {
    [key: string]: string
  }
  mode: "full" | "partial"
  original_transaction: string
  reference: string
  shipping_cost?: {
    amount: number
    amount_tax: number
  }
}

export type t_PostTerminalConfigurationsBodySchema = {
  bbpos_wisepos_e?: {
    splashscreen?: string | ""
  }
  expand?: string[]
  tipping?:
    | {
        aud?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        cad?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        chf?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        czk?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        dkk?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        eur?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        gbp?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        hkd?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        myr?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        nok?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        nzd?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        sek?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        sgd?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        usd?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
      }
    | ""
  verifone_p400?: {
    splashscreen?: string | ""
  }
}

export type t_PostTerminalConfigurationsConfigurationBodySchema = {
  bbpos_wisepos_e?:
    | {
        splashscreen?: string | ""
      }
    | ""
  expand?: string[]
  tipping?:
    | {
        aud?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        cad?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        chf?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        czk?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        dkk?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        eur?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        gbp?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        hkd?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        myr?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        nok?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        nzd?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        sek?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        sgd?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
        usd?: {
          fixed_amounts?: number[]
          percentages?: number[]
          smart_tip_threshold?: number
        }
      }
    | ""
  verifone_p400?:
    | {
        splashscreen?: string | ""
      }
    | ""
}

export type t_PostTerminalConfigurationsConfigurationParamSchema = {
  configuration: string
}

export type t_PostTerminalConnectionTokensBodySchema = {
  expand?: string[]
  location?: string
}

export type t_PostTerminalLocationsBodySchema = {
  address: {
    city?: string
    country: string
    line1?: string
    line2?: string
    postal_code?: string
    state?: string
  }
  configuration_overrides?: string
  display_name: string
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostTerminalLocationsLocationBodySchema = {
  address?: {
    city?: string
    country?: string
    line1?: string
    line2?: string
    postal_code?: string
    state?: string
  }
  configuration_overrides?: string | ""
  display_name?: string
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostTerminalLocationsLocationParamSchema = {
  location: string
}

export type t_PostTerminalReadersBodySchema = {
  expand?: string[]
  label?: string
  location?: string
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  registration_code: string
}

export type t_PostTerminalReadersReaderBodySchema = {
  expand?: string[]
  label?: string | ""
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostTerminalReadersReaderParamSchema = {
  reader: string
}

export type t_PostTerminalReadersReaderCancelActionBodySchema = {
  expand?: string[]
}

export type t_PostTerminalReadersReaderCancelActionParamSchema = {
  reader: string
}

export type t_PostTerminalReadersReaderProcessPaymentIntentBodySchema = {
  expand?: string[]
  payment_intent: string
  process_config?: {
    skip_tipping?: boolean
    tipping?: {
      amount_eligible?: number
    }
  }
}

export type t_PostTerminalReadersReaderProcessPaymentIntentParamSchema = {
  reader: string
}

export type t_PostTerminalReadersReaderProcessSetupIntentBodySchema = {
  customer_consent_collected: boolean
  expand?: string[]
  process_config?: EmptyObject
  setup_intent: string
}

export type t_PostTerminalReadersReaderProcessSetupIntentParamSchema = {
  reader: string
}

export type t_PostTerminalReadersReaderRefundPaymentBodySchema = {
  amount?: number
  charge?: string
  expand?: string[]
  metadata?: {
    [key: string]: string
  }
  payment_intent?: string
  refund_application_fee?: boolean
  reverse_transfer?: boolean
}

export type t_PostTerminalReadersReaderRefundPaymentParamSchema = {
  reader: string
}

export type t_PostTerminalReadersReaderSetReaderDisplayBodySchema = {
  cart?: {
    currency: string
    line_items: {
      amount: number
      description: string
      quantity: number
    }[]
    tax?: number
    total: number
  }
  expand?: string[]
  type: "cart"
}

export type t_PostTerminalReadersReaderSetReaderDisplayParamSchema = {
  reader: string
}

export type t_PostTestHelpersCustomersCustomerFundCashBalanceBodySchema = {
  amount: number
  currency: string
  expand?: string[]
  reference?: string
}

export type t_PostTestHelpersCustomersCustomerFundCashBalanceParamSchema = {
  customer: string
}

export type t_PostTestHelpersIssuingAuthorizationsBodySchema = {
  amount: number
  amount_details?: {
    atm_fee?: number
    cashback_amount?: number
  }
  authorization_method?:
    | "chip"
    | "contactless"
    | "keyed_in"
    | "online"
    | "swipe"
  card: string
  currency?: string
  expand?: string[]
  is_amount_controllable?: boolean
  merchant_data?: {
    category?:
      | "ac_refrigeration_repair"
      | "accounting_bookkeeping_services"
      | "advertising_services"
      | "agricultural_cooperative"
      | "airlines_air_carriers"
      | "airports_flying_fields"
      | "ambulance_services"
      | "amusement_parks_carnivals"
      | "antique_reproductions"
      | "antique_shops"
      | "aquariums"
      | "architectural_surveying_services"
      | "art_dealers_and_galleries"
      | "artists_supply_and_craft_shops"
      | "auto_and_home_supply_stores"
      | "auto_body_repair_shops"
      | "auto_paint_shops"
      | "auto_service_shops"
      | "automated_cash_disburse"
      | "automated_fuel_dispensers"
      | "automobile_associations"
      | "automotive_parts_and_accessories_stores"
      | "automotive_tire_stores"
      | "bail_and_bond_payments"
      | "bakeries"
      | "bands_orchestras"
      | "barber_and_beauty_shops"
      | "betting_casino_gambling"
      | "bicycle_shops"
      | "billiard_pool_establishments"
      | "boat_dealers"
      | "boat_rentals_and_leases"
      | "book_stores"
      | "books_periodicals_and_newspapers"
      | "bowling_alleys"
      | "bus_lines"
      | "business_secretarial_schools"
      | "buying_shopping_services"
      | "cable_satellite_and_other_pay_television_and_radio"
      | "camera_and_photographic_supply_stores"
      | "candy_nut_and_confectionery_stores"
      | "car_and_truck_dealers_new_used"
      | "car_and_truck_dealers_used_only"
      | "car_rental_agencies"
      | "car_washes"
      | "carpentry_services"
      | "carpet_upholstery_cleaning"
      | "caterers"
      | "charitable_and_social_service_organizations_fundraising"
      | "chemicals_and_allied_products"
      | "child_care_services"
      | "childrens_and_infants_wear_stores"
      | "chiropodists_podiatrists"
      | "chiropractors"
      | "cigar_stores_and_stands"
      | "civic_social_fraternal_associations"
      | "cleaning_and_maintenance"
      | "clothing_rental"
      | "colleges_universities"
      | "commercial_equipment"
      | "commercial_footwear"
      | "commercial_photography_art_and_graphics"
      | "commuter_transport_and_ferries"
      | "computer_network_services"
      | "computer_programming"
      | "computer_repair"
      | "computer_software_stores"
      | "computers_peripherals_and_software"
      | "concrete_work_services"
      | "construction_materials"
      | "consulting_public_relations"
      | "correspondence_schools"
      | "cosmetic_stores"
      | "counseling_services"
      | "country_clubs"
      | "courier_services"
      | "court_costs"
      | "credit_reporting_agencies"
      | "cruise_lines"
      | "dairy_products_stores"
      | "dance_hall_studios_schools"
      | "dating_escort_services"
      | "dentists_orthodontists"
      | "department_stores"
      | "detective_agencies"
      | "digital_goods_applications"
      | "digital_goods_games"
      | "digital_goods_large_volume"
      | "digital_goods_media"
      | "direct_marketing_catalog_merchant"
      | "direct_marketing_combination_catalog_and_retail_merchant"
      | "direct_marketing_inbound_telemarketing"
      | "direct_marketing_insurance_services"
      | "direct_marketing_other"
      | "direct_marketing_outbound_telemarketing"
      | "direct_marketing_subscription"
      | "direct_marketing_travel"
      | "discount_stores"
      | "doctors"
      | "door_to_door_sales"
      | "drapery_window_covering_and_upholstery_stores"
      | "drinking_places"
      | "drug_stores_and_pharmacies"
      | "drugs_drug_proprietaries_and_druggist_sundries"
      | "dry_cleaners"
      | "durable_goods"
      | "duty_free_stores"
      | "eating_places_restaurants"
      | "educational_services"
      | "electric_razor_stores"
      | "electric_vehicle_charging"
      | "electrical_parts_and_equipment"
      | "electrical_services"
      | "electronics_repair_shops"
      | "electronics_stores"
      | "elementary_secondary_schools"
      | "emergency_services_gcas_visa_use_only"
      | "employment_temp_agencies"
      | "equipment_rental"
      | "exterminating_services"
      | "family_clothing_stores"
      | "fast_food_restaurants"
      | "financial_institutions"
      | "fines_government_administrative_entities"
      | "fireplace_fireplace_screens_and_accessories_stores"
      | "floor_covering_stores"
      | "florists"
      | "florists_supplies_nursery_stock_and_flowers"
      | "freezer_and_locker_meat_provisioners"
      | "fuel_dealers_non_automotive"
      | "funeral_services_crematories"
      | "furniture_home_furnishings_and_equipment_stores_except_appliances"
      | "furniture_repair_refinishing"
      | "furriers_and_fur_shops"
      | "general_services"
      | "gift_card_novelty_and_souvenir_shops"
      | "glass_paint_and_wallpaper_stores"
      | "glassware_crystal_stores"
      | "golf_courses_public"
      | "government_licensed_horse_dog_racing_us_region_only"
      | "government_licensed_online_casions_online_gambling_us_region_only"
      | "government_owned_lotteries_non_us_region"
      | "government_owned_lotteries_us_region_only"
      | "government_services"
      | "grocery_stores_supermarkets"
      | "hardware_equipment_and_supplies"
      | "hardware_stores"
      | "health_and_beauty_spas"
      | "hearing_aids_sales_and_supplies"
      | "heating_plumbing_a_c"
      | "hobby_toy_and_game_shops"
      | "home_supply_warehouse_stores"
      | "hospitals"
      | "hotels_motels_and_resorts"
      | "household_appliance_stores"
      | "industrial_supplies"
      | "information_retrieval_services"
      | "insurance_default"
      | "insurance_underwriting_premiums"
      | "intra_company_purchases"
      | "jewelry_stores_watches_clocks_and_silverware_stores"
      | "landscaping_services"
      | "laundries"
      | "laundry_cleaning_services"
      | "legal_services_attorneys"
      | "luggage_and_leather_goods_stores"
      | "lumber_building_materials_stores"
      | "manual_cash_disburse"
      | "marinas_service_and_supplies"
      | "marketplaces"
      | "masonry_stonework_and_plaster"
      | "massage_parlors"
      | "medical_and_dental_labs"
      | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
      | "medical_services"
      | "membership_organizations"
      | "mens_and_boys_clothing_and_accessories_stores"
      | "mens_womens_clothing_stores"
      | "metal_service_centers"
      | "miscellaneous_apparel_and_accessory_shops"
      | "miscellaneous_auto_dealers"
      | "miscellaneous_business_services"
      | "miscellaneous_food_stores"
      | "miscellaneous_general_merchandise"
      | "miscellaneous_general_services"
      | "miscellaneous_home_furnishing_specialty_stores"
      | "miscellaneous_publishing_and_printing"
      | "miscellaneous_recreation_services"
      | "miscellaneous_repair_shops"
      | "miscellaneous_specialty_retail"
      | "mobile_home_dealers"
      | "motion_picture_theaters"
      | "motor_freight_carriers_and_trucking"
      | "motor_homes_dealers"
      | "motor_vehicle_supplies_and_new_parts"
      | "motorcycle_shops_and_dealers"
      | "motorcycle_shops_dealers"
      | "music_stores_musical_instruments_pianos_and_sheet_music"
      | "news_dealers_and_newsstands"
      | "non_fi_money_orders"
      | "non_fi_stored_value_card_purchase_load"
      | "nondurable_goods"
      | "nurseries_lawn_and_garden_supply_stores"
      | "nursing_personal_care"
      | "office_and_commercial_furniture"
      | "opticians_eyeglasses"
      | "optometrists_ophthalmologist"
      | "orthopedic_goods_prosthetic_devices"
      | "osteopaths"
      | "package_stores_beer_wine_and_liquor"
      | "paints_varnishes_and_supplies"
      | "parking_lots_garages"
      | "passenger_railways"
      | "pawn_shops"
      | "pet_shops_pet_food_and_supplies"
      | "petroleum_and_petroleum_products"
      | "photo_developing"
      | "photographic_photocopy_microfilm_equipment_and_supplies"
      | "photographic_studios"
      | "picture_video_production"
      | "piece_goods_notions_and_other_dry_goods"
      | "plumbing_heating_equipment_and_supplies"
      | "political_organizations"
      | "postal_services_government_only"
      | "precious_stones_and_metals_watches_and_jewelry"
      | "professional_services"
      | "public_warehousing_and_storage"
      | "quick_copy_repro_and_blueprint"
      | "railroads"
      | "real_estate_agents_and_managers_rentals"
      | "record_stores"
      | "recreational_vehicle_rentals"
      | "religious_goods_stores"
      | "religious_organizations"
      | "roofing_siding_sheet_metal"
      | "secretarial_support_services"
      | "security_brokers_dealers"
      | "service_stations"
      | "sewing_needlework_fabric_and_piece_goods_stores"
      | "shoe_repair_hat_cleaning"
      | "shoe_stores"
      | "small_appliance_repair"
      | "snowmobile_dealers"
      | "special_trade_services"
      | "specialty_cleaning"
      | "sporting_goods_stores"
      | "sporting_recreation_camps"
      | "sports_and_riding_apparel_stores"
      | "sports_clubs_fields"
      | "stamp_and_coin_stores"
      | "stationary_office_supplies_printing_and_writing_paper"
      | "stationery_stores_office_and_school_supply_stores"
      | "swimming_pools_sales"
      | "t_ui_travel_germany"
      | "tailors_alterations"
      | "tax_payments_government_agencies"
      | "tax_preparation_services"
      | "taxicabs_limousines"
      | "telecommunication_equipment_and_telephone_sales"
      | "telecommunication_services"
      | "telegraph_services"
      | "tent_and_awning_shops"
      | "testing_laboratories"
      | "theatrical_ticket_agencies"
      | "timeshares"
      | "tire_retreading_and_repair"
      | "tolls_bridge_fees"
      | "tourist_attractions_and_exhibits"
      | "towing_services"
      | "trailer_parks_campgrounds"
      | "transportation_services"
      | "travel_agencies_tour_operators"
      | "truck_stop_iteration"
      | "truck_utility_trailer_rentals"
      | "typesetting_plate_making_and_related_services"
      | "typewriter_stores"
      | "u_s_federal_government_agencies_or_departments"
      | "uniforms_commercial_clothing"
      | "used_merchandise_and_secondhand_stores"
      | "utilities"
      | "variety_stores"
      | "veterinary_services"
      | "video_amusement_game_supplies"
      | "video_game_arcades"
      | "video_tape_rental_stores"
      | "vocational_trade_schools"
      | "watch_jewelry_repair"
      | "welding_repair"
      | "wholesale_clubs"
      | "wig_and_toupee_stores"
      | "wires_money_orders"
      | "womens_accessory_and_specialty_shops"
      | "womens_ready_to_wear_stores"
      | "wrecking_and_salvage_yards"
    city?: string
    country?: string
    name?: string
    network_id?: string
    postal_code?: string
    state?: string
    terminal_id?: string
  }
  network_data?: {
    acquiring_institution_id?: string
  }
  verification_data?: {
    address_line1_check?: "match" | "mismatch" | "not_provided"
    address_postal_code_check?: "match" | "mismatch" | "not_provided"
    cvc_check?: "match" | "mismatch" | "not_provided"
    expiry_check?: "match" | "mismatch" | "not_provided"
  }
  wallet?: "apple_pay" | "google_pay" | "samsung_pay"
}

export type t_PostTestHelpersIssuingAuthorizationsAuthorizationCaptureBodySchema =
  {
    capture_amount?: number
    close_authorization?: boolean
    expand?: string[]
    purchase_details?: {
      flight?: {
        departure_at?: number
        passenger_name?: string
        refundable?: boolean
        segments?: {
          arrival_airport_code?: string
          carrier?: string
          departure_airport_code?: string
          flight_number?: string
          service_class?: string
          stopover_allowed?: boolean
        }[]
        travel_agency?: string
      }
      fuel?: {
        type?:
          | "diesel"
          | "other"
          | "unleaded_plus"
          | "unleaded_regular"
          | "unleaded_super"
        unit?: "liter" | "us_gallon"
        unit_cost_decimal?: string
        volume_decimal?: string
      }
      lodging?: {
        check_in_at?: number
        nights?: number
      }
      receipt?: {
        description?: string
        quantity?: string
        total?: number
        unit_cost?: number
      }[]
      reference?: string
    }
  }

export type t_PostTestHelpersIssuingAuthorizationsAuthorizationCaptureParamSchema =
  {
    authorization: string
  }

export type t_PostTestHelpersIssuingAuthorizationsAuthorizationExpireBodySchema =
  {
    expand?: string[]
  }

export type t_PostTestHelpersIssuingAuthorizationsAuthorizationExpireParamSchema =
  {
    authorization: string
  }

export type t_PostTestHelpersIssuingAuthorizationsAuthorizationIncrementBodySchema =
  {
    expand?: string[]
    increment_amount: number
    is_amount_controllable?: boolean
  }

export type t_PostTestHelpersIssuingAuthorizationsAuthorizationIncrementParamSchema =
  {
    authorization: string
  }

export type t_PostTestHelpersIssuingAuthorizationsAuthorizationReverseBodySchema =
  {
    expand?: string[]
    reverse_amount?: number
  }

export type t_PostTestHelpersIssuingAuthorizationsAuthorizationReverseParamSchema =
  {
    authorization: string
  }

export type t_PostTestHelpersIssuingCardsCardShippingDeliverBodySchema = {
  expand?: string[]
}

export type t_PostTestHelpersIssuingCardsCardShippingDeliverParamSchema = {
  card: string
}

export type t_PostTestHelpersIssuingCardsCardShippingFailBodySchema = {
  expand?: string[]
}

export type t_PostTestHelpersIssuingCardsCardShippingFailParamSchema = {
  card: string
}

export type t_PostTestHelpersIssuingCardsCardShippingReturnBodySchema = {
  expand?: string[]
}

export type t_PostTestHelpersIssuingCardsCardShippingReturnParamSchema = {
  card: string
}

export type t_PostTestHelpersIssuingCardsCardShippingShipBodySchema = {
  expand?: string[]
}

export type t_PostTestHelpersIssuingCardsCardShippingShipParamSchema = {
  card: string
}

export type t_PostTestHelpersIssuingTransactionsCreateForceCaptureBodySchema = {
  amount: number
  card: string
  currency?: string
  expand?: string[]
  merchant_data?: {
    category?:
      | "ac_refrigeration_repair"
      | "accounting_bookkeeping_services"
      | "advertising_services"
      | "agricultural_cooperative"
      | "airlines_air_carriers"
      | "airports_flying_fields"
      | "ambulance_services"
      | "amusement_parks_carnivals"
      | "antique_reproductions"
      | "antique_shops"
      | "aquariums"
      | "architectural_surveying_services"
      | "art_dealers_and_galleries"
      | "artists_supply_and_craft_shops"
      | "auto_and_home_supply_stores"
      | "auto_body_repair_shops"
      | "auto_paint_shops"
      | "auto_service_shops"
      | "automated_cash_disburse"
      | "automated_fuel_dispensers"
      | "automobile_associations"
      | "automotive_parts_and_accessories_stores"
      | "automotive_tire_stores"
      | "bail_and_bond_payments"
      | "bakeries"
      | "bands_orchestras"
      | "barber_and_beauty_shops"
      | "betting_casino_gambling"
      | "bicycle_shops"
      | "billiard_pool_establishments"
      | "boat_dealers"
      | "boat_rentals_and_leases"
      | "book_stores"
      | "books_periodicals_and_newspapers"
      | "bowling_alleys"
      | "bus_lines"
      | "business_secretarial_schools"
      | "buying_shopping_services"
      | "cable_satellite_and_other_pay_television_and_radio"
      | "camera_and_photographic_supply_stores"
      | "candy_nut_and_confectionery_stores"
      | "car_and_truck_dealers_new_used"
      | "car_and_truck_dealers_used_only"
      | "car_rental_agencies"
      | "car_washes"
      | "carpentry_services"
      | "carpet_upholstery_cleaning"
      | "caterers"
      | "charitable_and_social_service_organizations_fundraising"
      | "chemicals_and_allied_products"
      | "child_care_services"
      | "childrens_and_infants_wear_stores"
      | "chiropodists_podiatrists"
      | "chiropractors"
      | "cigar_stores_and_stands"
      | "civic_social_fraternal_associations"
      | "cleaning_and_maintenance"
      | "clothing_rental"
      | "colleges_universities"
      | "commercial_equipment"
      | "commercial_footwear"
      | "commercial_photography_art_and_graphics"
      | "commuter_transport_and_ferries"
      | "computer_network_services"
      | "computer_programming"
      | "computer_repair"
      | "computer_software_stores"
      | "computers_peripherals_and_software"
      | "concrete_work_services"
      | "construction_materials"
      | "consulting_public_relations"
      | "correspondence_schools"
      | "cosmetic_stores"
      | "counseling_services"
      | "country_clubs"
      | "courier_services"
      | "court_costs"
      | "credit_reporting_agencies"
      | "cruise_lines"
      | "dairy_products_stores"
      | "dance_hall_studios_schools"
      | "dating_escort_services"
      | "dentists_orthodontists"
      | "department_stores"
      | "detective_agencies"
      | "digital_goods_applications"
      | "digital_goods_games"
      | "digital_goods_large_volume"
      | "digital_goods_media"
      | "direct_marketing_catalog_merchant"
      | "direct_marketing_combination_catalog_and_retail_merchant"
      | "direct_marketing_inbound_telemarketing"
      | "direct_marketing_insurance_services"
      | "direct_marketing_other"
      | "direct_marketing_outbound_telemarketing"
      | "direct_marketing_subscription"
      | "direct_marketing_travel"
      | "discount_stores"
      | "doctors"
      | "door_to_door_sales"
      | "drapery_window_covering_and_upholstery_stores"
      | "drinking_places"
      | "drug_stores_and_pharmacies"
      | "drugs_drug_proprietaries_and_druggist_sundries"
      | "dry_cleaners"
      | "durable_goods"
      | "duty_free_stores"
      | "eating_places_restaurants"
      | "educational_services"
      | "electric_razor_stores"
      | "electric_vehicle_charging"
      | "electrical_parts_and_equipment"
      | "electrical_services"
      | "electronics_repair_shops"
      | "electronics_stores"
      | "elementary_secondary_schools"
      | "emergency_services_gcas_visa_use_only"
      | "employment_temp_agencies"
      | "equipment_rental"
      | "exterminating_services"
      | "family_clothing_stores"
      | "fast_food_restaurants"
      | "financial_institutions"
      | "fines_government_administrative_entities"
      | "fireplace_fireplace_screens_and_accessories_stores"
      | "floor_covering_stores"
      | "florists"
      | "florists_supplies_nursery_stock_and_flowers"
      | "freezer_and_locker_meat_provisioners"
      | "fuel_dealers_non_automotive"
      | "funeral_services_crematories"
      | "furniture_home_furnishings_and_equipment_stores_except_appliances"
      | "furniture_repair_refinishing"
      | "furriers_and_fur_shops"
      | "general_services"
      | "gift_card_novelty_and_souvenir_shops"
      | "glass_paint_and_wallpaper_stores"
      | "glassware_crystal_stores"
      | "golf_courses_public"
      | "government_licensed_horse_dog_racing_us_region_only"
      | "government_licensed_online_casions_online_gambling_us_region_only"
      | "government_owned_lotteries_non_us_region"
      | "government_owned_lotteries_us_region_only"
      | "government_services"
      | "grocery_stores_supermarkets"
      | "hardware_equipment_and_supplies"
      | "hardware_stores"
      | "health_and_beauty_spas"
      | "hearing_aids_sales_and_supplies"
      | "heating_plumbing_a_c"
      | "hobby_toy_and_game_shops"
      | "home_supply_warehouse_stores"
      | "hospitals"
      | "hotels_motels_and_resorts"
      | "household_appliance_stores"
      | "industrial_supplies"
      | "information_retrieval_services"
      | "insurance_default"
      | "insurance_underwriting_premiums"
      | "intra_company_purchases"
      | "jewelry_stores_watches_clocks_and_silverware_stores"
      | "landscaping_services"
      | "laundries"
      | "laundry_cleaning_services"
      | "legal_services_attorneys"
      | "luggage_and_leather_goods_stores"
      | "lumber_building_materials_stores"
      | "manual_cash_disburse"
      | "marinas_service_and_supplies"
      | "marketplaces"
      | "masonry_stonework_and_plaster"
      | "massage_parlors"
      | "medical_and_dental_labs"
      | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
      | "medical_services"
      | "membership_organizations"
      | "mens_and_boys_clothing_and_accessories_stores"
      | "mens_womens_clothing_stores"
      | "metal_service_centers"
      | "miscellaneous_apparel_and_accessory_shops"
      | "miscellaneous_auto_dealers"
      | "miscellaneous_business_services"
      | "miscellaneous_food_stores"
      | "miscellaneous_general_merchandise"
      | "miscellaneous_general_services"
      | "miscellaneous_home_furnishing_specialty_stores"
      | "miscellaneous_publishing_and_printing"
      | "miscellaneous_recreation_services"
      | "miscellaneous_repair_shops"
      | "miscellaneous_specialty_retail"
      | "mobile_home_dealers"
      | "motion_picture_theaters"
      | "motor_freight_carriers_and_trucking"
      | "motor_homes_dealers"
      | "motor_vehicle_supplies_and_new_parts"
      | "motorcycle_shops_and_dealers"
      | "motorcycle_shops_dealers"
      | "music_stores_musical_instruments_pianos_and_sheet_music"
      | "news_dealers_and_newsstands"
      | "non_fi_money_orders"
      | "non_fi_stored_value_card_purchase_load"
      | "nondurable_goods"
      | "nurseries_lawn_and_garden_supply_stores"
      | "nursing_personal_care"
      | "office_and_commercial_furniture"
      | "opticians_eyeglasses"
      | "optometrists_ophthalmologist"
      | "orthopedic_goods_prosthetic_devices"
      | "osteopaths"
      | "package_stores_beer_wine_and_liquor"
      | "paints_varnishes_and_supplies"
      | "parking_lots_garages"
      | "passenger_railways"
      | "pawn_shops"
      | "pet_shops_pet_food_and_supplies"
      | "petroleum_and_petroleum_products"
      | "photo_developing"
      | "photographic_photocopy_microfilm_equipment_and_supplies"
      | "photographic_studios"
      | "picture_video_production"
      | "piece_goods_notions_and_other_dry_goods"
      | "plumbing_heating_equipment_and_supplies"
      | "political_organizations"
      | "postal_services_government_only"
      | "precious_stones_and_metals_watches_and_jewelry"
      | "professional_services"
      | "public_warehousing_and_storage"
      | "quick_copy_repro_and_blueprint"
      | "railroads"
      | "real_estate_agents_and_managers_rentals"
      | "record_stores"
      | "recreational_vehicle_rentals"
      | "religious_goods_stores"
      | "religious_organizations"
      | "roofing_siding_sheet_metal"
      | "secretarial_support_services"
      | "security_brokers_dealers"
      | "service_stations"
      | "sewing_needlework_fabric_and_piece_goods_stores"
      | "shoe_repair_hat_cleaning"
      | "shoe_stores"
      | "small_appliance_repair"
      | "snowmobile_dealers"
      | "special_trade_services"
      | "specialty_cleaning"
      | "sporting_goods_stores"
      | "sporting_recreation_camps"
      | "sports_and_riding_apparel_stores"
      | "sports_clubs_fields"
      | "stamp_and_coin_stores"
      | "stationary_office_supplies_printing_and_writing_paper"
      | "stationery_stores_office_and_school_supply_stores"
      | "swimming_pools_sales"
      | "t_ui_travel_germany"
      | "tailors_alterations"
      | "tax_payments_government_agencies"
      | "tax_preparation_services"
      | "taxicabs_limousines"
      | "telecommunication_equipment_and_telephone_sales"
      | "telecommunication_services"
      | "telegraph_services"
      | "tent_and_awning_shops"
      | "testing_laboratories"
      | "theatrical_ticket_agencies"
      | "timeshares"
      | "tire_retreading_and_repair"
      | "tolls_bridge_fees"
      | "tourist_attractions_and_exhibits"
      | "towing_services"
      | "trailer_parks_campgrounds"
      | "transportation_services"
      | "travel_agencies_tour_operators"
      | "truck_stop_iteration"
      | "truck_utility_trailer_rentals"
      | "typesetting_plate_making_and_related_services"
      | "typewriter_stores"
      | "u_s_federal_government_agencies_or_departments"
      | "uniforms_commercial_clothing"
      | "used_merchandise_and_secondhand_stores"
      | "utilities"
      | "variety_stores"
      | "veterinary_services"
      | "video_amusement_game_supplies"
      | "video_game_arcades"
      | "video_tape_rental_stores"
      | "vocational_trade_schools"
      | "watch_jewelry_repair"
      | "welding_repair"
      | "wholesale_clubs"
      | "wig_and_toupee_stores"
      | "wires_money_orders"
      | "womens_accessory_and_specialty_shops"
      | "womens_ready_to_wear_stores"
      | "wrecking_and_salvage_yards"
    city?: string
    country?: string
    name?: string
    network_id?: string
    postal_code?: string
    state?: string
    terminal_id?: string
  }
  purchase_details?: {
    flight?: {
      departure_at?: number
      passenger_name?: string
      refundable?: boolean
      segments?: {
        arrival_airport_code?: string
        carrier?: string
        departure_airport_code?: string
        flight_number?: string
        service_class?: string
        stopover_allowed?: boolean
      }[]
      travel_agency?: string
    }
    fuel?: {
      type?:
        | "diesel"
        | "other"
        | "unleaded_plus"
        | "unleaded_regular"
        | "unleaded_super"
      unit?: "liter" | "us_gallon"
      unit_cost_decimal?: string
      volume_decimal?: string
    }
    lodging?: {
      check_in_at?: number
      nights?: number
    }
    receipt?: {
      description?: string
      quantity?: string
      total?: number
      unit_cost?: number
    }[]
    reference?: string
  }
}

export type t_PostTestHelpersIssuingTransactionsCreateUnlinkedRefundBodySchema =
  {
    amount: number
    card: string
    currency?: string
    expand?: string[]
    merchant_data?: {
      category?:
        | "ac_refrigeration_repair"
        | "accounting_bookkeeping_services"
        | "advertising_services"
        | "agricultural_cooperative"
        | "airlines_air_carriers"
        | "airports_flying_fields"
        | "ambulance_services"
        | "amusement_parks_carnivals"
        | "antique_reproductions"
        | "antique_shops"
        | "aquariums"
        | "architectural_surveying_services"
        | "art_dealers_and_galleries"
        | "artists_supply_and_craft_shops"
        | "auto_and_home_supply_stores"
        | "auto_body_repair_shops"
        | "auto_paint_shops"
        | "auto_service_shops"
        | "automated_cash_disburse"
        | "automated_fuel_dispensers"
        | "automobile_associations"
        | "automotive_parts_and_accessories_stores"
        | "automotive_tire_stores"
        | "bail_and_bond_payments"
        | "bakeries"
        | "bands_orchestras"
        | "barber_and_beauty_shops"
        | "betting_casino_gambling"
        | "bicycle_shops"
        | "billiard_pool_establishments"
        | "boat_dealers"
        | "boat_rentals_and_leases"
        | "book_stores"
        | "books_periodicals_and_newspapers"
        | "bowling_alleys"
        | "bus_lines"
        | "business_secretarial_schools"
        | "buying_shopping_services"
        | "cable_satellite_and_other_pay_television_and_radio"
        | "camera_and_photographic_supply_stores"
        | "candy_nut_and_confectionery_stores"
        | "car_and_truck_dealers_new_used"
        | "car_and_truck_dealers_used_only"
        | "car_rental_agencies"
        | "car_washes"
        | "carpentry_services"
        | "carpet_upholstery_cleaning"
        | "caterers"
        | "charitable_and_social_service_organizations_fundraising"
        | "chemicals_and_allied_products"
        | "child_care_services"
        | "childrens_and_infants_wear_stores"
        | "chiropodists_podiatrists"
        | "chiropractors"
        | "cigar_stores_and_stands"
        | "civic_social_fraternal_associations"
        | "cleaning_and_maintenance"
        | "clothing_rental"
        | "colleges_universities"
        | "commercial_equipment"
        | "commercial_footwear"
        | "commercial_photography_art_and_graphics"
        | "commuter_transport_and_ferries"
        | "computer_network_services"
        | "computer_programming"
        | "computer_repair"
        | "computer_software_stores"
        | "computers_peripherals_and_software"
        | "concrete_work_services"
        | "construction_materials"
        | "consulting_public_relations"
        | "correspondence_schools"
        | "cosmetic_stores"
        | "counseling_services"
        | "country_clubs"
        | "courier_services"
        | "court_costs"
        | "credit_reporting_agencies"
        | "cruise_lines"
        | "dairy_products_stores"
        | "dance_hall_studios_schools"
        | "dating_escort_services"
        | "dentists_orthodontists"
        | "department_stores"
        | "detective_agencies"
        | "digital_goods_applications"
        | "digital_goods_games"
        | "digital_goods_large_volume"
        | "digital_goods_media"
        | "direct_marketing_catalog_merchant"
        | "direct_marketing_combination_catalog_and_retail_merchant"
        | "direct_marketing_inbound_telemarketing"
        | "direct_marketing_insurance_services"
        | "direct_marketing_other"
        | "direct_marketing_outbound_telemarketing"
        | "direct_marketing_subscription"
        | "direct_marketing_travel"
        | "discount_stores"
        | "doctors"
        | "door_to_door_sales"
        | "drapery_window_covering_and_upholstery_stores"
        | "drinking_places"
        | "drug_stores_and_pharmacies"
        | "drugs_drug_proprietaries_and_druggist_sundries"
        | "dry_cleaners"
        | "durable_goods"
        | "duty_free_stores"
        | "eating_places_restaurants"
        | "educational_services"
        | "electric_razor_stores"
        | "electric_vehicle_charging"
        | "electrical_parts_and_equipment"
        | "electrical_services"
        | "electronics_repair_shops"
        | "electronics_stores"
        | "elementary_secondary_schools"
        | "emergency_services_gcas_visa_use_only"
        | "employment_temp_agencies"
        | "equipment_rental"
        | "exterminating_services"
        | "family_clothing_stores"
        | "fast_food_restaurants"
        | "financial_institutions"
        | "fines_government_administrative_entities"
        | "fireplace_fireplace_screens_and_accessories_stores"
        | "floor_covering_stores"
        | "florists"
        | "florists_supplies_nursery_stock_and_flowers"
        | "freezer_and_locker_meat_provisioners"
        | "fuel_dealers_non_automotive"
        | "funeral_services_crematories"
        | "furniture_home_furnishings_and_equipment_stores_except_appliances"
        | "furniture_repair_refinishing"
        | "furriers_and_fur_shops"
        | "general_services"
        | "gift_card_novelty_and_souvenir_shops"
        | "glass_paint_and_wallpaper_stores"
        | "glassware_crystal_stores"
        | "golf_courses_public"
        | "government_licensed_horse_dog_racing_us_region_only"
        | "government_licensed_online_casions_online_gambling_us_region_only"
        | "government_owned_lotteries_non_us_region"
        | "government_owned_lotteries_us_region_only"
        | "government_services"
        | "grocery_stores_supermarkets"
        | "hardware_equipment_and_supplies"
        | "hardware_stores"
        | "health_and_beauty_spas"
        | "hearing_aids_sales_and_supplies"
        | "heating_plumbing_a_c"
        | "hobby_toy_and_game_shops"
        | "home_supply_warehouse_stores"
        | "hospitals"
        | "hotels_motels_and_resorts"
        | "household_appliance_stores"
        | "industrial_supplies"
        | "information_retrieval_services"
        | "insurance_default"
        | "insurance_underwriting_premiums"
        | "intra_company_purchases"
        | "jewelry_stores_watches_clocks_and_silverware_stores"
        | "landscaping_services"
        | "laundries"
        | "laundry_cleaning_services"
        | "legal_services_attorneys"
        | "luggage_and_leather_goods_stores"
        | "lumber_building_materials_stores"
        | "manual_cash_disburse"
        | "marinas_service_and_supplies"
        | "marketplaces"
        | "masonry_stonework_and_plaster"
        | "massage_parlors"
        | "medical_and_dental_labs"
        | "medical_dental_ophthalmic_and_hospital_equipment_and_supplies"
        | "medical_services"
        | "membership_organizations"
        | "mens_and_boys_clothing_and_accessories_stores"
        | "mens_womens_clothing_stores"
        | "metal_service_centers"
        | "miscellaneous_apparel_and_accessory_shops"
        | "miscellaneous_auto_dealers"
        | "miscellaneous_business_services"
        | "miscellaneous_food_stores"
        | "miscellaneous_general_merchandise"
        | "miscellaneous_general_services"
        | "miscellaneous_home_furnishing_specialty_stores"
        | "miscellaneous_publishing_and_printing"
        | "miscellaneous_recreation_services"
        | "miscellaneous_repair_shops"
        | "miscellaneous_specialty_retail"
        | "mobile_home_dealers"
        | "motion_picture_theaters"
        | "motor_freight_carriers_and_trucking"
        | "motor_homes_dealers"
        | "motor_vehicle_supplies_and_new_parts"
        | "motorcycle_shops_and_dealers"
        | "motorcycle_shops_dealers"
        | "music_stores_musical_instruments_pianos_and_sheet_music"
        | "news_dealers_and_newsstands"
        | "non_fi_money_orders"
        | "non_fi_stored_value_card_purchase_load"
        | "nondurable_goods"
        | "nurseries_lawn_and_garden_supply_stores"
        | "nursing_personal_care"
        | "office_and_commercial_furniture"
        | "opticians_eyeglasses"
        | "optometrists_ophthalmologist"
        | "orthopedic_goods_prosthetic_devices"
        | "osteopaths"
        | "package_stores_beer_wine_and_liquor"
        | "paints_varnishes_and_supplies"
        | "parking_lots_garages"
        | "passenger_railways"
        | "pawn_shops"
        | "pet_shops_pet_food_and_supplies"
        | "petroleum_and_petroleum_products"
        | "photo_developing"
        | "photographic_photocopy_microfilm_equipment_and_supplies"
        | "photographic_studios"
        | "picture_video_production"
        | "piece_goods_notions_and_other_dry_goods"
        | "plumbing_heating_equipment_and_supplies"
        | "political_organizations"
        | "postal_services_government_only"
        | "precious_stones_and_metals_watches_and_jewelry"
        | "professional_services"
        | "public_warehousing_and_storage"
        | "quick_copy_repro_and_blueprint"
        | "railroads"
        | "real_estate_agents_and_managers_rentals"
        | "record_stores"
        | "recreational_vehicle_rentals"
        | "religious_goods_stores"
        | "religious_organizations"
        | "roofing_siding_sheet_metal"
        | "secretarial_support_services"
        | "security_brokers_dealers"
        | "service_stations"
        | "sewing_needlework_fabric_and_piece_goods_stores"
        | "shoe_repair_hat_cleaning"
        | "shoe_stores"
        | "small_appliance_repair"
        | "snowmobile_dealers"
        | "special_trade_services"
        | "specialty_cleaning"
        | "sporting_goods_stores"
        | "sporting_recreation_camps"
        | "sports_and_riding_apparel_stores"
        | "sports_clubs_fields"
        | "stamp_and_coin_stores"
        | "stationary_office_supplies_printing_and_writing_paper"
        | "stationery_stores_office_and_school_supply_stores"
        | "swimming_pools_sales"
        | "t_ui_travel_germany"
        | "tailors_alterations"
        | "tax_payments_government_agencies"
        | "tax_preparation_services"
        | "taxicabs_limousines"
        | "telecommunication_equipment_and_telephone_sales"
        | "telecommunication_services"
        | "telegraph_services"
        | "tent_and_awning_shops"
        | "testing_laboratories"
        | "theatrical_ticket_agencies"
        | "timeshares"
        | "tire_retreading_and_repair"
        | "tolls_bridge_fees"
        | "tourist_attractions_and_exhibits"
        | "towing_services"
        | "trailer_parks_campgrounds"
        | "transportation_services"
        | "travel_agencies_tour_operators"
        | "truck_stop_iteration"
        | "truck_utility_trailer_rentals"
        | "typesetting_plate_making_and_related_services"
        | "typewriter_stores"
        | "u_s_federal_government_agencies_or_departments"
        | "uniforms_commercial_clothing"
        | "used_merchandise_and_secondhand_stores"
        | "utilities"
        | "variety_stores"
        | "veterinary_services"
        | "video_amusement_game_supplies"
        | "video_game_arcades"
        | "video_tape_rental_stores"
        | "vocational_trade_schools"
        | "watch_jewelry_repair"
        | "welding_repair"
        | "wholesale_clubs"
        | "wig_and_toupee_stores"
        | "wires_money_orders"
        | "womens_accessory_and_specialty_shops"
        | "womens_ready_to_wear_stores"
        | "wrecking_and_salvage_yards"
      city?: string
      country?: string
      name?: string
      network_id?: string
      postal_code?: string
      state?: string
      terminal_id?: string
    }
    purchase_details?: {
      flight?: {
        departure_at?: number
        passenger_name?: string
        refundable?: boolean
        segments?: {
          arrival_airport_code?: string
          carrier?: string
          departure_airport_code?: string
          flight_number?: string
          service_class?: string
          stopover_allowed?: boolean
        }[]
        travel_agency?: string
      }
      fuel?: {
        type?:
          | "diesel"
          | "other"
          | "unleaded_plus"
          | "unleaded_regular"
          | "unleaded_super"
        unit?: "liter" | "us_gallon"
        unit_cost_decimal?: string
        volume_decimal?: string
      }
      lodging?: {
        check_in_at?: number
        nights?: number
      }
      receipt?: {
        description?: string
        quantity?: string
        total?: number
        unit_cost?: number
      }[]
      reference?: string
    }
  }

export type t_PostTestHelpersIssuingTransactionsTransactionRefundBodySchema = {
  expand?: string[]
  refund_amount?: number
}

export type t_PostTestHelpersIssuingTransactionsTransactionRefundParamSchema = {
  transaction: string
}

export type t_PostTestHelpersRefundsRefundExpireBodySchema = {
  expand?: string[]
}

export type t_PostTestHelpersRefundsRefundExpireParamSchema = {
  refund: string
}

export type t_PostTestHelpersTerminalReadersReaderPresentPaymentMethodBodySchema =
  {
    amount_tip?: number
    card_present?: {
      number?: string
    }
    expand?: string[]
    interac_present?: {
      number?: string
    }
    type?: "card_present" | "interac_present"
  }

export type t_PostTestHelpersTerminalReadersReaderPresentPaymentMethodParamSchema =
  {
    reader: string
  }

export type t_PostTestHelpersTestClocksBodySchema = {
  expand?: string[]
  frozen_time: number
  name?: string
}

export type t_PostTestHelpersTestClocksTestClockAdvanceBodySchema = {
  expand?: string[]
  frozen_time: number
}

export type t_PostTestHelpersTestClocksTestClockAdvanceParamSchema = {
  test_clock: string
}

export type t_PostTestHelpersTreasuryInboundTransfersIdFailBodySchema = {
  expand?: string[]
  failure_details?: {
    code?:
      | "account_closed"
      | "account_frozen"
      | "bank_account_restricted"
      | "bank_ownership_changed"
      | "debit_not_authorized"
      | "incorrect_account_holder_address"
      | "incorrect_account_holder_name"
      | "incorrect_account_holder_tax_id"
      | "insufficient_funds"
      | "invalid_account_number"
      | "invalid_currency"
      | "no_account"
      | "other"
  }
}

export type t_PostTestHelpersTreasuryInboundTransfersIdFailParamSchema = {
  id: string
}

export type t_PostTestHelpersTreasuryInboundTransfersIdReturnBodySchema = {
  expand?: string[]
}

export type t_PostTestHelpersTreasuryInboundTransfersIdReturnParamSchema = {
  id: string
}

export type t_PostTestHelpersTreasuryInboundTransfersIdSucceedBodySchema = {
  expand?: string[]
}

export type t_PostTestHelpersTreasuryInboundTransfersIdSucceedParamSchema = {
  id: string
}

export type t_PostTestHelpersTreasuryOutboundPaymentsIdFailBodySchema = {
  expand?: string[]
}

export type t_PostTestHelpersTreasuryOutboundPaymentsIdFailParamSchema = {
  id: string
}

export type t_PostTestHelpersTreasuryOutboundPaymentsIdPostBodySchema = {
  expand?: string[]
}

export type t_PostTestHelpersTreasuryOutboundPaymentsIdPostParamSchema = {
  id: string
}

export type t_PostTestHelpersTreasuryOutboundPaymentsIdReturnBodySchema = {
  expand?: string[]
  returned_details?: {
    code?:
      | "account_closed"
      | "account_frozen"
      | "bank_account_restricted"
      | "bank_ownership_changed"
      | "declined"
      | "incorrect_account_holder_name"
      | "invalid_account_number"
      | "invalid_currency"
      | "no_account"
      | "other"
  }
}

export type t_PostTestHelpersTreasuryOutboundPaymentsIdReturnParamSchema = {
  id: string
}

export type t_PostTestHelpersTreasuryOutboundTransfersOutboundTransferFailBodySchema =
  {
    expand?: string[]
  }

export type t_PostTestHelpersTreasuryOutboundTransfersOutboundTransferFailParamSchema =
  {
    outbound_transfer: string
  }

export type t_PostTestHelpersTreasuryOutboundTransfersOutboundTransferPostBodySchema =
  {
    expand?: string[]
  }

export type t_PostTestHelpersTreasuryOutboundTransfersOutboundTransferPostParamSchema =
  {
    outbound_transfer: string
  }

export type t_PostTestHelpersTreasuryOutboundTransfersOutboundTransferReturnBodySchema =
  {
    expand?: string[]
    returned_details?: {
      code?:
        | "account_closed"
        | "account_frozen"
        | "bank_account_restricted"
        | "bank_ownership_changed"
        | "declined"
        | "incorrect_account_holder_name"
        | "invalid_account_number"
        | "invalid_currency"
        | "no_account"
        | "other"
    }
  }

export type t_PostTestHelpersTreasuryOutboundTransfersOutboundTransferReturnParamSchema =
  {
    outbound_transfer: string
  }

export type t_PostTestHelpersTreasuryReceivedCreditsBodySchema = {
  amount: number
  currency: string
  description?: string
  expand?: string[]
  financial_account: string
  initiating_payment_method_details?: {
    type: "us_bank_account"
    us_bank_account?: {
      account_holder_name?: string
      account_number?: string
      routing_number?: string
    }
  }
  network: "ach" | "us_domestic_wire"
}

export type t_PostTestHelpersTreasuryReceivedDebitsBodySchema = {
  amount: number
  currency: string
  description?: string
  expand?: string[]
  financial_account: string
  initiating_payment_method_details?: {
    type: "us_bank_account"
    us_bank_account?: {
      account_holder_name?: string
      account_number?: string
      routing_number?: string
    }
  }
  network: "ach"
}

export type t_PostTokensBodySchema = {
  account?: {
    business_type?:
      | "company"
      | "government_entity"
      | "individual"
      | "non_profit"
    company?: {
      address?: {
        city?: string
        country?: string
        line1?: string
        line2?: string
        postal_code?: string
        state?: string
      }
      address_kana?: {
        city?: string
        country?: string
        line1?: string
        line2?: string
        postal_code?: string
        state?: string
        town?: string
      }
      address_kanji?: {
        city?: string
        country?: string
        line1?: string
        line2?: string
        postal_code?: string
        state?: string
        town?: string
      }
      directors_provided?: boolean
      executives_provided?: boolean
      export_license_id?: string
      export_purpose_code?: string
      name?: string
      name_kana?: string
      name_kanji?: string
      owners_provided?: boolean
      ownership_declaration?: {
        date?: number
        ip?: string
        user_agent?: string
      }
      ownership_declaration_shown_and_signed?: boolean
      phone?: string
      registration_number?: string
      structure?:
        | ""
        | "free_zone_establishment"
        | "free_zone_llc"
        | "government_instrumentality"
        | "governmental_unit"
        | "incorporated_non_profit"
        | "incorporated_partnership"
        | "limited_liability_partnership"
        | "llc"
        | "multi_member_llc"
        | "private_company"
        | "private_corporation"
        | "private_partnership"
        | "public_company"
        | "public_corporation"
        | "public_partnership"
        | "single_member_llc"
        | "sole_establishment"
        | "sole_proprietorship"
        | "tax_exempt_government_instrumentality"
        | "unincorporated_association"
        | "unincorporated_non_profit"
        | "unincorporated_partnership"
      tax_id?: string
      tax_id_registrar?: string
      vat_id?: string
      verification?: {
        document?: {
          back?: string
          front?: string
        }
      }
    }
    individual?: {
      address?: {
        city?: string
        country?: string
        line1?: string
        line2?: string
        postal_code?: string
        state?: string
      }
      address_kana?: {
        city?: string
        country?: string
        line1?: string
        line2?: string
        postal_code?: string
        state?: string
        town?: string
      }
      address_kanji?: {
        city?: string
        country?: string
        line1?: string
        line2?: string
        postal_code?: string
        state?: string
        town?: string
      }
      dob?:
        | {
            day: number
            month: number
            year: number
          }
        | ""
      email?: string
      first_name?: string
      first_name_kana?: string
      first_name_kanji?: string
      full_name_aliases?: string[] | ""
      gender?: string
      id_number?: string
      id_number_secondary?: string
      last_name?: string
      last_name_kana?: string
      last_name_kanji?: string
      maiden_name?: string
      metadata?:
        | {
            [key: string]: string
          }
        | ""
      phone?: string
      political_exposure?: "existing" | "none"
      registered_address?: {
        city?: string
        country?: string
        line1?: string
        line2?: string
        postal_code?: string
        state?: string
      }
      ssn_last_4?: string
      verification?: {
        additional_document?: {
          back?: string
          front?: string
        }
        document?: {
          back?: string
          front?: string
        }
      }
    }
    tos_shown_and_accepted?: boolean
  }
  bank_account?: {
    account_holder_name?: string
    account_holder_type?: "company" | "individual"
    account_number: string
    account_type?: "checking" | "futsu" | "savings" | "toza"
    country: string
    currency?: string
    routing_number?: string
  }
  card?:
    | {
        address_city?: string
        address_country?: string
        address_line1?: string
        address_line2?: string
        address_state?: string
        address_zip?: string
        currency?: string
        cvc?: string
        exp_month: string
        exp_year: string
        name?: string
        number: string
      }
    | string
  customer?: string
  cvc_update?: {
    cvc: string
  }
  expand?: string[]
  person?: {
    address?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    address_kana?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
      town?: string
    }
    address_kanji?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
      town?: string
    }
    dob?:
      | {
          day: number
          month: number
          year: number
        }
      | ""
    documents?: {
      company_authorization?: {
        files?: (string | "")[]
      }
      passport?: {
        files?: (string | "")[]
      }
      visa?: {
        files?: (string | "")[]
      }
    }
    email?: string
    first_name?: string
    first_name_kana?: string
    first_name_kanji?: string
    full_name_aliases?: string[] | ""
    gender?: string
    id_number?: string
    id_number_secondary?: string
    last_name?: string
    last_name_kana?: string
    last_name_kanji?: string
    maiden_name?: string
    metadata?:
      | {
          [key: string]: string
        }
      | ""
    nationality?: string
    phone?: string
    political_exposure?: string
    registered_address?: {
      city?: string
      country?: string
      line1?: string
      line2?: string
      postal_code?: string
      state?: string
    }
    relationship?: {
      director?: boolean
      executive?: boolean
      owner?: boolean
      percent_ownership?: number | ""
      representative?: boolean
      title?: string
    }
    ssn_last_4?: string
    verification?: {
      additional_document?: {
        back?: string
        front?: string
      }
      document?: {
        back?: string
        front?: string
      }
    }
  }
  pii?: {
    id_number?: string
  }
}

export type t_PostTopupsBodySchema = {
  amount: number
  currency: string
  description?: string
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  source?: string
  statement_descriptor?: string
  transfer_group?: string
}

export type t_PostTopupsTopupBodySchema = {
  description?: string
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostTopupsTopupParamSchema = {
  topup: string
}

export type t_PostTopupsTopupCancelBodySchema = {
  expand?: string[]
}

export type t_PostTopupsTopupCancelParamSchema = {
  topup: string
}

export type t_PostTransfersBodySchema = {
  amount?: number
  currency: string
  description?: string
  destination: string
  expand?: string[]
  metadata?: {
    [key: string]: string
  }
  source_transaction?: string
  source_type?: "bank_account" | "card" | "fpx"
  transfer_group?: string
}

export type t_PostTransfersIdReversalsBodySchema = {
  amount?: number
  description?: string
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  refund_application_fee?: boolean
}

export type t_PostTransfersIdReversalsParamSchema = {
  id: string
}

export type t_PostTransfersTransferBodySchema = {
  description?: string
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostTransfersTransferParamSchema = {
  transfer: string
}

export type t_PostTransfersTransferReversalsIdBodySchema = {
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
}

export type t_PostTransfersTransferReversalsIdParamSchema = {
  id: string
  transfer: string
}

export type t_PostTreasuryCreditReversalsBodySchema = {
  expand?: string[]
  metadata?: {
    [key: string]: string
  }
  received_credit: string
}

export type t_PostTreasuryDebitReversalsBodySchema = {
  expand?: string[]
  metadata?: {
    [key: string]: string
  }
  received_debit: string
}

export type t_PostTreasuryFinancialAccountsBodySchema = {
  expand?: string[]
  features?: {
    card_issuing?: {
      requested: boolean
    }
    deposit_insurance?: {
      requested: boolean
    }
    financial_addresses?: {
      aba?: {
        requested: boolean
      }
    }
    inbound_transfers?: {
      ach?: {
        requested: boolean
      }
    }
    intra_stripe_flows?: {
      requested: boolean
    }
    outbound_payments?: {
      ach?: {
        requested: boolean
      }
      us_domestic_wire?: {
        requested: boolean
      }
    }
    outbound_transfers?: {
      ach?: {
        requested: boolean
      }
      us_domestic_wire?: {
        requested: boolean
      }
    }
  }
  metadata?: {
    [key: string]: string
  }
  platform_restrictions?: {
    inbound_flows?: "restricted" | "unrestricted"
    outbound_flows?: "restricted" | "unrestricted"
  }
  supported_currencies: string[]
}

export type t_PostTreasuryFinancialAccountsFinancialAccountBodySchema = {
  expand?: string[]
  features?: {
    card_issuing?: {
      requested: boolean
    }
    deposit_insurance?: {
      requested: boolean
    }
    financial_addresses?: {
      aba?: {
        requested: boolean
      }
    }
    inbound_transfers?: {
      ach?: {
        requested: boolean
      }
    }
    intra_stripe_flows?: {
      requested: boolean
    }
    outbound_payments?: {
      ach?: {
        requested: boolean
      }
      us_domestic_wire?: {
        requested: boolean
      }
    }
    outbound_transfers?: {
      ach?: {
        requested: boolean
      }
      us_domestic_wire?: {
        requested: boolean
      }
    }
  }
  metadata?: {
    [key: string]: string
  }
  platform_restrictions?: {
    inbound_flows?: "restricted" | "unrestricted"
    outbound_flows?: "restricted" | "unrestricted"
  }
}

export type t_PostTreasuryFinancialAccountsFinancialAccountParamSchema = {
  financial_account: string
}

export type t_PostTreasuryFinancialAccountsFinancialAccountFeaturesBodySchema =
  {
    card_issuing?: {
      requested: boolean
    }
    deposit_insurance?: {
      requested: boolean
    }
    expand?: string[]
    financial_addresses?: {
      aba?: {
        requested: boolean
      }
    }
    inbound_transfers?: {
      ach?: {
        requested: boolean
      }
    }
    intra_stripe_flows?: {
      requested: boolean
    }
    outbound_payments?: {
      ach?: {
        requested: boolean
      }
      us_domestic_wire?: {
        requested: boolean
      }
    }
    outbound_transfers?: {
      ach?: {
        requested: boolean
      }
      us_domestic_wire?: {
        requested: boolean
      }
    }
  }

export type t_PostTreasuryFinancialAccountsFinancialAccountFeaturesParamSchema =
  {
    financial_account: string
  }

export type t_PostTreasuryInboundTransfersBodySchema = {
  amount: number
  currency: string
  description?: string
  expand?: string[]
  financial_account: string
  metadata?: {
    [key: string]: string
  }
  origin_payment_method: string
  statement_descriptor?: string
}

export type t_PostTreasuryInboundTransfersInboundTransferCancelBodySchema = {
  expand?: string[]
}

export type t_PostTreasuryInboundTransfersInboundTransferCancelParamSchema = {
  inbound_transfer: string
}

export type t_PostTreasuryOutboundPaymentsBodySchema = {
  amount: number
  currency: string
  customer?: string
  description?: string
  destination_payment_method?: string
  destination_payment_method_data?: {
    billing_details?: {
      address?:
        | {
            city?: string
            country?: string
            line1?: string
            line2?: string
            postal_code?: string
            state?: string
          }
        | ""
      email?: string | ""
      name?: string | ""
      phone?: string | ""
    }
    financial_account?: string
    metadata?: {
      [key: string]: string
    }
    type: "financial_account" | "us_bank_account"
    us_bank_account?: {
      account_holder_type?: "company" | "individual"
      account_number?: string
      account_type?: "checking" | "savings"
      financial_connections_account?: string
      routing_number?: string
    }
  }
  destination_payment_method_options?: {
    us_bank_account?:
      | {
          network?: "ach" | "us_domestic_wire"
        }
      | ""
  }
  end_user_details?: {
    ip_address?: string
    present: boolean
  }
  expand?: string[]
  financial_account: string
  metadata?: {
    [key: string]: string
  }
  statement_descriptor?: string
}

export type t_PostTreasuryOutboundPaymentsIdCancelBodySchema = {
  expand?: string[]
}

export type t_PostTreasuryOutboundPaymentsIdCancelParamSchema = {
  id: string
}

export type t_PostTreasuryOutboundTransfersBodySchema = {
  amount: number
  currency: string
  description?: string
  destination_payment_method?: string
  destination_payment_method_options?: {
    us_bank_account?:
      | {
          network?: "ach" | "us_domestic_wire"
        }
      | ""
  }
  expand?: string[]
  financial_account: string
  metadata?: {
    [key: string]: string
  }
  statement_descriptor?: string
}

export type t_PostTreasuryOutboundTransfersOutboundTransferCancelBodySchema = {
  expand?: string[]
}

export type t_PostTreasuryOutboundTransfersOutboundTransferCancelParamSchema = {
  outbound_transfer: string
}

export type t_PostWebhookEndpointsBodySchema = {
  api_version?:
    | "2011-01-01"
    | "2011-06-21"
    | "2011-06-28"
    | "2011-08-01"
    | "2011-09-15"
    | "2011-11-17"
    | "2012-02-23"
    | "2012-03-25"
    | "2012-06-18"
    | "2012-06-28"
    | "2012-07-09"
    | "2012-09-24"
    | "2012-10-26"
    | "2012-11-07"
    | "2013-02-11"
    | "2013-02-13"
    | "2013-07-05"
    | "2013-08-12"
    | "2013-08-13"
    | "2013-10-29"
    | "2013-12-03"
    | "2014-01-31"
    | "2014-03-13"
    | "2014-03-28"
    | "2014-05-19"
    | "2014-06-13"
    | "2014-06-17"
    | "2014-07-22"
    | "2014-07-26"
    | "2014-08-04"
    | "2014-08-20"
    | "2014-09-08"
    | "2014-10-07"
    | "2014-11-05"
    | "2014-11-20"
    | "2014-12-08"
    | "2014-12-17"
    | "2014-12-22"
    | "2015-01-11"
    | "2015-01-26"
    | "2015-02-10"
    | "2015-02-16"
    | "2015-02-18"
    | "2015-03-24"
    | "2015-04-07"
    | "2015-06-15"
    | "2015-07-07"
    | "2015-07-13"
    | "2015-07-28"
    | "2015-08-07"
    | "2015-08-19"
    | "2015-09-03"
    | "2015-09-08"
    | "2015-09-23"
    | "2015-10-01"
    | "2015-10-12"
    | "2015-10-16"
    | "2016-02-03"
    | "2016-02-19"
    | "2016-02-22"
    | "2016-02-23"
    | "2016-02-29"
    | "2016-03-07"
    | "2016-06-15"
    | "2016-07-06"
    | "2016-10-19"
    | "2017-01-27"
    | "2017-02-14"
    | "2017-04-06"
    | "2017-05-25"
    | "2017-06-05"
    | "2017-08-15"
    | "2017-12-14"
    | "2018-01-23"
    | "2018-02-05"
    | "2018-02-06"
    | "2018-02-28"
    | "2018-05-21"
    | "2018-07-27"
    | "2018-08-23"
    | "2018-09-06"
    | "2018-09-24"
    | "2018-10-31"
    | "2018-11-08"
    | "2019-02-11"
    | "2019-02-19"
    | "2019-03-14"
    | "2019-05-16"
    | "2019-08-14"
    | "2019-09-09"
    | "2019-10-08"
    | "2019-10-17"
    | "2019-11-05"
    | "2019-12-03"
    | "2020-03-02"
    | "2020-08-27"
    | "2022-08-01"
    | "2022-11-15"
    | "2023-08-16"
  connect?: boolean
  description?: string | ""
  enabled_events: (
    | "*"
    | "account.application.authorized"
    | "account.application.deauthorized"
    | "account.external_account.created"
    | "account.external_account.deleted"
    | "account.external_account.updated"
    | "account.updated"
    | "application_fee.created"
    | "application_fee.refund.updated"
    | "application_fee.refunded"
    | "balance.available"
    | "billing_portal.configuration.created"
    | "billing_portal.configuration.updated"
    | "billing_portal.session.created"
    | "capability.updated"
    | "cash_balance.funds_available"
    | "charge.captured"
    | "charge.dispute.closed"
    | "charge.dispute.created"
    | "charge.dispute.funds_reinstated"
    | "charge.dispute.funds_withdrawn"
    | "charge.dispute.updated"
    | "charge.expired"
    | "charge.failed"
    | "charge.pending"
    | "charge.refund.updated"
    | "charge.refunded"
    | "charge.succeeded"
    | "charge.updated"
    | "checkout.session.async_payment_failed"
    | "checkout.session.async_payment_succeeded"
    | "checkout.session.completed"
    | "checkout.session.expired"
    | "coupon.created"
    | "coupon.deleted"
    | "coupon.updated"
    | "credit_note.created"
    | "credit_note.updated"
    | "credit_note.voided"
    | "customer.created"
    | "customer.deleted"
    | "customer.discount.created"
    | "customer.discount.deleted"
    | "customer.discount.updated"
    | "customer.source.created"
    | "customer.source.deleted"
    | "customer.source.expiring"
    | "customer.source.updated"
    | "customer.subscription.created"
    | "customer.subscription.deleted"
    | "customer.subscription.paused"
    | "customer.subscription.pending_update_applied"
    | "customer.subscription.pending_update_expired"
    | "customer.subscription.resumed"
    | "customer.subscription.trial_will_end"
    | "customer.subscription.updated"
    | "customer.tax_id.created"
    | "customer.tax_id.deleted"
    | "customer.tax_id.updated"
    | "customer.updated"
    | "customer_cash_balance_transaction.created"
    | "file.created"
    | "financial_connections.account.created"
    | "financial_connections.account.deactivated"
    | "financial_connections.account.disconnected"
    | "financial_connections.account.reactivated"
    | "financial_connections.account.refreshed_balance"
    | "identity.verification_session.canceled"
    | "identity.verification_session.created"
    | "identity.verification_session.processing"
    | "identity.verification_session.redacted"
    | "identity.verification_session.requires_input"
    | "identity.verification_session.verified"
    | "invoice.created"
    | "invoice.deleted"
    | "invoice.finalization_failed"
    | "invoice.finalized"
    | "invoice.marked_uncollectible"
    | "invoice.paid"
    | "invoice.payment_action_required"
    | "invoice.payment_failed"
    | "invoice.payment_succeeded"
    | "invoice.sent"
    | "invoice.upcoming"
    | "invoice.updated"
    | "invoice.voided"
    | "invoiceitem.created"
    | "invoiceitem.deleted"
    | "issuing_authorization.created"
    | "issuing_authorization.request"
    | "issuing_authorization.updated"
    | "issuing_card.created"
    | "issuing_card.updated"
    | "issuing_cardholder.created"
    | "issuing_cardholder.updated"
    | "issuing_dispute.closed"
    | "issuing_dispute.created"
    | "issuing_dispute.funds_reinstated"
    | "issuing_dispute.submitted"
    | "issuing_dispute.updated"
    | "issuing_transaction.created"
    | "issuing_transaction.updated"
    | "mandate.updated"
    | "payment_intent.amount_capturable_updated"
    | "payment_intent.canceled"
    | "payment_intent.created"
    | "payment_intent.partially_funded"
    | "payment_intent.payment_failed"
    | "payment_intent.processing"
    | "payment_intent.requires_action"
    | "payment_intent.succeeded"
    | "payment_link.created"
    | "payment_link.updated"
    | "payment_method.attached"
    | "payment_method.automatically_updated"
    | "payment_method.detached"
    | "payment_method.updated"
    | "payout.canceled"
    | "payout.created"
    | "payout.failed"
    | "payout.paid"
    | "payout.reconciliation_completed"
    | "payout.updated"
    | "person.created"
    | "person.deleted"
    | "person.updated"
    | "plan.created"
    | "plan.deleted"
    | "plan.updated"
    | "price.created"
    | "price.deleted"
    | "price.updated"
    | "product.created"
    | "product.deleted"
    | "product.updated"
    | "promotion_code.created"
    | "promotion_code.updated"
    | "quote.accepted"
    | "quote.canceled"
    | "quote.created"
    | "quote.finalized"
    | "radar.early_fraud_warning.created"
    | "radar.early_fraud_warning.updated"
    | "refund.created"
    | "refund.updated"
    | "reporting.report_run.failed"
    | "reporting.report_run.succeeded"
    | "reporting.report_type.updated"
    | "review.closed"
    | "review.opened"
    | "setup_intent.canceled"
    | "setup_intent.created"
    | "setup_intent.requires_action"
    | "setup_intent.setup_failed"
    | "setup_intent.succeeded"
    | "sigma.scheduled_query_run.created"
    | "source.canceled"
    | "source.chargeable"
    | "source.failed"
    | "source.mandate_notification"
    | "source.refund_attributes_required"
    | "source.transaction.created"
    | "source.transaction.updated"
    | "subscription_schedule.aborted"
    | "subscription_schedule.canceled"
    | "subscription_schedule.completed"
    | "subscription_schedule.created"
    | "subscription_schedule.expiring"
    | "subscription_schedule.released"
    | "subscription_schedule.updated"
    | "tax.settings.updated"
    | "tax_rate.created"
    | "tax_rate.updated"
    | "terminal.reader.action_failed"
    | "terminal.reader.action_succeeded"
    | "test_helpers.test_clock.advancing"
    | "test_helpers.test_clock.created"
    | "test_helpers.test_clock.deleted"
    | "test_helpers.test_clock.internal_failure"
    | "test_helpers.test_clock.ready"
    | "topup.canceled"
    | "topup.created"
    | "topup.failed"
    | "topup.reversed"
    | "topup.succeeded"
    | "transfer.created"
    | "transfer.reversed"
    | "transfer.updated"
    | "treasury.credit_reversal.created"
    | "treasury.credit_reversal.posted"
    | "treasury.debit_reversal.completed"
    | "treasury.debit_reversal.created"
    | "treasury.debit_reversal.initial_credit_granted"
    | "treasury.financial_account.closed"
    | "treasury.financial_account.created"
    | "treasury.financial_account.features_status_updated"
    | "treasury.inbound_transfer.canceled"
    | "treasury.inbound_transfer.created"
    | "treasury.inbound_transfer.failed"
    | "treasury.inbound_transfer.succeeded"
    | "treasury.outbound_payment.canceled"
    | "treasury.outbound_payment.created"
    | "treasury.outbound_payment.expected_arrival_date_updated"
    | "treasury.outbound_payment.failed"
    | "treasury.outbound_payment.posted"
    | "treasury.outbound_payment.returned"
    | "treasury.outbound_transfer.canceled"
    | "treasury.outbound_transfer.created"
    | "treasury.outbound_transfer.expected_arrival_date_updated"
    | "treasury.outbound_transfer.failed"
    | "treasury.outbound_transfer.posted"
    | "treasury.outbound_transfer.returned"
    | "treasury.received_credit.created"
    | "treasury.received_credit.failed"
    | "treasury.received_credit.succeeded"
    | "treasury.received_debit.created"
  )[]
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  url: string
}

export type t_PostWebhookEndpointsWebhookEndpointBodySchema = {
  description?: string | ""
  disabled?: boolean
  enabled_events?: (
    | "*"
    | "account.application.authorized"
    | "account.application.deauthorized"
    | "account.external_account.created"
    | "account.external_account.deleted"
    | "account.external_account.updated"
    | "account.updated"
    | "application_fee.created"
    | "application_fee.refund.updated"
    | "application_fee.refunded"
    | "balance.available"
    | "billing_portal.configuration.created"
    | "billing_portal.configuration.updated"
    | "billing_portal.session.created"
    | "capability.updated"
    | "cash_balance.funds_available"
    | "charge.captured"
    | "charge.dispute.closed"
    | "charge.dispute.created"
    | "charge.dispute.funds_reinstated"
    | "charge.dispute.funds_withdrawn"
    | "charge.dispute.updated"
    | "charge.expired"
    | "charge.failed"
    | "charge.pending"
    | "charge.refund.updated"
    | "charge.refunded"
    | "charge.succeeded"
    | "charge.updated"
    | "checkout.session.async_payment_failed"
    | "checkout.session.async_payment_succeeded"
    | "checkout.session.completed"
    | "checkout.session.expired"
    | "coupon.created"
    | "coupon.deleted"
    | "coupon.updated"
    | "credit_note.created"
    | "credit_note.updated"
    | "credit_note.voided"
    | "customer.created"
    | "customer.deleted"
    | "customer.discount.created"
    | "customer.discount.deleted"
    | "customer.discount.updated"
    | "customer.source.created"
    | "customer.source.deleted"
    | "customer.source.expiring"
    | "customer.source.updated"
    | "customer.subscription.created"
    | "customer.subscription.deleted"
    | "customer.subscription.paused"
    | "customer.subscription.pending_update_applied"
    | "customer.subscription.pending_update_expired"
    | "customer.subscription.resumed"
    | "customer.subscription.trial_will_end"
    | "customer.subscription.updated"
    | "customer.tax_id.created"
    | "customer.tax_id.deleted"
    | "customer.tax_id.updated"
    | "customer.updated"
    | "customer_cash_balance_transaction.created"
    | "file.created"
    | "financial_connections.account.created"
    | "financial_connections.account.deactivated"
    | "financial_connections.account.disconnected"
    | "financial_connections.account.reactivated"
    | "financial_connections.account.refreshed_balance"
    | "identity.verification_session.canceled"
    | "identity.verification_session.created"
    | "identity.verification_session.processing"
    | "identity.verification_session.redacted"
    | "identity.verification_session.requires_input"
    | "identity.verification_session.verified"
    | "invoice.created"
    | "invoice.deleted"
    | "invoice.finalization_failed"
    | "invoice.finalized"
    | "invoice.marked_uncollectible"
    | "invoice.paid"
    | "invoice.payment_action_required"
    | "invoice.payment_failed"
    | "invoice.payment_succeeded"
    | "invoice.sent"
    | "invoice.upcoming"
    | "invoice.updated"
    | "invoice.voided"
    | "invoiceitem.created"
    | "invoiceitem.deleted"
    | "issuing_authorization.created"
    | "issuing_authorization.request"
    | "issuing_authorization.updated"
    | "issuing_card.created"
    | "issuing_card.updated"
    | "issuing_cardholder.created"
    | "issuing_cardholder.updated"
    | "issuing_dispute.closed"
    | "issuing_dispute.created"
    | "issuing_dispute.funds_reinstated"
    | "issuing_dispute.submitted"
    | "issuing_dispute.updated"
    | "issuing_transaction.created"
    | "issuing_transaction.updated"
    | "mandate.updated"
    | "payment_intent.amount_capturable_updated"
    | "payment_intent.canceled"
    | "payment_intent.created"
    | "payment_intent.partially_funded"
    | "payment_intent.payment_failed"
    | "payment_intent.processing"
    | "payment_intent.requires_action"
    | "payment_intent.succeeded"
    | "payment_link.created"
    | "payment_link.updated"
    | "payment_method.attached"
    | "payment_method.automatically_updated"
    | "payment_method.detached"
    | "payment_method.updated"
    | "payout.canceled"
    | "payout.created"
    | "payout.failed"
    | "payout.paid"
    | "payout.reconciliation_completed"
    | "payout.updated"
    | "person.created"
    | "person.deleted"
    | "person.updated"
    | "plan.created"
    | "plan.deleted"
    | "plan.updated"
    | "price.created"
    | "price.deleted"
    | "price.updated"
    | "product.created"
    | "product.deleted"
    | "product.updated"
    | "promotion_code.created"
    | "promotion_code.updated"
    | "quote.accepted"
    | "quote.canceled"
    | "quote.created"
    | "quote.finalized"
    | "radar.early_fraud_warning.created"
    | "radar.early_fraud_warning.updated"
    | "refund.created"
    | "refund.updated"
    | "reporting.report_run.failed"
    | "reporting.report_run.succeeded"
    | "reporting.report_type.updated"
    | "review.closed"
    | "review.opened"
    | "setup_intent.canceled"
    | "setup_intent.created"
    | "setup_intent.requires_action"
    | "setup_intent.setup_failed"
    | "setup_intent.succeeded"
    | "sigma.scheduled_query_run.created"
    | "source.canceled"
    | "source.chargeable"
    | "source.failed"
    | "source.mandate_notification"
    | "source.refund_attributes_required"
    | "source.transaction.created"
    | "source.transaction.updated"
    | "subscription_schedule.aborted"
    | "subscription_schedule.canceled"
    | "subscription_schedule.completed"
    | "subscription_schedule.created"
    | "subscription_schedule.expiring"
    | "subscription_schedule.released"
    | "subscription_schedule.updated"
    | "tax.settings.updated"
    | "tax_rate.created"
    | "tax_rate.updated"
    | "terminal.reader.action_failed"
    | "terminal.reader.action_succeeded"
    | "test_helpers.test_clock.advancing"
    | "test_helpers.test_clock.created"
    | "test_helpers.test_clock.deleted"
    | "test_helpers.test_clock.internal_failure"
    | "test_helpers.test_clock.ready"
    | "topup.canceled"
    | "topup.created"
    | "topup.failed"
    | "topup.reversed"
    | "topup.succeeded"
    | "transfer.created"
    | "transfer.reversed"
    | "transfer.updated"
    | "treasury.credit_reversal.created"
    | "treasury.credit_reversal.posted"
    | "treasury.debit_reversal.completed"
    | "treasury.debit_reversal.created"
    | "treasury.debit_reversal.initial_credit_granted"
    | "treasury.financial_account.closed"
    | "treasury.financial_account.created"
    | "treasury.financial_account.features_status_updated"
    | "treasury.inbound_transfer.canceled"
    | "treasury.inbound_transfer.created"
    | "treasury.inbound_transfer.failed"
    | "treasury.inbound_transfer.succeeded"
    | "treasury.outbound_payment.canceled"
    | "treasury.outbound_payment.created"
    | "treasury.outbound_payment.expected_arrival_date_updated"
    | "treasury.outbound_payment.failed"
    | "treasury.outbound_payment.posted"
    | "treasury.outbound_payment.returned"
    | "treasury.outbound_transfer.canceled"
    | "treasury.outbound_transfer.created"
    | "treasury.outbound_transfer.expected_arrival_date_updated"
    | "treasury.outbound_transfer.failed"
    | "treasury.outbound_transfer.posted"
    | "treasury.outbound_transfer.returned"
    | "treasury.received_credit.created"
    | "treasury.received_credit.failed"
    | "treasury.received_credit.succeeded"
    | "treasury.received_debit.created"
  )[]
  expand?: string[]
  metadata?:
    | {
        [key: string]: string
      }
    | ""
  url?: string
}

export type t_PostWebhookEndpointsWebhookEndpointParamSchema = {
  webhook_endpoint: string
}
