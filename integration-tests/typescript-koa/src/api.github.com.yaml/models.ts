/** AUTOGENERATED - DO NOT EDIT **/
/* tslint:disable */
/* eslint:disable */

export type t_actions_can_approve_pull_request_reviews = boolean

export type t_actions_default_workflow_permissions = "read" | "write"

export type t_actions_enabled = boolean

export type t_alert_number = number

export type t_allowed_actions = "all" | "local_only" | "selected"

export type t_app_permissions = {
  actions?: "read" | "write"
  administration?: "read" | "write"
  checks?: "read" | "write"
  contents?: "read" | "write"
  deployments?: "read" | "write"
  environments?: "read" | "write"
  issues?: "read" | "write"
  members?: "read" | "write"
  metadata?: "read" | "write"
  organization_administration?: "read" | "write"
  organization_announcement_banners?: "read" | "write"
  organization_custom_roles?: "read" | "write"
  organization_hooks?: "read" | "write"
  organization_packages?: "read" | "write"
  organization_plan?: "read"
  organization_projects?: "read" | "write" | "admin"
  organization_secrets?: "read" | "write"
  organization_self_hosted_runners?: "read" | "write"
  organization_user_blocking?: "read" | "write"
  packages?: "read" | "write"
  pages?: "read" | "write"
  pull_requests?: "read" | "write"
  repository_announcement_banners?: "read" | "write"
  repository_hooks?: "read" | "write"
  repository_projects?: "read" | "write" | "admin"
  secret_scanning_alerts?: "read" | "write"
  secrets?: "read" | "write"
  security_events?: "read" | "write"
  single_file?: "read" | "write"
  statuses?: "read" | "write"
  team_discussions?: "read" | "write"
  vulnerability_alerts?: "read" | "write"
  workflows?: "write"
}

export type t_code_scanning_alert_dismissed_comment = string

export type t_code_scanning_alert_dismissed_reason =
  | "null"
  | "false positive"
  | "won't fix"
  | "used in tests"

export type t_code_scanning_alert_set_state = "open" | "dismissed"

export type t_code_scanning_alert_severity =
  | "critical"
  | "high"
  | "medium"
  | "low"
  | "warning"
  | "note"
  | "error"

export type t_code_scanning_alert_state =
  | "open"
  | "closed"
  | "dismissed"
  | "fixed"

export type t_code_scanning_analysis_commit_sha = string

export type t_code_scanning_analysis_sarif_file = string

export type t_code_scanning_analysis_sarif_id = string

export type t_code_scanning_analysis_tool_guid = string

export type t_code_scanning_analysis_tool_name = string

export type t_code_scanning_ref = string

export type t_deployment_branch_policy_settings = {
  custom_branch_policies: boolean
  protected_branches: boolean
}

export type t_deployment_reviewer_type = "User" | "Team"

export type t_enabled_repositories = "all" | "none" | "selected"

export type t_interaction_expiry =
  | "one_day"
  | "three_days"
  | "one_week"
  | "one_month"
  | "six_months"

export type t_interaction_group =
  | "existing_users"
  | "contributors_only"
  | "collaborators_only"

export type t_metadata = {
  [key: string]: unknown
}

export type t_secret_scanning_alert_resolution =
  | "null"
  | "false_positive"
  | "wont_fix"
  | "revoked"
  | "used_in_tests"

export type t_secret_scanning_alert_resolution_comment = string

export type t_secret_scanning_alert_state = "open" | "resolved"

export type t_wait_timer = number

export type t_webhook_config_content_type = string

export type t_webhook_config_insecure_ssl = string | number

export type t_webhook_config_secret = string

export type t_webhook_config_url = string

export type t_ActionsAddCustomLabelsToSelfHostedRunnerForOrgBodySchema = {
  labels: string[]
}

export type t_ActionsAddCustomLabelsToSelfHostedRunnerForOrgParamSchema = {
  org: string
  runner_id: number
}

export type t_ActionsAddCustomLabelsToSelfHostedRunnerForRepoBodySchema = {
  labels: string[]
}

export type t_ActionsAddCustomLabelsToSelfHostedRunnerForRepoParamSchema = {
  owner: string
  repo: string
  runner_id: number
}

export type t_ActionsAddSelectedRepoToOrgSecretParamSchema = {
  org: string
  repository_id: number
  secret_name: string
}

export type t_ActionsAddSelectedRepoToOrgVariableParamSchema = {
  name: string
  org: string
  repository_id: number
}

export type t_ActionsAddSelectedRepoToRequiredWorkflowParamSchema = {
  org: string
  repository_id: number
  required_workflow_id: number
}

export type t_ActionsAddSelfHostedRunnerToGroupForOrgParamSchema = {
  org: string
  runner_group_id: number
  runner_id: number
}

export type t_ActionsApproveWorkflowRunParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsCancelWorkflowRunParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsCreateEnvironmentVariableBodySchema = {
  name: string
  value: string
}

export type t_ActionsCreateEnvironmentVariableParamSchema = {
  environment_name: string
  repository_id: number
}

export type t_ActionsCreateOrUpdateEnvironmentSecretBodySchema = {
  encrypted_value: string
  key_id: string
}

export type t_ActionsCreateOrUpdateEnvironmentSecretParamSchema = {
  environment_name: string
  repository_id: number
  secret_name: string
}

export type t_ActionsCreateOrUpdateOrgSecretBodySchema = {
  encrypted_value?: string
  key_id?: string
  selected_repository_ids?: number[]
  visibility: "all" | "private" | "selected"
}

export type t_ActionsCreateOrUpdateOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_ActionsCreateOrUpdateRepoSecretBodySchema = {
  encrypted_value?: string
  key_id?: string
}

export type t_ActionsCreateOrUpdateRepoSecretParamSchema = {
  owner: string
  repo: string
  secret_name: string
}

export type t_ActionsCreateOrgVariableBodySchema = {
  name: string
  selected_repository_ids?: number[]
  value: string
  visibility: "all" | "private" | "selected"
}

export type t_ActionsCreateOrgVariableParamSchema = {
  org: string
}

export type t_ActionsCreateRegistrationTokenForOrgParamSchema = {
  org: string
}

export type t_ActionsCreateRegistrationTokenForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsCreateRemoveTokenForOrgParamSchema = {
  org: string
}

export type t_ActionsCreateRemoveTokenForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsCreateRepoVariableBodySchema = {
  name: string
  value: string
}

export type t_ActionsCreateRepoVariableParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsCreateRequiredWorkflowBodySchema = {
  repository_id: string
  scope?: "selected" | "all"
  selected_repository_ids?: number[]
  workflow_file_path: string
}

export type t_ActionsCreateRequiredWorkflowParamSchema = {
  org: string
}

export type t_ActionsCreateSelfHostedRunnerGroupForOrgBodySchema = {
  allows_public_repositories?: boolean
  name: string
  restricted_to_workflows?: boolean
  runners?: number[]
  selected_repository_ids?: number[]
  selected_workflows?: string[]
  visibility?: "selected" | "all" | "private"
}

export type t_ActionsCreateSelfHostedRunnerGroupForOrgParamSchema = {
  org: string
}

export type t_ActionsCreateWorkflowDispatchBodySchema = {
  inputs?: {
    [key: string]: unknown
  }
  ref: string
}

export type t_ActionsCreateWorkflowDispatchParamSchema = {
  owner: string
  repo: string
  workflow_id: number | string
}

export type t_ActionsDeleteActionsCacheByIdParamSchema = {
  cache_id: number
  owner: string
  repo: string
}

export type t_ActionsDeleteActionsCacheByKeyParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsDeleteActionsCacheByKeyQuerySchema = {
  key: string
  ref?: t_code_scanning_ref
}

export type t_ActionsDeleteArtifactParamSchema = {
  artifact_id: number
  owner: string
  repo: string
}

export type t_ActionsDeleteEnvironmentSecretParamSchema = {
  environment_name: string
  repository_id: number
  secret_name: string
}

export type t_ActionsDeleteEnvironmentVariableParamSchema = {
  environment_name: string
  name: string
  repository_id: number
}

export type t_ActionsDeleteOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_ActionsDeleteOrgVariableParamSchema = {
  name: string
  org: string
}

export type t_ActionsDeleteRepoSecretParamSchema = {
  owner: string
  repo: string
  secret_name: string
}

export type t_ActionsDeleteRepoVariableParamSchema = {
  name: string
  owner: string
  repo: string
}

export type t_ActionsDeleteRequiredWorkflowParamSchema = {
  org: string
  required_workflow_id: number
}

export type t_ActionsDeleteSelfHostedRunnerFromOrgParamSchema = {
  org: string
  runner_id: number
}

export type t_ActionsDeleteSelfHostedRunnerFromRepoParamSchema = {
  owner: string
  repo: string
  runner_id: number
}

export type t_ActionsDeleteSelfHostedRunnerGroupFromOrgParamSchema = {
  org: string
  runner_group_id: number
}

export type t_ActionsDeleteWorkflowRunParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsDeleteWorkflowRunLogsParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsDisableSelectedRepositoryGithubActionsOrganizationParamSchema =
  {
    org: string
    repository_id: number
  }

export type t_ActionsDisableWorkflowParamSchema = {
  owner: string
  repo: string
  workflow_id: number | string
}

export type t_ActionsDownloadArtifactParamSchema = {
  archive_format: string
  artifact_id: number
  owner: string
  repo: string
}

export type t_ActionsDownloadJobLogsForWorkflowRunParamSchema = {
  job_id: number
  owner: string
  repo: string
}

export type t_ActionsDownloadWorkflowRunAttemptLogsParamSchema = {
  attempt_number: number
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsDownloadWorkflowRunLogsParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsEnableSelectedRepositoryGithubActionsOrganizationParamSchema =
  {
    org: string
    repository_id: number
  }

export type t_ActionsEnableWorkflowParamSchema = {
  owner: string
  repo: string
  workflow_id: number | string
}

export type t_ActionsGetActionsCacheListParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsGetActionsCacheListQuerySchema = {
  direction?: "asc" | "desc"
  key?: string
  page?: number
  per_page?: number
  ref?: t_code_scanning_ref
  sort?: "created_at" | "last_accessed_at" | "size_in_bytes"
}

export type t_ActionsGetActionsCacheUsageParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsGetActionsCacheUsageByRepoForOrgParamSchema = {
  org: string
}

export type t_ActionsGetActionsCacheUsageByRepoForOrgQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActionsGetActionsCacheUsageForOrgParamSchema = {
  org: string
}

export type t_ActionsGetAllowedActionsOrganizationParamSchema = {
  org: string
}

export type t_ActionsGetAllowedActionsRepositoryParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsGetArtifactParamSchema = {
  artifact_id: number
  owner: string
  repo: string
}

export type t_ActionsGetCustomOidcSubClaimForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsGetEnvironmentPublicKeyParamSchema = {
  environment_name: string
  repository_id: number
}

export type t_ActionsGetEnvironmentSecretParamSchema = {
  environment_name: string
  repository_id: number
  secret_name: string
}

export type t_ActionsGetEnvironmentVariableParamSchema = {
  environment_name: string
  name: string
  repository_id: number
}

export type t_ActionsGetGithubActionsDefaultWorkflowPermissionsOrganizationParamSchema =
  {
    org: string
  }

export type t_ActionsGetGithubActionsDefaultWorkflowPermissionsRepositoryParamSchema =
  {
    owner: string
    repo: string
  }

export type t_ActionsGetGithubActionsPermissionsOrganizationParamSchema = {
  org: string
}

export type t_ActionsGetGithubActionsPermissionsRepositoryParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsGetJobForWorkflowRunParamSchema = {
  job_id: number
  owner: string
  repo: string
}

export type t_ActionsGetOrgPublicKeyParamSchema = {
  org: string
}

export type t_ActionsGetOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_ActionsGetOrgVariableParamSchema = {
  name: string
  org: string
}

export type t_ActionsGetPendingDeploymentsForRunParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsGetRepoPublicKeyParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsGetRepoRequiredWorkflowParamSchema = {
  org: string
  repo: string
  required_workflow_id_for_repo: number
}

export type t_ActionsGetRepoRequiredWorkflowUsageParamSchema = {
  org: string
  repo: string
  required_workflow_id_for_repo: number
}

export type t_ActionsGetRepoSecretParamSchema = {
  owner: string
  repo: string
  secret_name: string
}

export type t_ActionsGetRepoVariableParamSchema = {
  name: string
  owner: string
  repo: string
}

export type t_ActionsGetRequiredWorkflowParamSchema = {
  org: string
  required_workflow_id: number
}

export type t_ActionsGetReviewsForRunParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsGetSelfHostedRunnerForOrgParamSchema = {
  org: string
  runner_id: number
}

export type t_ActionsGetSelfHostedRunnerForRepoParamSchema = {
  owner: string
  repo: string
  runner_id: number
}

export type t_ActionsGetSelfHostedRunnerGroupForOrgParamSchema = {
  org: string
  runner_group_id: number
}

export type t_ActionsGetWorkflowParamSchema = {
  owner: string
  repo: string
  workflow_id: number | string
}

export type t_ActionsGetWorkflowAccessToRepositoryParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsGetWorkflowRunParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsGetWorkflowRunQuerySchema = {
  exclude_pull_requests?: boolean
}

export type t_ActionsGetWorkflowRunAttemptParamSchema = {
  attempt_number: number
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsGetWorkflowRunAttemptQuerySchema = {
  exclude_pull_requests?: boolean
}

export type t_ActionsGetWorkflowRunUsageParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsGetWorkflowUsageParamSchema = {
  owner: string
  repo: string
  workflow_id: number | string
}

export type t_ActionsListArtifactsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsListArtifactsForRepoQuerySchema = {
  name?: string
  page?: number
  per_page?: number
}

export type t_ActionsListEnvironmentSecretsParamSchema = {
  environment_name: string
  repository_id: number
}

export type t_ActionsListEnvironmentSecretsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActionsListEnvironmentVariablesParamSchema = {
  environment_name: string
  repository_id: number
}

export type t_ActionsListEnvironmentVariablesQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActionsListJobsForWorkflowRunParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsListJobsForWorkflowRunQuerySchema = {
  filter?: "latest" | "all"
  page?: number
  per_page?: number
}

export type t_ActionsListJobsForWorkflowRunAttemptParamSchema = {
  attempt_number: number
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsListJobsForWorkflowRunAttemptQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActionsListLabelsForSelfHostedRunnerForOrgParamSchema = {
  org: string
  runner_id: number
}

export type t_ActionsListLabelsForSelfHostedRunnerForRepoParamSchema = {
  owner: string
  repo: string
  runner_id: number
}

export type t_ActionsListOrgSecretsParamSchema = {
  org: string
}

export type t_ActionsListOrgSecretsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActionsListOrgVariablesParamSchema = {
  org: string
}

export type t_ActionsListOrgVariablesQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActionsListRepoAccessToSelfHostedRunnerGroupInOrgParamSchema = {
  org: string
  runner_group_id: number
}

export type t_ActionsListRepoAccessToSelfHostedRunnerGroupInOrgQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActionsListRepoRequiredWorkflowsParamSchema = {
  org: string
  repo: string
}

export type t_ActionsListRepoRequiredWorkflowsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActionsListRepoSecretsParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsListRepoSecretsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActionsListRepoVariablesParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsListRepoVariablesQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActionsListRepoWorkflowsParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsListRepoWorkflowsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActionsListRequiredWorkflowRunsParamSchema = {
  owner: string
  repo: string
  required_workflow_id_for_repo: number
}

export type t_ActionsListRequiredWorkflowRunsQuerySchema = {
  actor?: string
  branch?: string
  check_suite_id?: number
  created?: string
  event?: string
  exclude_pull_requests?: boolean
  head_sha?: string
  page?: number
  per_page?: number
  status?:
    | "completed"
    | "action_required"
    | "cancelled"
    | "failure"
    | "neutral"
    | "skipped"
    | "stale"
    | "success"
    | "timed_out"
    | "in_progress"
    | "queued"
    | "requested"
    | "waiting"
}

export type t_ActionsListRequiredWorkflowsParamSchema = {
  org: string
}

export type t_ActionsListRequiredWorkflowsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActionsListRunnerApplicationsForOrgParamSchema = {
  org: string
}

export type t_ActionsListRunnerApplicationsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsListSelectedReposForOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_ActionsListSelectedReposForOrgSecretQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActionsListSelectedReposForOrgVariableParamSchema = {
  name: string
  org: string
}

export type t_ActionsListSelectedReposForOrgVariableQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActionsListSelectedRepositoriesEnabledGithubActionsOrganizationParamSchema =
  {
    org: string
  }

export type t_ActionsListSelectedRepositoriesEnabledGithubActionsOrganizationQuerySchema =
  {
    page?: number
    per_page?: number
  }

export type t_ActionsListSelectedRepositoriesRequiredWorkflowParamSchema = {
  org: string
  required_workflow_id: number
}

export type t_ActionsListSelfHostedRunnerGroupsForOrgParamSchema = {
  org: string
}

export type t_ActionsListSelfHostedRunnerGroupsForOrgQuerySchema = {
  page?: number
  per_page?: number
  visible_to_repository?: string
}

export type t_ActionsListSelfHostedRunnersForOrgParamSchema = {
  org: string
}

export type t_ActionsListSelfHostedRunnersForOrgQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActionsListSelfHostedRunnersForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsListSelfHostedRunnersForRepoQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActionsListSelfHostedRunnersInGroupForOrgParamSchema = {
  org: string
  runner_group_id: number
}

export type t_ActionsListSelfHostedRunnersInGroupForOrgQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActionsListWorkflowRunArtifactsParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsListWorkflowRunArtifactsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActionsListWorkflowRunsParamSchema = {
  owner: string
  repo: string
  workflow_id: number | string
}

export type t_ActionsListWorkflowRunsQuerySchema = {
  actor?: string
  branch?: string
  check_suite_id?: number
  created?: string
  event?: string
  exclude_pull_requests?: boolean
  head_sha?: string
  page?: number
  per_page?: number
  status?:
    | "completed"
    | "action_required"
    | "cancelled"
    | "failure"
    | "neutral"
    | "skipped"
    | "stale"
    | "success"
    | "timed_out"
    | "in_progress"
    | "queued"
    | "requested"
    | "waiting"
}

export type t_ActionsListWorkflowRunsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsListWorkflowRunsForRepoQuerySchema = {
  actor?: string
  branch?: string
  check_suite_id?: number
  created?: string
  event?: string
  exclude_pull_requests?: boolean
  head_sha?: string
  page?: number
  per_page?: number
  status?:
    | "completed"
    | "action_required"
    | "cancelled"
    | "failure"
    | "neutral"
    | "skipped"
    | "stale"
    | "success"
    | "timed_out"
    | "in_progress"
    | "queued"
    | "requested"
    | "waiting"
}

export type t_ActionsReRunJobForWorkflowRunBodySchema = {
  enable_debug_logging?: boolean
}

export type t_ActionsReRunJobForWorkflowRunParamSchema = {
  job_id: number
  owner: string
  repo: string
}

export type t_ActionsReRunWorkflowBodySchema = {
  enable_debug_logging?: boolean
}

export type t_ActionsReRunWorkflowParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsReRunWorkflowFailedJobsBodySchema = {
  enable_debug_logging?: boolean
}

export type t_ActionsReRunWorkflowFailedJobsParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsRemoveAllCustomLabelsFromSelfHostedRunnerForOrgParamSchema =
  {
    org: string
    runner_id: number
  }

export type t_ActionsRemoveAllCustomLabelsFromSelfHostedRunnerForRepoParamSchema =
  {
    owner: string
    repo: string
    runner_id: number
  }

export type t_ActionsRemoveCustomLabelFromSelfHostedRunnerForOrgParamSchema = {
  name: string
  org: string
  runner_id: number
}

export type t_ActionsRemoveCustomLabelFromSelfHostedRunnerForRepoParamSchema = {
  name: string
  owner: string
  repo: string
  runner_id: number
}

export type t_ActionsRemoveRepoAccessToSelfHostedRunnerGroupInOrgParamSchema = {
  org: string
  repository_id: number
  runner_group_id: number
}

export type t_ActionsRemoveSelectedRepoFromOrgSecretParamSchema = {
  org: string
  repository_id: number
  secret_name: string
}

export type t_ActionsRemoveSelectedRepoFromOrgVariableParamSchema = {
  name: string
  org: string
  repository_id: number
}

export type t_ActionsRemoveSelectedRepoFromRequiredWorkflowParamSchema = {
  org: string
  repository_id: number
  required_workflow_id: number
}

export type t_ActionsRemoveSelfHostedRunnerFromGroupForOrgParamSchema = {
  org: string
  runner_group_id: number
  runner_id: number
}

export type t_ActionsReviewPendingDeploymentsForRunBodySchema = {
  comment: string
  environment_ids: number[]
  state: "approved" | "rejected"
}

export type t_ActionsReviewPendingDeploymentsForRunParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsSetAllowedActionsOrganizationBodySchema = {
  github_owned_allowed?: boolean
  patterns_allowed?: string[]
  verified_allowed?: boolean
}

export type t_ActionsSetAllowedActionsOrganizationParamSchema = {
  org: string
}

export type t_ActionsSetAllowedActionsRepositoryBodySchema = {
  github_owned_allowed?: boolean
  patterns_allowed?: string[]
  verified_allowed?: boolean
}

export type t_ActionsSetAllowedActionsRepositoryParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsSetCustomLabelsForSelfHostedRunnerForOrgBodySchema = {
  labels: string[]
}

export type t_ActionsSetCustomLabelsForSelfHostedRunnerForOrgParamSchema = {
  org: string
  runner_id: number
}

export type t_ActionsSetCustomLabelsForSelfHostedRunnerForRepoBodySchema = {
  labels: string[]
}

export type t_ActionsSetCustomLabelsForSelfHostedRunnerForRepoParamSchema = {
  owner: string
  repo: string
  runner_id: number
}

export type t_ActionsSetCustomOidcSubClaimForRepoBodySchema = {
  include_claim_keys?: string[]
  use_default: boolean
}

export type t_ActionsSetCustomOidcSubClaimForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsSetGithubActionsDefaultWorkflowPermissionsOrganizationBodySchema =
  {
    can_approve_pull_request_reviews?: t_actions_can_approve_pull_request_reviews
    default_workflow_permissions?: t_actions_default_workflow_permissions
  }

export type t_ActionsSetGithubActionsDefaultWorkflowPermissionsOrganizationParamSchema =
  {
    org: string
  }

export type t_ActionsSetGithubActionsDefaultWorkflowPermissionsRepositoryBodySchema =
  {
    can_approve_pull_request_reviews?: t_actions_can_approve_pull_request_reviews
    default_workflow_permissions?: t_actions_default_workflow_permissions
  }

export type t_ActionsSetGithubActionsDefaultWorkflowPermissionsRepositoryParamSchema =
  {
    owner: string
    repo: string
  }

export type t_ActionsSetGithubActionsPermissionsOrganizationBodySchema = {
  allowed_actions?: t_allowed_actions
  enabled_repositories: t_enabled_repositories
}

export type t_ActionsSetGithubActionsPermissionsOrganizationParamSchema = {
  org: string
}

export type t_ActionsSetGithubActionsPermissionsRepositoryBodySchema = {
  allowed_actions?: t_allowed_actions
  enabled: t_actions_enabled
}

export type t_ActionsSetGithubActionsPermissionsRepositoryParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsSetRepoAccessToSelfHostedRunnerGroupInOrgBodySchema = {
  selected_repository_ids: number[]
}

export type t_ActionsSetRepoAccessToSelfHostedRunnerGroupInOrgParamSchema = {
  org: string
  runner_group_id: number
}

export type t_ActionsSetSelectedReposForOrgSecretBodySchema = {
  selected_repository_ids: number[]
}

export type t_ActionsSetSelectedReposForOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_ActionsSetSelectedReposForOrgVariableBodySchema = {
  selected_repository_ids: number[]
}

export type t_ActionsSetSelectedReposForOrgVariableParamSchema = {
  name: string
  org: string
}

export type t_ActionsSetSelectedReposToRequiredWorkflowBodySchema = {
  selected_repository_ids: number[]
}

export type t_ActionsSetSelectedReposToRequiredWorkflowParamSchema = {
  org: string
  required_workflow_id: number
}

export type t_ActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationBodySchema =
  {
    selected_repository_ids: number[]
  }

export type t_ActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationParamSchema =
  {
    org: string
  }

export type t_ActionsSetSelfHostedRunnersInGroupForOrgBodySchema = {
  runners: number[]
}

export type t_ActionsSetSelfHostedRunnersInGroupForOrgParamSchema = {
  org: string
  runner_group_id: number
}

export type t_ActionsSetWorkflowAccessToRepositoryBodySchema = {
  access_level: "none" | "user" | "organization" | "enterprise"
}

export type t_ActionsSetWorkflowAccessToRepositoryParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsUpdateEnvironmentVariableBodySchema = {
  name?: string
  value?: string
}

export type t_ActionsUpdateEnvironmentVariableParamSchema = {
  environment_name: string
  name: string
  repository_id: number
}

export type t_ActionsUpdateOrgVariableBodySchema = {
  name?: string
  selected_repository_ids?: number[]
  value?: string
  visibility?: "all" | "private" | "selected"
}

export type t_ActionsUpdateOrgVariableParamSchema = {
  name: string
  org: string
}

export type t_ActionsUpdateRepoVariableBodySchema = {
  name?: string
  value?: string
}

export type t_ActionsUpdateRepoVariableParamSchema = {
  name: string
  owner: string
  repo: string
}

export type t_ActionsUpdateRequiredWorkflowBodySchema = {
  repository_id?: string
  scope?: "selected" | "all"
  selected_repository_ids?: number[]
  workflow_file_path?: string
}

export type t_ActionsUpdateRequiredWorkflowParamSchema = {
  org: string
  required_workflow_id: number
}

export type t_ActionsUpdateSelfHostedRunnerGroupForOrgBodySchema = {
  allows_public_repositories?: boolean
  name: string
  restricted_to_workflows?: boolean
  selected_workflows?: string[]
  visibility?: "selected" | "all" | "private"
}

export type t_ActionsUpdateSelfHostedRunnerGroupForOrgParamSchema = {
  org: string
  runner_group_id: number
}

export type t_ActivityCheckRepoIsStarredByAuthenticatedUserParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityDeleteRepoSubscriptionParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityDeleteThreadSubscriptionParamSchema = {
  thread_id: number
}

export type t_ActivityGetRepoSubscriptionParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityGetThreadParamSchema = {
  thread_id: number
}

export type t_ActivityGetThreadSubscriptionForAuthenticatedUserParamSchema = {
  thread_id: number
}

export type t_ActivityListEventsForAuthenticatedUserParamSchema = {
  username: string
}

export type t_ActivityListEventsForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActivityListNotificationsForAuthenticatedUserQuerySchema = {
  all?: boolean
  before?: string
  page?: number
  participating?: boolean
  per_page?: number
  since?: string
}

export type t_ActivityListOrgEventsForAuthenticatedUserParamSchema = {
  org: string
  username: string
}

export type t_ActivityListOrgEventsForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActivityListPublicEventsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActivityListPublicEventsForRepoNetworkParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityListPublicEventsForRepoNetworkQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActivityListPublicEventsForUserParamSchema = {
  username: string
}

export type t_ActivityListPublicEventsForUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActivityListPublicOrgEventsParamSchema = {
  org: string
}

export type t_ActivityListPublicOrgEventsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActivityListReceivedEventsForUserParamSchema = {
  username: string
}

export type t_ActivityListReceivedEventsForUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActivityListReceivedPublicEventsForUserParamSchema = {
  username: string
}

export type t_ActivityListReceivedPublicEventsForUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActivityListRepoEventsParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityListRepoEventsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActivityListRepoNotificationsForAuthenticatedUserParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityListRepoNotificationsForAuthenticatedUserQuerySchema = {
  all?: boolean
  before?: string
  page?: number
  participating?: boolean
  per_page?: number
  since?: string
}

export type t_ActivityListReposStarredByAuthenticatedUserQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  sort?: "created" | "updated"
}

export type t_ActivityListReposStarredByUserParamSchema = {
  username: string
}

export type t_ActivityListReposStarredByUserQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  sort?: "created" | "updated"
}

export type t_ActivityListReposWatchedByUserParamSchema = {
  username: string
}

export type t_ActivityListReposWatchedByUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActivityListStargazersForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityListStargazersForRepoQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActivityListWatchedReposForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActivityListWatchersForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityListWatchersForRepoQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ActivityMarkNotificationsAsReadBodySchema = {
  last_read_at?: string
  read?: boolean
}

export type t_ActivityMarkRepoNotificationsAsReadBodySchema = {
  last_read_at?: string
}

export type t_ActivityMarkRepoNotificationsAsReadParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityMarkThreadAsReadParamSchema = {
  thread_id: number
}

export type t_ActivitySetRepoSubscriptionBodySchema = {
  ignored?: boolean
  subscribed?: boolean
}

export type t_ActivitySetRepoSubscriptionParamSchema = {
  owner: string
  repo: string
}

export type t_ActivitySetThreadSubscriptionBodySchema = {
  ignored?: boolean
}

export type t_ActivitySetThreadSubscriptionParamSchema = {
  thread_id: number
}

export type t_ActivityStarRepoForAuthenticatedUserParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityUnstarRepoForAuthenticatedUserParamSchema = {
  owner: string
  repo: string
}

export type t_AppsAddRepoToInstallationForAuthenticatedUserParamSchema = {
  installation_id: number
  repository_id: number
}

export type t_AppsCheckTokenBodySchema = {
  access_token: string
}

export type t_AppsCheckTokenParamSchema = {
  client_id: string
}

export type t_AppsCreateFromManifestParamSchema = {
  code: string
}

export type t_AppsCreateInstallationAccessTokenBodySchema = {
  permissions?: t_app_permissions
  repositories?: string[]
  repository_ids?: number[]
}

export type t_AppsCreateInstallationAccessTokenParamSchema = {
  installation_id: number
}

export type t_AppsDeleteAuthorizationBodySchema = {
  access_token: string
}

export type t_AppsDeleteAuthorizationParamSchema = {
  client_id: string
}

export type t_AppsDeleteInstallationParamSchema = {
  installation_id: number
}

export type t_AppsDeleteTokenBodySchema = {
  access_token: string
}

export type t_AppsDeleteTokenParamSchema = {
  client_id: string
}

export type t_AppsGetBySlugParamSchema = {
  app_slug: string
}

export type t_AppsGetInstallationParamSchema = {
  installation_id: number
}

export type t_AppsGetOrgInstallationParamSchema = {
  org: string
}

export type t_AppsGetRepoInstallationParamSchema = {
  owner: string
  repo: string
}

export type t_AppsGetSubscriptionPlanForAccountParamSchema = {
  account_id: number
}

export type t_AppsGetSubscriptionPlanForAccountStubbedParamSchema = {
  account_id: number
}

export type t_AppsGetUserInstallationParamSchema = {
  username: string
}

export type t_AppsGetWebhookDeliveryParamSchema = {
  delivery_id: number
}

export type t_AppsListAccountsForPlanParamSchema = {
  plan_id: number
}

export type t_AppsListAccountsForPlanQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  sort?: "created" | "updated"
}

export type t_AppsListAccountsForPlanStubbedParamSchema = {
  plan_id: number
}

export type t_AppsListAccountsForPlanStubbedQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  sort?: "created" | "updated"
}

export type t_AppsListInstallationReposForAuthenticatedUserParamSchema = {
  installation_id: number
}

export type t_AppsListInstallationReposForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_AppsListInstallationsQuerySchema = {
  outdated?: string
  page?: number
  per_page?: number
  since?: string
}

export type t_AppsListInstallationsForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_AppsListPlansQuerySchema = {
  page?: number
  per_page?: number
}

export type t_AppsListPlansStubbedQuerySchema = {
  page?: number
  per_page?: number
}

export type t_AppsListReposAccessibleToInstallationQuerySchema = {
  page?: number
  per_page?: number
}

export type t_AppsListSubscriptionsForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_AppsListSubscriptionsForAuthenticatedUserStubbedQuerySchema = {
  page?: number
  per_page?: number
}

export type t_AppsListWebhookDeliveriesQuerySchema = {
  cursor?: string
  per_page?: number
  redelivery?: boolean
}

export type t_AppsRedeliverWebhookDeliveryParamSchema = {
  delivery_id: number
}

export type t_AppsRemoveRepoFromInstallationForAuthenticatedUserParamSchema = {
  installation_id: number
  repository_id: number
}

export type t_AppsResetTokenBodySchema = {
  access_token: string
}

export type t_AppsResetTokenParamSchema = {
  client_id: string
}

export type t_AppsScopeTokenBodySchema = {
  access_token: string
  permissions?: t_app_permissions
  repositories?: string[]
  repository_ids?: number[]
  target?: string
  target_id?: number
}

export type t_AppsScopeTokenParamSchema = {
  client_id: string
}

export type t_AppsSuspendInstallationParamSchema = {
  installation_id: number
}

export type t_AppsUnsuspendInstallationParamSchema = {
  installation_id: number
}

export type t_AppsUpdateWebhookConfigForAppBodySchema = {
  content_type?: t_webhook_config_content_type
  insecure_ssl?: t_webhook_config_insecure_ssl
  secret?: t_webhook_config_secret
  url?: t_webhook_config_url
}

export type t_BillingGetGithubActionsBillingOrgParamSchema = {
  org: string
}

export type t_BillingGetGithubActionsBillingUserParamSchema = {
  username: string
}

export type t_BillingGetGithubPackagesBillingOrgParamSchema = {
  org: string
}

export type t_BillingGetGithubPackagesBillingUserParamSchema = {
  username: string
}

export type t_BillingGetSharedStorageBillingOrgParamSchema = {
  org: string
}

export type t_BillingGetSharedStorageBillingUserParamSchema = {
  username: string
}

export type t_ChecksCreateBodySchema =
  | {
      status: {
        [key: string]: unknown
      }
      [key: string]: unknown
    }
  | {
      status?: {
        [key: string]: unknown
      }
      [key: string]: unknown
    }

export type t_ChecksCreateParamSchema = {
  owner: string
  repo: string
}

export type t_ChecksCreateSuiteBodySchema = {
  head_sha: string
}

export type t_ChecksCreateSuiteParamSchema = {
  owner: string
  repo: string
}

export type t_ChecksGetParamSchema = {
  check_run_id: number
  owner: string
  repo: string
}

export type t_ChecksGetSuiteParamSchema = {
  check_suite_id: number
  owner: string
  repo: string
}

export type t_ChecksListAnnotationsParamSchema = {
  check_run_id: number
  owner: string
  repo: string
}

export type t_ChecksListAnnotationsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ChecksListForRefParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_ChecksListForRefQuerySchema = {
  app_id?: number
  check_name?: string
  filter?: "latest" | "all"
  page?: number
  per_page?: number
  status?: "queued" | "in_progress" | "completed"
}

export type t_ChecksListForSuiteParamSchema = {
  check_suite_id: number
  owner: string
  repo: string
}

export type t_ChecksListForSuiteQuerySchema = {
  check_name?: string
  filter?: "latest" | "all"
  page?: number
  per_page?: number
  status?: "queued" | "in_progress" | "completed"
}

export type t_ChecksListSuitesForRefParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_ChecksListSuitesForRefQuerySchema = {
  app_id?: number
  check_name?: string
  page?: number
  per_page?: number
}

export type t_ChecksRerequestRunParamSchema = {
  check_run_id: number
  owner: string
  repo: string
}

export type t_ChecksRerequestSuiteParamSchema = {
  check_suite_id: number
  owner: string
  repo: string
}

export type t_ChecksSetSuitesPreferencesBodySchema = {
  auto_trigger_checks?: {
    app_id: number
    setting: boolean
  }[]
}

export type t_ChecksSetSuitesPreferencesParamSchema = {
  owner: string
  repo: string
}

export type t_ChecksUpdateBodySchema = {
  actions?: {
    description: string
    identifier: string
    label: string
  }[]
  completed_at?: string
  conclusion?:
    | "action_required"
    | "cancelled"
    | "failure"
    | "neutral"
    | "success"
    | "skipped"
    | "stale"
    | "timed_out"
  details_url?: string
  external_id?: string
  name?: string
  output?: {
    annotations?: {
      annotation_level: "notice" | "warning" | "failure"
      end_column?: number
      end_line: number
      message: string
      path: string
      raw_details?: string
      start_column?: number
      start_line: number
      title?: string
    }[]
    images?: {
      alt: string
      caption?: string
      image_url: string
    }[]
    summary: string
    text?: string
    title?: string
  }
  started_at?: string
  status?: "queued" | "in_progress" | "completed"
}

export type t_ChecksUpdateParamSchema = {
  check_run_id: number
  owner: string
  repo: string
}

export type t_CodeScanningDeleteAnalysisParamSchema = {
  analysis_id: number
  owner: string
  repo: string
}

export type t_CodeScanningDeleteAnalysisQuerySchema = {
  confirm_delete?: string | null
}

export type t_CodeScanningGetAlertParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_CodeScanningGetAnalysisParamSchema = {
  analysis_id: number
  owner: string
  repo: string
}

export type t_CodeScanningGetCodeqlDatabaseParamSchema = {
  language: string
  owner: string
  repo: string
}

export type t_CodeScanningGetSarifParamSchema = {
  owner: string
  repo: string
  sarif_id: string
}

export type t_CodeScanningListAlertInstancesParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_CodeScanningListAlertInstancesQuerySchema = {
  page?: number
  per_page?: number
  ref?: t_code_scanning_ref
}

export type t_CodeScanningListAlertsForOrgParamSchema = {
  org: string
}

export type t_CodeScanningListAlertsForOrgQuerySchema = {
  after?: string
  before?: string
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  severity?: t_code_scanning_alert_severity
  sort?: "created" | "updated"
  state?: t_code_scanning_alert_state
  tool_guid?: t_code_scanning_analysis_tool_guid
  tool_name?: t_code_scanning_analysis_tool_name
}

export type t_CodeScanningListAlertsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_CodeScanningListAlertsForRepoQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  ref?: t_code_scanning_ref
  severity?: t_code_scanning_alert_severity
  sort?: "created" | "updated"
  state?: t_code_scanning_alert_state
  tool_guid?: t_code_scanning_analysis_tool_guid
  tool_name?: t_code_scanning_analysis_tool_name
}

export type t_CodeScanningListCodeqlDatabasesParamSchema = {
  owner: string
  repo: string
}

export type t_CodeScanningListRecentAnalysesParamSchema = {
  owner: string
  repo: string
}

export type t_CodeScanningListRecentAnalysesQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  ref?: t_code_scanning_ref
  sarif_id?: t_code_scanning_analysis_sarif_id
  sort?: "created"
  tool_guid?: t_code_scanning_analysis_tool_guid
  tool_name?: t_code_scanning_analysis_tool_name
}

export type t_CodeScanningUpdateAlertBodySchema = {
  dismissed_comment?: t_code_scanning_alert_dismissed_comment
  dismissed_reason?: t_code_scanning_alert_dismissed_reason
  state: t_code_scanning_alert_set_state
}

export type t_CodeScanningUpdateAlertParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_CodeScanningUploadSarifBodySchema = {
  checkout_uri?: string
  commit_sha: t_code_scanning_analysis_commit_sha
  ref: t_code_scanning_ref
  sarif: t_code_scanning_analysis_sarif_file
  started_at?: string
  tool_name?: string
  validate?: boolean
}

export type t_CodeScanningUploadSarifParamSchema = {
  owner: string
  repo: string
}

export type t_CodesOfConductGetConductCodeParamSchema = {
  key: string
}

export type t_CodespacesAddRepositoryForSecretForAuthenticatedUserParamSchema =
  {
    repository_id: number
    secret_name: string
  }

export type t_CodespacesAddSelectedRepoToOrgSecretParamSchema = {
  org: string
  repository_id: number
  secret_name: string
}

export type t_CodespacesCodespaceMachinesForAuthenticatedUserParamSchema = {
  codespace_name: string
}

export type t_CodespacesCreateForAuthenticatedUserBodySchema =
  | {
      client_ip?: string
      devcontainer_path?: string
      display_name?: string
      idle_timeout_minutes?: number
      location?: string
      machine?: string
      multi_repo_permissions_opt_out?: boolean
      ref?: string
      repository_id: number
      retention_period_minutes?: number
      working_directory?: string
    }
  | {
      devcontainer_path?: string
      idle_timeout_minutes?: number
      location?: string
      machine?: string
      pull_request: {
        pull_request_number: number
        repository_id: number
      }
      working_directory?: string
    }

export type t_CodespacesCreateOrUpdateOrgSecretBodySchema = {
  encrypted_value?: string
  key_id?: string
  selected_repository_ids?: number[]
  visibility: "all" | "private" | "selected"
}

export type t_CodespacesCreateOrUpdateOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_CodespacesCreateOrUpdateRepoSecretBodySchema = {
  encrypted_value?: string
  key_id?: string
}

export type t_CodespacesCreateOrUpdateRepoSecretParamSchema = {
  owner: string
  repo: string
  secret_name: string
}

export type t_CodespacesCreateOrUpdateSecretForAuthenticatedUserBodySchema = {
  encrypted_value?: string
  key_id: string
  selected_repository_ids?: string[]
}

export type t_CodespacesCreateOrUpdateSecretForAuthenticatedUserParamSchema = {
  secret_name: string
}

export type t_CodespacesCreateWithPrForAuthenticatedUserBodySchema = {
  client_ip?: string
  devcontainer_path?: string
  display_name?: string
  idle_timeout_minutes?: number
  location?: string
  machine?: string
  multi_repo_permissions_opt_out?: boolean
  retention_period_minutes?: number
  working_directory?: string
}

export type t_CodespacesCreateWithPrForAuthenticatedUserParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_CodespacesCreateWithRepoForAuthenticatedUserBodySchema = {
  client_ip?: string
  devcontainer_path?: string
  display_name?: string
  idle_timeout_minutes?: number
  location?: string
  machine?: string
  multi_repo_permissions_opt_out?: boolean
  ref?: string
  retention_period_minutes?: number
  working_directory?: string
}

export type t_CodespacesCreateWithRepoForAuthenticatedUserParamSchema = {
  owner: string
  repo: string
}

export type t_CodespacesDeleteForAuthenticatedUserParamSchema = {
  codespace_name: string
}

export type t_CodespacesDeleteFromOrganizationParamSchema = {
  codespace_name: string
  org: string
  username: string
}

export type t_CodespacesDeleteOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_CodespacesDeleteRepoSecretParamSchema = {
  owner: string
  repo: string
  secret_name: string
}

export type t_CodespacesDeleteSecretForAuthenticatedUserParamSchema = {
  secret_name: string
}

export type t_CodespacesExportForAuthenticatedUserParamSchema = {
  codespace_name: string
}

export type t_CodespacesGetCodespacesForUserInOrgParamSchema = {
  org: string
  username: string
}

export type t_CodespacesGetCodespacesForUserInOrgQuerySchema = {
  page?: number
  per_page?: number
}

export type t_CodespacesGetExportDetailsForAuthenticatedUserParamSchema = {
  codespace_name: string
  export_id: string
}

export type t_CodespacesGetForAuthenticatedUserParamSchema = {
  codespace_name: string
}

export type t_CodespacesGetOrgPublicKeyParamSchema = {
  org: string
}

export type t_CodespacesGetOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_CodespacesGetRepoPublicKeyParamSchema = {
  owner: string
  repo: string
}

export type t_CodespacesGetRepoSecretParamSchema = {
  owner: string
  repo: string
  secret_name: string
}

export type t_CodespacesGetSecretForAuthenticatedUserParamSchema = {
  secret_name: string
}

export type t_CodespacesListDevcontainersInRepositoryForAuthenticatedUserParamSchema =
  {
    owner: string
    repo: string
  }

export type t_CodespacesListDevcontainersInRepositoryForAuthenticatedUserQuerySchema =
  {
    page?: number
    per_page?: number
  }

export type t_CodespacesListForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
  repository_id?: number
}

export type t_CodespacesListInOrganizationParamSchema = {
  org: string
}

export type t_CodespacesListInOrganizationQuerySchema = {
  page?: number
  per_page?: number
}

export type t_CodespacesListInRepositoryForAuthenticatedUserParamSchema = {
  owner: string
  repo: string
}

export type t_CodespacesListInRepositoryForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_CodespacesListOrgSecretsParamSchema = {
  org: string
}

export type t_CodespacesListOrgSecretsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_CodespacesListRepoSecretsParamSchema = {
  owner: string
  repo: string
}

export type t_CodespacesListRepoSecretsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_CodespacesListRepositoriesForSecretForAuthenticatedUserParamSchema =
  {
    secret_name: string
  }

export type t_CodespacesListSecretsForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_CodespacesListSelectedReposForOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_CodespacesListSelectedReposForOrgSecretQuerySchema = {
  page?: number
  per_page?: number
}

export type t_CodespacesPreFlightWithRepoForAuthenticatedUserParamSchema = {
  owner: string
  repo: string
}

export type t_CodespacesPreFlightWithRepoForAuthenticatedUserQuerySchema = {
  client_ip?: string
  ref?: string
}

export type t_CodespacesPublishForAuthenticatedUserBodySchema = {
  name?: string
  private?: boolean
}

export type t_CodespacesPublishForAuthenticatedUserParamSchema = {
  codespace_name: string
}

export type t_CodespacesRemoveRepositoryForSecretForAuthenticatedUserParamSchema =
  {
    repository_id: number
    secret_name: string
  }

export type t_CodespacesRemoveSelectedRepoFromOrgSecretParamSchema = {
  org: string
  repository_id: number
  secret_name: string
}

export type t_CodespacesRepoMachinesForAuthenticatedUserParamSchema = {
  owner: string
  repo: string
}

export type t_CodespacesRepoMachinesForAuthenticatedUserQuerySchema = {
  client_ip?: string
  location?: string
}

export type t_CodespacesSetCodespacesBillingBodySchema = {
  selected_usernames?: string[]
  visibility:
    | "disabled"
    | "selected_members"
    | "all_members"
    | "all_members_and_outside_collaborators"
}

export type t_CodespacesSetCodespacesBillingParamSchema = {
  org: string
}

export type t_CodespacesSetRepositoriesForSecretForAuthenticatedUserBodySchema =
  {
    selected_repository_ids: number[]
  }

export type t_CodespacesSetRepositoriesForSecretForAuthenticatedUserParamSchema =
  {
    secret_name: string
  }

export type t_CodespacesSetSelectedReposForOrgSecretBodySchema = {
  selected_repository_ids: number[]
}

export type t_CodespacesSetSelectedReposForOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_CodespacesStartForAuthenticatedUserParamSchema = {
  codespace_name: string
}

export type t_CodespacesStopForAuthenticatedUserParamSchema = {
  codespace_name: string
}

export type t_CodespacesStopInOrganizationParamSchema = {
  codespace_name: string
  org: string
  username: string
}

export type t_CodespacesUpdateForAuthenticatedUserBodySchema = {
  display_name?: string
  machine?: string
  recent_folders?: string[]
}

export type t_CodespacesUpdateForAuthenticatedUserParamSchema = {
  codespace_name: string
}

export type t_DependabotAddSelectedRepoToOrgSecretParamSchema = {
  org: string
  repository_id: number
  secret_name: string
}

export type t_DependabotCreateOrUpdateOrgSecretBodySchema = {
  encrypted_value?: string
  key_id?: string
  selected_repository_ids?: string[]
  visibility: "all" | "private" | "selected"
}

export type t_DependabotCreateOrUpdateOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_DependabotCreateOrUpdateRepoSecretBodySchema = {
  encrypted_value?: string
  key_id?: string
}

export type t_DependabotCreateOrUpdateRepoSecretParamSchema = {
  owner: string
  repo: string
  secret_name: string
}

export type t_DependabotDeleteOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_DependabotDeleteRepoSecretParamSchema = {
  owner: string
  repo: string
  secret_name: string
}

export type t_DependabotGetAlertParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_DependabotGetOrgPublicKeyParamSchema = {
  org: string
}

export type t_DependabotGetOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_DependabotGetRepoPublicKeyParamSchema = {
  owner: string
  repo: string
}

export type t_DependabotGetRepoSecretParamSchema = {
  owner: string
  repo: string
  secret_name: string
}

export type t_DependabotListAlertsForEnterpriseParamSchema = {
  enterprise: string
}

export type t_DependabotListAlertsForEnterpriseQuerySchema = {
  after?: string
  before?: string
  direction?: "asc" | "desc"
  ecosystem?: string
  first?: number
  last?: number
  package?: string
  per_page?: number
  scope?: "development" | "runtime"
  severity?: string
  sort?: "created" | "updated"
  state?: string
}

export type t_DependabotListAlertsForOrgParamSchema = {
  org: string
}

export type t_DependabotListAlertsForOrgQuerySchema = {
  after?: string
  before?: string
  direction?: "asc" | "desc"
  ecosystem?: string
  first?: number
  last?: number
  package?: string
  per_page?: number
  scope?: "development" | "runtime"
  severity?: string
  sort?: "created" | "updated"
  state?: string
}

export type t_DependabotListAlertsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_DependabotListAlertsForRepoQuerySchema = {
  after?: string
  before?: string
  direction?: "asc" | "desc"
  ecosystem?: string
  first?: number
  last?: number
  manifest?: string
  package?: string
  page?: number
  per_page?: number
  scope?: "development" | "runtime"
  severity?: string
  sort?: "created" | "updated"
  state?: string
}

export type t_DependabotListOrgSecretsParamSchema = {
  org: string
}

export type t_DependabotListOrgSecretsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_DependabotListRepoSecretsParamSchema = {
  owner: string
  repo: string
}

export type t_DependabotListRepoSecretsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_DependabotListSelectedReposForOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_DependabotListSelectedReposForOrgSecretQuerySchema = {
  page?: number
  per_page?: number
}

export type t_DependabotRemoveSelectedRepoFromOrgSecretParamSchema = {
  org: string
  repository_id: number
  secret_name: string
}

export type t_DependabotSetSelectedReposForOrgSecretBodySchema = {
  selected_repository_ids: number[]
}

export type t_DependabotSetSelectedReposForOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_DependabotUpdateAlertBodySchema = {
  dismissed_comment?: string
  dismissed_reason?:
    | "fix_started"
    | "inaccurate"
    | "no_bandwidth"
    | "not_used"
    | "tolerable_risk"
  state: "dismissed" | "open"
}

export type t_DependabotUpdateAlertParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_DependencyGraphCreateRepositorySnapshotBodySchema = {
  detector: {
    name: string
    url: string
    version: string
  }
  job: {
    correlator: string
    html_url?: string
    id: string
  }
  manifests?: {
    [key: string]: unknown
  }
  metadata?: t_metadata
  ref: string
  scanned: string
  sha: string
  version: number
}

export type t_DependencyGraphCreateRepositorySnapshotParamSchema = {
  owner: string
  repo: string
}

export type t_DependencyGraphDiffRangeParamSchema = {
  basehead: string
  owner: string
  repo: string
}

export type t_DependencyGraphDiffRangeQuerySchema = {
  name?: string
}

export type t_EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseBodySchema =
  {
    labels: string[]
  }

export type t_EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseParamSchema =
  {
    enterprise: string
    runner_id: number
  }

export type t_EnterpriseAdminAddOrgAccessToSelfHostedRunnerGroupInEnterpriseParamSchema =
  {
    enterprise: string
    org_id: number
    runner_group_id: number
  }

export type t_EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseBodySchema =
  {
    allows_public_repositories?: boolean
    name: string
    restricted_to_workflows?: boolean
    runners?: number[]
    selected_organization_ids?: number[]
    selected_workflows?: string[]
    visibility?: "selected" | "all"
  }

export type t_EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseParamSchema =
  {
    enterprise: string
  }

export type t_EnterpriseAdminDeleteSelfHostedRunnerFromEnterpriseParamSchema = {
  enterprise: string
  runner_id: number
}

export type t_EnterpriseAdminEnableSelectedOrganizationGithubActionsEnterpriseParamSchema =
  {
    enterprise: string
    org_id: number
  }

export type t_EnterpriseAdminGetSelfHostedRunnerGroupForEnterpriseParamSchema =
  {
    enterprise: string
    runner_group_id: number
  }

export type t_EnterpriseAdminListLabelsForSelfHostedRunnerForEnterpriseParamSchema =
  {
    enterprise: string
    runner_id: number
  }

export type t_EnterpriseAdminListSelfHostedRunnerGroupsForEnterpriseParamSchema =
  {
    enterprise: string
  }

export type t_EnterpriseAdminListSelfHostedRunnerGroupsForEnterpriseQuerySchema =
  {
    page?: number
    per_page?: number
    visible_to_organization?: string
  }

export type t_EnterpriseAdminRemoveSelfHostedRunnerFromGroupForEnterpriseParamSchema =
  {
    enterprise: string
    runner_group_id: number
    runner_id: number
  }

export type t_GistsCheckIsStarredParamSchema = {
  gist_id: string
}

export type t_GistsCreateBodySchema = {
  description?: string
  files: {
    [key: string]: unknown
  }
  public?: boolean | "true" | "false"
}

export type t_GistsCreateCommentBodySchema = {
  body: string
}

export type t_GistsCreateCommentParamSchema = {
  gist_id: string
}

export type t_GistsDeleteParamSchema = {
  gist_id: string
}

export type t_GistsDeleteCommentParamSchema = {
  comment_id: number
  gist_id: string
}

export type t_GistsForkParamSchema = {
  gist_id: string
}

export type t_GistsGetParamSchema = {
  gist_id: string
}

export type t_GistsGetCommentParamSchema = {
  comment_id: number
  gist_id: string
}

export type t_GistsGetRevisionParamSchema = {
  gist_id: string
  sha: string
}

export type t_GistsListQuerySchema = {
  page?: number
  per_page?: number
  since?: string
}

export type t_GistsListCommentsParamSchema = {
  gist_id: string
}

export type t_GistsListCommentsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_GistsListCommitsParamSchema = {
  gist_id: string
}

export type t_GistsListCommitsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_GistsListForUserParamSchema = {
  username: string
}

export type t_GistsListForUserQuerySchema = {
  page?: number
  per_page?: number
  since?: string
}

export type t_GistsListForksParamSchema = {
  gist_id: string
}

export type t_GistsListForksQuerySchema = {
  page?: number
  per_page?: number
}

export type t_GistsListPublicQuerySchema = {
  page?: number
  per_page?: number
  since?: string
}

export type t_GistsListStarredQuerySchema = {
  page?: number
  per_page?: number
  since?: string
}

export type t_GistsStarParamSchema = {
  gist_id: string
}

export type t_GistsUnstarParamSchema = {
  gist_id: string
}

export type t_GistsUpdateBodySchema = {
  description?: string
  files?: {
    [key: string]: unknown
  }
}

export type t_GistsUpdateParamSchema = {
  gist_id: string
}

export type t_GistsUpdateCommentBodySchema = {
  body: string
}

export type t_GistsUpdateCommentParamSchema = {
  comment_id: number
  gist_id: string
}

export type t_GitCreateBlobBodySchema = {
  content: string
  encoding?: string
}

export type t_GitCreateBlobParamSchema = {
  owner: string
  repo: string
}

export type t_GitCreateCommitBodySchema = {
  author?: {
    date?: string
    email: string
    name: string
  }
  committer?: {
    date?: string
    email?: string
    name?: string
  }
  message: string
  parents?: string[]
  signature?: string
  tree: string
}

export type t_GitCreateCommitParamSchema = {
  owner: string
  repo: string
}

export type t_GitCreateRefBodySchema = {
  key?: string
  ref: string
  sha: string
}

export type t_GitCreateRefParamSchema = {
  owner: string
  repo: string
}

export type t_GitCreateTagBodySchema = {
  message: string
  object: string
  tag: string
  tagger?: {
    date?: string
    email: string
    name: string
  }
  type: "commit" | "tree" | "blob"
}

export type t_GitCreateTagParamSchema = {
  owner: string
  repo: string
}

export type t_GitCreateTreeBodySchema = {
  base_tree?: string
  tree: {
    content?: string
    mode?: "100644" | "100755" | "040000" | "160000" | "120000"
    path?: string
    sha?: string | null
    type?: "blob" | "tree" | "commit"
  }[]
}

export type t_GitCreateTreeParamSchema = {
  owner: string
  repo: string
}

export type t_GitDeleteRefParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_GitGetBlobParamSchema = {
  file_sha: string
  owner: string
  repo: string
}

export type t_GitGetCommitParamSchema = {
  commit_sha: string
  owner: string
  repo: string
}

export type t_GitGetRefParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_GitGetTagParamSchema = {
  owner: string
  repo: string
  tag_sha: string
}

export type t_GitGetTreeParamSchema = {
  owner: string
  repo: string
  tree_sha: string
}

export type t_GitGetTreeQuerySchema = {
  recursive?: string
}

export type t_GitListMatchingRefsParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_GitUpdateRefBodySchema = {
  force?: boolean
  sha: string
}

export type t_GitUpdateRefParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_GitignoreGetTemplateParamSchema = {
  name: string
}

export type t_InteractionsGetRestrictionsForOrgParamSchema = {
  org: string
}

export type t_InteractionsGetRestrictionsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_InteractionsRemoveRestrictionsForOrgParamSchema = {
  org: string
}

export type t_InteractionsRemoveRestrictionsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_InteractionsSetRestrictionsForAuthenticatedUserBodySchema = {
  expiry?: t_interaction_expiry
  limit: t_interaction_group
}

export type t_InteractionsSetRestrictionsForOrgBodySchema = {
  expiry?: t_interaction_expiry
  limit: t_interaction_group
}

export type t_InteractionsSetRestrictionsForOrgParamSchema = {
  org: string
}

export type t_InteractionsSetRestrictionsForRepoBodySchema = {
  expiry?: t_interaction_expiry
  limit: t_interaction_group
}

export type t_InteractionsSetRestrictionsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesAddAssigneesBodySchema = {
  assignees?: string[]
}

export type t_IssuesAddAssigneesParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesAddLabelsBodySchema =
  | {
      labels?: string[]
    }
  | string[]
  | {
      labels?: {
        name: string
      }[]
    }
  | {
      name: string
    }[]
  | string

export type t_IssuesAddLabelsParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesCheckUserCanBeAssignedParamSchema = {
  assignee: string
  owner: string
  repo: string
}

export type t_IssuesCheckUserCanBeAssignedToIssueParamSchema = {
  assignee: string
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesCreateBodySchema = {
  assignee?: string | null
  assignees?: string[]
  body?: string
  labels?: (
    | string
    | {
        color?: string | null
        description?: string | null
        id?: number
        name?: string
      }
  )[]
  milestone?: (string | number) | null
  title: string | number
}

export type t_IssuesCreateParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesCreateCommentBodySchema = {
  body: string
}

export type t_IssuesCreateCommentParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesCreateLabelBodySchema = {
  color?: string
  description?: string
  name: string
}

export type t_IssuesCreateLabelParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesCreateMilestoneBodySchema = {
  description?: string
  due_on?: string
  state?: "open" | "closed"
  title: string
}

export type t_IssuesCreateMilestoneParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesDeleteCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_IssuesDeleteLabelParamSchema = {
  name: string
  owner: string
  repo: string
}

export type t_IssuesDeleteMilestoneParamSchema = {
  milestone_number: number
  owner: string
  repo: string
}

export type t_IssuesGetParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesGetCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_IssuesGetEventParamSchema = {
  event_id: number
  owner: string
  repo: string
}

export type t_IssuesGetLabelParamSchema = {
  name: string
  owner: string
  repo: string
}

export type t_IssuesGetMilestoneParamSchema = {
  milestone_number: number
  owner: string
  repo: string
}

export type t_IssuesListQuerySchema = {
  collab?: boolean
  direction?: "asc" | "desc"
  filter?: "assigned" | "created" | "mentioned" | "subscribed" | "repos" | "all"
  labels?: string
  orgs?: boolean
  owned?: boolean
  page?: number
  per_page?: number
  pulls?: boolean
  since?: string
  sort?: "created" | "updated" | "comments"
  state?: "open" | "closed" | "all"
}

export type t_IssuesListAssigneesParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesListAssigneesQuerySchema = {
  page?: number
  per_page?: number
}

export type t_IssuesListCommentsParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesListCommentsQuerySchema = {
  page?: number
  per_page?: number
  since?: string
}

export type t_IssuesListCommentsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesListCommentsForRepoQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  since?: string
  sort?: "created" | "updated"
}

export type t_IssuesListEventsParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesListEventsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_IssuesListEventsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesListEventsForRepoQuerySchema = {
  page?: number
  per_page?: number
}

export type t_IssuesListEventsForTimelineParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesListEventsForTimelineQuerySchema = {
  page?: number
  per_page?: number
}

export type t_IssuesListForAuthenticatedUserQuerySchema = {
  direction?: "asc" | "desc"
  filter?: "assigned" | "created" | "mentioned" | "subscribed" | "repos" | "all"
  labels?: string
  page?: number
  per_page?: number
  since?: string
  sort?: "created" | "updated" | "comments"
  state?: "open" | "closed" | "all"
}

export type t_IssuesListForOrgParamSchema = {
  org: string
}

export type t_IssuesListForOrgQuerySchema = {
  direction?: "asc" | "desc"
  filter?: "assigned" | "created" | "mentioned" | "subscribed" | "repos" | "all"
  labels?: string
  page?: number
  per_page?: number
  since?: string
  sort?: "created" | "updated" | "comments"
  state?: "open" | "closed" | "all"
}

export type t_IssuesListForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesListForRepoQuerySchema = {
  assignee?: string
  creator?: string
  direction?: "asc" | "desc"
  labels?: string
  mentioned?: string
  milestone?: string
  page?: number
  per_page?: number
  since?: string
  sort?: "created" | "updated" | "comments"
  state?: "open" | "closed" | "all"
}

export type t_IssuesListLabelsForMilestoneParamSchema = {
  milestone_number: number
  owner: string
  repo: string
}

export type t_IssuesListLabelsForMilestoneQuerySchema = {
  page?: number
  per_page?: number
}

export type t_IssuesListLabelsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesListLabelsForRepoQuerySchema = {
  page?: number
  per_page?: number
}

export type t_IssuesListLabelsOnIssueParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesListLabelsOnIssueQuerySchema = {
  page?: number
  per_page?: number
}

export type t_IssuesListMilestonesParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesListMilestonesQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  sort?: "due_on" | "completeness"
  state?: "open" | "closed" | "all"
}

export type t_IssuesLockBodySchema = {
  lock_reason?: "off-topic" | "too heated" | "resolved" | "spam"
}

export type t_IssuesLockParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesRemoveAllLabelsParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesRemoveAssigneesBodySchema = {
  assignees?: string[]
}

export type t_IssuesRemoveAssigneesParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesRemoveLabelParamSchema = {
  issue_number: number
  name: string
  owner: string
  repo: string
}

export type t_IssuesSetLabelsBodySchema =
  | {
      labels?: string[]
    }
  | string[]
  | {
      labels?: {
        name: string
      }[]
    }
  | {
      name: string
    }[]
  | string

export type t_IssuesSetLabelsParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesUnlockParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesUpdateBodySchema = {
  assignee?: string | null
  assignees?: string[]
  body?: string | null
  labels?: (
    | string
    | {
        color?: string | null
        description?: string | null
        id?: number
        name?: string
      }
  )[]
  milestone?: (string | number) | null
  state?: "open" | "closed"
  state_reason?: "completed" | "not_planned" | "reopened" | null
  title?: (string | number) | null
}

export type t_IssuesUpdateParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesUpdateCommentBodySchema = {
  body: string
}

export type t_IssuesUpdateCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_IssuesUpdateLabelBodySchema = {
  color?: string
  description?: string
  new_name?: string
}

export type t_IssuesUpdateLabelParamSchema = {
  name: string
  owner: string
  repo: string
}

export type t_IssuesUpdateMilestoneBodySchema = {
  description?: string
  due_on?: string
  state?: "open" | "closed"
  title?: string
}

export type t_IssuesUpdateMilestoneParamSchema = {
  milestone_number: number
  owner: string
  repo: string
}

export type t_LicensesGetParamSchema = {
  license: string
}

export type t_LicensesGetAllCommonlyUsedQuerySchema = {
  featured?: boolean
  page?: number
  per_page?: number
}

export type t_LicensesGetForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_MarkdownRenderBodySchema = {
  context?: string
  mode?: "markdown" | "gfm"
  text: string
}

export type t_MarkdownRenderRawBodySchema = string

export type t_MetaGetOctocatQuerySchema = {
  s?: string
}

export type t_MigrationsCancelImportParamSchema = {
  owner: string
  repo: string
}

export type t_MigrationsDeleteArchiveForAuthenticatedUserParamSchema = {
  migration_id: number
}

export type t_MigrationsDeleteArchiveForOrgParamSchema = {
  migration_id: number
  org: string
}

export type t_MigrationsDownloadArchiveForOrgParamSchema = {
  migration_id: number
  org: string
}

export type t_MigrationsGetArchiveForAuthenticatedUserParamSchema = {
  migration_id: number
}

export type t_MigrationsGetCommitAuthorsParamSchema = {
  owner: string
  repo: string
}

export type t_MigrationsGetCommitAuthorsQuerySchema = {
  since?: number
}

export type t_MigrationsGetImportStatusParamSchema = {
  owner: string
  repo: string
}

export type t_MigrationsGetLargeFilesParamSchema = {
  owner: string
  repo: string
}

export type t_MigrationsGetStatusForAuthenticatedUserParamSchema = {
  migration_id: number
}

export type t_MigrationsGetStatusForAuthenticatedUserQuerySchema = {
  exclude?: string[]
}

export type t_MigrationsGetStatusForOrgParamSchema = {
  migration_id: number
  org: string
}

export type t_MigrationsGetStatusForOrgQuerySchema = {
  exclude?: "repositories"[]
}

export type t_MigrationsListForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_MigrationsListForOrgParamSchema = {
  org: string
}

export type t_MigrationsListForOrgQuerySchema = {
  exclude?: "repositories"[]
  page?: number
  per_page?: number
}

export type t_MigrationsListReposForAuthenticatedUserParamSchema = {
  migration_id: number
}

export type t_MigrationsListReposForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_MigrationsListReposForOrgParamSchema = {
  migration_id: number
  org: string
}

export type t_MigrationsListReposForOrgQuerySchema = {
  page?: number
  per_page?: number
}

export type t_MigrationsMapCommitAuthorBodySchema = {
  email?: string
  name?: string
}

export type t_MigrationsMapCommitAuthorParamSchema = {
  author_id: number
  owner: string
  repo: string
}

export type t_MigrationsSetLfsPreferenceBodySchema = {
  use_lfs: "opt_in" | "opt_out"
}

export type t_MigrationsSetLfsPreferenceParamSchema = {
  owner: string
  repo: string
}

export type t_MigrationsStartForAuthenticatedUserBodySchema = {
  exclude?: "repositories"[]
  exclude_attachments?: boolean
  exclude_git_data?: boolean
  exclude_metadata?: boolean
  exclude_owner_projects?: boolean
  exclude_releases?: boolean
  lock_repositories?: boolean
  org_metadata_only?: boolean
  repositories: string[]
}

export type t_MigrationsStartForOrgBodySchema = {
  exclude?: "repositories"[]
  exclude_attachments?: boolean
  exclude_git_data?: boolean
  exclude_metadata?: boolean
  exclude_owner_projects?: boolean
  exclude_releases?: boolean
  lock_repositories?: boolean
  org_metadata_only?: boolean
  repositories: string[]
}

export type t_MigrationsStartForOrgParamSchema = {
  org: string
}

export type t_MigrationsStartImportBodySchema = {
  tfvc_project?: string
  vcs?: "subversion" | "git" | "mercurial" | "tfvc"
  vcs_password?: string
  vcs_url: string
  vcs_username?: string
}

export type t_MigrationsStartImportParamSchema = {
  owner: string
  repo: string
}

export type t_MigrationsUnlockRepoForAuthenticatedUserParamSchema = {
  migration_id: number
  repo_name: string
}

export type t_MigrationsUnlockRepoForOrgParamSchema = {
  migration_id: number
  org: string
  repo_name: string
}

export type t_MigrationsUpdateImportBodySchema = {
  tfvc_project?: string
  vcs?: "subversion" | "tfvc" | "git" | "mercurial"
  vcs_password?: string
  vcs_username?: string
}

export type t_MigrationsUpdateImportParamSchema = {
  owner: string
  repo: string
}

export type t_OidcGetOidcCustomSubTemplateForOrgParamSchema = {
  org: string
}

export type t_OidcUpdateOidcCustomSubTemplateForOrgBodySchema = {
  include_claim_keys: string[]
}

export type t_OidcUpdateOidcCustomSubTemplateForOrgParamSchema = {
  org: string
}

export type t_OrgsAddSecurityManagerTeamParamSchema = {
  org: string
  team_slug: string
}

export type t_OrgsBlockUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsCancelInvitationParamSchema = {
  invitation_id: number
  org: string
}

export type t_OrgsCheckBlockedUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsCheckMembershipForUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsCheckPublicMembershipForUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsConvertMemberToOutsideCollaboratorBodySchema = {
  async?: boolean
}

export type t_OrgsConvertMemberToOutsideCollaboratorParamSchema = {
  org: string
  username: string
}

export type t_OrgsCreateInvitationBodySchema = {
  email?: string
  invitee_id?: number
  role?: "admin" | "direct_member" | "billing_manager"
  team_ids?: number[]
}

export type t_OrgsCreateInvitationParamSchema = {
  org: string
}

export type t_OrgsCreateWebhookBodySchema = {
  active?: boolean
  config: {
    content_type?: t_webhook_config_content_type
    insecure_ssl?: t_webhook_config_insecure_ssl
    password?: string
    secret?: t_webhook_config_secret
    url: t_webhook_config_url
    username?: string
  }
  events?: string[]
  name: string
}

export type t_OrgsCreateWebhookParamSchema = {
  org: string
}

export type t_OrgsDeleteWebhookParamSchema = {
  hook_id: number
  org: string
}

export type t_OrgsEnableOrDisableSecurityProductOnAllOrgReposParamSchema = {
  enablement: "enable_all" | "disable_all"
  org: string
  security_product:
    | "dependency_graph"
    | "dependabot_alerts"
    | "dependabot_security_updates"
    | "advanced_security"
    | "secret_scanning"
    | "secret_scanning_push_protection"
}

export type t_OrgsGetParamSchema = {
  org: string
}

export type t_OrgsGetMembershipForAuthenticatedUserParamSchema = {
  org: string
}

export type t_OrgsGetMembershipForUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsGetWebhookParamSchema = {
  hook_id: number
  org: string
}

export type t_OrgsGetWebhookConfigForOrgParamSchema = {
  hook_id: number
  org: string
}

export type t_OrgsGetWebhookDeliveryParamSchema = {
  delivery_id: number
  hook_id: number
  org: string
}

export type t_OrgsListQuerySchema = {
  per_page?: number
  since?: number
}

export type t_OrgsListAppInstallationsParamSchema = {
  org: string
}

export type t_OrgsListAppInstallationsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_OrgsListBlockedUsersParamSchema = {
  org: string
}

export type t_OrgsListBlockedUsersQuerySchema = {
  page?: number
  per_page?: number
}

export type t_OrgsListFailedInvitationsParamSchema = {
  org: string
}

export type t_OrgsListFailedInvitationsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_OrgsListForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_OrgsListForUserParamSchema = {
  username: string
}

export type t_OrgsListForUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_OrgsListInvitationTeamsParamSchema = {
  invitation_id: number
  org: string
}

export type t_OrgsListInvitationTeamsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_OrgsListMembersParamSchema = {
  org: string
}

export type t_OrgsListMembersQuerySchema = {
  filter?: "2fa_disabled" | "all"
  page?: number
  per_page?: number
  role?: "all" | "admin" | "member"
}

export type t_OrgsListMembershipsForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
  state?: "active" | "pending"
}

export type t_OrgsListOutsideCollaboratorsParamSchema = {
  org: string
}

export type t_OrgsListOutsideCollaboratorsQuerySchema = {
  filter?: "2fa_disabled" | "all"
  page?: number
  per_page?: number
}

export type t_OrgsListPendingInvitationsParamSchema = {
  org: string
}

export type t_OrgsListPendingInvitationsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_OrgsListPublicMembersParamSchema = {
  org: string
}

export type t_OrgsListPublicMembersQuerySchema = {
  page?: number
  per_page?: number
}

export type t_OrgsListSecurityManagerTeamsParamSchema = {
  org: string
}

export type t_OrgsListWebhookDeliveriesParamSchema = {
  hook_id: number
  org: string
}

export type t_OrgsListWebhookDeliveriesQuerySchema = {
  cursor?: string
  per_page?: number
  redelivery?: boolean
}

export type t_OrgsListWebhooksParamSchema = {
  org: string
}

export type t_OrgsListWebhooksQuerySchema = {
  page?: number
  per_page?: number
}

export type t_OrgsPingWebhookParamSchema = {
  hook_id: number
  org: string
}

export type t_OrgsRedeliverWebhookDeliveryParamSchema = {
  delivery_id: number
  hook_id: number
  org: string
}

export type t_OrgsRemoveMemberParamSchema = {
  org: string
  username: string
}

export type t_OrgsRemoveMembershipForUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsRemoveOutsideCollaboratorParamSchema = {
  org: string
  username: string
}

export type t_OrgsRemovePublicMembershipForAuthenticatedUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsRemoveSecurityManagerTeamParamSchema = {
  org: string
  team_slug: string
}

export type t_OrgsSetMembershipForUserBodySchema = {
  role?: "admin" | "member"
}

export type t_OrgsSetMembershipForUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsSetPublicMembershipForAuthenticatedUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsUnblockUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsUpdateBodySchema = {
  advanced_security_enabled_for_new_repositories?: boolean
  billing_email?: string
  blog?: string
  company?: string
  default_repository_permission?: "read" | "write" | "admin" | "none"
  dependabot_alerts_enabled_for_new_repositories?: boolean
  dependabot_security_updates_enabled_for_new_repositories?: boolean
  dependency_graph_enabled_for_new_repositories?: boolean
  description?: string
  email?: string
  has_organization_projects?: boolean
  has_repository_projects?: boolean
  location?: string
  members_allowed_repository_creation_type?: "all" | "private" | "none"
  members_can_create_internal_repositories?: boolean
  members_can_create_pages?: boolean
  members_can_create_private_pages?: boolean
  members_can_create_private_repositories?: boolean
  members_can_create_public_pages?: boolean
  members_can_create_public_repositories?: boolean
  members_can_create_repositories?: boolean
  members_can_fork_private_repositories?: boolean
  name?: string
  secret_scanning_enabled_for_new_repositories?: boolean
  secret_scanning_push_protection_custom_link?: string
  secret_scanning_push_protection_custom_link_enabled?: boolean
  secret_scanning_push_protection_enabled_for_new_repositories?: boolean
  twitter_username?: string
  web_commit_signoff_required?: boolean
}

export type t_OrgsUpdateParamSchema = {
  org: string
}

export type t_OrgsUpdateMembershipForAuthenticatedUserBodySchema = {
  state: "active"
}

export type t_OrgsUpdateMembershipForAuthenticatedUserParamSchema = {
  org: string
}

export type t_OrgsUpdateWebhookBodySchema = {
  active?: boolean
  config?: {
    content_type?: t_webhook_config_content_type
    insecure_ssl?: t_webhook_config_insecure_ssl
    secret?: t_webhook_config_secret
    url: t_webhook_config_url
  }
  events?: string[]
  name?: string
}

export type t_OrgsUpdateWebhookParamSchema = {
  hook_id: number
  org: string
}

export type t_OrgsUpdateWebhookConfigForOrgBodySchema = {
  content_type?: t_webhook_config_content_type
  insecure_ssl?: t_webhook_config_insecure_ssl
  secret?: t_webhook_config_secret
  url?: t_webhook_config_url
}

export type t_OrgsUpdateWebhookConfigForOrgParamSchema = {
  hook_id: number
  org: string
}

export type t_PackagesDeletePackageForAuthenticatedUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
}

export type t_PackagesDeletePackageForOrgParamSchema = {
  org: string
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
}

export type t_PackagesDeletePackageForUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  username: string
}

export type t_PackagesDeletePackageVersionForAuthenticatedUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  package_version_id: number
}

export type t_PackagesDeletePackageVersionForOrgParamSchema = {
  org: string
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  package_version_id: number
}

export type t_PackagesDeletePackageVersionForUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  package_version_id: number
  username: string
}

export type t_PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserParamSchema =
  {
    package_name: string
    package_type:
      | "npm"
      | "maven"
      | "rubygems"
      | "docker"
      | "nuget"
      | "container"
  }

export type t_PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserQuerySchema =
  {
    page?: number
    per_page?: number
    state?: "active" | "deleted"
  }

export type t_PackagesGetAllPackageVersionsForPackageOwnedByOrgParamSchema = {
  org: string
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
}

export type t_PackagesGetAllPackageVersionsForPackageOwnedByOrgQuerySchema = {
  page?: number
  per_page?: number
  state?: "active" | "deleted"
}

export type t_PackagesGetAllPackageVersionsForPackageOwnedByUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  username: string
}

export type t_PackagesGetPackageForAuthenticatedUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
}

export type t_PackagesGetPackageForOrganizationParamSchema = {
  org: string
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
}

export type t_PackagesGetPackageForUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  username: string
}

export type t_PackagesGetPackageVersionForAuthenticatedUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  package_version_id: number
}

export type t_PackagesGetPackageVersionForOrganizationParamSchema = {
  org: string
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  package_version_id: number
}

export type t_PackagesGetPackageVersionForUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  package_version_id: number
  username: string
}

export type t_PackagesListPackagesForAuthenticatedUserQuerySchema = {
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  visibility?: "public" | "private" | "internal"
}

export type t_PackagesListPackagesForOrganizationParamSchema = {
  org: string
}

export type t_PackagesListPackagesForOrganizationQuerySchema = {
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  visibility?: "public" | "private" | "internal"
}

export type t_PackagesListPackagesForUserParamSchema = {
  username: string
}

export type t_PackagesListPackagesForUserQuerySchema = {
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  visibility?: "public" | "private" | "internal"
}

export type t_PackagesRestorePackageForAuthenticatedUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
}

export type t_PackagesRestorePackageForAuthenticatedUserQuerySchema = {
  token?: string
}

export type t_PackagesRestorePackageForOrgParamSchema = {
  org: string
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
}

export type t_PackagesRestorePackageForOrgQuerySchema = {
  token?: string
}

export type t_PackagesRestorePackageForUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  username: string
}

export type t_PackagesRestorePackageForUserQuerySchema = {
  token?: string
}

export type t_PackagesRestorePackageVersionForAuthenticatedUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  package_version_id: number
}

export type t_PackagesRestorePackageVersionForOrgParamSchema = {
  org: string
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  package_version_id: number
}

export type t_PackagesRestorePackageVersionForUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  package_version_id: number
  username: string
}

export type t_ProjectsAddCollaboratorBodySchema = {
  permission?: "read" | "write" | "admin"
}

export type t_ProjectsAddCollaboratorParamSchema = {
  project_id: number
  username: string
}

export type t_ProjectsCreateCardBodySchema =
  | {
      note: string | null
    }
  | {
      content_id: number
      content_type: string
    }

export type t_ProjectsCreateCardParamSchema = {
  column_id: number
}

export type t_ProjectsCreateColumnBodySchema = {
  name: string
}

export type t_ProjectsCreateColumnParamSchema = {
  project_id: number
}

export type t_ProjectsCreateForAuthenticatedUserBodySchema = {
  body?: string | null
  name: string
}

export type t_ProjectsCreateForOrgBodySchema = {
  body?: string
  name: string
}

export type t_ProjectsCreateForOrgParamSchema = {
  org: string
}

export type t_ProjectsCreateForRepoBodySchema = {
  body?: string
  name: string
}

export type t_ProjectsCreateForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ProjectsDeleteParamSchema = {
  project_id: number
}

export type t_ProjectsDeleteCardParamSchema = {
  card_id: number
}

export type t_ProjectsDeleteColumnParamSchema = {
  column_id: number
}

export type t_ProjectsGetParamSchema = {
  project_id: number
}

export type t_ProjectsGetCardParamSchema = {
  card_id: number
}

export type t_ProjectsGetColumnParamSchema = {
  column_id: number
}

export type t_ProjectsGetPermissionForUserParamSchema = {
  project_id: number
  username: string
}

export type t_ProjectsListCardsParamSchema = {
  column_id: number
}

export type t_ProjectsListCardsQuerySchema = {
  archived_state?: "all" | "archived" | "not_archived"
  page?: number
  per_page?: number
}

export type t_ProjectsListCollaboratorsParamSchema = {
  project_id: number
}

export type t_ProjectsListCollaboratorsQuerySchema = {
  affiliation?: "outside" | "direct" | "all"
  page?: number
  per_page?: number
}

export type t_ProjectsListColumnsParamSchema = {
  project_id: number
}

export type t_ProjectsListColumnsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ProjectsListForOrgParamSchema = {
  org: string
}

export type t_ProjectsListForOrgQuerySchema = {
  page?: number
  per_page?: number
  state?: "open" | "closed" | "all"
}

export type t_ProjectsListForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ProjectsListForRepoQuerySchema = {
  page?: number
  per_page?: number
  state?: "open" | "closed" | "all"
}

export type t_ProjectsListForUserParamSchema = {
  username: string
}

export type t_ProjectsListForUserQuerySchema = {
  page?: number
  per_page?: number
  state?: "open" | "closed" | "all"
}

export type t_ProjectsMoveCardBodySchema = {
  column_id?: number
  position: string
}

export type t_ProjectsMoveCardParamSchema = {
  card_id: number
}

export type t_ProjectsMoveColumnBodySchema = {
  position: string
}

export type t_ProjectsMoveColumnParamSchema = {
  column_id: number
}

export type t_ProjectsRemoveCollaboratorParamSchema = {
  project_id: number
  username: string
}

export type t_ProjectsUpdateBodySchema = {
  body?: string | null
  name?: string
  organization_permission?: "read" | "write" | "admin" | "none"
  private?: boolean
  state?: string
}

export type t_ProjectsUpdateParamSchema = {
  project_id: number
}

export type t_ProjectsUpdateCardBodySchema = {
  archived?: boolean
  note?: string | null
}

export type t_ProjectsUpdateCardParamSchema = {
  card_id: number
}

export type t_ProjectsUpdateColumnBodySchema = {
  name: string
}

export type t_ProjectsUpdateColumnParamSchema = {
  column_id: number
}

export type t_PullsCheckIfMergedParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsCreateBodySchema = {
  base: string
  body?: string
  draft?: boolean
  head: string
  issue?: number
  maintainer_can_modify?: boolean
  title?: string
}

export type t_PullsCreateParamSchema = {
  owner: string
  repo: string
}

export type t_PullsCreateReplyForReviewCommentBodySchema = {
  body: string
}

export type t_PullsCreateReplyForReviewCommentParamSchema = {
  comment_id: number
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsCreateReviewBodySchema = {
  body?: string
  comments?: {
    body: string
    line?: number
    path: string
    position?: number
    side?: string
    start_line?: number
    start_side?: string
  }[]
  commit_id?: string
  event?: "APPROVE" | "REQUEST_CHANGES" | "COMMENT"
}

export type t_PullsCreateReviewParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsCreateReviewCommentBodySchema = {
  body: string
  commit_id: string
  in_reply_to?: number
  line: number
  path: string
  position?: number
  side?: "LEFT" | "RIGHT"
  start_line?: number
  start_side?: "LEFT" | "RIGHT" | "side"
}

export type t_PullsCreateReviewCommentParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsDeletePendingReviewParamSchema = {
  owner: string
  pull_number: number
  repo: string
  review_id: number
}

export type t_PullsDeleteReviewCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_PullsDismissReviewBodySchema = {
  event?: "DISMISS"
  message: string
}

export type t_PullsDismissReviewParamSchema = {
  owner: string
  pull_number: number
  repo: string
  review_id: number
}

export type t_PullsGetParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsGetReviewParamSchema = {
  owner: string
  pull_number: number
  repo: string
  review_id: number
}

export type t_PullsGetReviewCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_PullsListParamSchema = {
  owner: string
  repo: string
}

export type t_PullsListQuerySchema = {
  base?: string
  direction?: "asc" | "desc"
  head?: string
  page?: number
  per_page?: number
  sort?: "created" | "updated" | "popularity" | "long-running"
  state?: "open" | "closed" | "all"
}

export type t_PullsListCommentsForReviewParamSchema = {
  owner: string
  pull_number: number
  repo: string
  review_id: number
}

export type t_PullsListCommentsForReviewQuerySchema = {
  page?: number
  per_page?: number
}

export type t_PullsListCommitsParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsListCommitsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_PullsListFilesParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsListFilesQuerySchema = {
  page?: number
  per_page?: number
}

export type t_PullsListRequestedReviewersParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsListReviewCommentsParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsListReviewCommentsQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  since?: string
  sort?: "created" | "updated"
}

export type t_PullsListReviewCommentsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_PullsListReviewCommentsForRepoQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  since?: string
  sort?: "created" | "updated" | "created_at"
}

export type t_PullsListReviewsParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsListReviewsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_PullsMergeBodySchema = {
  commit_message?: string
  commit_title?: string
  merge_method?: "merge" | "squash" | "rebase"
  sha?: string
}

export type t_PullsMergeParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsRemoveRequestedReviewersBodySchema = {
  reviewers: string[]
  team_reviewers?: string[]
}

export type t_PullsRemoveRequestedReviewersParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsRequestReviewersBodySchema = {
  reviewers?: string[]
  team_reviewers?: string[]
}

export type t_PullsRequestReviewersParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsSubmitReviewBodySchema = {
  body?: string
  event: "APPROVE" | "REQUEST_CHANGES" | "COMMENT"
}

export type t_PullsSubmitReviewParamSchema = {
  owner: string
  pull_number: number
  repo: string
  review_id: number
}

export type t_PullsUpdateBodySchema = {
  base?: string
  body?: string
  maintainer_can_modify?: boolean
  state?: "open" | "closed"
  title?: string
}

export type t_PullsUpdateParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsUpdateBranchBodySchema = {
  expected_head_sha?: string
}

export type t_PullsUpdateBranchParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsUpdateReviewBodySchema = {
  body: string
}

export type t_PullsUpdateReviewParamSchema = {
  owner: string
  pull_number: number
  repo: string
  review_id: number
}

export type t_PullsUpdateReviewCommentBodySchema = {
  body: string
}

export type t_PullsUpdateReviewCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReactionsCreateForCommitCommentBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type t_ReactionsCreateForCommitCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReactionsCreateForIssueBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type t_ReactionsCreateForIssueParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_ReactionsCreateForIssueCommentBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type t_ReactionsCreateForIssueCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReactionsCreateForPullRequestReviewCommentBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type t_ReactionsCreateForPullRequestReviewCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReactionsCreateForReleaseBodySchema = {
  content: "+1" | "laugh" | "heart" | "hooray" | "rocket" | "eyes"
}

export type t_ReactionsCreateForReleaseParamSchema = {
  owner: string
  release_id: number
  repo: string
}

export type t_ReactionsCreateForTeamDiscussionCommentInOrgBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type t_ReactionsCreateForTeamDiscussionCommentInOrgParamSchema = {
  comment_number: number
  discussion_number: number
  org: string
  team_slug: string
}

export type t_ReactionsCreateForTeamDiscussionCommentLegacyBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type t_ReactionsCreateForTeamDiscussionCommentLegacyParamSchema = {
  comment_number: number
  discussion_number: number
  team_id: number
}

export type t_ReactionsCreateForTeamDiscussionInOrgBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type t_ReactionsCreateForTeamDiscussionInOrgParamSchema = {
  discussion_number: number
  org: string
  team_slug: string
}

export type t_ReactionsCreateForTeamDiscussionLegacyBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type t_ReactionsCreateForTeamDiscussionLegacyParamSchema = {
  discussion_number: number
  team_id: number
}

export type t_ReactionsDeleteForCommitCommentParamSchema = {
  comment_id: number
  owner: string
  reaction_id: number
  repo: string
}

export type t_ReactionsDeleteForIssueParamSchema = {
  issue_number: number
  owner: string
  reaction_id: number
  repo: string
}

export type t_ReactionsDeleteForIssueCommentParamSchema = {
  comment_id: number
  owner: string
  reaction_id: number
  repo: string
}

export type t_ReactionsDeleteForPullRequestCommentParamSchema = {
  comment_id: number
  owner: string
  reaction_id: number
  repo: string
}

export type t_ReactionsDeleteForReleaseParamSchema = {
  owner: string
  reaction_id: number
  release_id: number
  repo: string
}

export type t_ReactionsDeleteForTeamDiscussionParamSchema = {
  discussion_number: number
  org: string
  reaction_id: number
  team_slug: string
}

export type t_ReactionsDeleteForTeamDiscussionCommentParamSchema = {
  comment_number: number
  discussion_number: number
  org: string
  reaction_id: number
  team_slug: string
}

export type t_ReactionsListForCommitCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReactionsListForCommitCommentQuerySchema = {
  content?:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
  page?: number
  per_page?: number
}

export type t_ReactionsListForIssueParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_ReactionsListForIssueQuerySchema = {
  content?:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
  page?: number
  per_page?: number
}

export type t_ReactionsListForIssueCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReactionsListForIssueCommentQuerySchema = {
  content?:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
  page?: number
  per_page?: number
}

export type t_ReactionsListForPullRequestReviewCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReactionsListForPullRequestReviewCommentQuerySchema = {
  content?:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
  page?: number
  per_page?: number
}

export type t_ReactionsListForReleaseParamSchema = {
  owner: string
  release_id: number
  repo: string
}

export type t_ReactionsListForReleaseQuerySchema = {
  content?: "+1" | "laugh" | "heart" | "hooray" | "rocket" | "eyes"
  page?: number
  per_page?: number
}

export type t_ReactionsListForTeamDiscussionCommentInOrgParamSchema = {
  comment_number: number
  discussion_number: number
  org: string
  team_slug: string
}

export type t_ReactionsListForTeamDiscussionCommentInOrgQuerySchema = {
  content?:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
  page?: number
  per_page?: number
}

export type t_ReactionsListForTeamDiscussionCommentLegacyParamSchema = {
  comment_number: number
  discussion_number: number
  team_id: number
}

export type t_ReactionsListForTeamDiscussionCommentLegacyQuerySchema = {
  content?:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
  page?: number
  per_page?: number
}

export type t_ReactionsListForTeamDiscussionInOrgParamSchema = {
  discussion_number: number
  org: string
  team_slug: string
}

export type t_ReactionsListForTeamDiscussionInOrgQuerySchema = {
  content?:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
  page?: number
  per_page?: number
}

export type t_ReactionsListForTeamDiscussionLegacyParamSchema = {
  discussion_number: number
  team_id: number
}

export type t_ReactionsListForTeamDiscussionLegacyQuerySchema = {
  content?:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
  page?: number
  per_page?: number
}

export type t_ReposAcceptInvitationForAuthenticatedUserParamSchema = {
  invitation_id: number
}

export type t_ReposAddAppAccessRestrictionsBodySchema =
  | {
      apps: string[]
    }
  | string[]

export type t_ReposAddAppAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposAddCollaboratorBodySchema = {
  permission?: string
}

export type t_ReposAddCollaboratorParamSchema = {
  owner: string
  repo: string
  username: string
}

export type t_ReposAddStatusCheckContextsBodySchema =
  | {
      contexts: string[]
    }
  | string[]

export type t_ReposAddStatusCheckContextsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposAddTeamAccessRestrictionsBodySchema =
  | {
      teams: string[]
    }
  | string[]

export type t_ReposAddTeamAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposAddUserAccessRestrictionsBodySchema =
  | {
      users: string[]
    }
  | string[]

export type t_ReposAddUserAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposCheckCollaboratorParamSchema = {
  owner: string
  repo: string
  username: string
}

export type t_ReposCheckVulnerabilityAlertsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCodeownersErrorsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCodeownersErrorsQuerySchema = {
  ref?: string
}

export type t_ReposCompareCommitsParamSchema = {
  basehead: string
  owner: string
  repo: string
}

export type t_ReposCompareCommitsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposCreateAutolinkBodySchema = {
  is_alphanumeric?: boolean
  key_prefix: string
  url_template: string
}

export type t_ReposCreateAutolinkParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateCommitCommentBodySchema = {
  body: string
  line?: number
  path?: string
  position?: number
}

export type t_ReposCreateCommitCommentParamSchema = {
  commit_sha: string
  owner: string
  repo: string
}

export type t_ReposCreateCommitSignatureProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposCreateCommitStatusBodySchema = {
  context?: string
  description?: string | null
  state: "error" | "failure" | "pending" | "success"
  target_url?: string | null
}

export type t_ReposCreateCommitStatusParamSchema = {
  owner: string
  repo: string
  sha: string
}

export type t_ReposCreateDeployKeyBodySchema = {
  key: string
  read_only?: boolean
  title?: string
}

export type t_ReposCreateDeployKeyParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateDeploymentBodySchema = {
  auto_merge?: boolean
  description?: string | null
  environment?: string
  payload?:
    | {
        [key: string]: unknown
      }
    | string
  production_environment?: boolean
  ref: string
  required_contexts?: string[]
  task?: string
  transient_environment?: boolean
}

export type t_ReposCreateDeploymentParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateDeploymentBranchPolicyBodySchema = {
  name: string
}

export type t_ReposCreateDeploymentBranchPolicyParamSchema = {
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposCreateDeploymentStatusBodySchema = {
  auto_inactive?: boolean
  description?: string
  environment?: "production" | "staging" | "qa"
  environment_url?: string
  log_url?: string
  state:
    | "error"
    | "failure"
    | "inactive"
    | "in_progress"
    | "queued"
    | "pending"
    | "success"
  target_url?: string
}

export type t_ReposCreateDeploymentStatusParamSchema = {
  deployment_id: number
  owner: string
  repo: string
}

export type t_ReposCreateDispatchEventBodySchema = {
  client_payload?: {
    [key: string]: unknown
  }
  event_type: string
}

export type t_ReposCreateDispatchEventParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateForAuthenticatedUserBodySchema = {
  allow_auto_merge?: boolean
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  auto_init?: boolean
  delete_branch_on_merge?: boolean
  description?: string
  gitignore_template?: string
  has_discussions?: boolean
  has_downloads?: boolean
  has_issues?: boolean
  has_projects?: boolean
  has_wiki?: boolean
  homepage?: string
  is_template?: boolean
  license_template?: string
  merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK"
  merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE"
  name: string
  private?: boolean
  squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK"
  squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE"
  team_id?: number
}

export type t_ReposCreateForkBodySchema = {
  default_branch_only?: boolean
  name?: string
  organization?: string
}

export type t_ReposCreateForkParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateInOrgBodySchema = {
  allow_auto_merge?: boolean
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  auto_init?: boolean
  delete_branch_on_merge?: boolean
  description?: string
  gitignore_template?: string
  has_downloads?: boolean
  has_issues?: boolean
  has_projects?: boolean
  has_wiki?: boolean
  homepage?: string
  is_template?: boolean
  license_template?: string
  merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK"
  merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE"
  name: string
  private?: boolean
  squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK"
  squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE"
  team_id?: number
  use_squash_pr_title_as_default?: boolean
  visibility?: "public" | "private"
}

export type t_ReposCreateInOrgParamSchema = {
  org: string
}

export type t_ReposCreateOrUpdateEnvironmentBodySchema = {
  deployment_branch_policy?: t_deployment_branch_policy_settings
  reviewers?:
    | {
        id?: number
        type?: t_deployment_reviewer_type
      }[]
    | null
  wait_timer?: t_wait_timer
}

export type t_ReposCreateOrUpdateEnvironmentParamSchema = {
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposCreateOrUpdateFileContentsBodySchema = {
  author?: {
    date?: string
    email: string
    name: string
  }
  branch?: string
  committer?: {
    date?: string
    email: string
    name: string
  }
  content: string
  message: string
  sha?: string
}

export type t_ReposCreateOrUpdateFileContentsParamSchema = {
  owner: string
  path: string
  repo: string
}

export type t_ReposCreatePagesDeploymentBodySchema = {
  artifact_url: string
  environment?: string
  oidc_token: string
  pages_build_version: string
}

export type t_ReposCreatePagesDeploymentParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreatePagesSiteBodySchema = {
  build_type?: "legacy" | "workflow"
  source?: {
    branch: string
    path?: "/" | "/docs"
  }
}

export type t_ReposCreatePagesSiteParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateReleaseBodySchema = {
  body?: string
  discussion_category_name?: string
  draft?: boolean
  generate_release_notes?: boolean
  make_latest?: "true" | "false" | "legacy"
  name?: string
  prerelease?: boolean
  tag_name: string
  target_commitish?: string
}

export type t_ReposCreateReleaseParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateTagProtectionBodySchema = {
  pattern: string
}

export type t_ReposCreateTagProtectionParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateUsingTemplateBodySchema = {
  description?: string
  include_all_branches?: boolean
  name: string
  owner?: string
  private?: boolean
}

export type t_ReposCreateUsingTemplateParamSchema = {
  template_owner: string
  template_repo: string
}

export type t_ReposCreateWebhookBodySchema = {
  active?: boolean
  config?: {
    content_type?: t_webhook_config_content_type
    digest?: string
    insecure_ssl?: t_webhook_config_insecure_ssl
    secret?: t_webhook_config_secret
    token?: string
    url?: t_webhook_config_url
  }
  events?: string[]
  name?: string
}

export type t_ReposCreateWebhookParamSchema = {
  owner: string
  repo: string
}

export type t_ReposDeclineInvitationForAuthenticatedUserParamSchema = {
  invitation_id: number
}

export type t_ReposDeleteParamSchema = {
  owner: string
  repo: string
}

export type t_ReposDeleteAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposDeleteAdminBranchProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposDeleteAnEnvironmentParamSchema = {
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposDeleteAutolinkParamSchema = {
  autolink_id: number
  owner: string
  repo: string
}

export type t_ReposDeleteBranchProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposDeleteCommitCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReposDeleteCommitSignatureProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposDeleteDeployKeyParamSchema = {
  key_id: number
  owner: string
  repo: string
}

export type t_ReposDeleteDeploymentParamSchema = {
  deployment_id: number
  owner: string
  repo: string
}

export type t_ReposDeleteDeploymentBranchPolicyParamSchema = {
  branch_policy_id: number
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposDeleteFileBodySchema = {
  author?: {
    email?: string
    name?: string
  }
  branch?: string
  committer?: {
    email?: string
    name?: string
  }
  message: string
  sha: string
}

export type t_ReposDeleteFileParamSchema = {
  owner: string
  path: string
  repo: string
}

export type t_ReposDeleteInvitationParamSchema = {
  invitation_id: number
  owner: string
  repo: string
}

export type t_ReposDeletePagesSiteParamSchema = {
  owner: string
  repo: string
}

export type t_ReposDeletePullRequestReviewProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposDeleteReleaseParamSchema = {
  owner: string
  release_id: number
  repo: string
}

export type t_ReposDeleteReleaseAssetParamSchema = {
  asset_id: number
  owner: string
  repo: string
}

export type t_ReposDeleteTagProtectionParamSchema = {
  owner: string
  repo: string
  tag_protection_id: number
}

export type t_ReposDeleteWebhookParamSchema = {
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposDisableAutomatedSecurityFixesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposDisableLfsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ReposDisableVulnerabilityAlertsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposDownloadTarballArchiveParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_ReposDownloadZipballArchiveParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_ReposEnableAutomatedSecurityFixesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposEnableLfsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ReposEnableVulnerabilityAlertsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGenerateReleaseNotesBodySchema = {
  configuration_file_path?: string
  previous_tag_name?: string
  tag_name: string
  target_commitish?: string
}

export type t_ReposGenerateReleaseNotesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetAdminBranchProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetAllEnvironmentsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetAllEnvironmentsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposGetAllStatusCheckContextsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetAllTopicsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetAllTopicsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposGetAppsWithAccessToProtectedBranchParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetAutolinkParamSchema = {
  autolink_id: number
  owner: string
  repo: string
}

export type t_ReposGetBranchParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetBranchProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetClonesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetClonesQuerySchema = {
  per?: "" | "day" | "week"
}

export type t_ReposGetCodeFrequencyStatsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetCollaboratorPermissionLevelParamSchema = {
  owner: string
  repo: string
  username: string
}

export type t_ReposGetCombinedStatusForRefParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_ReposGetCombinedStatusForRefQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposGetCommitParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_ReposGetCommitQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposGetCommitActivityStatsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetCommitCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReposGetCommitSignatureProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetCommunityProfileMetricsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetContentParamSchema = {
  owner: string
  path: string
  repo: string
}

export type t_ReposGetContentQuerySchema = {
  ref?: string
}

export type t_ReposGetContributorsStatsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetDeployKeyParamSchema = {
  key_id: number
  owner: string
  repo: string
}

export type t_ReposGetDeploymentParamSchema = {
  deployment_id: number
  owner: string
  repo: string
}

export type t_ReposGetDeploymentBranchPolicyParamSchema = {
  branch_policy_id: number
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposGetDeploymentStatusParamSchema = {
  deployment_id: number
  owner: string
  repo: string
  status_id: number
}

export type t_ReposGetEnvironmentParamSchema = {
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposGetLatestPagesBuildParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetLatestReleaseParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetPagesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetPagesBuildParamSchema = {
  build_id: number
  owner: string
  repo: string
}

export type t_ReposGetPagesHealthCheckParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetParticipationStatsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetPullRequestReviewProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetPunchCardStatsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetReadmeParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetReadmeQuerySchema = {
  ref?: string
}

export type t_ReposGetReadmeInDirectoryParamSchema = {
  dir: string
  owner: string
  repo: string
}

export type t_ReposGetReadmeInDirectoryQuerySchema = {
  ref?: string
}

export type t_ReposGetReleaseParamSchema = {
  owner: string
  release_id: number
  repo: string
}

export type t_ReposGetReleaseAssetParamSchema = {
  asset_id: number
  owner: string
  repo: string
}

export type t_ReposGetReleaseByTagParamSchema = {
  owner: string
  repo: string
  tag: string
}

export type t_ReposGetStatusChecksProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetTeamsWithAccessToProtectedBranchParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetTopPathsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetTopReferrersParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetUsersWithAccessToProtectedBranchParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetViewsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetViewsQuerySchema = {
  per?: "" | "day" | "week"
}

export type t_ReposGetWebhookParamSchema = {
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposGetWebhookConfigForRepoParamSchema = {
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposGetWebhookDeliveryParamSchema = {
  delivery_id: number
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposListAutolinksParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListAutolinksQuerySchema = {
  page?: number
}

export type t_ReposListBranchesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListBranchesQuerySchema = {
  page?: number
  per_page?: number
  protected?: boolean
}

export type t_ReposListBranchesForHeadCommitParamSchema = {
  commit_sha: string
  owner: string
  repo: string
}

export type t_ReposListCollaboratorsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListCollaboratorsQuerySchema = {
  affiliation?: "outside" | "direct" | "all"
  page?: number
  per_page?: number
  permission?: "pull" | "triage" | "push" | "maintain" | "admin"
}

export type t_ReposListCommentsForCommitParamSchema = {
  commit_sha: string
  owner: string
  repo: string
}

export type t_ReposListCommentsForCommitQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposListCommitCommentsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListCommitCommentsForRepoQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposListCommitStatusesForRefParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_ReposListCommitStatusesForRefQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposListCommitsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListCommitsQuerySchema = {
  author?: string
  page?: number
  path?: string
  per_page?: number
  sha?: string
  since?: string
  until?: string
}

export type t_ReposListContributorsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListContributorsQuerySchema = {
  anon?: string
  page?: number
  per_page?: number
}

export type t_ReposListDeployKeysParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListDeployKeysQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposListDeploymentBranchPoliciesParamSchema = {
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposListDeploymentBranchPoliciesQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposListDeploymentStatusesParamSchema = {
  deployment_id: number
  owner: string
  repo: string
}

export type t_ReposListDeploymentStatusesQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposListDeploymentsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListDeploymentsQuerySchema = {
  environment?: string | null
  page?: number
  per_page?: number
  ref?: string
  sha?: string
  task?: string
}

export type t_ReposListForAuthenticatedUserQuerySchema = {
  affiliation?: string
  before?: string
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  since?: string
  sort?: "created" | "updated" | "pushed" | "full_name"
  type?: "all" | "owner" | "public" | "private" | "member"
  visibility?: "all" | "public" | "private"
}

export type t_ReposListForOrgParamSchema = {
  org: string
}

export type t_ReposListForOrgQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  sort?: "created" | "updated" | "pushed" | "full_name"
  type?: "all" | "public" | "private" | "forks" | "sources" | "member"
}

export type t_ReposListForUserParamSchema = {
  username: string
}

export type t_ReposListForUserQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  sort?: "created" | "updated" | "pushed" | "full_name"
  type?: "all" | "owner" | "member"
}

export type t_ReposListForksParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListForksQuerySchema = {
  page?: number
  per_page?: number
  sort?: "newest" | "oldest" | "stargazers" | "watchers"
}

export type t_ReposListInvitationsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListInvitationsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposListInvitationsForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposListLanguagesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListPagesBuildsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListPagesBuildsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposListPublicQuerySchema = {
  since?: number
}

export type t_ReposListPullRequestsAssociatedWithCommitParamSchema = {
  commit_sha: string
  owner: string
  repo: string
}

export type t_ReposListPullRequestsAssociatedWithCommitQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposListReleaseAssetsParamSchema = {
  owner: string
  release_id: number
  repo: string
}

export type t_ReposListReleaseAssetsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposListReleasesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListReleasesQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposListTagProtectionParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListTagsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListTagsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposListTeamsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListTeamsQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposListWebhookDeliveriesParamSchema = {
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposListWebhookDeliveriesQuerySchema = {
  cursor?: string
  per_page?: number
  redelivery?: boolean
}

export type t_ReposListWebhooksParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListWebhooksQuerySchema = {
  page?: number
  per_page?: number
}

export type t_ReposMergeBodySchema = {
  base: string
  commit_message?: string
  head: string
}

export type t_ReposMergeParamSchema = {
  owner: string
  repo: string
}

export type t_ReposMergeUpstreamBodySchema = {
  branch: string
}

export type t_ReposMergeUpstreamParamSchema = {
  owner: string
  repo: string
}

export type t_ReposPingWebhookParamSchema = {
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposRedeliverWebhookDeliveryParamSchema = {
  delivery_id: number
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposRemoveAppAccessRestrictionsBodySchema =
  | {
      apps: string[]
    }
  | string[]

export type t_ReposRemoveAppAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposRemoveCollaboratorParamSchema = {
  owner: string
  repo: string
  username: string
}

export type t_ReposRemoveStatusCheckContextsBodySchema =
  | {
      contexts: string[]
    }
  | string[]

export type t_ReposRemoveStatusCheckContextsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposRemoveStatusCheckProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposRemoveTeamAccessRestrictionsBodySchema =
  | {
      teams: string[]
    }
  | string[]

export type t_ReposRemoveTeamAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposRemoveUserAccessRestrictionsBodySchema =
  | {
      users: string[]
    }
  | string[]

export type t_ReposRemoveUserAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposRenameBranchBodySchema = {
  new_name: string
}

export type t_ReposRenameBranchParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposReplaceAllTopicsBodySchema = {
  names: string[]
}

export type t_ReposReplaceAllTopicsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposRequestPagesBuildParamSchema = {
  owner: string
  repo: string
}

export type t_ReposSetAdminBranchProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposSetAppAccessRestrictionsBodySchema =
  | {
      apps: string[]
    }
  | string[]

export type t_ReposSetAppAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposSetStatusCheckContextsBodySchema =
  | {
      contexts: string[]
    }
  | string[]

export type t_ReposSetStatusCheckContextsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposSetTeamAccessRestrictionsBodySchema =
  | {
      teams: string[]
    }
  | string[]

export type t_ReposSetTeamAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposSetUserAccessRestrictionsBodySchema =
  | {
      users: string[]
    }
  | string[]

export type t_ReposSetUserAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposTestPushWebhookParamSchema = {
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposTransferBodySchema = {
  new_name?: string
  new_owner: string
  team_ids?: number[]
}

export type t_ReposTransferParamSchema = {
  owner: string
  repo: string
}

export type t_ReposUpdateBodySchema = {
  allow_auto_merge?: boolean
  allow_forking?: boolean
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  allow_update_branch?: boolean
  archived?: boolean
  default_branch?: string
  delete_branch_on_merge?: boolean
  description?: string
  has_issues?: boolean
  has_projects?: boolean
  has_wiki?: boolean
  homepage?: string
  is_template?: boolean
  merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK"
  merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE"
  name?: string
  private?: boolean
  security_and_analysis?: {
    advanced_security?: {
      status?: string
    }
    secret_scanning?: {
      status?: string
    }
    secret_scanning_push_protection?: {
      status?: string
    }
  } | null
  squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK"
  squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE"
  use_squash_pr_title_as_default?: boolean
  visibility?: "public" | "private"
  web_commit_signoff_required?: boolean
}

export type t_ReposUpdateParamSchema = {
  owner: string
  repo: string
}

export type t_ReposUpdateBranchProtectionBodySchema = {
  allow_deletions?: boolean
  allow_force_pushes?: boolean | null
  allow_fork_syncing?: boolean
  block_creations?: boolean
  enforce_admins: boolean | null
  lock_branch?: boolean
  required_conversation_resolution?: boolean
  required_linear_history?: boolean
  required_pull_request_reviews: {
    bypass_pull_request_allowances?: {
      apps?: string[]
      teams?: string[]
      users?: string[]
    }
    dismiss_stale_reviews?: boolean
    dismissal_restrictions?: {
      apps?: string[]
      teams?: string[]
      users?: string[]
    }
    require_code_owner_reviews?: boolean
    require_last_push_approval?: boolean
    required_approving_review_count?: number
  } | null
  required_status_checks: {
    checks?: {
      app_id?: number
      context: string
    }[]
    contexts: string[]
    strict: boolean
  } | null
  restrictions: {
    apps?: string[]
    teams: string[]
    users: string[]
  } | null
}

export type t_ReposUpdateBranchProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposUpdateCommitCommentBodySchema = {
  body: string
}

export type t_ReposUpdateCommitCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReposUpdateDeploymentBranchPolicyBodySchema = {
  name: string
}

export type t_ReposUpdateDeploymentBranchPolicyParamSchema = {
  branch_policy_id: number
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposUpdateInformationAboutPagesSiteBodySchema = {
  build_type?: "legacy" | "workflow"
  cname?: string | null
  https_enforced?: boolean
  source?: {
    [key: string]: unknown
  }
}

export type t_ReposUpdateInformationAboutPagesSiteParamSchema = {
  owner: string
  repo: string
}

export type t_ReposUpdateInvitationBodySchema = {
  permissions?: "read" | "write" | "maintain" | "triage" | "admin"
}

export type t_ReposUpdateInvitationParamSchema = {
  invitation_id: number
  owner: string
  repo: string
}

export type t_ReposUpdatePullRequestReviewProtectionBodySchema = {
  bypass_pull_request_allowances?: {
    apps?: string[]
    teams?: string[]
    users?: string[]
  }
  dismiss_stale_reviews?: boolean
  dismissal_restrictions?: {
    apps?: string[]
    teams?: string[]
    users?: string[]
  }
  require_code_owner_reviews?: boolean
  require_last_push_approval?: boolean
  required_approving_review_count?: number
}

export type t_ReposUpdatePullRequestReviewProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposUpdateReleaseBodySchema = {
  body?: string
  discussion_category_name?: string
  draft?: boolean
  make_latest?: "true" | "false" | "legacy"
  name?: string
  prerelease?: boolean
  tag_name?: string
  target_commitish?: string
}

export type t_ReposUpdateReleaseParamSchema = {
  owner: string
  release_id: number
  repo: string
}

export type t_ReposUpdateReleaseAssetBodySchema = {
  label?: string
  name?: string
  state?: string
}

export type t_ReposUpdateReleaseAssetParamSchema = {
  asset_id: number
  owner: string
  repo: string
}

export type t_ReposUpdateStatusCheckProtectionBodySchema = {
  checks?: {
    app_id?: number
    context: string
  }[]
  contexts?: string[]
  strict?: boolean
}

export type t_ReposUpdateStatusCheckProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposUpdateWebhookBodySchema = {
  active?: boolean
  add_events?: string[]
  config?: {
    address?: string
    content_type?: t_webhook_config_content_type
    insecure_ssl?: t_webhook_config_insecure_ssl
    room?: string
    secret?: t_webhook_config_secret
    url: t_webhook_config_url
  }
  events?: string[]
  remove_events?: string[]
}

export type t_ReposUpdateWebhookParamSchema = {
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposUpdateWebhookConfigForRepoBodySchema = {
  content_type?: t_webhook_config_content_type
  insecure_ssl?: t_webhook_config_insecure_ssl
  secret?: t_webhook_config_secret
  url?: t_webhook_config_url
}

export type t_ReposUpdateWebhookConfigForRepoParamSchema = {
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposUploadReleaseAssetBodySchema = string

export type t_ReposUploadReleaseAssetParamSchema = {
  owner: string
  release_id: number
  repo: string
}

export type t_ReposUploadReleaseAssetQuerySchema = {
  label?: string
  name: string
}

export type t_SearchCodeQuerySchema = {
  order?: "desc" | "asc"
  page?: number
  per_page?: number
  q: string
  sort?: "indexed"
}

export type t_SearchCommitsQuerySchema = {
  order?: "desc" | "asc"
  page?: number
  per_page?: number
  q: string
  sort?: "author-date" | "committer-date"
}

export type t_SearchIssuesAndPullRequestsQuerySchema = {
  order?: "desc" | "asc"
  page?: number
  per_page?: number
  q: string
  sort?:
    | "comments"
    | "reactions"
    | "reactions-+1"
    | "reactions--1"
    | "reactions-smile"
    | "reactions-thinking_face"
    | "reactions-heart"
    | "reactions-tada"
    | "interactions"
    | "created"
    | "updated"
}

export type t_SearchLabelsQuerySchema = {
  order?: "desc" | "asc"
  page?: number
  per_page?: number
  q: string
  repository_id: number
  sort?: "created" | "updated"
}

export type t_SearchReposQuerySchema = {
  order?: "desc" | "asc"
  page?: number
  per_page?: number
  q: string
  sort?: "stars" | "forks" | "help-wanted-issues" | "updated"
}

export type t_SearchTopicsQuerySchema = {
  page?: number
  per_page?: number
  q: string
}

export type t_SearchUsersQuerySchema = {
  order?: "desc" | "asc"
  page?: number
  per_page?: number
  q: string
  sort?: "followers" | "repositories" | "joined"
}

export type t_SecretScanningGetAlertParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_SecretScanningGetSecurityAnalysisSettingsForEnterpriseParamSchema =
  {
    enterprise: string
  }

export type t_SecretScanningListAlertsForEnterpriseParamSchema = {
  enterprise: string
}

export type t_SecretScanningListAlertsForEnterpriseQuerySchema = {
  after?: string
  before?: string
  direction?: "asc" | "desc"
  per_page?: number
  resolution?: string
  secret_type?: string
  sort?: "created" | "updated"
  state?: "open" | "resolved"
}

export type t_SecretScanningListAlertsForOrgParamSchema = {
  org: string
}

export type t_SecretScanningListAlertsForOrgQuerySchema = {
  after?: string
  before?: string
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  resolution?: string
  secret_type?: string
  sort?: "created" | "updated"
  state?: "open" | "resolved"
}

export type t_SecretScanningListAlertsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_SecretScanningListAlertsForRepoQuerySchema = {
  after?: string
  before?: string
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  resolution?: string
  secret_type?: string
  sort?: "created" | "updated"
  state?: "open" | "resolved"
}

export type t_SecretScanningListLocationsForAlertParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_SecretScanningListLocationsForAlertQuerySchema = {
  page?: number
  per_page?: number
}

export type t_SecretScanningPatchSecurityAnalysisSettingsForEnterpriseBodySchema =
  {
    advanced_security_enabled_for_new_repositories?: boolean
    secret_scanning_enabled_for_new_repositories?: boolean
    secret_scanning_push_protection_custom_link?: string | null
    secret_scanning_push_protection_enabled_for_new_repositories?: boolean
  }

export type t_SecretScanningPatchSecurityAnalysisSettingsForEnterpriseParamSchema =
  {
    enterprise: string
  }

export type t_SecretScanningPostSecurityProductEnablementForEnterpriseParamSchema =
  {
    enablement: "enable_all" | "disable_all"
    enterprise: string
    security_product:
      | "advanced_security"
      | "secret_scanning"
      | "secret_scanning_push_protection"
  }

export type t_SecretScanningUpdateAlertBodySchema = {
  resolution?: t_secret_scanning_alert_resolution
  resolution_comment?: t_secret_scanning_alert_resolution_comment
  state: t_secret_scanning_alert_state
}

export type t_SecretScanningUpdateAlertParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_TeamsAddMemberLegacyParamSchema = {
  team_id: number
  username: string
}

export type t_TeamsAddOrUpdateMembershipForUserInOrgBodySchema = {
  role?: "member" | "maintainer"
}

export type t_TeamsAddOrUpdateMembershipForUserInOrgParamSchema = {
  org: string
  team_slug: string
  username: string
}

export type t_TeamsAddOrUpdateMembershipForUserLegacyBodySchema = {
  role?: "member" | "maintainer"
}

export type t_TeamsAddOrUpdateMembershipForUserLegacyParamSchema = {
  team_id: number
  username: string
}

export type t_TeamsAddOrUpdateProjectPermissionsInOrgBodySchema = {
  permission?: "read" | "write" | "admin"
}

export type t_TeamsAddOrUpdateProjectPermissionsInOrgParamSchema = {
  org: string
  project_id: number
  team_slug: string
}

export type t_TeamsAddOrUpdateProjectPermissionsLegacyBodySchema = {
  permission?: "read" | "write" | "admin"
}

export type t_TeamsAddOrUpdateProjectPermissionsLegacyParamSchema = {
  project_id: number
  team_id: number
}

export type t_TeamsAddOrUpdateRepoPermissionsInOrgBodySchema = {
  permission?: string
}

export type t_TeamsAddOrUpdateRepoPermissionsInOrgParamSchema = {
  org: string
  owner: string
  repo: string
  team_slug: string
}

export type t_TeamsAddOrUpdateRepoPermissionsLegacyBodySchema = {
  permission?: "pull" | "push" | "admin"
}

export type t_TeamsAddOrUpdateRepoPermissionsLegacyParamSchema = {
  owner: string
  repo: string
  team_id: number
}

export type t_TeamsCheckPermissionsForProjectInOrgParamSchema = {
  org: string
  project_id: number
  team_slug: string
}

export type t_TeamsCheckPermissionsForProjectLegacyParamSchema = {
  project_id: number
  team_id: number
}

export type t_TeamsCheckPermissionsForRepoInOrgParamSchema = {
  org: string
  owner: string
  repo: string
  team_slug: string
}

export type t_TeamsCheckPermissionsForRepoLegacyParamSchema = {
  owner: string
  repo: string
  team_id: number
}

export type t_TeamsCreateBodySchema = {
  description?: string
  maintainers?: string[]
  name: string
  parent_team_id?: number
  permission?: "pull" | "push"
  privacy?: "secret" | "closed"
  repo_names?: string[]
}

export type t_TeamsCreateParamSchema = {
  org: string
}

export type t_TeamsCreateDiscussionCommentInOrgBodySchema = {
  body: string
}

export type t_TeamsCreateDiscussionCommentInOrgParamSchema = {
  discussion_number: number
  org: string
  team_slug: string
}

export type t_TeamsCreateDiscussionCommentLegacyBodySchema = {
  body: string
}

export type t_TeamsCreateDiscussionCommentLegacyParamSchema = {
  discussion_number: number
  team_id: number
}

export type t_TeamsCreateDiscussionInOrgBodySchema = {
  body: string
  private?: boolean
  title: string
}

export type t_TeamsCreateDiscussionInOrgParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsCreateDiscussionLegacyBodySchema = {
  body: string
  private?: boolean
  title: string
}

export type t_TeamsCreateDiscussionLegacyParamSchema = {
  team_id: number
}

export type t_TeamsDeleteDiscussionCommentInOrgParamSchema = {
  comment_number: number
  discussion_number: number
  org: string
  team_slug: string
}

export type t_TeamsDeleteDiscussionCommentLegacyParamSchema = {
  comment_number: number
  discussion_number: number
  team_id: number
}

export type t_TeamsDeleteDiscussionInOrgParamSchema = {
  discussion_number: number
  org: string
  team_slug: string
}

export type t_TeamsDeleteDiscussionLegacyParamSchema = {
  discussion_number: number
  team_id: number
}

export type t_TeamsDeleteInOrgParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsDeleteLegacyParamSchema = {
  team_id: number
}

export type t_TeamsGetByNameParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsGetDiscussionCommentInOrgParamSchema = {
  comment_number: number
  discussion_number: number
  org: string
  team_slug: string
}

export type t_TeamsGetDiscussionCommentLegacyParamSchema = {
  comment_number: number
  discussion_number: number
  team_id: number
}

export type t_TeamsGetDiscussionInOrgParamSchema = {
  discussion_number: number
  org: string
  team_slug: string
}

export type t_TeamsGetDiscussionLegacyParamSchema = {
  discussion_number: number
  team_id: number
}

export type t_TeamsGetLegacyParamSchema = {
  team_id: number
}

export type t_TeamsGetMemberLegacyParamSchema = {
  team_id: number
  username: string
}

export type t_TeamsGetMembershipForUserInOrgParamSchema = {
  org: string
  team_slug: string
  username: string
}

export type t_TeamsGetMembershipForUserLegacyParamSchema = {
  team_id: number
  username: string
}

export type t_TeamsListParamSchema = {
  org: string
}

export type t_TeamsListQuerySchema = {
  page?: number
  per_page?: number
}

export type t_TeamsListChildInOrgParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsListChildInOrgQuerySchema = {
  page?: number
  per_page?: number
}

export type t_TeamsListChildLegacyParamSchema = {
  team_id: number
}

export type t_TeamsListChildLegacyQuerySchema = {
  page?: number
  per_page?: number
}

export type t_TeamsListDiscussionCommentsInOrgParamSchema = {
  discussion_number: number
  org: string
  team_slug: string
}

export type t_TeamsListDiscussionCommentsInOrgQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
}

export type t_TeamsListDiscussionCommentsLegacyParamSchema = {
  discussion_number: number
  team_id: number
}

export type t_TeamsListDiscussionCommentsLegacyQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
}

export type t_TeamsListDiscussionsInOrgParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsListDiscussionsInOrgQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  pinned?: string
}

export type t_TeamsListDiscussionsLegacyParamSchema = {
  team_id: number
}

export type t_TeamsListDiscussionsLegacyQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
}

export type t_TeamsListForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_TeamsListMembersInOrgParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsListMembersInOrgQuerySchema = {
  page?: number
  per_page?: number
  role?: "member" | "maintainer" | "all"
}

export type t_TeamsListMembersLegacyParamSchema = {
  team_id: number
}

export type t_TeamsListMembersLegacyQuerySchema = {
  page?: number
  per_page?: number
  role?: "member" | "maintainer" | "all"
}

export type t_TeamsListPendingInvitationsInOrgParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsListPendingInvitationsInOrgQuerySchema = {
  page?: number
  per_page?: number
}

export type t_TeamsListPendingInvitationsLegacyParamSchema = {
  team_id: number
}

export type t_TeamsListPendingInvitationsLegacyQuerySchema = {
  page?: number
  per_page?: number
}

export type t_TeamsListProjectsInOrgParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsListProjectsInOrgQuerySchema = {
  page?: number
  per_page?: number
}

export type t_TeamsListProjectsLegacyParamSchema = {
  team_id: number
}

export type t_TeamsListProjectsLegacyQuerySchema = {
  page?: number
  per_page?: number
}

export type t_TeamsListReposInOrgParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsListReposInOrgQuerySchema = {
  page?: number
  per_page?: number
}

export type t_TeamsListReposLegacyParamSchema = {
  team_id: number
}

export type t_TeamsListReposLegacyQuerySchema = {
  page?: number
  per_page?: number
}

export type t_TeamsRemoveMemberLegacyParamSchema = {
  team_id: number
  username: string
}

export type t_TeamsRemoveMembershipForUserInOrgParamSchema = {
  org: string
  team_slug: string
  username: string
}

export type t_TeamsRemoveMembershipForUserLegacyParamSchema = {
  team_id: number
  username: string
}

export type t_TeamsRemoveProjectInOrgParamSchema = {
  org: string
  project_id: number
  team_slug: string
}

export type t_TeamsRemoveProjectLegacyParamSchema = {
  project_id: number
  team_id: number
}

export type t_TeamsRemoveRepoInOrgParamSchema = {
  org: string
  owner: string
  repo: string
  team_slug: string
}

export type t_TeamsRemoveRepoLegacyParamSchema = {
  owner: string
  repo: string
  team_id: number
}

export type t_TeamsUpdateDiscussionCommentInOrgBodySchema = {
  body: string
}

export type t_TeamsUpdateDiscussionCommentInOrgParamSchema = {
  comment_number: number
  discussion_number: number
  org: string
  team_slug: string
}

export type t_TeamsUpdateDiscussionCommentLegacyBodySchema = {
  body: string
}

export type t_TeamsUpdateDiscussionCommentLegacyParamSchema = {
  comment_number: number
  discussion_number: number
  team_id: number
}

export type t_TeamsUpdateDiscussionInOrgBodySchema = {
  body?: string
  title?: string
}

export type t_TeamsUpdateDiscussionInOrgParamSchema = {
  discussion_number: number
  org: string
  team_slug: string
}

export type t_TeamsUpdateDiscussionLegacyBodySchema = {
  body?: string
  title?: string
}

export type t_TeamsUpdateDiscussionLegacyParamSchema = {
  discussion_number: number
  team_id: number
}

export type t_TeamsUpdateInOrgBodySchema = {
  description?: string
  name?: string
  parent_team_id?: number | null
  permission?: "pull" | "push" | "admin"
  privacy?: "secret" | "closed"
}

export type t_TeamsUpdateInOrgParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsUpdateLegacyBodySchema = {
  description?: string
  name: string
  parent_team_id?: number | null
  permission?: "pull" | "push" | "admin"
  privacy?: "secret" | "closed"
}

export type t_TeamsUpdateLegacyParamSchema = {
  team_id: number
}

export type t_UsersAddEmailForAuthenticatedUserBodySchema =
  | {
      emails: string[]
    }
  | string[]
  | string

export type t_UsersBlockParamSchema = {
  username: string
}

export type t_UsersCheckBlockedParamSchema = {
  username: string
}

export type t_UsersCheckFollowingForUserParamSchema = {
  target_user: string
  username: string
}

export type t_UsersCheckPersonIsFollowedByAuthenticatedParamSchema = {
  username: string
}

export type t_UsersCreateGpgKeyForAuthenticatedUserBodySchema = {
  armored_public_key: string
  name?: string
}

export type t_UsersCreatePublicSshKeyForAuthenticatedUserBodySchema = {
  key: string
  title?: string
}

export type t_UsersCreateSshSigningKeyForAuthenticatedUserBodySchema = {
  key: string
  title?: string
}

export type t_UsersDeleteEmailForAuthenticatedUserBodySchema =
  | {
      emails: string[]
    }
  | string[]
  | string

export type t_UsersDeleteGpgKeyForAuthenticatedUserParamSchema = {
  gpg_key_id: number
}

export type t_UsersDeletePublicSshKeyForAuthenticatedUserParamSchema = {
  key_id: number
}

export type t_UsersDeleteSshSigningKeyForAuthenticatedUserParamSchema = {
  ssh_signing_key_id: number
}

export type t_UsersFollowParamSchema = {
  username: string
}

export type t_UsersGetByUsernameParamSchema = {
  username: string
}

export type t_UsersGetContextForUserParamSchema = {
  username: string
}

export type t_UsersGetContextForUserQuerySchema = {
  subject_id?: string
  subject_type?: "organization" | "repository" | "issue" | "pull_request"
}

export type t_UsersGetGpgKeyForAuthenticatedUserParamSchema = {
  gpg_key_id: number
}

export type t_UsersGetPublicSshKeyForAuthenticatedUserParamSchema = {
  key_id: number
}

export type t_UsersGetSshSigningKeyForAuthenticatedUserParamSchema = {
  ssh_signing_key_id: number
}

export type t_UsersListQuerySchema = {
  per_page?: number
  since?: number
}

export type t_UsersListBlockedByAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_UsersListEmailsForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_UsersListFollowedByAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_UsersListFollowersForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_UsersListFollowersForUserParamSchema = {
  username: string
}

export type t_UsersListFollowersForUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_UsersListFollowingForUserParamSchema = {
  username: string
}

export type t_UsersListFollowingForUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_UsersListGpgKeysForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_UsersListGpgKeysForUserParamSchema = {
  username: string
}

export type t_UsersListGpgKeysForUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_UsersListPublicEmailsForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_UsersListPublicKeysForUserParamSchema = {
  username: string
}

export type t_UsersListPublicKeysForUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_UsersListPublicSshKeysForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_UsersListSshSigningKeysForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_UsersListSshSigningKeysForUserParamSchema = {
  username: string
}

export type t_UsersListSshSigningKeysForUserQuerySchema = {
  page?: number
  per_page?: number
}

export type t_UsersSetPrimaryEmailVisibilityForAuthenticatedUserBodySchema = {
  visibility: "public" | "private"
}

export type t_UsersUnblockParamSchema = {
  username: string
}

export type t_UsersUnfollowParamSchema = {
  username: string
}

export type t_UsersUpdateAuthenticatedBodySchema = {
  bio?: string
  blog?: string
  company?: string
  email?: string
  hireable?: boolean
  location?: string
  name?: string
  twitter_username?: string | null
}
