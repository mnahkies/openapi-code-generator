/** AUTOGENERATED - DO NOT EDIT **/
/* tslint:disable */
/* eslint:disable */

export type ActionsAddSelectedRepoToOrgSecretParamSchema = {
  org?: string
  repository_id?: number
  secret_name?: string
}

export type ActionsCancelWorkflowRunParamSchema = {
  owner?: string
  repo?: string
  run_id?: number
}

export type ActionsCreateOrUpdateOrgSecretBodySchema = {
  encrypted_value?: string
  key_id?: string
  selected_repository_ids?: string[]
  visibility?: "all" | "private" | "selected"
}

export type ActionsCreateOrUpdateOrgSecretParamSchema = {
  org?: string
  secret_name?: string
}

export type ActionsCreateOrUpdateRepoSecretBodySchema = {
  encrypted_value?: string
  key_id?: string
}

export type ActionsCreateOrUpdateRepoSecretParamSchema = {
  owner?: string
  repo?: string
  secret_name?: string
}

export type ActionsCreateRegistrationTokenForOrgParamSchema = {
  org?: string
}

export type ActionsCreateRegistrationTokenForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type ActionsCreateRemoveTokenForOrgParamSchema = {
  org?: string
}

export type ActionsCreateRemoveTokenForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type ActionsDeleteArtifactParamSchema = {
  artifact_id?: number
  owner?: string
  repo?: string
}

export type ActionsDeleteOrgSecretParamSchema = {
  org?: string
  secret_name?: string
}

export type ActionsDeleteRepoSecretParamSchema = {
  owner?: string
  repo?: string
  secret_name?: string
}

export type ActionsDeleteSelfHostedRunnerFromOrgParamSchema = {
  org?: string
  runner_id?: number
}

export type ActionsDeleteSelfHostedRunnerFromRepoParamSchema = {
  owner?: string
  repo?: string
  runner_id?: number
}

export type ActionsDeleteWorkflowRunLogsParamSchema = {
  owner?: string
  repo?: string
  run_id?: number
}

export type ActionsDownloadArtifactParamSchema = {
  archive_format?: string
  artifact_id?: number
  owner?: string
  repo?: string
}

export type ActionsDownloadJobLogsForWorkflowRunParamSchema = {
  job_id?: number
  owner?: string
  repo?: string
}

export type ActionsDownloadWorkflowRunLogsParamSchema = {
  owner?: string
  repo?: string
  run_id?: number
}

export type ActionsGetArtifactParamSchema = {
  artifact_id?: number
  owner?: string
  repo?: string
}

export type ActionsGetJobForWorkflowRunParamSchema = {
  job_id?: number
  owner?: string
  repo?: string
}

export type ActionsGetOrgPublicKeyParamSchema = {
  org?: string
}

export type ActionsGetOrgSecretParamSchema = {
  org?: string
  secret_name?: string
}

export type ActionsGetRepoPublicKeyParamSchema = {
  owner?: string
  repo?: string
}

export type ActionsGetRepoSecretParamSchema = {
  owner?: string
  repo?: string
  secret_name?: string
}

export type ActionsGetSelfHostedRunnerForOrgParamSchema = {
  org?: string
  runner_id?: number
}

export type ActionsGetSelfHostedRunnerForRepoParamSchema = {
  owner?: string
  repo?: string
  runner_id?: number
}

export type ActionsGetWorkflowParamSchema = {
  owner?: string
  repo?: string
  workflow_id?: number
}

export type ActionsGetWorkflowRunParamSchema = {
  owner?: string
  repo?: string
  run_id?: number
}

export type ActionsGetWorkflowRunUsageParamSchema = {
  owner?: string
  repo?: string
  run_id?: number
}

export type ActionsGetWorkflowUsageParamSchema = {
  owner?: string
  repo?: string
  workflow_id?: number
}

export type ActionsListArtifactsForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type ActionsListArtifactsForRepoQuerySchema = {
  page?: number
  per_page?: number
}

export type ActionsListJobsForWorkflowRunParamSchema = {
  owner?: string
  repo?: string
  run_id?: number
}

export type ActionsListJobsForWorkflowRunQuerySchema = {
  filter?: "latest" | "all"
  page?: number
  per_page?: number
}

export type ActionsListOrgSecretsParamSchema = {
  org?: string
}

export type ActionsListOrgSecretsQuerySchema = {
  page?: number
  per_page?: number
}

export type ActionsListRepoSecretsParamSchema = {
  owner?: string
  repo?: string
}

export type ActionsListRepoSecretsQuerySchema = {
  page?: number
  per_page?: number
}

export type ActionsListRepoWorkflowsParamSchema = {
  owner?: string
  repo?: string
}

export type ActionsListRepoWorkflowsQuerySchema = {
  page?: number
  per_page?: number
}

export type ActionsListRunnerApplicationsForOrgParamSchema = {
  org?: string
}

export type ActionsListRunnerApplicationsForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type ActionsListSelectedReposForOrgSecretParamSchema = {
  org?: string
  secret_name?: string
}

export type ActionsListSelfHostedRunnersForOrgParamSchema = {
  org?: string
}

export type ActionsListSelfHostedRunnersForOrgQuerySchema = {
  page?: number
  per_page?: number
}

export type ActionsListSelfHostedRunnersForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type ActionsListSelfHostedRunnersForRepoQuerySchema = {
  page?: number
  per_page?: number
}

export type ActionsListWorkflowRunArtifactsParamSchema = {
  owner?: string
  repo?: string
  run_id?: number
}

export type ActionsListWorkflowRunArtifactsQuerySchema = {
  page?: number
  per_page?: number
}

export type ActionsListWorkflowRunsParamSchema = {
  owner?: string
  repo?: string
  workflow_id?: number
}

export type ActionsListWorkflowRunsQuerySchema = {
  actor?: string
  branch?: string
  event?: string
  page?: number
  per_page?: number
  status?: "completed" | "status" | "conclusion"
}

export type ActionsListWorkflowRunsForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type ActionsListWorkflowRunsForRepoQuerySchema = {
  actor?: string
  branch?: string
  event?: string
  page?: number
  per_page?: number
  status?: "completed" | "status" | "conclusion"
}

export type ActionsReRunWorkflowParamSchema = {
  owner?: string
  repo?: string
  run_id?: number
}

export type ActionsRemoveSelectedRepoFromOrgSecretParamSchema = {
  org?: string
  repository_id?: number
  secret_name?: string
}

export type ActionsSetSelectedReposForOrgSecretBodySchema = {
  selected_repository_ids?: number[]
}

export type ActionsSetSelectedReposForOrgSecretParamSchema = {
  org?: string
  secret_name?: string
}

export type ActivityCheckRepoIsStarredByAuthenticatedUserParamSchema = {
  owner?: string
  repo?: string
}

export type ActivityDeleteRepoSubscriptionParamSchema = {
  owner?: string
  repo?: string
}

export type ActivityDeleteThreadSubscriptionParamSchema = {
  thread_id?: number
}

export type ActivityGetRepoSubscriptionParamSchema = {
  owner?: string
  repo?: string
}

export type ActivityGetThreadParamSchema = {
  thread_id?: number
}

export type ActivityGetThreadSubscriptionForAuthenticatedUserParamSchema = {
  thread_id?: number
}

export type ActivityListEventsForAuthenticatedUserParamSchema = {
  username?: string
}

export type ActivityListEventsForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type ActivityListNotificationsForAuthenticatedUserQuerySchema = {
  all?: boolean
  before?: string
  page?: number
  participating?: boolean
  per_page?: number
  since?: string
}

export type ActivityListOrgEventsForAuthenticatedUserParamSchema = {
  org?: string
  username?: string
}

export type ActivityListOrgEventsForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type ActivityListPublicEventsQuerySchema = {
  page?: number
  per_page?: number
}

export type ActivityListPublicEventsForRepoNetworkParamSchema = {
  owner?: string
  repo?: string
}

export type ActivityListPublicEventsForRepoNetworkQuerySchema = {
  page?: number
  per_page?: number
}

export type ActivityListPublicEventsForUserParamSchema = {
  username?: string
}

export type ActivityListPublicEventsForUserQuerySchema = {
  page?: number
  per_page?: number
}

export type ActivityListPublicOrgEventsParamSchema = {
  org?: string
}

export type ActivityListPublicOrgEventsQuerySchema = {
  page?: number
  per_page?: number
}

export type ActivityListReceivedEventsForUserParamSchema = {
  username?: string
}

export type ActivityListReceivedEventsForUserQuerySchema = {
  page?: number
  per_page?: number
}

export type ActivityListReceivedPublicEventsForUserParamSchema = {
  username?: string
}

export type ActivityListReceivedPublicEventsForUserQuerySchema = {
  page?: number
  per_page?: number
}

export type ActivityListRepoEventsParamSchema = {
  owner?: string
  repo?: string
}

export type ActivityListRepoEventsQuerySchema = {
  page?: number
  per_page?: number
}

export type ActivityListRepoNotificationsForAuthenticatedUserParamSchema = {
  owner?: string
  repo?: string
}

export type ActivityListRepoNotificationsForAuthenticatedUserQuerySchema = {
  all?: boolean
  before?: string
  page?: number
  participating?: boolean
  per_page?: number
  since?: string
}

export type ActivityListReposStarredByAuthenticatedUserQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  sort?: "created" | "updated"
}

export type ActivityListReposStarredByUserParamSchema = {
  username?: string
}

export type ActivityListReposStarredByUserQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  sort?: "created" | "updated"
}

export type ActivityListReposWatchedByUserParamSchema = {
  username?: string
}

export type ActivityListReposWatchedByUserQuerySchema = {
  page?: number
  per_page?: number
}

export type ActivityListStargazersForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type ActivityListStargazersForRepoQuerySchema = {
  page?: number
  per_page?: number
}

export type ActivityListWatchedReposForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type ActivityListWatchersForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type ActivityListWatchersForRepoQuerySchema = {
  page?: number
  per_page?: number
}

export type ActivityMarkNotificationsAsReadBodySchema = {
  last_read_at?: string
}

export type ActivityMarkRepoNotificationsAsReadBodySchema = {
  last_read_at?: string
}

export type ActivityMarkRepoNotificationsAsReadParamSchema = {
  owner?: string
  repo?: string
}

export type ActivityMarkThreadAsReadParamSchema = {
  thread_id?: number
}

export type ActivitySetRepoSubscriptionBodySchema = {
  ignored?: boolean
  subscribed?: boolean
}

export type ActivitySetRepoSubscriptionParamSchema = {
  owner?: string
  repo?: string
}

export type ActivitySetThreadSubscriptionBodySchema = {
  ignored?: boolean
}

export type ActivitySetThreadSubscriptionParamSchema = {
  thread_id?: number
}

export type ActivityStarRepoForAuthenticatedUserParamSchema = {
  owner?: string
  repo?: string
}

export type ActivityUnstarRepoForAuthenticatedUserParamSchema = {
  owner?: string
  repo?: string
}

export type AppsAddRepoToInstallationParamSchema = {
  installation_id?: number
  repository_id?: number
}

export type AppsCheckAuthorizationParamSchema = {
  access_token?: string
  client_id?: string
}

export type AppsCheckTokenBodySchema = {
  access_token?: string
}

export type AppsCheckTokenParamSchema = {
  client_id?: string
}

export type AppsCreateContentAttachmentBodySchema = {
  body: string
  title: string
}

export type AppsCreateContentAttachmentParamSchema = {
  content_reference_id?: number
}

export type AppsCreateFromManifestParamSchema = {
  code?: string
}

export type AppsCreateInstallationAccessTokenBodySchema = {
  permissions?: {
    [key: string]: unknown
  }
  repository_ids?: number[]
}

export type AppsCreateInstallationAccessTokenParamSchema = {
  installation_id?: number
}

export type AppsDeleteAuthorizationBodySchema = {
  access_token?: string
}

export type AppsDeleteAuthorizationParamSchema = {
  client_id?: string
}

export type AppsDeleteInstallationParamSchema = {
  installation_id?: number
}

export type AppsDeleteTokenBodySchema = {
  access_token?: string
}

export type AppsDeleteTokenParamSchema = {
  client_id?: string
}

export type AppsGetBySlugParamSchema = {
  app_slug?: string
}

export type AppsGetInstallationParamSchema = {
  installation_id?: number
}

export type AppsGetOrgInstallationParamSchema = {
  org?: string
}

export type AppsGetRepoInstallationParamSchema = {
  owner?: string
  repo?: string
}

export type AppsGetSubscriptionPlanForAccountParamSchema = {
  account_id?: number
}

export type AppsGetSubscriptionPlanForAccountStubbedParamSchema = {
  account_id?: number
}

export type AppsGetUserInstallationParamSchema = {
  username?: string
}

export type AppsListAccountsForPlanParamSchema = {
  plan_id?: number
}

export type AppsListAccountsForPlanQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  sort?: "created" | "updated"
}

export type AppsListAccountsForPlanStubbedParamSchema = {
  plan_id?: number
}

export type AppsListAccountsForPlanStubbedQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  sort?: "created" | "updated"
}

export type AppsListInstallationReposForAuthenticatedUserParamSchema = {
  installation_id?: number
}

export type AppsListInstallationReposForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type AppsListInstallationsQuerySchema = {
  page?: number
  per_page?: number
}

export type AppsListInstallationsForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type AppsListPlansQuerySchema = {
  page?: number
  per_page?: number
}

export type AppsListPlansStubbedQuerySchema = {
  page?: number
  per_page?: number
}

export type AppsListReposAccessibleToInstallationQuerySchema = {
  page?: number
  per_page?: number
}

export type AppsListSubscriptionsForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type AppsListSubscriptionsForAuthenticatedUserStubbedQuerySchema = {
  page?: number
  per_page?: number
}

export type AppsRemoveRepoFromInstallationParamSchema = {
  installation_id?: number
  repository_id?: number
}

export type AppsResetAuthorizationParamSchema = {
  access_token?: string
  client_id?: string
}

export type AppsResetTokenBodySchema = {
  access_token?: string
}

export type AppsResetTokenParamSchema = {
  client_id?: string
}

export type AppsRevokeAuthorizationForApplicationParamSchema = {
  access_token?: string
  client_id?: string
}

export type AppsRevokeGrantForApplicationParamSchema = {
  access_token?: string
  client_id?: string
}

export type AppsSuspendInstallationParamSchema = {
  installation_id?: number
}

export type AppsUnsuspendInstallationParamSchema = {
  installation_id?: number
}

export type ChecksCreateBodySchema = {
  actions?: {
    description: string
    identifier: string
    label: string
  }[]
  completed_at?: string
  conclusion?:
    | "success"
    | "failure"
    | "neutral"
    | "cancelled"
    | "skipped"
    | "timed_out"
    | "action_required"
  details_url?: string
  external_id?: string
  head_sha: string
  name: string
  output?: {
    annotations?: {
      annotation_level: "notice" | "warning" | "failure"
      end_column?: number
      end_line: number
      message: string
      path: string
      raw_details?: string
      start_column?: number
      start_line: number
      title?: string
    }[]
    images?: {
      alt: string
      caption?: string
      image_url: string
    }[]
    summary: string
    text?: string
    title: string
  }
  started_at?: string
  status?: "queued" | "in_progress" | "completed"
}

export type ChecksCreateParamSchema = {
  owner?: string
  repo?: string
}

export type ChecksCreateSuiteBodySchema = {
  head_sha: string
}

export type ChecksCreateSuiteParamSchema = {
  owner?: string
  repo?: string
}

export type ChecksGetParamSchema = {
  check_run_id?: number
  owner?: string
  repo?: string
}

export type ChecksGetSuiteParamSchema = {
  check_suite_id?: number
  owner?: string
  repo?: string
}

export type ChecksListAnnotationsParamSchema = {
  check_run_id?: number
  owner?: string
  repo?: string
}

export type ChecksListAnnotationsQuerySchema = {
  page?: number
  per_page?: number
}

export type ChecksListForRefParamSchema = {
  owner?: string
  ref?: string
  repo?: string
}

export type ChecksListForRefQuerySchema = {
  check_name?: string
  filter?: "latest" | "all"
  page?: number
  per_page?: number
  status?: "queued" | "in_progress" | "completed"
}

export type ChecksListForSuiteParamSchema = {
  check_suite_id?: number
  owner?: string
  repo?: string
}

export type ChecksListForSuiteQuerySchema = {
  check_name?: string
  filter?: "latest" | "all"
  page?: number
  per_page?: number
  status?: "queued" | "in_progress" | "completed"
}

export type ChecksListSuitesForRefParamSchema = {
  owner?: string
  ref?: string
  repo?: string
}

export type ChecksListSuitesForRefQuerySchema = {
  app_id?: number
  check_name?: string
  page?: number
  per_page?: number
}

export type ChecksRerequestSuiteParamSchema = {
  check_suite_id?: number
  owner?: string
  repo?: string
}

export type ChecksSetSuitesPreferencesBodySchema = {
  auto_trigger_checks?: {
    app_id: number
    setting: boolean
  }[]
}

export type ChecksSetSuitesPreferencesParamSchema = {
  owner?: string
  repo?: string
}

export type ChecksUpdateBodySchema = {
  actions?: {
    description: string
    identifier: string
    label: string
  }[]
  completed_at?: string
  conclusion?:
    | "success"
    | "failure"
    | "neutral"
    | "cancelled"
    | "skipped"
    | "timed_out"
    | "action_required"
  details_url?: string
  external_id?: string
  name?: string
  output?: {
    annotations?: {
      annotation_level: "notice" | "warning" | "failure"
      end_column?: number
      end_line: number
      message: string
      path: string
      raw_details?: string
      start_column?: number
      start_line: number
      title?: string
    }[]
    images?: {
      alt: string
      caption?: string
      image_url: string
    }[]
    summary: string
    text?: string
    title?: string
  }
  started_at?: string
  status?: "queued" | "in_progress" | "completed"
}

export type ChecksUpdateParamSchema = {
  check_run_id?: number
  owner?: string
  repo?: string
}

export type CodeScanningGetAlertParamSchema = {
  alert_id?: number
  owner?: string
  repo?: string
}

export type CodeScanningListAlertsForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type CodeScanningListAlertsForRepoQuerySchema = {
  ref?: string
  state?: string
}

export type CodesOfConductGetConductCodeParamSchema = {
  key?: string
}

export type CodesOfConductGetForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type GistsCheckIsStarredParamSchema = {
  gist_id?: string
}

export type GistsCreateBodySchema = {
  description?: string
  files: {
    [key: string]: unknown
  }
  public?: boolean
}

export type GistsCreateCommentBodySchema = {
  body: string
}

export type GistsCreateCommentParamSchema = {
  gist_id?: string
}

export type GistsDeleteParamSchema = {
  gist_id?: string
}

export type GistsDeleteCommentParamSchema = {
  comment_id?: number
  gist_id?: string
}

export type GistsForkParamSchema = {
  gist_id?: string
}

export type GistsGetParamSchema = {
  gist_id?: string
}

export type GistsGetCommentParamSchema = {
  comment_id?: number
  gist_id?: string
}

export type GistsGetRevisionParamSchema = {
  gist_id?: string
  sha?: string
}

export type GistsListQuerySchema = {
  page?: number
  per_page?: number
  since?: string
}

export type GistsListCommentsParamSchema = {
  gist_id?: string
}

export type GistsListCommentsQuerySchema = {
  page?: number
  per_page?: number
}

export type GistsListCommitsParamSchema = {
  gist_id?: string
}

export type GistsListCommitsQuerySchema = {
  page?: number
  per_page?: number
}

export type GistsListForUserParamSchema = {
  username?: string
}

export type GistsListForUserQuerySchema = {
  page?: number
  per_page?: number
  since?: string
}

export type GistsListForksParamSchema = {
  gist_id?: string
}

export type GistsListForksQuerySchema = {
  page?: number
  per_page?: number
}

export type GistsListPublicQuerySchema = {
  page?: number
  per_page?: number
  since?: string
}

export type GistsListStarredQuerySchema = {
  page?: number
  per_page?: number
  since?: string
}

export type GistsStarParamSchema = {
  gist_id?: string
}

export type GistsUnstarParamSchema = {
  gist_id?: string
}

export type GistsUpdateBodySchema = {
  description?: string
  files?: {
    [key: string]: unknown
  }
}

export type GistsUpdateParamSchema = {
  gist_id?: string
}

export type GistsUpdateCommentBodySchema = {
  body: string
}

export type GistsUpdateCommentParamSchema = {
  comment_id?: number
  gist_id?: string
}

export type GitCreateBlobBodySchema = {
  content: string
  encoding?: string
}

export type GitCreateBlobParamSchema = {
  owner?: string
  repo?: string
}

export type GitCreateCommitBodySchema = {
  author?: {
    date?: string
    email?: string
    name?: string
  }
  committer?: {
    date?: string
    email?: string
    name?: string
  }
  message: string
  parents: string[]
  signature?: string
  tree: string
}

export type GitCreateCommitParamSchema = {
  owner?: string
  repo?: string
}

export type GitCreateRefBodySchema = {
  ref: string
  sha: string
}

export type GitCreateRefParamSchema = {
  owner?: string
  repo?: string
}

export type GitCreateTagBodySchema = {
  message: string
  object: string
  tag: string
  tagger?: {
    date?: string
    email?: string
    name?: string
  }
  type: "commit" | "tree" | "blob"
}

export type GitCreateTagParamSchema = {
  owner?: string
  repo?: string
}

export type GitCreateTreeBodySchema = {
  base_tree?: string
  tree: {
    content?: string
    mode?: "100644" | "100755" | "040000" | "160000" | "120000"
    path?: string
    sha?: string | null
    type?: "blob" | "tree" | "commit"
  }[]
}

export type GitCreateTreeParamSchema = {
  owner?: string
  repo?: string
}

export type GitDeleteRefParamSchema = {
  owner?: string
  ref?: string
  repo?: string
}

export type GitGetBlobParamSchema = {
  file_sha?: string
  owner?: string
  repo?: string
}

export type GitGetCommitParamSchema = {
  commit_sha?: string
  owner?: string
  repo?: string
}

export type GitGetRefParamSchema = {
  owner?: string
  ref?: string
  repo?: string
}

export type GitGetTagParamSchema = {
  owner?: string
  repo?: string
  tag_sha?: string
}

export type GitGetTreeParamSchema = {
  owner?: string
  repo?: string
  tree_sha?: string
}

export type GitGetTreeQuerySchema = {
  recursive?: string
}

export type GitListMatchingRefsParamSchema = {
  owner?: string
  ref?: string
  repo?: string
}

export type GitListMatchingRefsQuerySchema = {
  page?: number
  per_page?: number
}

export type GitUpdateRefBodySchema = {
  force?: boolean
  sha: string
}

export type GitUpdateRefParamSchema = {
  owner?: string
  ref?: string
  repo?: string
}

export type GitignoreGetTemplateParamSchema = {
  name?: string
}

export type InteractionsGetRestrictionsForOrgParamSchema = {
  org?: string
}

export type InteractionsGetRestrictionsForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type InteractionsRemoveRestrictionsForOrgParamSchema = {
  org?: string
}

export type InteractionsRemoveRestrictionsForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type InteractionsSetRestrictionsForOrgBodySchema = {
  limit: "existing_users" | "contributors_only" | "collaborators_only"
}

export type InteractionsSetRestrictionsForOrgParamSchema = {
  org?: string
}

export type InteractionsSetRestrictionsForRepoBodySchema = {
  limit: "existing_users" | "contributors_only" | "collaborators_only"
}

export type InteractionsSetRestrictionsForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type IssuesAddAssigneesBodySchema = {
  assignees?: string[]
}

export type IssuesAddAssigneesParamSchema = {
  issue_number?: number
  owner?: string
  repo?: string
}

export type IssuesAddLabelsBodySchema = {
  labels: string[]
}

export type IssuesAddLabelsParamSchema = {
  issue_number?: number
  owner?: string
  repo?: string
}

export type IssuesCheckUserCanBeAssignedParamSchema = {
  assignee?: string
  owner?: string
  repo?: string
}

export type IssuesCreateBodySchema = {
  assignee?: string
  assignees?: string[]
  body?: string
  labels?: string[]
  milestone?: number
  title: string
}

export type IssuesCreateParamSchema = {
  owner?: string
  repo?: string
}

export type IssuesCreateCommentBodySchema = {
  body: string
}

export type IssuesCreateCommentParamSchema = {
  issue_number?: number
  owner?: string
  repo?: string
}

export type IssuesCreateLabelBodySchema = {
  color: string
  description?: string
  name: string
}

export type IssuesCreateLabelParamSchema = {
  owner?: string
  repo?: string
}

export type IssuesCreateMilestoneBodySchema = {
  description?: string
  due_on?: string
  state?: "open" | "closed"
  title: string
}

export type IssuesCreateMilestoneParamSchema = {
  owner?: string
  repo?: string
}

export type IssuesDeleteCommentParamSchema = {
  comment_id?: number
  owner?: string
  repo?: string
}

export type IssuesDeleteLabelParamSchema = {
  name?: string
  owner?: string
  repo?: string
}

export type IssuesDeleteMilestoneParamSchema = {
  milestone_number?: number
  owner?: string
  repo?: string
}

export type IssuesGetParamSchema = {
  issue_number?: number
  owner?: string
  repo?: string
}

export type IssuesGetCommentParamSchema = {
  comment_id?: number
  owner?: string
  repo?: string
}

export type IssuesGetEventParamSchema = {
  event_id?: number
  owner?: string
  repo?: string
}

export type IssuesGetLabelParamSchema = {
  name?: string
  owner?: string
  repo?: string
}

export type IssuesGetMilestoneParamSchema = {
  milestone_number?: number
  owner?: string
  repo?: string
}

export type IssuesListQuerySchema = {
  direction?: "asc" | "desc"
  filter?: "assigned" | "created" | "mentioned" | "subscribed" | "all"
  labels?: string
  page?: number
  per_page?: number
  since?: string
  sort?: "created" | "updated" | "comments"
  state?: "open" | "closed" | "all"
}

export type IssuesListAssigneesParamSchema = {
  owner?: string
  repo?: string
}

export type IssuesListAssigneesQuerySchema = {
  page?: number
  per_page?: number
}

export type IssuesListCommentsParamSchema = {
  issue_number?: number
  owner?: string
  repo?: string
}

export type IssuesListCommentsQuerySchema = {
  page?: number
  per_page?: number
  since?: string
}

export type IssuesListCommentsForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type IssuesListCommentsForRepoQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  since?: string
  sort?: "created" | "updated"
}

export type IssuesListEventsParamSchema = {
  issue_number?: number
  owner?: string
  repo?: string
}

export type IssuesListEventsQuerySchema = {
  page?: number
  per_page?: number
}

export type IssuesListEventsForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type IssuesListEventsForRepoQuerySchema = {
  page?: number
  per_page?: number
}

export type IssuesListEventsForTimelineParamSchema = {
  issue_number?: number
  owner?: string
  repo?: string
}

export type IssuesListEventsForTimelineQuerySchema = {
  page?: number
  per_page?: number
}

export type IssuesListForAuthenticatedUserQuerySchema = {
  direction?: "asc" | "desc"
  filter?: "assigned" | "created" | "mentioned" | "subscribed" | "all"
  labels?: string
  page?: number
  per_page?: number
  since?: string
  sort?: "created" | "updated" | "comments"
  state?: "open" | "closed" | "all"
}

export type IssuesListForOrgParamSchema = {
  org?: string
}

export type IssuesListForOrgQuerySchema = {
  direction?: "asc" | "desc"
  filter?: "assigned" | "created" | "mentioned" | "subscribed" | "all"
  labels?: string
  page?: number
  per_page?: number
  since?: string
  sort?: "created" | "updated" | "comments"
  state?: "open" | "closed" | "all"
}

export type IssuesListForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type IssuesListForRepoQuerySchema = {
  assignee?: string
  creator?: string
  direction?: "asc" | "desc"
  labels?: string
  mentioned?: string
  milestone?: string
  page?: number
  per_page?: number
  since?: string
  sort?: "created" | "updated" | "comments"
  state?: "open" | "closed" | "all"
}

export type IssuesListLabelsForMilestoneParamSchema = {
  milestone_number?: number
  owner?: string
  repo?: string
}

export type IssuesListLabelsForMilestoneQuerySchema = {
  page?: number
  per_page?: number
}

export type IssuesListLabelsForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type IssuesListLabelsForRepoQuerySchema = {
  page?: number
  per_page?: number
}

export type IssuesListLabelsOnIssueParamSchema = {
  issue_number?: number
  owner?: string
  repo?: string
}

export type IssuesListLabelsOnIssueQuerySchema = {
  page?: number
  per_page?: number
}

export type IssuesListMilestonesParamSchema = {
  owner?: string
  repo?: string
}

export type IssuesListMilestonesQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  sort?: "due_on" | "completeness"
  state?: "open" | "closed" | "all"
}

export type IssuesLockBodySchema = {
  lock_reason?: "off-topic" | "too heated" | "resolved" | "spam"
}

export type IssuesLockParamSchema = {
  issue_number?: number
  owner?: string
  repo?: string
}

export type IssuesRemoveAllLabelsParamSchema = {
  issue_number?: number
  owner?: string
  repo?: string
}

export type IssuesRemoveAssigneesBodySchema = {
  assignees?: string[]
}

export type IssuesRemoveAssigneesParamSchema = {
  issue_number?: number
  owner?: string
  repo?: string
}

export type IssuesRemoveLabelParamSchema = {
  issue_number?: number
  name?: string
  owner?: string
  repo?: string
}

export type IssuesSetLabelsBodySchema = {
  labels?: string[]
}

export type IssuesSetLabelsParamSchema = {
  issue_number?: number
  owner?: string
  repo?: string
}

export type IssuesUnlockParamSchema = {
  issue_number?: number
  owner?: string
  repo?: string
}

export type IssuesUpdateBodySchema = {
  assignee?: string
  assignees?: string[]
  body?: string
  labels?: string[]
  milestone?: number | null
  state?: "open" | "closed"
  title?: string
}

export type IssuesUpdateParamSchema = {
  issue_number?: number
  owner?: string
  repo?: string
}

export type IssuesUpdateCommentBodySchema = {
  body: string
}

export type IssuesUpdateCommentParamSchema = {
  comment_id?: number
  owner?: string
  repo?: string
}

export type IssuesUpdateLabelBodySchema = {
  color?: string
  description?: string
  new_name?: string
}

export type IssuesUpdateLabelParamSchema = {
  name?: string
  owner?: string
  repo?: string
}

export type IssuesUpdateMilestoneBodySchema = {
  description?: string
  due_on?: string
  state?: "open" | "closed"
  title?: string
}

export type IssuesUpdateMilestoneParamSchema = {
  milestone_number?: number
  owner?: string
  repo?: string
}

export type LicensesGetParamSchema = {
  license?: string
}

export type LicensesGetForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type MarkdownRenderBodySchema = {
  context?: string
  mode?: "markdown" | "gfm"
  text: string
}

export type MarkdownRenderRawBodySchema = string

export type MigrationsCancelImportParamSchema = {
  owner?: string
  repo?: string
}

export type MigrationsDeleteArchiveForAuthenticatedUserParamSchema = {
  migration_id?: number
}

export type MigrationsDeleteArchiveForOrgParamSchema = {
  migration_id?: number
  org?: string
}

export type MigrationsDownloadArchiveForOrgParamSchema = {
  migration_id?: number
  org?: string
}

export type MigrationsGetArchiveForAuthenticatedUserParamSchema = {
  migration_id?: number
}

export type MigrationsGetCommitAuthorsParamSchema = {
  owner?: string
  repo?: string
}

export type MigrationsGetCommitAuthorsQuerySchema = {
  since?: string
}

export type MigrationsGetImportStatusParamSchema = {
  owner?: string
  repo?: string
}

export type MigrationsGetLargeFilesParamSchema = {
  owner?: string
  repo?: string
}

export type MigrationsGetStatusForAuthenticatedUserParamSchema = {
  migration_id?: number
}

export type MigrationsGetStatusForOrgParamSchema = {
  migration_id?: number
  org?: string
}

export type MigrationsListForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type MigrationsListForOrgParamSchema = {
  org?: string
}

export type MigrationsListForOrgQuerySchema = {
  page?: number
  per_page?: number
}

export type MigrationsListReposForOrgParamSchema = {
  migration_id?: number
  org?: string
}

export type MigrationsListReposForOrgQuerySchema = {
  page?: number
  per_page?: number
}

export type MigrationsListReposForUserParamSchema = {
  migration_id?: number
}

export type MigrationsListReposForUserQuerySchema = {
  page?: number
  per_page?: number
}

export type MigrationsMapCommitAuthorBodySchema = {
  email?: string
  name?: string
}

export type MigrationsMapCommitAuthorParamSchema = {
  author_id?: number
  owner?: string
  repo?: string
}

export type MigrationsSetLfsPreferenceBodySchema = {
  use_lfs: "opt_in" | "opt_out"
}

export type MigrationsSetLfsPreferenceParamSchema = {
  owner?: string
  repo?: string
}

export type MigrationsStartForAuthenticatedUserBodySchema = {
  exclude_attachments?: boolean
  lock_repositories?: boolean
  repositories: string[]
}

export type MigrationsStartForOrgBodySchema = {
  exclude_attachments?: boolean
  lock_repositories?: boolean
  repositories: string[]
}

export type MigrationsStartForOrgParamSchema = {
  org?: string
}

export type MigrationsStartImportBodySchema = {
  tfvc_project?: string
  vcs?: "subversion" | "git" | "mercurial" | "tfvc"
  vcs_password?: string
  vcs_url: string
  vcs_username?: string
}

export type MigrationsStartImportParamSchema = {
  owner?: string
  repo?: string
}

export type MigrationsUnlockRepoForAuthenticatedUserParamSchema = {
  migration_id?: number
  repo_name?: string
}

export type MigrationsUnlockRepoForOrgParamSchema = {
  migration_id?: number
  org?: string
  repo_name?: string
}

export type MigrationsUpdateImportBodySchema = {
  vcs_password?: string
  vcs_username?: string
}

export type MigrationsUpdateImportParamSchema = {
  owner?: string
  repo?: string
}

export type OauthAuthorizationsCreateAuthorizationBodySchema = {
  client_id?: string
  client_secret?: string
  fingerprint?: string
  note: string
  note_url?: string
  scopes?: string[]
}

export type OauthAuthorizationsDeleteAuthorizationParamSchema = {
  authorization_id?: number
}

export type OauthAuthorizationsDeleteGrantParamSchema = {
  grant_id?: number
}

export type OauthAuthorizationsGetAuthorizationParamSchema = {
  authorization_id?: number
}

export type OauthAuthorizationsGetGrantParamSchema = {
  grant_id?: number
}

export type OauthAuthorizationsGetOrCreateAuthorizationForAppBodySchema = {
  client_secret: string
  fingerprint?: string
  note?: string
  note_url?: string
  scopes?: string[]
}

export type OauthAuthorizationsGetOrCreateAuthorizationForAppParamSchema = {
  client_id?: string
}

export type OauthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprintBodySchema =
  {
    client_secret: string
    note?: string
    note_url?: string
    scopes?: string[]
  }

export type OauthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprintParamSchema =
  {
    client_id?: string
    fingerprint?: string
  }

export type OauthAuthorizationsListAuthorizationsQuerySchema = {
  page?: number
  per_page?: number
}

export type OauthAuthorizationsListGrantsQuerySchema = {
  page?: number
  per_page?: number
}

export type OauthAuthorizationsUpdateAuthorizationBodySchema = {
  add_scopes?: string[]
  fingerprint?: string
  note?: string
  note_url?: string
  remove_scopes?: string[]
  scopes?: string[]
}

export type OauthAuthorizationsUpdateAuthorizationParamSchema = {
  authorization_id?: number
}

export type OrgsBlockUserParamSchema = {
  org?: string
  username?: string
}

export type OrgsCheckBlockedUserParamSchema = {
  org?: string
  username?: string
}

export type OrgsCheckMembershipForUserParamSchema = {
  org?: string
  username?: string
}

export type OrgsCheckPublicMembershipForUserParamSchema = {
  org?: string
  username?: string
}

export type OrgsConvertMemberToOutsideCollaboratorParamSchema = {
  org?: string
  username?: string
}

export type OrgsCreateInvitationBodySchema = {
  email?: string
  invitee_id?: number
  role?: "admin" | "direct_member" | "billing_manager"
  team_ids?: number[]
}

export type OrgsCreateInvitationParamSchema = {
  org?: string
}

export type OrgsCreateWebhookBodySchema = {
  active?: boolean
  config: {
    content_type?: string
    insecure_ssl?: string
    secret?: string
    url: string
  }
  events?: string[]
  name: string
}

export type OrgsCreateWebhookParamSchema = {
  org?: string
}

export type OrgsDeleteWebhookParamSchema = {
  hook_id?: number
  org?: string
}

export type OrgsGetParamSchema = {
  org?: string
}

export type OrgsGetMembershipForAuthenticatedUserParamSchema = {
  org?: string
}

export type OrgsGetMembershipForUserParamSchema = {
  org?: string
  username?: string
}

export type OrgsGetWebhookParamSchema = {
  hook_id?: number
  org?: string
}

export type OrgsListQuerySchema = {
  since?: number
}

export type OrgsListAppInstallationsParamSchema = {
  org?: string
}

export type OrgsListAppInstallationsQuerySchema = {
  page?: number
  per_page?: number
}

export type OrgsListBlockedUsersParamSchema = {
  org?: string
}

export type OrgsListForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type OrgsListForUserParamSchema = {
  username?: string
}

export type OrgsListForUserQuerySchema = {
  page?: number
  per_page?: number
}

export type OrgsListInvitationTeamsParamSchema = {
  invitation_id?: number
  org?: string
}

export type OrgsListInvitationTeamsQuerySchema = {
  page?: number
  per_page?: number
}

export type OrgsListMembersParamSchema = {
  org?: string
}

export type OrgsListMembersQuerySchema = {
  filter?: "2fa_disabled" | "all"
  page?: number
  per_page?: number
  role?: "all" | "admin" | "member"
}

export type OrgsListMembershipsForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
  state?: "active" | "pending"
}

export type OrgsListOutsideCollaboratorsParamSchema = {
  org?: string
}

export type OrgsListOutsideCollaboratorsQuerySchema = {
  filter?: "2fa_disabled" | "all"
  page?: number
  per_page?: number
}

export type OrgsListPendingInvitationsParamSchema = {
  org?: string
}

export type OrgsListPendingInvitationsQuerySchema = {
  page?: number
  per_page?: number
}

export type OrgsListPublicMembersParamSchema = {
  org?: string
}

export type OrgsListPublicMembersQuerySchema = {
  page?: number
  per_page?: number
}

export type OrgsListSamlSsoAuthorizationsParamSchema = {
  org?: string
}

export type OrgsListWebhooksParamSchema = {
  org?: string
}

export type OrgsListWebhooksQuerySchema = {
  page?: number
  per_page?: number
}

export type OrgsPingWebhookParamSchema = {
  hook_id?: number
  org?: string
}

export type OrgsRemoveMemberParamSchema = {
  org?: string
  username?: string
}

export type OrgsRemoveMembershipForUserParamSchema = {
  org?: string
  username?: string
}

export type OrgsRemoveOutsideCollaboratorParamSchema = {
  org?: string
  username?: string
}

export type OrgsRemovePublicMembershipForAuthenticatedUserParamSchema = {
  org?: string
  username?: string
}

export type OrgsRemoveSamlSsoAuthorizationParamSchema = {
  credential_id?: number
  org?: string
}

export type OrgsSetMembershipForUserBodySchema = {
  role?: "admin" | "member"
}

export type OrgsSetMembershipForUserParamSchema = {
  org?: string
  username?: string
}

export type OrgsSetPublicMembershipForAuthenticatedUserParamSchema = {
  org?: string
  username?: string
}

export type OrgsUnblockUserParamSchema = {
  org?: string
  username?: string
}

export type OrgsUpdateBodySchema = {
  billing_email?: string
  company?: string
  default_repository_permission?: "read" | "write" | "admin" | "none"
  description?: string
  email?: string
  has_organization_projects?: boolean
  has_repository_projects?: boolean
  location?: string
  members_allowed_repository_creation_type?: "all" | "private" | "none"
  members_can_create_internal_repositories?: boolean
  members_can_create_private_repositories?: boolean
  members_can_create_public_repositories?: boolean
  members_can_create_repositories?: boolean
  name?: string
  twitter_username?: string
}

export type OrgsUpdateParamSchema = {
  org?: string
}

export type OrgsUpdateMembershipForAuthenticatedUserBodySchema = {
  state: "active"
}

export type OrgsUpdateMembershipForAuthenticatedUserParamSchema = {
  org?: string
}

export type OrgsUpdateWebhookBodySchema = {
  active?: boolean
  config?: {
    content_type?: string
    insecure_ssl?: string
    secret?: string
    url: string
  }
  events?: string[]
}

export type OrgsUpdateWebhookParamSchema = {
  hook_id?: number
  org?: string
}

export type ProjectsAddCollaboratorBodySchema = {
  permission?: "read" | "write" | "admin"
}

export type ProjectsAddCollaboratorParamSchema = {
  project_id?: number
  username?: string
}

export type ProjectsCreateCardBodySchema = {
  content_id?: number
  content_type?: string
  note?: string
}

export type ProjectsCreateCardParamSchema = {
  column_id?: number
}

export type ProjectsCreateColumnBodySchema = {
  name: string
}

export type ProjectsCreateColumnParamSchema = {
  project_id?: number
}

export type ProjectsCreateForAuthenticatedUserBodySchema = {
  body?: string
  name: string
}

export type ProjectsCreateForOrgBodySchema = {
  body?: string
  name: string
}

export type ProjectsCreateForOrgParamSchema = {
  org?: string
}

export type ProjectsCreateForRepoBodySchema = {
  body?: string
  name: string
}

export type ProjectsCreateForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type ProjectsDeleteParamSchema = {
  project_id?: number
}

export type ProjectsDeleteCardParamSchema = {
  card_id?: number
}

export type ProjectsDeleteColumnParamSchema = {
  column_id?: number
}

export type ProjectsGetParamSchema = {
  project_id?: number
}

export type ProjectsGetCardParamSchema = {
  card_id?: number
}

export type ProjectsGetColumnParamSchema = {
  column_id?: number
}

export type ProjectsGetPermissionForUserParamSchema = {
  project_id?: number
  username?: string
}

export type ProjectsListCardsParamSchema = {
  column_id?: number
}

export type ProjectsListCardsQuerySchema = {
  archived_state?: "all" | "archived" | "not_archived"
  page?: number
  per_page?: number
}

export type ProjectsListCollaboratorsParamSchema = {
  project_id?: number
}

export type ProjectsListCollaboratorsQuerySchema = {
  affiliation?: "outside" | "direct" | "all"
  page?: number
  per_page?: number
}

export type ProjectsListColumnsParamSchema = {
  project_id?: number
}

export type ProjectsListColumnsQuerySchema = {
  page?: number
  per_page?: number
}

export type ProjectsListForOrgParamSchema = {
  org?: string
}

export type ProjectsListForOrgQuerySchema = {
  page?: number
  per_page?: number
  state?: "open" | "closed" | "all"
}

export type ProjectsListForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type ProjectsListForRepoQuerySchema = {
  page?: number
  per_page?: number
  state?: "open" | "closed" | "all"
}

export type ProjectsListForUserParamSchema = {
  username?: string
}

export type ProjectsListForUserQuerySchema = {
  page?: number
  per_page?: number
  state?: "open" | "closed" | "all"
}

export type ProjectsMoveCardBodySchema = {
  column_id?: number
  position: string
}

export type ProjectsMoveCardParamSchema = {
  card_id?: number
}

export type ProjectsMoveColumnBodySchema = {
  position: string
}

export type ProjectsMoveColumnParamSchema = {
  column_id?: number
}

export type ProjectsRemoveCollaboratorParamSchema = {
  project_id?: number
  username?: string
}

export type ProjectsUpdateBodySchema = {
  body?: string
  name?: string
  organization_permission?: string
  private?: boolean
  state?: "open" | "closed"
}

export type ProjectsUpdateParamSchema = {
  project_id?: number
}

export type ProjectsUpdateCardBodySchema = {
  archived?: boolean
  note?: string
}

export type ProjectsUpdateCardParamSchema = {
  card_id?: number
}

export type ProjectsUpdateColumnBodySchema = {
  name: string
}

export type ProjectsUpdateColumnParamSchema = {
  column_id?: number
}

export type PullsCheckIfMergedParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
}

export type PullsCreateBodySchema = {
  base: string
  body?: string
  draft?: boolean
  head: string
  maintainer_can_modify?: boolean
  title: string
}

export type PullsCreateParamSchema = {
  owner?: string
  repo?: string
}

export type PullsCreateReplyForReviewCommentBodySchema = {
  body: string
}

export type PullsCreateReplyForReviewCommentParamSchema = {
  comment_id?: number
  owner?: string
  pull_number?: number
  repo?: string
}

export type PullsCreateReviewBodySchema = {
  body?: string
  comments?: {
    body: string
    path: string
    position: number
  }[]
  commit_id?: string
  event?: "APPROVE" | "REQUEST_CHANGES" | "COMMENT"
}

export type PullsCreateReviewParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
}

export type PullsCreateReviewCommentBodySchema = {
  body: string
  commit_id: string
  line?: number
  path: string
  position?: number
  side?: "LEFT" | "RIGHT"
  start_line?: number
  start_side?: "LEFT" | "RIGHT" | "side"
}

export type PullsCreateReviewCommentParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
}

export type PullsDeletePendingReviewParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
  review_id?: number
}

export type PullsDeleteReviewCommentParamSchema = {
  comment_id?: number
  owner?: string
  repo?: string
}

export type PullsDismissReviewBodySchema = {
  message: string
}

export type PullsDismissReviewParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
  review_id?: number
}

export type PullsGetParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
}

export type PullsGetReviewParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
  review_id?: number
}

export type PullsGetReviewCommentParamSchema = {
  comment_id?: number
  owner?: string
  repo?: string
}

export type PullsListParamSchema = {
  owner?: string
  repo?: string
}

export type PullsListQuerySchema = {
  base?: string
  direction?: "asc" | "desc"
  head?: string
  page?: number
  per_page?: number
  sort?: "created" | "updated" | "popularity" | "long-running"
  state?: "open" | "closed" | "all"
}

export type PullsListCommentsForReviewParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
  review_id?: number
}

export type PullsListCommentsForReviewQuerySchema = {
  page?: number
  per_page?: number
}

export type PullsListCommitsParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
}

export type PullsListCommitsQuerySchema = {
  page?: number
  per_page?: number
}

export type PullsListFilesParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
}

export type PullsListFilesQuerySchema = {
  page?: number
  per_page?: number
}

export type PullsListRequestedReviewersParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
}

export type PullsListRequestedReviewersQuerySchema = {
  page?: number
  per_page?: number
}

export type PullsListReviewCommentsParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
}

export type PullsListReviewCommentsQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  since?: string
  sort?: "created" | "updated"
}

export type PullsListReviewCommentsForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type PullsListReviewCommentsForRepoQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  since?: string
  sort?: "created" | "updated"
}

export type PullsListReviewsParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
}

export type PullsListReviewsQuerySchema = {
  page?: number
  per_page?: number
}

export type PullsMergeBodySchema = {
  commit_message?: string
  commit_title?: string
  merge_method?: "merge" | "squash" | "rebase"
  sha?: string
}

export type PullsMergeParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
}

export type PullsRemoveRequestedReviewersBodySchema = {
  reviewers?: string[]
  team_reviewers?: string[]
}

export type PullsRemoveRequestedReviewersParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
}

export type PullsRequestReviewersBodySchema = {
  reviewers?: string[]
  team_reviewers?: string[]
}

export type PullsRequestReviewersParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
}

export type PullsSubmitReviewBodySchema = {
  body?: string
  event: "APPROVE" | "REQUEST_CHANGES" | "COMMENT"
}

export type PullsSubmitReviewParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
  review_id?: number
}

export type PullsUpdateBodySchema = {
  base?: string
  body?: string
  maintainer_can_modify?: boolean
  state?: "open" | "closed"
  title?: string
}

export type PullsUpdateParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
}

export type PullsUpdateBranchBodySchema = {
  expected_head_sha?: string
}

export type PullsUpdateBranchParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
}

export type PullsUpdateReviewBodySchema = {
  body: string
}

export type PullsUpdateReviewParamSchema = {
  owner?: string
  pull_number?: number
  repo?: string
  review_id?: number
}

export type PullsUpdateReviewCommentBodySchema = {
  body: string
}

export type PullsUpdateReviewCommentParamSchema = {
  comment_id?: number
  owner?: string
  repo?: string
}

export type ReactionsCreateForCommitCommentBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type ReactionsCreateForCommitCommentParamSchema = {
  comment_id?: number
  owner?: string
  repo?: string
}

export type ReactionsCreateForIssueBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type ReactionsCreateForIssueParamSchema = {
  issue_number?: number
  owner?: string
  repo?: string
}

export type ReactionsCreateForIssueCommentBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type ReactionsCreateForIssueCommentParamSchema = {
  comment_id?: number
  owner?: string
  repo?: string
}

export type ReactionsCreateForPullRequestReviewCommentBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type ReactionsCreateForPullRequestReviewCommentParamSchema = {
  comment_id?: number
  owner?: string
  repo?: string
}

export type ReactionsCreateForTeamDiscussionCommentInOrgBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type ReactionsCreateForTeamDiscussionCommentInOrgParamSchema = {
  comment_number?: number
  discussion_number?: number
  org?: string
  team_slug?: string
}

export type ReactionsCreateForTeamDiscussionCommentLegacyBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type ReactionsCreateForTeamDiscussionCommentLegacyParamSchema = {
  comment_number?: number
  discussion_number?: number
  team_id?: number
}

export type ReactionsCreateForTeamDiscussionInOrgBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type ReactionsCreateForTeamDiscussionInOrgParamSchema = {
  discussion_number?: number
  org?: string
  team_slug?: string
}

export type ReactionsCreateForTeamDiscussionLegacyBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type ReactionsCreateForTeamDiscussionLegacyParamSchema = {
  discussion_number?: number
  team_id?: number
}

export type ReactionsDeleteForCommitCommentParamSchema = {
  comment_id?: number
  owner?: string
  reaction_id?: number
  repo?: string
}

export type ReactionsDeleteForIssueParamSchema = {
  issue_number?: number
  owner?: string
  reaction_id?: number
  repo?: string
}

export type ReactionsDeleteForIssueCommentParamSchema = {
  comment_id?: number
  owner?: string
  reaction_id?: number
  repo?: string
}

export type ReactionsDeleteForPullRequestCommentParamSchema = {
  comment_id?: number
  owner?: string
  reaction_id?: number
  repo?: string
}

export type ReactionsDeleteForTeamDiscussionParamSchema = {
  discussion_number?: number
  org?: string
  reaction_id?: number
  team_slug?: string
}

export type ReactionsDeleteForTeamDiscussionCommentParamSchema = {
  comment_number?: number
  discussion_number?: number
  org?: string
  reaction_id?: number
  team_slug?: string
}

export type ReactionsDeleteLegacyParamSchema = {
  reaction_id?: number
}

export type ReactionsListForCommitCommentParamSchema = {
  comment_id?: number
  owner?: string
  repo?: string
}

export type ReactionsListForCommitCommentQuerySchema = {
  content?:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
  page?: number
  per_page?: number
}

export type ReactionsListForIssueParamSchema = {
  issue_number?: number
  owner?: string
  repo?: string
}

export type ReactionsListForIssueQuerySchema = {
  content?:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
  page?: number
  per_page?: number
}

export type ReactionsListForIssueCommentParamSchema = {
  comment_id?: number
  owner?: string
  repo?: string
}

export type ReactionsListForIssueCommentQuerySchema = {
  content?:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
  page?: number
  per_page?: number
}

export type ReactionsListForPullRequestReviewCommentParamSchema = {
  comment_id?: number
  owner?: string
  repo?: string
}

export type ReactionsListForPullRequestReviewCommentQuerySchema = {
  content?:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
  page?: number
  per_page?: number
}

export type ReactionsListForTeamDiscussionCommentInOrgParamSchema = {
  comment_number?: number
  discussion_number?: number
  org?: string
  team_slug?: string
}

export type ReactionsListForTeamDiscussionCommentInOrgQuerySchema = {
  content?:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
  page?: number
  per_page?: number
}

export type ReactionsListForTeamDiscussionCommentLegacyParamSchema = {
  comment_number?: number
  discussion_number?: number
  team_id?: number
}

export type ReactionsListForTeamDiscussionCommentLegacyQuerySchema = {
  content?:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
  page?: number
  per_page?: number
}

export type ReactionsListForTeamDiscussionInOrgParamSchema = {
  discussion_number?: number
  org?: string
  team_slug?: string
}

export type ReactionsListForTeamDiscussionInOrgQuerySchema = {
  content?:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
  page?: number
  per_page?: number
}

export type ReactionsListForTeamDiscussionLegacyParamSchema = {
  discussion_number?: number
  team_id?: number
}

export type ReactionsListForTeamDiscussionLegacyQuerySchema = {
  content?:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
  page?: number
  per_page?: number
}

export type ReposAcceptInvitationParamSchema = {
  invitation_id?: number
}

export type ReposAddAppAccessRestrictionsBodySchema = string[]

export type ReposAddAppAccessRestrictionsParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposAddCollaboratorBodySchema = {
  permission?: "pull" | "push" | "admin" | "maintain" | "triage"
}

export type ReposAddCollaboratorParamSchema = {
  owner?: string
  repo?: string
  username?: string
}

export type ReposAddStatusCheckContextsBodySchema = string[]

export type ReposAddStatusCheckContextsParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposAddTeamAccessRestrictionsBodySchema = string[]

export type ReposAddTeamAccessRestrictionsParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposAddUserAccessRestrictionsBodySchema = string[]

export type ReposAddUserAccessRestrictionsParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposCheckCollaboratorParamSchema = {
  owner?: string
  repo?: string
  username?: string
}

export type ReposCheckVulnerabilityAlertsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposCompareCommitsParamSchema = {
  base?: string
  head?: string
  owner?: string
  repo?: string
}

export type ReposCreateCommitCommentBodySchema = {
  body: string
  line?: number
  path?: string
  position?: number
}

export type ReposCreateCommitCommentParamSchema = {
  commit_sha?: string
  owner?: string
  repo?: string
}

export type ReposCreateCommitSignatureProtectionParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposCreateCommitStatusBodySchema = {
  context?: string
  description?: string
  state: "error" | "failure" | "pending" | "success"
  target_url?: string
}

export type ReposCreateCommitStatusParamSchema = {
  owner?: string
  repo?: string
  sha?: string
}

export type ReposCreateDeployKeyBodySchema = {
  key: string
  read_only?: boolean
  title?: string
}

export type ReposCreateDeployKeyParamSchema = {
  owner?: string
  repo?: string
}

export type ReposCreateDeploymentBodySchema = {
  auto_merge?: boolean
  description?: string
  environment?: string
  payload?: string
  production_environment?: boolean
  ref: string
  required_contexts?: string[]
  task?: string
  transient_environment?: boolean
}

export type ReposCreateDeploymentParamSchema = {
  owner?: string
  repo?: string
}

export type ReposCreateDeploymentStatusBodySchema = {
  auto_inactive?: boolean
  description?: string
  environment?: "production" | "staging" | "qa"
  environment_url?: string
  log_url?: string
  state:
    | "error"
    | "failure"
    | "inactive"
    | "in_progress"
    | "queued"
    | "pending"
    | "success"
  target_url?: string
}

export type ReposCreateDeploymentStatusParamSchema = {
  deployment_id?: number
  owner?: string
  repo?: string
}

export type ReposCreateDispatchEventBodySchema = {
  client_payload?: {
    [key: string]: unknown
  }
  event_type?: string
}

export type ReposCreateDispatchEventParamSchema = {
  owner?: string
  repo?: string
}

export type ReposCreateForAuthenticatedUserBodySchema = {
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  auto_init?: boolean
  delete_branch_on_merge?: boolean
  description?: string
  gitignore_template?: string
  has_issues?: boolean
  has_projects?: boolean
  has_wiki?: boolean
  homepage?: string
  is_template?: boolean
  license_template?: string
  name: string
  private?: boolean
  team_id?: number
  visibility?: "public" | "private" | "visibility" | "internal"
}

export type ReposCreateForkBodySchema = {
  organization?: string
}

export type ReposCreateForkParamSchema = {
  owner?: string
  repo?: string
}

export type ReposCreateInOrgBodySchema = {
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  auto_init?: boolean
  delete_branch_on_merge?: boolean
  description?: string
  gitignore_template?: string
  has_issues?: boolean
  has_projects?: boolean
  has_wiki?: boolean
  homepage?: string
  is_template?: boolean
  license_template?: string
  name: string
  private?: boolean
  team_id?: number
  visibility?: "public" | "private" | "visibility" | "internal"
}

export type ReposCreateInOrgParamSchema = {
  org?: string
}

export type ReposCreateOrUpdateFileContentsBodySchema = {
  author?: {
    email: string
    name: string
  }
  branch?: string
  committer?: {
    email: string
    name: string
  }
  content: string
  message: string
  sha?: string
}

export type ReposCreateOrUpdateFileContentsParamSchema = {
  owner?: string
  path?: string
  repo?: string
}

export type ReposCreatePagesSiteBodySchema = {
  source?: {
    branch?: "master" | "gh-pages"
    path?: string
  }
}

export type ReposCreatePagesSiteParamSchema = {
  owner?: string
  repo?: string
}

export type ReposCreateReleaseBodySchema = {
  body?: string
  draft?: boolean
  name?: string
  prerelease?: boolean
  tag_name: string
  target_commitish?: string
}

export type ReposCreateReleaseParamSchema = {
  owner?: string
  repo?: string
}

export type ReposCreateUsingTemplateBodySchema = {
  description?: string
  name: string
  owner?: string
  private?: boolean
}

export type ReposCreateUsingTemplateParamSchema = {
  template_owner?: string
  template_repo?: string
}

export type ReposCreateWebhookBodySchema = {
  active?: boolean
  config: {
    content_type?: string
    insecure_ssl?: string
    secret?: string
    url: string
  }
  events?: string[]
  name?: string
}

export type ReposCreateWebhookParamSchema = {
  owner?: string
  repo?: string
}

export type ReposDeclineInvitationParamSchema = {
  invitation_id?: number
}

export type ReposDeleteParamSchema = {
  owner?: string
  repo?: string
}

export type ReposDeleteAccessRestrictionsParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposDeleteAdminBranchProtectionParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposDeleteBranchProtectionParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposDeleteCommitCommentParamSchema = {
  comment_id?: number
  owner?: string
  repo?: string
}

export type ReposDeleteCommitSignatureProtectionParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposDeleteDeployKeyParamSchema = {
  key_id?: number
  owner?: string
  repo?: string
}

export type ReposDeleteDeploymentParamSchema = {
  deployment_id?: number
  owner?: string
  repo?: string
}

export type ReposDeleteFileBodySchema = {
  author?: {
    email?: string
    name?: string
  }
  branch?: string
  committer?: {
    email?: string
    name?: string
  }
  message: string
  sha: string
}

export type ReposDeleteFileParamSchema = {
  owner?: string
  path?: string
  repo?: string
}

export type ReposDeleteInvitationParamSchema = {
  invitation_id?: number
  owner?: string
  repo?: string
}

export type ReposDeletePagesSiteParamSchema = {
  owner?: string
  repo?: string
}

export type ReposDeletePullRequestReviewProtectionParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposDeleteReleaseParamSchema = {
  owner?: string
  release_id?: number
  repo?: string
}

export type ReposDeleteReleaseAssetParamSchema = {
  asset_id?: number
  owner?: string
  repo?: string
}

export type ReposDeleteWebhookParamSchema = {
  hook_id?: number
  owner?: string
  repo?: string
}

export type ReposDisableAutomatedSecurityFixesParamSchema = {
  owner?: string
  repo?: string
}

export type ReposDisableVulnerabilityAlertsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposDownloadArchiveParamSchema = {
  archive_format?: string
  owner?: string
  ref?: string
  repo?: string
}

export type ReposEnableAutomatedSecurityFixesParamSchema = {
  owner?: string
  repo?: string
}

export type ReposEnableVulnerabilityAlertsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposGetParamSchema = {
  owner?: string
  repo?: string
}

export type ReposGetAccessRestrictionsParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposGetAdminBranchProtectionParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposGetAllStatusCheckContextsParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposGetAllTopicsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposGetAppsWithAccessToProtectedBranchParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposGetBranchParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposGetBranchProtectionParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposGetClonesParamSchema = {
  owner?: string
  repo?: string
}

export type ReposGetClonesQuerySchema = {
  per?: "day" | "week"
}

export type ReposGetCodeFrequencyStatsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposGetCollaboratorPermissionLevelParamSchema = {
  owner?: string
  repo?: string
  username?: string
}

export type ReposGetCombinedStatusForRefParamSchema = {
  owner?: string
  ref?: string
  repo?: string
}

export type ReposGetCommitParamSchema = {
  owner?: string
  ref?: string
  repo?: string
}

export type ReposGetCommitActivityStatsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposGetCommitCommentParamSchema = {
  comment_id?: number
  owner?: string
  repo?: string
}

export type ReposGetCommitSignatureProtectionParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposGetCommunityProfileMetricsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposGetContentParamSchema = {
  owner?: string
  path?: string
  repo?: string
}

export type ReposGetContentQuerySchema = {
  ref?: string
}

export type ReposGetContributorsStatsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposGetDeployKeyParamSchema = {
  key_id?: number
  owner?: string
  repo?: string
}

export type ReposGetDeploymentParamSchema = {
  deployment_id?: number
  owner?: string
  repo?: string
}

export type ReposGetDeploymentStatusParamSchema = {
  deployment_id?: number
  owner?: string
  repo?: string
  status_id?: number
}

export type ReposGetLatestPagesBuildParamSchema = {
  owner?: string
  repo?: string
}

export type ReposGetLatestReleaseParamSchema = {
  owner?: string
  repo?: string
}

export type ReposGetPagesParamSchema = {
  owner?: string
  repo?: string
}

export type ReposGetPagesBuildParamSchema = {
  build_id?: number
  owner?: string
  repo?: string
}

export type ReposGetParticipationStatsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposGetPullRequestReviewProtectionParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposGetPunchCardStatsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposGetReadmeParamSchema = {
  owner?: string
  repo?: string
}

export type ReposGetReadmeQuerySchema = {
  ref?: string
}

export type ReposGetReleaseParamSchema = {
  owner?: string
  release_id?: number
  repo?: string
}

export type ReposGetReleaseAssetParamSchema = {
  asset_id?: number
  owner?: string
  repo?: string
}

export type ReposGetReleaseByTagParamSchema = {
  owner?: string
  repo?: string
  tag?: string
}

export type ReposGetStatusChecksProtectionParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposGetTeamsWithAccessToProtectedBranchParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposGetTopPathsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposGetTopReferrersParamSchema = {
  owner?: string
  repo?: string
}

export type ReposGetUsersWithAccessToProtectedBranchParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposGetViewsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposGetViewsQuerySchema = {
  per?: "day" | "week"
}

export type ReposGetWebhookParamSchema = {
  hook_id?: number
  owner?: string
  repo?: string
}

export type ReposListBranchesParamSchema = {
  owner?: string
  repo?: string
}

export type ReposListBranchesQuerySchema = {
  page?: number
  per_page?: number
  protected?: boolean
}

export type ReposListBranchesForHeadCommitParamSchema = {
  commit_sha?: string
  owner?: string
  repo?: string
}

export type ReposListCollaboratorsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposListCollaboratorsQuerySchema = {
  affiliation?: "outside" | "direct" | "all"
  page?: number
  per_page?: number
}

export type ReposListCommentsForCommitParamSchema = {
  commit_sha?: string
  owner?: string
  repo?: string
}

export type ReposListCommentsForCommitQuerySchema = {
  page?: number
  per_page?: number
}

export type ReposListCommitCommentsForRepoParamSchema = {
  owner?: string
  repo?: string
}

export type ReposListCommitCommentsForRepoQuerySchema = {
  page?: number
  per_page?: number
}

export type ReposListCommitStatusesForRefParamSchema = {
  owner?: string
  ref?: string
  repo?: string
}

export type ReposListCommitStatusesForRefQuerySchema = {
  page?: number
  per_page?: number
}

export type ReposListCommitsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposListCommitsQuerySchema = {
  author?: string
  page?: number
  path?: string
  per_page?: number
  sha?: string
  since?: string
  until?: string
}

export type ReposListContributorsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposListContributorsQuerySchema = {
  anon?: string
  page?: number
  per_page?: number
}

export type ReposListDeployKeysParamSchema = {
  owner?: string
  repo?: string
}

export type ReposListDeployKeysQuerySchema = {
  page?: number
  per_page?: number
}

export type ReposListDeploymentStatusesParamSchema = {
  deployment_id?: number
  owner?: string
  repo?: string
}

export type ReposListDeploymentStatusesQuerySchema = {
  page?: number
  per_page?: number
}

export type ReposListDeploymentsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposListDeploymentsQuerySchema = {
  environment?: string
  page?: number
  per_page?: number
  ref?: string
  sha?: string
  task?: string
}

export type ReposListForAuthenticatedUserQuerySchema = {
  affiliation?: string
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  sort?: "created" | "updated" | "pushed" | "full_name"
  type?: "all" | "owner" | "public" | "private" | "member"
  visibility?: "all" | "public" | "private"
}

export type ReposListForOrgParamSchema = {
  org?: string
}

export type ReposListForOrgQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  sort?: "created" | "updated" | "pushed" | "full_name"
  type?:
    | "all"
    | "public"
    | "private"
    | "forks"
    | "sources"
    | "member"
    | "internal"
}

export type ReposListForUserParamSchema = {
  username?: string
}

export type ReposListForUserQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
  sort?: "created" | "updated" | "pushed" | "full_name"
  type?: "all" | "owner" | "member"
}

export type ReposListForksParamSchema = {
  owner?: string
  repo?: string
}

export type ReposListForksQuerySchema = {
  page?: number
  per_page?: number
  sort?: "newest" | "oldest" | "stargazers"
}

export type ReposListInvitationsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposListInvitationsQuerySchema = {
  page?: number
  per_page?: number
}

export type ReposListInvitationsForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type ReposListLanguagesParamSchema = {
  owner?: string
  repo?: string
}

export type ReposListPagesBuildsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposListPagesBuildsQuerySchema = {
  page?: number
  per_page?: number
}

export type ReposListPublicQuerySchema = {
  since?: number
}

export type ReposListPullRequestsAssociatedWithCommitParamSchema = {
  commit_sha?: string
  owner?: string
  repo?: string
}

export type ReposListPullRequestsAssociatedWithCommitQuerySchema = {
  page?: number
  per_page?: number
}

export type ReposListReleaseAssetsParamSchema = {
  owner?: string
  release_id?: number
  repo?: string
}

export type ReposListReleaseAssetsQuerySchema = {
  page?: number
  per_page?: number
}

export type ReposListReleasesParamSchema = {
  owner?: string
  repo?: string
}

export type ReposListReleasesQuerySchema = {
  page?: number
  per_page?: number
}

export type ReposListTagsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposListTagsQuerySchema = {
  page?: number
  per_page?: number
}

export type ReposListTeamsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposListTeamsQuerySchema = {
  page?: number
  per_page?: number
}

export type ReposListWebhooksParamSchema = {
  owner?: string
  repo?: string
}

export type ReposListWebhooksQuerySchema = {
  page?: number
  per_page?: number
}

export type ReposMergeBodySchema = {
  base: string
  commit_message?: string
  head: string
}

export type ReposMergeParamSchema = {
  owner?: string
  repo?: string
}

export type ReposPingWebhookParamSchema = {
  hook_id?: number
  owner?: string
  repo?: string
}

export type ReposRemoveAppAccessRestrictionsBodySchema = string[]

export type ReposRemoveAppAccessRestrictionsParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposRemoveCollaboratorParamSchema = {
  owner?: string
  repo?: string
  username?: string
}

export type ReposRemoveStatusCheckContextsBodySchema = string[]

export type ReposRemoveStatusCheckContextsParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposRemoveStatusCheckProtectionParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposRemoveTeamAccessRestrictionsBodySchema = string[]

export type ReposRemoveTeamAccessRestrictionsParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposRemoveUserAccessRestrictionsBodySchema = string[]

export type ReposRemoveUserAccessRestrictionsParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposReplaceAllTopicsBodySchema = {
  names: string[]
}

export type ReposReplaceAllTopicsParamSchema = {
  owner?: string
  repo?: string
}

export type ReposRequestPagesBuildParamSchema = {
  owner?: string
  repo?: string
}

export type ReposSetAdminBranchProtectionParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposSetAppAccessRestrictionsBodySchema = string[]

export type ReposSetAppAccessRestrictionsParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposSetStatusCheckContextsBodySchema = string[]

export type ReposSetStatusCheckContextsParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposSetTeamAccessRestrictionsBodySchema = string[]

export type ReposSetTeamAccessRestrictionsParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposSetUserAccessRestrictionsBodySchema = string[]

export type ReposSetUserAccessRestrictionsParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposTestPushWebhookParamSchema = {
  hook_id?: number
  owner?: string
  repo?: string
}

export type ReposTransferBodySchema = {
  new_owner?: string
  team_ids?: number[]
}

export type ReposTransferParamSchema = {
  owner?: string
  repo?: string
}

export type ReposUpdateBodySchema = {
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  archived?: boolean
  default_branch?: string
  delete_branch_on_merge?: boolean
  description?: string
  has_issues?: boolean
  has_projects?: boolean
  has_wiki?: boolean
  homepage?: string
  is_template?: boolean
  name?: string
  private?: boolean
  visibility?: "public" | "private" | "visibility" | "internal"
}

export type ReposUpdateParamSchema = {
  owner?: string
  repo?: string
}

export type ReposUpdateBranchProtectionBodySchema = {
  allow_deletions?: boolean
  allow_force_pushes?: boolean | null
  enforce_admins: boolean | null
  required_linear_history?: boolean
  required_pull_request_reviews: {
    dismiss_stale_reviews?: boolean
    dismissal_restrictions?: {
      teams?: string[]
      users?: string[]
    }
    require_code_owner_reviews?: boolean
    required_approving_review_count?: number
  } | null
  required_status_checks: {
    contexts: string[]
    strict: boolean
  } | null
  restrictions: {
    apps?: string[]
    teams: string[]
    users: string[]
  } | null
}

export type ReposUpdateBranchProtectionParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposUpdateCommitCommentBodySchema = {
  body: string
}

export type ReposUpdateCommitCommentParamSchema = {
  comment_id?: number
  owner?: string
  repo?: string
}

export type ReposUpdateInformationAboutPagesSiteBodySchema = {
  cname?: string
  source?: "gh-pages" | "master" | "master /docs"
}

export type ReposUpdateInformationAboutPagesSiteParamSchema = {
  owner?: string
  repo?: string
}

export type ReposUpdateInvitationBodySchema = {
  permissions?: "read" | "write" | "maintain" | "triage" | "admin"
}

export type ReposUpdateInvitationParamSchema = {
  invitation_id?: number
  owner?: string
  repo?: string
}

export type ReposUpdatePullRequestReviewProtectionBodySchema = {
  dismiss_stale_reviews?: boolean
  dismissal_restrictions?: {
    teams?: string[]
    users?: string[]
  }
  require_code_owner_reviews?: boolean
  required_approving_review_count?: number
}

export type ReposUpdatePullRequestReviewProtectionParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposUpdateReleaseBodySchema = {
  body?: string
  draft?: boolean
  name?: string
  prerelease?: boolean
  tag_name?: string
  target_commitish?: string
}

export type ReposUpdateReleaseParamSchema = {
  owner?: string
  release_id?: number
  repo?: string
}

export type ReposUpdateReleaseAssetBodySchema = {
  label?: string
  name?: string
}

export type ReposUpdateReleaseAssetParamSchema = {
  asset_id?: number
  owner?: string
  repo?: string
}

export type ReposUpdateStatusCheckPotectionBodySchema = {
  contexts?: string[]
  strict?: boolean
}

export type ReposUpdateStatusCheckPotectionParamSchema = {
  branch?: string
  owner?: string
  repo?: string
}

export type ReposUpdateWebhookBodySchema = {
  active?: boolean
  add_events?: string[]
  config?: {
    content_type?: string
    insecure_ssl?: string
    secret?: string
    url: string
  }
  events?: string[]
  remove_events?: string[]
}

export type ReposUpdateWebhookParamSchema = {
  hook_id?: number
  owner?: string
  repo?: string
}

export type ReposUploadReleaseAssetBodySchema = string

export type ReposUploadReleaseAssetParamSchema = {
  owner?: string
  release_id?: number
  repo?: string
}

export type ReposUploadReleaseAssetQuerySchema = {
  label?: string
  name?: string
}

export type ScimDeleteUserFromOrgParamSchema = {
  org?: string
  scim_user_id?: number
}

export type ScimGetProvisioningInformationForUserParamSchema = {
  org?: string
  scim_user_id?: number
}

export type ScimListProvisionedIdentitiesParamSchema = {
  org?: string
}

export type ScimListProvisionedIdentitiesQuerySchema = {
  count?: number
  filter?: string
  startIndex?: number
}

export type ScimProvisionAndInviteUserParamSchema = {
  org?: string
}

export type ScimSetInformationForProvisionedUserParamSchema = {
  org?: string
  scim_user_id?: number
}

export type ScimUpdateAttributeForUserParamSchema = {
  org?: string
  scim_user_id?: number
}

export type SearchCodeQuerySchema = {
  order?: "desc" | "asc"
  page?: number
  per_page?: number
  q?: string
  sort?: "indexed"
}

export type SearchCommitsQuerySchema = {
  order?: "desc" | "asc"
  page?: number
  per_page?: number
  q?: string
  sort?: "author-date" | "committer-date"
}

export type SearchIssuesAndPullRequestsQuerySchema = {
  order?: "desc" | "asc"
  page?: number
  per_page?: number
  q?: string
  sort?:
    | "comments"
    | "reactions"
    | "reactions-+1"
    | "reactions--1"
    | "reactions-smile"
    | "reactions-thinking_face"
    | "reactions-heart"
    | "reactions-tada"
    | "interactions"
    | "created"
    | "updated"
}

export type SearchLabelsQuerySchema = {
  order?: "desc" | "asc"
  q?: string
  repository_id?: number
  sort?: "created" | "updated"
}

export type SearchReposQuerySchema = {
  order?: "desc" | "asc"
  page?: number
  per_page?: number
  q?: string
  sort?: "stars" | "forks" | "help-wanted-issues" | "updated"
}

export type SearchTopicsQuerySchema = {
  q?: string
}

export type SearchUsersQuerySchema = {
  order?: "desc" | "asc"
  page?: number
  per_page?: number
  q?: string
  sort?: "followers" | "repositories" | "joined"
}

export type TeamsAddMemberLegacyParamSchema = {
  team_id?: number
  username?: string
}

export type TeamsAddOrUpdateMembershipForUserInOrgBodySchema = {
  role?: "member" | "maintainer"
}

export type TeamsAddOrUpdateMembershipForUserInOrgParamSchema = {
  org?: string
  team_slug?: string
  username?: string
}

export type TeamsAddOrUpdateMembershipForUserLegacyBodySchema = {
  role?: "member" | "maintainer"
}

export type TeamsAddOrUpdateMembershipForUserLegacyParamSchema = {
  team_id?: number
  username?: string
}

export type TeamsAddOrUpdateProjectPermissionsInOrgBodySchema = {
  permission?: "read" | "write" | "admin"
}

export type TeamsAddOrUpdateProjectPermissionsInOrgParamSchema = {
  org?: string
  project_id?: number
  team_slug?: string
}

export type TeamsAddOrUpdateProjectPermissionsLegacyBodySchema = {
  permission?: "read" | "write" | "admin"
}

export type TeamsAddOrUpdateProjectPermissionsLegacyParamSchema = {
  project_id?: number
  team_id?: number
}

export type TeamsAddOrUpdateRepoPermissionsInOrgBodySchema = {
  permission?: "pull" | "push" | "admin" | "maintain" | "triage"
}

export type TeamsAddOrUpdateRepoPermissionsInOrgParamSchema = {
  org?: string
  owner?: string
  repo?: string
  team_slug?: string
}

export type TeamsAddOrUpdateRepoPermissionsLegacyBodySchema = {
  permission?: "pull" | "push" | "admin"
}

export type TeamsAddOrUpdateRepoPermissionsLegacyParamSchema = {
  owner?: string
  repo?: string
  team_id?: number
}

export type TeamsCheckPermissionsForProjectInOrgParamSchema = {
  org?: string
  project_id?: number
  team_slug?: string
}

export type TeamsCheckPermissionsForProjectLegacyParamSchema = {
  project_id?: number
  team_id?: number
}

export type TeamsCheckPermissionsForRepoInOrgParamSchema = {
  org?: string
  owner?: string
  repo?: string
  team_slug?: string
}

export type TeamsCheckPermissionsForRepoLegacyParamSchema = {
  owner?: string
  repo?: string
  team_id?: number
}

export type TeamsCreateBodySchema = {
  description?: string
  maintainers?: string[]
  name: string
  parent_team_id?: number
  permission?: "pull" | "push" | "admin"
  privacy?: "secret" | "closed"
  repo_names?: string[]
}

export type TeamsCreateParamSchema = {
  org?: string
}

export type TeamsCreateDiscussionCommentInOrgBodySchema = {
  body: string
}

export type TeamsCreateDiscussionCommentInOrgParamSchema = {
  discussion_number?: number
  org?: string
  team_slug?: string
}

export type TeamsCreateDiscussionCommentLegacyBodySchema = {
  body: string
}

export type TeamsCreateDiscussionCommentLegacyParamSchema = {
  discussion_number?: number
  team_id?: number
}

export type TeamsCreateDiscussionInOrgBodySchema = {
  body: string
  private?: boolean
  title: string
}

export type TeamsCreateDiscussionInOrgParamSchema = {
  org?: string
  team_slug?: string
}

export type TeamsCreateDiscussionLegacyBodySchema = {
  body: string
  private?: boolean
  title: string
}

export type TeamsCreateDiscussionLegacyParamSchema = {
  team_id?: number
}

export type TeamsCreateOrUpdateIdPGroupConnectionsInOrgBodySchema = {
  groups: {
    group_description: string
    group_id: string
    group_name: string
  }[]
}

export type TeamsCreateOrUpdateIdPGroupConnectionsInOrgParamSchema = {
  org?: string
  team_slug?: string
}

export type TeamsCreateOrUpdateIdPGroupConnectionsLegacyBodySchema = {
  groups: {
    group_description: string
    group_id: string
    group_name: string
  }[]
}

export type TeamsCreateOrUpdateIdPGroupConnectionsLegacyParamSchema = {
  team_id?: number
}

export type TeamsDeleteDiscussionCommentInOrgParamSchema = {
  comment_number?: number
  discussion_number?: number
  org?: string
  team_slug?: string
}

export type TeamsDeleteDiscussionCommentLegacyParamSchema = {
  comment_number?: number
  discussion_number?: number
  team_id?: number
}

export type TeamsDeleteDiscussionInOrgParamSchema = {
  discussion_number?: number
  org?: string
  team_slug?: string
}

export type TeamsDeleteDiscussionLegacyParamSchema = {
  discussion_number?: number
  team_id?: number
}

export type TeamsDeleteInOrgParamSchema = {
  org?: string
  team_slug?: string
}

export type TeamsDeleteLegacyParamSchema = {
  team_id?: number
}

export type TeamsGetByNameParamSchema = {
  org?: string
  team_slug?: string
}

export type TeamsGetDiscussionCommentInOrgParamSchema = {
  comment_number?: number
  discussion_number?: number
  org?: string
  team_slug?: string
}

export type TeamsGetDiscussionCommentLegacyParamSchema = {
  comment_number?: number
  discussion_number?: number
  team_id?: number
}

export type TeamsGetDiscussionInOrgParamSchema = {
  discussion_number?: number
  org?: string
  team_slug?: string
}

export type TeamsGetDiscussionLegacyParamSchema = {
  discussion_number?: number
  team_id?: number
}

export type TeamsGetLegacyParamSchema = {
  team_id?: number
}

export type TeamsGetMemberLegacyParamSchema = {
  team_id?: number
  username?: string
}

export type TeamsGetMembershipForUserInOrgParamSchema = {
  org?: string
  team_slug?: string
  username?: string
}

export type TeamsGetMembershipForUserLegacyParamSchema = {
  team_id?: number
  username?: string
}

export type TeamsListParamSchema = {
  org?: string
}

export type TeamsListQuerySchema = {
  page?: number
  per_page?: number
}

export type TeamsListChildInOrgParamSchema = {
  org?: string
  team_slug?: string
}

export type TeamsListChildInOrgQuerySchema = {
  page?: number
  per_page?: number
}

export type TeamsListChildLegacyParamSchema = {
  team_id?: number
}

export type TeamsListChildLegacyQuerySchema = {
  page?: number
  per_page?: number
}

export type TeamsListDiscussionCommentsInOrgParamSchema = {
  discussion_number?: number
  org?: string
  team_slug?: string
}

export type TeamsListDiscussionCommentsInOrgQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
}

export type TeamsListDiscussionCommentsLegacyParamSchema = {
  discussion_number?: number
  team_id?: number
}

export type TeamsListDiscussionCommentsLegacyQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
}

export type TeamsListDiscussionsInOrgParamSchema = {
  org?: string
  team_slug?: string
}

export type TeamsListDiscussionsInOrgQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
}

export type TeamsListDiscussionsLegacyParamSchema = {
  team_id?: number
}

export type TeamsListDiscussionsLegacyQuerySchema = {
  direction?: "asc" | "desc"
  page?: number
  per_page?: number
}

export type TeamsListForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type TeamsListIdPGroupsForLegacyParamSchema = {
  team_id?: number
}

export type TeamsListIdPGroupsForOrgParamSchema = {
  org?: string
}

export type TeamsListIdPGroupsForOrgQuerySchema = {
  page?: number
  per_page?: number
}

export type TeamsListIdPGroupsInOrgParamSchema = {
  org?: string
  team_slug?: string
}

export type TeamsListMembersInOrgParamSchema = {
  org?: string
  team_slug?: string
}

export type TeamsListMembersInOrgQuerySchema = {
  page?: number
  per_page?: number
  role?: "member" | "maintainer" | "all"
}

export type TeamsListMembersLegacyParamSchema = {
  team_id?: number
}

export type TeamsListMembersLegacyQuerySchema = {
  page?: number
  per_page?: number
  role?: "member" | "maintainer" | "all"
}

export type TeamsListPendingInvitationsInOrgParamSchema = {
  org?: string
  team_slug?: string
}

export type TeamsListPendingInvitationsInOrgQuerySchema = {
  page?: number
  per_page?: number
}

export type TeamsListPendingInvitationsLegacyParamSchema = {
  team_id?: number
}

export type TeamsListPendingInvitationsLegacyQuerySchema = {
  page?: number
  per_page?: number
}

export type TeamsListProjectsInOrgParamSchema = {
  org?: string
  team_slug?: string
}

export type TeamsListProjectsInOrgQuerySchema = {
  page?: number
  per_page?: number
}

export type TeamsListProjectsLegacyParamSchema = {
  team_id?: number
}

export type TeamsListProjectsLegacyQuerySchema = {
  page?: number
  per_page?: number
}

export type TeamsListReposInOrgParamSchema = {
  org?: string
  team_slug?: string
}

export type TeamsListReposInOrgQuerySchema = {
  page?: number
  per_page?: number
}

export type TeamsListReposLegacyParamSchema = {
  team_id?: number
}

export type TeamsListReposLegacyQuerySchema = {
  page?: number
  per_page?: number
}

export type TeamsRemoveMemberLegacyParamSchema = {
  team_id?: number
  username?: string
}

export type TeamsRemoveMembershipForUserInOrgParamSchema = {
  org?: string
  team_slug?: string
  username?: string
}

export type TeamsRemoveMembershipForUserLegacyParamSchema = {
  team_id?: number
  username?: string
}

export type TeamsRemoveProjectInOrgParamSchema = {
  org?: string
  project_id?: number
  team_slug?: string
}

export type TeamsRemoveProjectLegacyParamSchema = {
  project_id?: number
  team_id?: number
}

export type TeamsRemoveRepoInOrgParamSchema = {
  org?: string
  owner?: string
  repo?: string
  team_slug?: string
}

export type TeamsRemoveRepoLegacyParamSchema = {
  owner?: string
  repo?: string
  team_id?: number
}

export type TeamsUpdateDiscussionCommentInOrgBodySchema = {
  body: string
}

export type TeamsUpdateDiscussionCommentInOrgParamSchema = {
  comment_number?: number
  discussion_number?: number
  org?: string
  team_slug?: string
}

export type TeamsUpdateDiscussionCommentLegacyBodySchema = {
  body: string
}

export type TeamsUpdateDiscussionCommentLegacyParamSchema = {
  comment_number?: number
  discussion_number?: number
  team_id?: number
}

export type TeamsUpdateDiscussionInOrgBodySchema = {
  body?: string
  title?: string
}

export type TeamsUpdateDiscussionInOrgParamSchema = {
  discussion_number?: number
  org?: string
  team_slug?: string
}

export type TeamsUpdateDiscussionLegacyBodySchema = {
  body?: string
  title?: string
}

export type TeamsUpdateDiscussionLegacyParamSchema = {
  discussion_number?: number
  team_id?: number
}

export type TeamsUpdateInOrgBodySchema = {
  description?: string
  name: string
  parent_team_id?: number
  permission?: "pull" | "push" | "admin"
  privacy?: "secret" | "closed"
}

export type TeamsUpdateInOrgParamSchema = {
  org?: string
  team_slug?: string
}

export type TeamsUpdateLegacyBodySchema = {
  description?: string
  name: string
  parent_team_id?: number
  permission?: "pull" | "push" | "admin"
  privacy?: "secret" | "closed"
}

export type TeamsUpdateLegacyParamSchema = {
  team_id?: number
}

export type UsersAddEmailForAuthenticatedBodySchema = {
  emails: string[]
}

export type UsersBlockParamSchema = {
  username?: string
}

export type UsersCheckBlockedParamSchema = {
  username?: string
}

export type UsersCheckFollowingForUserParamSchema = {
  target_user?: string
  username?: string
}

export type UsersCheckPersonIsFollowedByAuthenticatedParamSchema = {
  username?: string
}

export type UsersCreateGpgKeyForAuthenticatedBodySchema = {
  armored_public_key?: string
}

export type UsersCreatePublicSshKeyForAuthenticatedBodySchema = {
  key?: string
  title?: string
}

export type UsersDeleteEmailForAuthenticatedBodySchema = {
  emails: string[]
}

export type UsersDeleteGpgKeyForAuthenticatedParamSchema = {
  gpg_key_id?: number
}

export type UsersDeletePublicSshKeyForAuthenticatedParamSchema = {
  key_id?: number
}

export type UsersFollowParamSchema = {
  username?: string
}

export type UsersGetByUsernameParamSchema = {
  username?: string
}

export type UsersGetContextForUserParamSchema = {
  username?: string
}

export type UsersGetContextForUserQuerySchema = {
  subject_id?: string
  subject_type?: "organization" | "repository" | "issue" | "pull_request"
}

export type UsersGetGpgKeyForAuthenticatedParamSchema = {
  gpg_key_id?: number
}

export type UsersGetPublicSshKeyForAuthenticatedParamSchema = {
  key_id?: number
}

export type UsersListQuerySchema = {
  since?: string
}

export type UsersListEmailsForAuthenticatedQuerySchema = {
  page?: number
  per_page?: number
}

export type UsersListFollowedByAuthenticatedQuerySchema = {
  page?: number
  per_page?: number
}

export type UsersListFollowersForAuthenticatedUserQuerySchema = {
  page?: number
  per_page?: number
}

export type UsersListFollowersForUserParamSchema = {
  username?: string
}

export type UsersListFollowersForUserQuerySchema = {
  page?: number
  per_page?: number
}

export type UsersListFollowingForUserParamSchema = {
  username?: string
}

export type UsersListFollowingForUserQuerySchema = {
  page?: number
  per_page?: number
}

export type UsersListGpgKeysForAuthenticatedQuerySchema = {
  page?: number
  per_page?: number
}

export type UsersListGpgKeysForUserParamSchema = {
  username?: string
}

export type UsersListGpgKeysForUserQuerySchema = {
  page?: number
  per_page?: number
}

export type UsersListPublicEmailsForAuthenticatedQuerySchema = {
  page?: number
  per_page?: number
}

export type UsersListPublicKeysForUserParamSchema = {
  username?: string
}

export type UsersListPublicKeysForUserQuerySchema = {
  page?: number
  per_page?: number
}

export type UsersListPublicSshKeysForAuthenticatedQuerySchema = {
  page?: number
  per_page?: number
}

export type UsersSetPrimaryEmailVisibilityForAuthenticatedBodySchema = {
  email: string
  visibility: string
}

export type UsersUnblockParamSchema = {
  username?: string
}

export type UsersUnfollowParamSchema = {
  username?: string
}

export type UsersUpdateAuthenticatedBodySchema = {
  bio?: string
  blog?: string
  company?: string
  email?: string
  hireable?: boolean
  location?: string
  name?: string
  twitter_username?: string
}
