/** AUTOGENERATED - DO NOT EDIT **/
/* tslint:disable */
/* eslint-disable */

import {
  t_Azure_ResourceManager_ErrorResponse,
  t_Azure_ResourceManager_Foundations_ErrorDetail,
} from "./models"
import { z } from "zod"

export const PermissiveBoolean = z.preprocess((value) => {
  if (typeof value === "string" && (value === "true" || value === "false")) {
    return value === "true"
  } else if (typeof value === "number" && (value === 1 || value === 0)) {
    return value === 1
  }
  return value
}, z.boolean())

export const s_ActionType = z.union([z.enum(["Internal"]), z.string()])

export const s_Azure_ResourceManager_Foundations_ErrorAdditionalInfo = z.object(
  { type: z.string().optional(), info: z.object({}).optional() },
)

export const s_Azure_ResourceManager_Foundations_OperationDisplay = z.object({
  provider: z.string().optional(),
  resource: z.string().optional(),
  operation: z.string().optional(),
  description: z.string().optional(),
})

export const s_EmployeeUpdateProperties = z.object({
  age: z.coerce.number().optional(),
  city: z.string().optional(),
  profile: z.string().optional(),
})

export const s_MoveRequest = z.object({ from: z.string(), to: z.string() })

export const s_MoveResponse = z.object({ movingStatus: z.string() })

export const s_Origin = z.union([
  z.enum(["user", "system", "user,system"]),
  z.string(),
])

export const s_createdByType = z.union([
  z.enum(["User", "Application", "ManagedIdentity", "Key"]),
  z.string(),
])

export const s_Azure_ResourceManager_Foundations_Operation = z.object({
  name: z.string().optional(),
  isDataAction: PermissiveBoolean.optional(),
  display: s_Azure_ResourceManager_Foundations_OperationDisplay.optional(),
  origin: s_Origin.optional(),
  actionType: s_ActionType.optional(),
})

export const s_Azure_ResourceManager_Foundations_SystemData = z.object({
  createdBy: z.string().optional(),
  createdByType: s_createdByType.optional(),
  createdAt: z.string().optional(),
  lastModifiedBy: z.string().optional(),
  lastModifiedByType: s_createdByType.optional(),
  lastModifiedAt: z.string().optional(),
})

export const s_EmployeeUpdate = z.object({
  tags: z.record(z.string()).optional(),
  properties: s_EmployeeUpdateProperties.optional(),
})

export const s_Azure_ResourceManager_Foundations_Resource = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  type: z.string().optional(),
  systemData: s_Azure_ResourceManager_Foundations_SystemData.optional(),
})

export const s_PagedOperation = z.object({
  value: z.array(s_Azure_ResourceManager_Foundations_Operation),
  nextLink: z.string().optional(),
})

export const s_Azure_ResourceManager_Foundations_TrackedResource =
  s_Azure_ResourceManager_Foundations_Resource

export const s_Employee = s_Azure_ResourceManager_Foundations_TrackedResource

export const s_EmployeeListResult = z.object({
  value: z.array(s_Employee),
  nextLink: z.string().optional(),
})

export const s_Azure_ResourceManager_ErrorResponse: z.ZodType<
  t_Azure_ResourceManager_ErrorResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.lazy(() =>
    s_Azure_ResourceManager_Foundations_ErrorDetail.optional(),
  ),
})

export const s_Azure_ResourceManager_Foundations_ErrorDetail: z.ZodType<
  t_Azure_ResourceManager_Foundations_ErrorDetail,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
  target: z.string().optional(),
  details: z
    .array(z.lazy(() => s_Azure_ResourceManager_Foundations_ErrorDetail))
    .optional(),
  additionalInfo: z
    .array(s_Azure_ResourceManager_Foundations_ErrorAdditionalInfo)
    .optional(),
})
