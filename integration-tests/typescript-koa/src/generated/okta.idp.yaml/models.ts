/** AUTOGENERATED - DO NOT EDIT **/
/* tslint:disable */
/* eslint-disable */

export type EmptyObject = { [key: string]: never }

export type t_AppAuthenticatorEnrollment = {
  readonly authenticatorId?: string
  readonly createdDate?: string
  readonly device?: {
    clientInstanceId?: string
    createdDate?: string
    id?: string
    lastUpdated?: string
    status?: "ACTIVE"
  }
  readonly id?: string
  readonly lastUpdated?: string
  readonly links?: {
    self?: {
      hints?: {
        allow?: ("PATCH" | "DELETE")[]
      }
      href?: string
    }
  }
  methods?: {
    push?: {
      createdDate?: string
      id?: string
      lastUpdated?: string
      links?: {
        pending?: {
          hints?: {
            allow?: "GET"[]
          }
          href?: string
        }
      }
    }
  }
  readonly user?: {
    id?: string
    username?: string
  }
}

export type t_AppAuthenticatorMethodCapabilities = {
  transactionTypes?: ("LOGIN" | "CIBA")[]
}

export type t_Authenticator = {
  readonly _embedded?: {
    enrollments?: t_AuthenticatorEnrollment[]
  }
  readonly _links?: {
    enrollments?: t_HrefObject
    self?: t_HrefObject
  }
  readonly enrollable?: boolean
  readonly id?: string
  key?: t_AuthenticatorKey
  readonly name?: string
}

export type t_AuthenticatorEnrollment = {
  readonly _links?: {
    authenticator?: t_HrefObject
    self?: t_HrefObject
  }
  readonly canReset?: boolean
  readonly canUnenroll?: boolean
  readonly created?: string
  readonly id?: string
  readonly lastChallenged?: string
  name?: string
  readonly profile?: EmptyObject
}

export type t_AuthenticatorKey =
  | "custom_app"
  | "custom_otp"
  | "duo"
  | "external_idp"
  | "google_otp"
  | "okta_email"
  | "okta_password"
  | "okta_verify"
  | "onprem_mfa"
  | "phone_number"
  | "rsa_token"
  | "security_question"
  | "symantec_vip"
  | "webauthn"
  | "yubikey_token"

export type t_Email = {
  _links?: {
    challenge?: {
      hints?: {
        allow?: ("DELETE" | "GET" | "POST" | "PUT")[]
      }
      href?: string
    }
    poll?: {
      hints?: {
        allow?: ("DELETE" | "GET" | "POST" | "PUT")[]
      }
      href?: string
    }
    self?: {
      hints?: {
        allow?: ("GET" | "DELETE" | "PUT")[]
      }
      href?: string
    }
    verify?: {
      hints?: {
        allow?: ("DELETE" | "GET" | "POST" | "PUT")[]
      }
      href?: string
    }
  }
  readonly id: string
  profile: {
    email: string
  }
  roles: ("PRIMARY" | "SECONDARY")[]
  readonly status: "VERIFIED" | "UNVERIFIED"
}

export type t_Error = {
  errorCauses?: {
    readonly errorSummary?: string
  }[]
  readonly errorCode?: string
  readonly errorId?: string
  readonly errorLink?: string
  readonly errorSummary?: string
}

export type t_HrefObject = {
  hints?: {
    allow?: t_HttpMethod[]
  }
  href: string
  name?: string
  type?: string
}

export type t_HttpMethod = "DELETE" | "GET" | "POST" | "PUT"

export type t_KeyEC = {
  crv: "P-256"
  kid: string
  kty: "EC"
  "okta:kpr": "HARDWARE" | "SOFTWARE"
  x: string
  y: string
}

export type t_KeyObject = t_KeyEC | t_KeyRSA

export type t_KeyRSA = {
  e: string
  kid: string
  kty: "RSA"
  n: string
  "okta:kpr": "HARDWARE" | "SOFTWARE"
}

export type t_OktaApplication = {
  readonly displayName?: string
  readonly id?: string
  readonly name?: string
}

export type t_Organization = {
  _links?: {
    self?: {
      hints?: {
        allow?: "GET"[]
      }
      href?: string
    }
  }
  readonly helpLink?: string
  readonly name?: string
  readonly supportEmail?: string
  readonly url?: string
}

export type t_PasswordResponse = {
  _links?: {
    self?: {
      hints?: {
        allow?: ("DELETE" | "GET" | "PUT")[]
      }
      href?: string
    }
  }
  created?: string
  readonly id?: string
  lastUpdated?: string
  status?: string
}

export type t_Phone = {
  _links?: {
    challenge?: {
      hints?: {
        allow?: ("DELETE" | "GET" | "POST" | "PUT")[]
      }
      href?: string
    }
    self?: {
      hints?: {
        allow?: ("GET" | "DELETE" | "PUT")[]
      }
      href?: string
    }
    verify?: {
      hints?: {
        allow?: ("DELETE" | "GET" | "POST" | "PUT")[]
      }
      href?: string
    }
  }
  readonly id: string
  profile: {
    phoneNumber: string
  }
  readonly status: "VERIFIED" | "UNVERIFIED"
}

export type t_Profile = {
  _links?: {
    describedBy?: {
      readonly href?: string
    }
    self?: {
      readonly href?: string
    }
  }
  readonly createdAt?: string
  readonly modifiedAt?: string
  profile?: EmptyObject
}

export type t_PushNotificationChallenge = {
  challenge?: string
  payloadVersion?: "IDXv1"
}

export type t_Schema = {
  _links?: {
    self?: {
      readonly href?: string
    }
    user?: {
      readonly href?: string
    }
  }
  readonly properties?: EmptyObject
}

export type t_CreateAppAuthenticatorEnrollmentBodySchema = {
  authenticatorId: string
  device: {
    clientInstanceBundleId: string
    clientInstanceDeviceSdkVersion: string
    clientInstanceKey: t_KeyObject
    clientInstanceVersion: string
    deviceAttestation?: {
      [key: string]: unknown | undefined
    }
    displayName: string
    manufacturer?: string
    model?: string
    osVersion: string
    platform: "ANDROID" | "IOS"
    secureHardwarePresent?: boolean
    udid?: string
  }
  methods: {
    push: {
      apsEnvironment?: "PRODUCTION" | "DEVELOPMENT"
      keys: {
        capabilities?: t_AppAuthenticatorMethodCapabilities
        proofOfPossession: t_KeyObject
        userVerification?: t_KeyObject
      }
      pushToken: string
    }
  }
}

export type t_CreateEmailBodySchema = {
  profile: {
    email: string
  }
  role?: "PRIMARY" | "SECONDARY"
  sendEmail?: boolean
  state?: string
}

export type t_CreatePasswordBodySchema = {
  profile: {
    password: string
  }
}

export type t_CreatePhoneBodySchema = {
  method?: "SMS" | "CALL"
  profile: {
    phoneNumber?: string
  }
  sendCode?: boolean
}

export type t_DeleteAppAuthenticatorEnrollmentParamSchema = {
  enrollmentId: string
}

export type t_DeleteEmailParamSchema = {
  id: string
}

export type t_DeletePhoneParamSchema = {
  id: string
}

export type t_GetAuthenticatorParamSchema = {
  authenticatorId: string
}

export type t_GetAuthenticatorQuerySchema = {
  expand?: string
}

export type t_GetEmailParamSchema = {
  id: string
}

export type t_GetEnrollmentParamSchema = {
  authenticatorId: string
  enrollmentId: string
}

export type t_GetPhoneParamSchema = {
  id: string
}

export type t_ListAppAuthenticatorPendingPushNotificationChallengesParamSchema =
  {
    enrollmentId: string
  }

export type t_ListAuthenticatorsQuerySchema = {
  expand?: string
}

export type t_ListEnrollmentsParamSchema = {
  authenticatorId: string
}

export type t_PollChallengeForEmailMagicLinkParamSchema = {
  challengeId: string
  id: string
}

export type t_ReplacePasswordBodySchema = {
  profile: {
    password: string
  }
}

export type t_ReplaceProfileBodySchema = {
  profile?: EmptyObject
}

export type t_SendEmailChallengeBodySchema = {
  state: string
}

export type t_SendEmailChallengeParamSchema = {
  id: string
}

export type t_SendPhoneChallengeBodySchema = {
  method: "SMS" | "CALL"
  retry?: boolean
}

export type t_SendPhoneChallengeParamSchema = {
  id: string
}

export type t_UpdateAppAuthenticatorEnrollmentBodySchema = {
  methods?: {
    push?: {
      capabilities?: t_AppAuthenticatorMethodCapabilities
      keys?: {
        userVerification?: t_KeyObject
      }
      pushToken?: string
    }
  }
}

export type t_UpdateAppAuthenticatorEnrollmentParamSchema = {
  enrollmentId: string
}

export type t_VerifyAppAuthenticatorPushNotificationChallengeBodySchema = {
  challengeResponse?: string
  method?: "push"
}

export type t_VerifyAppAuthenticatorPushNotificationChallengeParamSchema = {
  challengeId: string
}

export type t_VerifyEmailOtpBodySchema = {
  verificationCode: string
}

export type t_VerifyEmailOtpParamSchema = {
  challengeId: string
  id: string
}

export type t_VerifyPhoneChallengeBodySchema = {
  verificationCode: string
}

export type t_VerifyPhoneChallengeParamSchema = {
  id: string
}
