/** AUTOGENERATED - DO NOT EDIT **/
/* tslint:disable */
/* eslint-disable */

import { z } from "zod"

export const PermissiveBoolean = z.preprocess((value) => {
  if (typeof value === "string" && (value === "true" || value === "false")) {
    return value === "true"
  } else if (typeof value === "number" && (value === 1 || value === 0)) {
    return value === 1
  }
  return value
}, z.boolean())

export const s_Booking = z.object({
  id: z.string().optional(),
  trip_id: z.string().optional(),
  passenger_name: z.string().optional(),
  has_bicycle: PermissiveBoolean.optional(),
  has_dog: PermissiveBoolean.optional(),
})

export const s_BookingPayment = z.object({
  id: z.string().optional(),
  amount: z.coerce.number().gt(0).optional(),
  currency: z
    .enum(["bam", "bgn", "chf", "eur", "gbp", "nok", "sek", "try"])
    .optional(),
  source: z
    .union([
      z.object({
        object: z.string().optional(),
        name: z.string(),
        number: z.string(),
        cvc: z.coerce.number(),
        exp_month: z.coerce.number(),
        exp_year: z.coerce.number(),
        address_line1: z.string().optional(),
        address_line2: z.string().optional(),
        address_city: z.string().optional(),
        address_country: z.string(),
        address_post_code: z.string().optional(),
      }),
      z.object({
        object: z.string().optional(),
        name: z.string(),
        number: z.string(),
        sort_code: z.string().optional(),
        account_type: z.enum(["individual", "company"]),
        bank_name: z.string(),
        country: z.string(),
      }),
    ])
    .optional(),
  status: z.enum(["pending", "succeeded", "failed"]).optional(),
})

export const s_Links_Booking = z.object({ booking: z.string().optional() })

export const s_Links_Pagination = z.object({
  next: z.string().optional(),
  prev: z.string().optional(),
})

export const s_Links_Self = z.object({ self: z.string().optional() })

export const s_Problem = z.object({
  type: z.string().optional(),
  title: z.string().optional(),
  detail: z.string().optional(),
  instance: z.string().optional(),
  status: z.coerce.number().optional(),
})

export const s_Station = z.object({
  id: z.string(),
  name: z.string(),
  address: z.string(),
  country_code: z.string(),
  timezone: z.string().optional(),
})

export const s_Trip = z.object({
  id: z.string().optional(),
  origin: z.string().optional(),
  destination: z.string().optional(),
  departure_time: z.string().datetime({ offset: true }).optional(),
  arrival_time: z.string().datetime({ offset: true }).optional(),
  operator: z.string().optional(),
  price: z.coerce.number().optional(),
  bicycles_allowed: PermissiveBoolean.optional(),
  dogs_allowed: PermissiveBoolean.optional(),
})

export const s_Wrapper_Collection = z.object({
  data: z.array(z.record(z.unknown())).optional(),
  links: z.object({}).optional(),
})
