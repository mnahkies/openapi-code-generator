/** AUTOGENERATED - DO NOT EDIT **/
/* tslint:disable */
/* eslint-disable */

export type t_actions_billing_usage = {
  included_minutes: number
  minutes_used_breakdown: {
    MACOS?: number
    UBUNTU?: number
    WINDOWS?: number
    macos_12_core?: number
    total?: number
    ubuntu_16_core?: number
    ubuntu_32_core?: number
    ubuntu_4_core?: number
    ubuntu_64_core?: number
    ubuntu_8_core?: number
    windows_16_core?: number
    windows_32_core?: number
    windows_4_core?: number
    windows_64_core?: number
    windows_8_core?: number
  }
  total_minutes_used: number
  total_paid_minutes_used: number
}

export type t_actions_cache_list = {
  actions_caches: {
    created_at?: string
    id?: number
    key?: string
    last_accessed_at?: string
    ref?: string
    size_in_bytes?: number
    version?: string
  }[]
  total_count: number
}

export type t_actions_cache_usage_by_repository = {
  active_caches_count: number
  active_caches_size_in_bytes: number
  full_name: string
}

export type t_actions_cache_usage_org_enterprise = {
  total_active_caches_count: number
  total_active_caches_size_in_bytes: number
}

export type t_actions_can_approve_pull_request_reviews = boolean

export type t_actions_default_workflow_permissions = "read" | "write"

export type t_actions_enabled = boolean

export type t_actions_get_default_workflow_permissions = {
  can_approve_pull_request_reviews: t_actions_can_approve_pull_request_reviews
  default_workflow_permissions: t_actions_default_workflow_permissions
}

export type t_actions_organization_permissions = {
  allowed_actions?: t_allowed_actions
  enabled_repositories: t_enabled_repositories
  selected_actions_url?: t_selected_actions_url
  selected_repositories_url?: string
}

export type t_actions_public_key = {
  created_at?: string
  id?: number
  key: string
  key_id: string
  title?: string
  url?: string
}

export type t_actions_repository_permissions = {
  allowed_actions?: t_allowed_actions
  enabled: t_actions_enabled
  selected_actions_url?: t_selected_actions_url
}

export type t_actions_secret = {
  created_at: string
  name: string
  updated_at: string
}

export type t_actions_set_default_workflow_permissions = {
  can_approve_pull_request_reviews?: t_actions_can_approve_pull_request_reviews
  default_workflow_permissions?: t_actions_default_workflow_permissions
}

export type t_actions_variable = {
  created_at: string
  name: string
  updated_at: string
  value: string
}

export type t_actions_workflow_access_to_repository = {
  access_level: "none" | "user" | "organization" | "enterprise"
}

export type t_actor = {
  avatar_url: string
  display_login?: string
  gravatar_id: string | null
  id: number
  login: string
  url: string
}

export type t_alert_created_at = string

export type t_alert_dismissed_at = string | null

export type t_alert_fixed_at = string | null

export type t_alert_html_url = string

export type t_alert_instances_url = string

export type t_alert_number = number

export type t_alert_updated_at = string

export type t_alert_url = string

export type t_allowed_actions = "all" | "local_only" | "selected"

export type t_api_overview = {
  actions?: string[]
  api?: string[]
  dependabot?: string[]
  git?: string[]
  hooks?: string[]
  importer?: string[]
  packages?: string[]
  pages?: string[]
  ssh_key_fingerprints?: {
    SHA256_DSA?: string
    SHA256_ECDSA?: string
    SHA256_ED25519?: string
    SHA256_RSA?: string
  }
  ssh_keys?: string[]
  verifiable_password_authentication: boolean
  web?: string[]
}

export type t_app_permissions = {
  actions?: "read" | "write"
  administration?: "read" | "write"
  checks?: "read" | "write"
  contents?: "read" | "write"
  deployments?: "read" | "write"
  environments?: "read" | "write"
  issues?: "read" | "write"
  members?: "read" | "write"
  metadata?: "read" | "write"
  organization_administration?: "read" | "write"
  organization_announcement_banners?: "read" | "write"
  organization_custom_roles?: "read" | "write"
  organization_hooks?: "read" | "write"
  organization_packages?: "read" | "write"
  organization_plan?: "read"
  organization_projects?: "read" | "write" | "admin"
  organization_secrets?: "read" | "write"
  organization_self_hosted_runners?: "read" | "write"
  organization_user_blocking?: "read" | "write"
  packages?: "read" | "write"
  pages?: "read" | "write"
  pull_requests?: "read" | "write"
  repository_announcement_banners?: "read" | "write"
  repository_hooks?: "read" | "write"
  repository_projects?: "read" | "write" | "admin"
  secret_scanning_alerts?: "read" | "write"
  secrets?: "read" | "write"
  security_events?: "read" | "write"
  single_file?: "read" | "write"
  statuses?: "read" | "write"
  team_discussions?: "read" | "write"
  vulnerability_alerts?: "read" | "write"
  workflows?: "write"
}

export type t_artifact = {
  archive_download_url: string
  created_at: string | null
  expired: boolean
  expires_at: string | null
  id: number
  name: string
  node_id: string
  size_in_bytes: number
  updated_at: string | null
  url: string
  workflow_run?: {
    head_branch?: string
    head_repository_id?: number
    head_sha?: string
    id?: number
    repository_id?: number
  } | null | null
}

export type t_authentication_token = {
  expires_at: string
  permissions?: {
    [key: string]: unknown
  }
  repositories?: t_repository[]
  repository_selection?: "all" | "selected"
  single_file?: string | null
  token: string
}

export type t_author_association =
  | "COLLABORATOR"
  | "CONTRIBUTOR"
  | "FIRST_TIMER"
  | "FIRST_TIME_CONTRIBUTOR"
  | "MANNEQUIN"
  | "MEMBER"
  | "NONE"
  | "OWNER"

export type t_authorization = {
  app: {
    client_id: string
    name: string
    url: string
  }
  created_at: string
  expires_at: string | null
  fingerprint: string | null
  hashed_token: string | null
  id: number
  installation?: t_nullable_scoped_installation
  note: string | null
  note_url: string | null
  scopes: string[] | null
  token: string
  token_last_eight: string | null
  updated_at: string
  url: string
  user?: t_nullable_simple_user
}

export type t_auto_merge = {
  commit_message: string
  commit_title: string
  enabled_by: t_simple_user
  merge_method: "merge" | "squash" | "rebase"
} | null

export type t_autolink = {
  id: number
  is_alphanumeric: boolean
  key_prefix: string
  url_template: string
}

export type t_base_gist = {
  comments: number
  comments_url: string
  commits_url: string
  created_at: string
  description: string | null
  files: {
    [key: string]: unknown
  }
  forks?: {
    [key: string]: unknown
  }[]
  forks_url: string
  git_pull_url: string
  git_push_url: string
  history?: {
    [key: string]: unknown
  }[]
  html_url: string
  id: string
  node_id: string
  owner?: t_simple_user
  public: boolean
  truncated?: boolean
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_basic_error = {
  documentation_url?: string
  message?: string
  status?: string
  url?: string
}

export type t_blob = {
  content: string
  encoding: string
  highlighted_content?: string
  node_id: string
  sha: string
  size: number | null
  url: string
}

export type t_branch_protection = {
  allow_deletions?: {
    enabled?: boolean
  }
  allow_force_pushes?: {
    enabled?: boolean
  }
  allow_fork_syncing?: {
    enabled?: boolean
  }
  block_creations?: {
    enabled?: boolean
  }
  enabled?: boolean
  enforce_admins?: t_protected_branch_admin_enforced
  lock_branch?: {
    enabled?: boolean
  }
  name?: string
  protection_url?: string
  required_conversation_resolution?: {
    enabled?: boolean
  }
  required_linear_history?: {
    enabled?: boolean
  }
  required_pull_request_reviews?: t_protected_branch_pull_request_review
  required_signatures?: {
    enabled: boolean
    url: string
  }
  required_status_checks?: t_protected_branch_required_status_check
  restrictions?: t_branch_restriction_policy
  url?: string
}

export type t_branch_restriction_policy = {
  apps: {
    created_at?: string
    description?: string
    events?: string[]
    external_url?: string
    html_url?: string
    id?: number
    name?: string
    node_id?: string
    owner?: {
      avatar_url?: string
      description?: string
      events_url?: string
      followers_url?: string
      following_url?: string
      gists_url?: string
      gravatar_id?: string
      hooks_url?: string
      html_url?: string
      id?: number
      issues_url?: string
      login?: string
      members_url?: string
      node_id?: string
      organizations_url?: string
      public_members_url?: string
      received_events_url?: string
      repos_url?: string
      site_admin?: boolean
      starred_url?: string
      subscriptions_url?: string
      type?: string
      url?: string
    }
    permissions?: {
      contents?: string
      issues?: string
      metadata?: string
      single_file?: string
    }
    slug?: string
    updated_at?: string
  }[]
  apps_url: string
  teams: {
    description?: string | null
    html_url?: string
    id?: number
    members_url?: string
    name?: string
    node_id?: string
    parent?: string | null
    permission?: string
    privacy?: string
    repositories_url?: string
    slug?: string
    url?: string
  }[]
  teams_url: string
  url: string
  users: {
    avatar_url?: string
    events_url?: string
    followers_url?: string
    following_url?: string
    gists_url?: string
    gravatar_id?: string
    html_url?: string
    id?: number
    login?: string
    node_id?: string
    organizations_url?: string
    received_events_url?: string
    repos_url?: string
    site_admin?: boolean
    starred_url?: string
    subscriptions_url?: string
    type?: string
    url?: string
  }[]
  users_url: string
}

export type t_branch_short = {
  commit: {
    sha: string
    url: string
  }
  name: string
  protected: boolean
}

export type t_branch_with_protection = {
  _links: {
    html: string
    self: string
  }
  commit: t_commit
  name: string
  pattern?: string
  protected: boolean
  protection: t_branch_protection
  protection_url: string
  required_approving_review_count?: number
}

export type t_check_annotation = {
  annotation_level: string | null
  blob_href: string
  end_column: number | null
  end_line: number
  message: string | null
  path: string
  raw_details: string | null
  start_column: number | null
  start_line: number
  title: string | null
}

export type t_check_run = {
  app: t_nullable_integration
  check_suite: {
    id: number
  } | null | null
  completed_at: string | null
  conclusion:
    | "success"
    | "failure"
    | "neutral"
    | "cancelled"
    | "skipped"
    | "timed_out"
    | "action_required"
    | null
  deployment?: t_deployment_simple
  details_url: string | null
  external_id: string | null
  head_sha: string
  html_url: string | null
  id: number
  name: string
  node_id: string
  output: {
    annotations_count: number
    annotations_url: string
    summary: string | null
    text: string | null
    title: string | null
  }
  pull_requests: t_pull_request_minimal[]
  started_at: string | null
  status: "queued" | "in_progress" | "completed"
  url: string
}

export type t_check_suite = {
  after: string | null
  app: t_nullable_integration
  before: string | null
  check_runs_url: string
  conclusion:
    | "success"
    | "failure"
    | "neutral"
    | "cancelled"
    | "skipped"
    | "timed_out"
    | "action_required"
    | "startup_failure"
    | "stale"
    | "null"
    | null
  created_at: string | null
  head_branch: string | null
  head_commit: t_simple_commit
  head_sha: string
  id: number
  latest_check_runs_count: number
  node_id: string
  pull_requests: t_pull_request_minimal[] | null
  repository: t_minimal_repository
  rerequestable?: boolean
  runs_rerequestable?: boolean
  status: "queued" | "in_progress" | "completed" | null
  updated_at: string | null
  url: string | null
}

export type t_check_suite_preference = {
  preferences: {
    auto_trigger_checks?: {
      app_id: number
      setting: boolean
    }[]
  }
  repository: t_minimal_repository
}

export type t_clone_traffic = {
  clones: t_traffic[]
  count: number
  uniques: number
}

export type t_code_frequency_stat = number[]

export type t_code_of_conduct = {
  body?: string
  html_url: string | null
  key: string
  name: string
  url: string
}

export type t_code_of_conduct_simple = {
  html_url: string | null
  key: string
  name: string
  url: string
}

export type t_code_scanning_alert = {
  created_at: t_alert_created_at
  dismissed_at: t_alert_dismissed_at
  dismissed_by: t_nullable_simple_user
  dismissed_comment?: t_code_scanning_alert_dismissed_comment
  dismissed_reason: t_code_scanning_alert_dismissed_reason
  fixed_at?: t_alert_fixed_at
  html_url: t_alert_html_url
  instances_url: t_alert_instances_url
  most_recent_instance: t_code_scanning_alert_instance
  number: t_alert_number
  rule: t_code_scanning_alert_rule
  state: t_code_scanning_alert_state
  tool: t_code_scanning_analysis_tool
  updated_at?: t_alert_updated_at
  url: t_alert_url
}

export type t_code_scanning_alert_classification =
  | "source"
  | "generated"
  | "test"
  | "library"
  | null

export type t_code_scanning_alert_dismissed_comment = string | null

export type t_code_scanning_alert_dismissed_reason =
  | "null"
  | "false positive"
  | "won't fix"
  | "used in tests"
  | null

export type t_code_scanning_alert_environment = string

export type t_code_scanning_alert_instance = {
  analysis_key?: t_code_scanning_analysis_analysis_key
  category?: t_code_scanning_analysis_category
  classifications?: t_code_scanning_alert_classification[]
  commit_sha?: string
  environment?: t_code_scanning_alert_environment
  html_url?: string
  location?: t_code_scanning_alert_location
  message?: {
    text?: string
  }
  ref?: t_code_scanning_ref
  state?: t_code_scanning_alert_state
}

export type t_code_scanning_alert_items = {
  created_at: t_alert_created_at
  dismissed_at: t_alert_dismissed_at
  dismissed_by: t_nullable_simple_user
  dismissed_comment?: t_code_scanning_alert_dismissed_comment
  dismissed_reason: t_code_scanning_alert_dismissed_reason
  fixed_at?: t_alert_fixed_at
  html_url: t_alert_html_url
  instances_url: t_alert_instances_url
  most_recent_instance: t_code_scanning_alert_instance
  number: t_alert_number
  rule: t_code_scanning_alert_rule_summary
  state: t_code_scanning_alert_state
  tool: t_code_scanning_analysis_tool
  updated_at?: t_alert_updated_at
  url: t_alert_url
}

export type t_code_scanning_alert_location = {
  end_column?: number
  end_line?: number
  path?: string
  start_column?: number
  start_line?: number
}

export type t_code_scanning_alert_rule = {
  description?: string
  full_description?: string
  help?: string | null
  help_uri?: string | null
  id?: string | null
  name?: string
  security_severity_level?: "low" | "medium" | "high" | "critical" | null
  severity?: "none" | "note" | "warning" | "error" | null
  tags?: string[] | null
}

export type t_code_scanning_alert_rule_summary = {
  description?: string
  id?: string | null
  name?: string
  severity?: "none" | "note" | "warning" | "error" | null
  tags?: string[] | null
}

export type t_code_scanning_alert_set_state = "open" | "dismissed"

export type t_code_scanning_alert_severity =
  | "critical"
  | "high"
  | "medium"
  | "low"
  | "warning"
  | "note"
  | "error"

export type t_code_scanning_alert_state =
  | "open"
  | "closed"
  | "dismissed"
  | "fixed"

export type t_code_scanning_analysis = {
  analysis_key: t_code_scanning_analysis_analysis_key
  category?: t_code_scanning_analysis_category
  commit_sha: t_code_scanning_analysis_commit_sha
  created_at: t_code_scanning_analysis_created_at
  deletable: boolean
  environment: t_code_scanning_analysis_environment
  error: string
  id: number
  ref: t_code_scanning_ref
  results_count: number
  rules_count: number
  sarif_id: t_code_scanning_analysis_sarif_id
  tool: t_code_scanning_analysis_tool
  url: t_code_scanning_analysis_url
  warning: string
}

export type t_code_scanning_analysis_analysis_key = string

export type t_code_scanning_analysis_category = string

export type t_code_scanning_analysis_commit_sha = string

export type t_code_scanning_analysis_created_at = string

export type t_code_scanning_analysis_deletion = {
  readonly confirm_delete_url: string | null
  readonly next_analysis_url: string | null
}

export type t_code_scanning_analysis_environment = string

export type t_code_scanning_analysis_sarif_file = string

export type t_code_scanning_analysis_sarif_id = string

export type t_code_scanning_analysis_tool = {
  guid?: t_code_scanning_analysis_tool_guid
  name?: t_code_scanning_analysis_tool_name
  version?: t_code_scanning_analysis_tool_version
}

export type t_code_scanning_analysis_tool_guid = string | null

export type t_code_scanning_analysis_tool_name = string

export type t_code_scanning_analysis_tool_version = string | null

export type t_code_scanning_analysis_url = string

export type t_code_scanning_codeql_database = {
  content_type: string
  created_at: string
  id: number
  language: string
  name: string
  size: number
  updated_at: string
  uploader: t_simple_user
  url: string
}

export type t_code_scanning_organization_alert_items = {
  created_at: t_alert_created_at
  dismissed_at: t_alert_dismissed_at
  dismissed_by: t_nullable_simple_user
  dismissed_comment?: t_code_scanning_alert_dismissed_comment
  dismissed_reason: t_code_scanning_alert_dismissed_reason
  fixed_at?: t_alert_fixed_at
  html_url: t_alert_html_url
  instances_url: t_alert_instances_url
  most_recent_instance: t_code_scanning_alert_instance
  number: t_alert_number
  repository: t_simple_repository
  rule: t_code_scanning_alert_rule
  state: t_code_scanning_alert_state
  tool: t_code_scanning_analysis_tool
  updated_at?: t_alert_updated_at
  url: t_alert_url
}

export type t_code_scanning_ref = string

export type t_code_scanning_sarifs_receipt = {
  id?: t_code_scanning_analysis_sarif_id
  readonly url?: string
}

export type t_code_scanning_sarifs_status = {
  readonly analyses_url?: string | null
  readonly errors?: string[] | null
  processing_status?: "pending" | "complete" | "failed"
}

export type t_code_search_result_item = {
  file_size?: number
  git_url: string
  html_url: string
  language?: string | null
  last_modified_at?: string
  line_numbers?: string[]
  name: string
  path: string
  repository: t_minimal_repository
  score: number
  sha: string
  text_matches?: t_search_result_text_matches
  url: string
}

export type t_codeowners_errors = {
  errors: {
    column: number
    kind: string
    line: number
    message: string
    path: string
    source?: string
    suggestion?: string | null
  }[]
}

export type t_codespace = {
  billable_owner: t_simple_user
  created_at: string
  devcontainer_path?: string | null
  display_name?: string | null
  environment_id: string | null
  git_status: {
    ahead?: number
    behind?: number
    has_uncommitted_changes?: boolean
    has_unpushed_changes?: boolean
    ref?: string
  }
  id: number
  idle_timeout_minutes: number | null
  idle_timeout_notice?: string | null
  last_known_stop_notice?: string | null
  last_used_at: string
  location: "EastUs" | "SouthEastAsia" | "WestEurope" | "WestUs2"
  machine: t_nullable_codespace_machine
  machines_url: string
  name: string
  owner: t_simple_user
  pending_operation?: boolean | null
  pending_operation_disabled_reason?: string | null
  prebuild: boolean | null
  publish_url?: string | null
  pulls_url: string | null
  recent_folders: string[]
  repository: t_minimal_repository
  retention_expires_at?: string | null
  retention_period_minutes?: number | null
  runtime_constraints?: {
    allowed_port_privacy_settings?: string[] | null
  }
  start_url: string
  state:
    | "Unknown"
    | "Created"
    | "Queued"
    | "Provisioning"
    | "Available"
    | "Awaiting"
    | "Unavailable"
    | "Deleted"
    | "Moved"
    | "Shutdown"
    | "Archived"
    | "Starting"
    | "ShuttingDown"
    | "Failed"
    | "Exporting"
    | "Updating"
    | "Rebuilding"
  stop_url: string
  updated_at: string
  url: string
  web_url: string
}

export type t_codespace_export_details = {
  branch?: string | null
  completed_at?: string | null
  export_url?: string
  html_url?: string | null
  id?: string
  sha?: string | null
  state?: string | null
}

export type t_codespace_machine = {
  cpus: number
  display_name: string
  memory_in_bytes: number
  name: string
  operating_system: string
  prebuild_availability: "none" | "ready" | "in_progress" | null
  storage_in_bytes: number
}

export type t_codespace_with_full_repository = {
  billable_owner: t_simple_user
  created_at: string
  devcontainer_path?: string | null
  display_name?: string | null
  environment_id: string | null
  git_status: {
    ahead?: number
    behind?: number
    has_uncommitted_changes?: boolean
    has_unpushed_changes?: boolean
    ref?: string
  }
  id: number
  idle_timeout_minutes: number | null
  idle_timeout_notice?: string | null
  last_used_at: string
  location: "EastUs" | "SouthEastAsia" | "WestEurope" | "WestUs2"
  machine: t_nullable_codespace_machine
  machines_url: string
  name: string
  owner: t_simple_user
  pending_operation?: boolean | null
  pending_operation_disabled_reason?: string | null
  prebuild: boolean | null
  publish_url?: string | null
  pulls_url: string | null
  recent_folders: string[]
  repository: t_full_repository
  retention_expires_at?: string | null
  retention_period_minutes?: number | null
  runtime_constraints?: {
    allowed_port_privacy_settings?: string[] | null
  }
  start_url: string
  state:
    | "Unknown"
    | "Created"
    | "Queued"
    | "Provisioning"
    | "Available"
    | "Awaiting"
    | "Unavailable"
    | "Deleted"
    | "Moved"
    | "Shutdown"
    | "Archived"
    | "Starting"
    | "ShuttingDown"
    | "Failed"
    | "Exporting"
    | "Updating"
    | "Rebuilding"
  stop_url: string
  updated_at: string
  url: string
  web_url: string
}

export type t_codespaces_org_secret = {
  created_at: string
  name: string
  selected_repositories_url?: string
  updated_at: string
  visibility: "all" | "private" | "selected"
}

export type t_codespaces_public_key = {
  created_at?: string
  id?: number
  key: string
  key_id: string
  title?: string
  url?: string
}

export type t_codespaces_secret = {
  created_at: string
  name: string
  selected_repositories_url: string
  updated_at: string
  visibility: "all" | "private" | "selected"
}

export type t_codespaces_user_public_key = {
  key: string
  key_id: string
}

export type t_collaborator = {
  avatar_url: string
  email?: string | null
  events_url: string
  followers_url: string
  following_url: string
  gists_url: string
  gravatar_id: string | null
  html_url: string
  id: number
  login: string
  name?: string | null
  node_id: string
  organizations_url: string
  permissions?: {
    admin: boolean
    maintain?: boolean
    pull: boolean
    push: boolean
    triage?: boolean
  }
  received_events_url: string
  repos_url: string
  role_name: string
  site_admin: boolean
  starred_url: string
  subscriptions_url: string
  type: string
  url: string
}

export type t_combined_billing_usage = {
  days_left_in_billing_cycle: number
  estimated_paid_storage_for_month: number
  estimated_storage_for_month: number
}

export type t_combined_commit_status = {
  commit_url: string
  repository: t_minimal_repository
  sha: string
  state: string
  statuses: t_simple_commit_status[]
  total_count: number
  url: string
}

export type t_commit = {
  author: t_nullable_simple_user
  comments_url: string
  commit: {
    author: t_nullable_git_user
    comment_count: number
    committer: t_nullable_git_user
    message: string
    tree: {
      sha: string
      url: string
    }
    url: string
    verification?: t_verification
  }
  committer: t_nullable_simple_user
  files?: t_diff_entry[]
  html_url: string
  node_id: string
  parents: {
    html_url?: string
    sha: string
    url: string
  }[]
  sha: string
  stats?: {
    additions?: number
    deletions?: number
    total?: number
  }
  url: string
}

export type t_commit_activity = {
  days: number[]
  total: number
  week: number
}

export type t_commit_comment = {
  author_association: t_author_association
  body: string
  commit_id: string
  created_at: string
  html_url: string
  id: number
  line: number | null
  node_id: string
  path: string | null
  position: number | null
  reactions?: t_reaction_rollup
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_commit_comparison = {
  ahead_by: number
  base_commit: t_commit
  behind_by: number
  commits: t_commit[]
  diff_url: string
  files?: t_diff_entry[]
  html_url: string
  merge_base_commit: t_commit
  patch_url: string
  permalink_url: string
  status: "diverged" | "ahead" | "behind" | "identical"
  total_commits: number
  url: string
}

export type t_commit_search_result_item = {
  author: t_nullable_simple_user
  comments_url: string
  commit: {
    author: {
      date: string
      email: string
      name: string
    }
    comment_count: number
    committer: t_nullable_git_user
    message: string
    tree: {
      sha: string
      url: string
    }
    url: string
    verification?: t_verification
  }
  committer: t_nullable_git_user
  html_url: string
  node_id: string
  parents: {
    html_url?: string
    sha?: string
    url?: string
  }[]
  repository: t_minimal_repository
  score: number
  sha: string
  text_matches?: t_search_result_text_matches
  url: string
}

export type t_community_profile = {
  content_reports_enabled?: boolean
  description: string | null
  documentation: string | null
  files: {
    code_of_conduct: t_nullable_code_of_conduct_simple
    code_of_conduct_file: t_nullable_community_health_file
    contributing: t_nullable_community_health_file
    issue_template: t_nullable_community_health_file
    license: t_nullable_license_simple
    pull_request_template: t_nullable_community_health_file
    readme: t_nullable_community_health_file
  }
  health_percentage: number
  updated_at: string | null
}

export type t_content_directory = {
  _links: {
    git: string | null
    html: string | null
    self: string
  }
  content?: string
  download_url: string | null
  git_url: string | null
  html_url: string | null
  name: string
  path: string
  sha: string
  size: number
  type: "dir" | "file" | "submodule" | "symlink"
  url: string
}[]

export type t_content_file = {
  _links: {
    git: string | null
    html: string | null
    self: string
  }
  content: string
  download_url: string | null
  encoding: string
  git_url: string | null
  html_url: string | null
  name: string
  path: string
  sha: string
  size: number
  submodule_git_url?: string
  target?: string
  type: "file"
  url: string
}

export type t_content_submodule = {
  _links: {
    git: string | null
    html: string | null
    self: string
  }
  download_url: string | null
  git_url: string | null
  html_url: string | null
  name: string
  path: string
  sha: string
  size: number
  submodule_git_url: string
  type: "submodule"
  url: string
}

export type t_content_symlink = {
  _links: {
    git: string | null
    html: string | null
    self: string
  }
  download_url: string | null
  git_url: string | null
  html_url: string | null
  name: string
  path: string
  sha: string
  size: number
  target: string
  type: "symlink"
  url: string
}

export type t_content_traffic = {
  count: number
  path: string
  title: string
  uniques: number
}

export type t_contributor = {
  avatar_url?: string
  contributions: number
  email?: string
  events_url?: string
  followers_url?: string
  following_url?: string
  gists_url?: string
  gravatar_id?: string | null
  html_url?: string
  id?: number
  login?: string
  name?: string
  node_id?: string
  organizations_url?: string
  received_events_url?: string
  repos_url?: string
  site_admin?: boolean
  starred_url?: string
  subscriptions_url?: string
  type: string
  url?: string
}

export type t_contributor_activity = {
  author: t_nullable_simple_user
  total: number
  weeks: {
    a?: number
    c?: number
    d?: number
    w?: number
  }[]
}

export type t_dependabot_alert = {
  created_at: t_alert_created_at
  readonly dependency: {
    readonly manifest_path?: string
    package?: t_dependabot_alert_package
    readonly scope?: "development" | "runtime" | null
  }
  dismissed_at: t_alert_dismissed_at
  dismissed_by: t_nullable_simple_user
  dismissed_comment: string | null
  dismissed_reason:
    | "fix_started"
    | "inaccurate"
    | "no_bandwidth"
    | "not_used"
    | "tolerable_risk"
    | null
  fixed_at: t_alert_fixed_at
  html_url: t_alert_html_url
  number: t_alert_number
  security_advisory: t_dependabot_alert_security_advisory
  security_vulnerability: t_dependabot_alert_security_vulnerability
  readonly state: "dismissed" | "fixed" | "open"
  updated_at: t_alert_updated_at
  url: t_alert_url
}

export type t_dependabot_alert_package = {
  readonly ecosystem: string
  readonly name: string
}

export type t_dependabot_alert_security_advisory = {
  readonly cve_id: string | null
  readonly cvss: {
    readonly score: number
    readonly vector_string: string | null
  }
  readonly cwes: {
    readonly cwe_id: string
    readonly name: string
  }[]
  readonly description: string
  readonly ghsa_id: string
  readonly identifiers: {
    readonly type: "CVE" | "GHSA"
    readonly value: string
  }[]
  readonly published_at: string
  readonly references: {
    readonly url: string
  }[]
  readonly severity: "low" | "medium" | "high" | "critical"
  readonly summary: string
  readonly updated_at: string
  readonly vulnerabilities: t_dependabot_alert_security_vulnerability[]
  readonly withdrawn_at: string | null
}

export type t_dependabot_alert_security_vulnerability = {
  readonly first_patched_version: {
    readonly identifier: string
  } | null | null
  package: t_dependabot_alert_package
  readonly severity: "low" | "medium" | "high" | "critical"
  readonly vulnerable_version_range: string
}

export type t_dependabot_alert_with_repository = {
  created_at: t_alert_created_at
  readonly dependency: {
    readonly manifest_path?: string
    package?: t_dependabot_alert_package
    readonly scope?: "development" | "runtime" | null
  }
  dismissed_at: t_alert_dismissed_at
  dismissed_by: t_nullable_simple_user
  dismissed_comment: string | null
  dismissed_reason:
    | "fix_started"
    | "inaccurate"
    | "no_bandwidth"
    | "not_used"
    | "tolerable_risk"
    | null
  fixed_at: t_alert_fixed_at
  html_url: t_alert_html_url
  number: t_alert_number
  repository: t_simple_repository
  security_advisory: t_dependabot_alert_security_advisory
  security_vulnerability: t_dependabot_alert_security_vulnerability
  readonly state: "dismissed" | "fixed" | "open"
  updated_at: t_alert_updated_at
  url: t_alert_url
}

export type t_dependabot_public_key = {
  key: string
  key_id: string
}

export type t_dependabot_secret = {
  created_at: string
  name: string
  updated_at: string
}

export type t_dependency_graph_diff = {
  change_type: "added" | "removed"
  ecosystem: string
  license: string | null
  manifest: string
  name: string
  package_url: string | null
  scope: "unknown" | "runtime" | "development"
  source_repository_url: string | null
  version: string
  vulnerabilities: {
    advisory_ghsa_id: string
    advisory_summary: string
    advisory_url: string
    severity: string
  }[]
}[]

export type t_deploy_key = {
  added_by?: string | null
  created_at: string
  id: number
  key: string
  last_used?: string | null
  read_only: boolean
  title: string
  url: string
  verified: boolean
}

export type t_deployment = {
  created_at: string
  creator: t_nullable_simple_user
  description: string | null
  environment: string
  id: number
  node_id: string
  original_environment?: string
  payload:
    | {
        [key: string]: unknown
      }
    | string
  performed_via_github_app?: t_nullable_integration
  production_environment?: boolean
  ref: string
  repository_url: string
  sha: string
  statuses_url: string
  task: string
  transient_environment?: boolean
  updated_at: string
  url: string
}

export type t_deployment_branch_policy = {
  id?: number
  name?: string
  node_id?: string
}

export type t_deployment_branch_policy_name_pattern = {
  name: string
}

export type t_deployment_branch_policy_settings = {
  custom_branch_policies: boolean
  protected_branches: boolean
} | null

export type t_deployment_reviewer_type = "User" | "Team"

export type t_deployment_simple = {
  created_at: string
  description: string | null
  environment: string
  id: number
  node_id: string
  original_environment?: string
  performed_via_github_app?: t_nullable_integration
  production_environment?: boolean
  repository_url: string
  statuses_url: string
  task: string
  transient_environment?: boolean
  updated_at: string
  url: string
}

export type t_deployment_status = {
  created_at: string
  creator: t_nullable_simple_user
  deployment_url: string
  description: string
  environment?: string
  environment_url?: string
  id: number
  log_url?: string
  node_id: string
  performed_via_github_app?: t_nullable_integration
  repository_url: string
  state:
    | "error"
    | "failure"
    | "inactive"
    | "pending"
    | "success"
    | "queued"
    | "in_progress"
  target_url: string
  updated_at: string
  url: string
}

export type t_diff_entry = {
  additions: number
  blob_url: string
  changes: number
  contents_url: string
  deletions: number
  filename: string
  patch?: string
  previous_filename?: string
  raw_url: string
  sha: string
  status:
    | "added"
    | "removed"
    | "modified"
    | "renamed"
    | "copied"
    | "changed"
    | "unchanged"
}

export type t_email = {
  email: string
  primary: boolean
  verified: boolean
  visibility: string | null
}

export type t_empty_object = {
  [key: string]: unknown
}

export type t_enabled_repositories = "all" | "none" | "selected"

export type t_enterprise_security_analysis_settings = {
  advanced_security_enabled_for_new_repositories: boolean
  secret_scanning_enabled_for_new_repositories: boolean
  secret_scanning_push_protection_custom_link?: string | null
  secret_scanning_push_protection_enabled_for_new_repositories: boolean
}

export type t_environment = {
  created_at: string
  deployment_branch_policy?: t_deployment_branch_policy_settings
  html_url: string
  id: number
  name: string
  node_id: string
  protection_rules?: {
    [key: string]: unknown
  }[]
  updated_at: string
  url: string
}

export type t_environment_approvals = {
  comment: string
  environments: {
    created_at?: string
    html_url?: string
    id?: number
    name?: string
    node_id?: string
    updated_at?: string
    url?: string
  }[]
  state: "approved" | "rejected"
  user: t_simple_user
}

export type t_event = {
  actor: t_actor
  created_at: string | null
  id: string
  org?: t_actor
  payload: {
    action?: string
    comment?: t_issue_comment
    issue?: t_issue
    pages?: {
      action?: string
      html_url?: string
      page_name?: string
      sha?: string
      summary?: string | null
      title?: string
    }[]
  }
  public: boolean
  repo: {
    id: number
    name: string
    url: string
  }
  type: string | null
}

export type t_feed = {
  _links: {
    current_user?: t_link_with_type
    current_user_actor?: t_link_with_type
    current_user_organization?: t_link_with_type
    current_user_organizations?: t_link_with_type[]
    current_user_public?: t_link_with_type
    repository_discussions?: t_link_with_type
    repository_discussions_category?: t_link_with_type
    security_advisories?: t_link_with_type
    timeline: t_link_with_type
    user: t_link_with_type
  }
  current_user_actor_url?: string
  current_user_organization_url?: string
  current_user_organization_urls?: string[]
  current_user_public_url?: string
  current_user_url?: string
  repository_discussions_category_url?: string
  repository_discussions_url?: string
  security_advisories_url?: string
  timeline_url: string
  user_url: string
}

export type t_file_commit = {
  commit: {
    author?: {
      date?: string
      email?: string
      name?: string
    }
    committer?: {
      date?: string
      email?: string
      name?: string
    }
    html_url?: string
    message?: string
    node_id?: string
    parents?: {
      html_url?: string
      sha?: string
      url?: string
    }[]
    sha?: string
    tree?: {
      sha?: string
      url?: string
    }
    url?: string
    verification?: {
      payload?: string | null
      reason?: string
      signature?: string | null
      verified?: boolean
    }
  }
  content: {
    _links?: {
      git?: string
      html?: string
      self?: string
    }
    download_url?: string
    git_url?: string
    html_url?: string
    name?: string
    path?: string
    sha?: string
    size?: number
    type?: string
    url?: string
  } | null | null
}

export type t_full_repository = {
  allow_auto_merge?: boolean
  allow_forking?: boolean
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  allow_update_branch?: boolean
  anonymous_access_enabled?: boolean
  archive_url: string
  archived: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url: string
  code_of_conduct?: t_code_of_conduct_simple
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at: string
  default_branch: string
  delete_branch_on_merge?: boolean
  deployments_url: string
  description: string | null
  disabled: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks: number
  forks_count: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url: string
  has_discussions: boolean
  has_downloads: boolean
  has_issues: boolean
  has_pages: boolean
  has_projects: boolean
  has_wiki: boolean
  homepage: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language: string | null
  languages_url: string
  license: t_nullable_license_simple
  master_branch?: string
  merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK"
  merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE"
  merges_url: string
  milestones_url: string
  mirror_url: string | null
  name: string
  network_count: number
  node_id: string
  notifications_url: string
  open_issues: number
  open_issues_count: number
  organization?: t_nullable_simple_user
  owner: t_simple_user
  parent?: t_repository
  permissions?: {
    admin: boolean
    maintain?: boolean
    pull: boolean
    push: boolean
    triage?: boolean
  }
  private: boolean
  pulls_url: string
  pushed_at: string
  releases_url: string
  security_and_analysis?: t_security_and_analysis
  size: number
  source?: t_repository
  squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK"
  squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE"
  ssh_url: string
  stargazers_count: number
  stargazers_url: string
  statuses_url: string
  subscribers_count: number
  subscribers_url: string
  subscription_url: string
  svn_url: string
  tags_url: string
  teams_url: string
  temp_clone_token?: string | null
  template_repository?: t_nullable_repository
  topics?: string[]
  trees_url: string
  updated_at: string
  url: string
  use_squash_pr_title_as_default?: boolean
  visibility?: string
  watchers: number
  watchers_count: number
  web_commit_signoff_required?: boolean
}

export type t_gist_comment = {
  author_association: t_author_association
  body: string
  created_at: string
  id: number
  node_id: string
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_gist_commit = {
  change_status: {
    additions?: number
    deletions?: number
    total?: number
  }
  committed_at: string
  url: string
  user: t_nullable_simple_user
  version: string
}

export type t_gist_history = {
  change_status?: {
    additions?: number
    deletions?: number
    total?: number
  }
  committed_at?: string
  url?: string
  user?: t_nullable_simple_user
  version?: string
}

export type t_gist_simple = {
  comments?: number
  comments_url?: string
  commits_url?: string
  created_at?: string
  description?: string | null
  files?: {
    [key: string]: unknown
  }
  fork_of?: {
    comments: number
    comments_url: string
    commits_url: string
    created_at: string
    description: string | null
    files: {
      [key: string]: unknown
    }
    forks?: {
      [key: string]: unknown
    }[]
    forks_url: string
    git_pull_url: string
    git_push_url: string
    history?: {
      [key: string]: unknown
    }[]
    html_url: string
    id: string
    node_id: string
    owner?: t_nullable_simple_user
    public: boolean
    truncated?: boolean
    updated_at: string
    url: string
    user: t_nullable_simple_user
  } | null | null
  forks?:
    | {
        created_at?: string
        id?: string
        updated_at?: string
        url?: string
        user?: t_public_user
      }[]
    | null
  forks_url?: string
  git_pull_url?: string
  git_push_url?: string
  history?: t_gist_history[] | null
  html_url?: string
  id?: string
  node_id?: string
  owner?: t_simple_user
  public?: boolean
  truncated?: boolean
  updated_at?: string
  url?: string
  user?: string | null
}

export type t_git_commit = {
  author: {
    date: string
    email: string
    name: string
  }
  committer: {
    date: string
    email: string
    name: string
  }
  html_url: string
  message: string
  node_id: string
  parents: {
    html_url: string
    sha: string
    url: string
  }[]
  sha: string
  tree: {
    sha: string
    url: string
  }
  url: string
  verification: {
    payload: string | null
    reason: string
    signature: string | null
    verified: boolean
  }
}

export type t_git_ref = {
  node_id: string
  object: {
    sha: string
    type: string
    url: string
  }
  ref: string
  url: string
}

export type t_git_tag = {
  message: string
  node_id: string
  object: {
    sha: string
    type: string
    url: string
  }
  sha: string
  tag: string
  tagger: {
    date: string
    email: string
    name: string
  }
  url: string
  verification?: t_verification
}

export type t_git_tree = {
  sha: string
  tree: {
    mode?: string
    path?: string
    sha?: string
    size?: number
    type?: string
    url?: string
  }[]
  truncated: boolean
  url: string
}

export type t_gitignore_template = {
  name: string
  source: string
}

export type t_gpg_key = {
  can_certify: boolean
  can_encrypt_comms: boolean
  can_encrypt_storage: boolean
  can_sign: boolean
  created_at: string
  emails: {
    email?: string
    verified?: boolean
  }[]
  expires_at: string | null
  id: number
  key_id: string
  name?: string | null
  primary_key_id: number | null
  public_key: string
  raw_key: string | null
  revoked: boolean
  subkeys: {
    can_certify?: boolean
    can_encrypt_comms?: boolean
    can_encrypt_storage?: boolean
    can_sign?: boolean
    created_at?: string
    emails?: {
      [key: string]: unknown
    }[]
    expires_at?: string | null
    id?: number
    key_id?: string
    primary_key_id?: number
    public_key?: string
    raw_key?: string | null
    revoked?: boolean
    subkeys?: {
      [key: string]: unknown
    }[]
  }[]
}

export type t_hook = {
  active: boolean
  config: {
    content_type?: t_webhook_config_content_type
    digest?: string
    email?: string
    insecure_ssl?: t_webhook_config_insecure_ssl
    password?: string
    room?: string
    secret?: t_webhook_config_secret
    subdomain?: string
    token?: string
    url?: t_webhook_config_url
  }
  created_at: string
  deliveries_url?: string
  events: string[]
  id: number
  last_response: t_hook_response
  name: string
  ping_url: string
  test_url: string
  type: string
  updated_at: string
  url: string
}

export type t_hook_delivery = {
  action: string | null
  delivered_at: string
  duration: number
  event: string
  guid: string
  id: number
  installation_id: number | null
  redelivery: boolean
  repository_id: number | null
  request: {
    headers: {
      [key: string]: unknown
    } | null | null
    payload: {
      [key: string]: unknown
    } | null | null
  }
  response: {
    headers: {
      [key: string]: unknown
    } | null | null
    payload: string | null
  }
  status: string
  status_code: number
  url?: string
}

export type t_hook_delivery_item = {
  action: string | null
  delivered_at: string
  duration: number
  event: string
  guid: string
  id: number
  installation_id: number | null
  redelivery: boolean
  repository_id: number | null
  status: string
  status_code: number
}

export type t_hook_response = {
  code: number | null
  message: string | null
  status: string | null
}

export type t_hovercard = {
  contexts: {
    message: string
    octicon: string
  }[]
}

export type t_import = {
  authors_count?: number | null
  authors_url: string
  commit_count?: number | null
  error_message?: string | null
  failed_step?: string | null
  has_large_files?: boolean
  html_url: string
  import_percent?: number | null
  large_files_count?: number
  large_files_size?: number
  message?: string
  project_choices?: {
    human_name?: string
    tfvc_project?: string
    vcs?: string
  }[]
  push_percent?: number | null
  repository_url: string
  status:
    | "auth"
    | "error"
    | "none"
    | "detecting"
    | "choose"
    | "auth_failed"
    | "importing"
    | "mapping"
    | "waiting_to_push"
    | "pushing"
    | "complete"
    | "setup"
    | "unknown"
    | "detection_found_multiple"
    | "detection_found_nothing"
    | "detection_needs_auth"
  status_text?: string | null
  svc_root?: string
  svn_root?: string
  tfvc_project?: string
  url: string
  use_lfs?: boolean
  vcs: string | null
  vcs_url: string
}

export type t_installation = {
  access_tokens_url: string
  account: {
    [key: string]: unknown
  } | null | null
  app_id: number
  app_slug: string
  contact_email?: string | null
  created_at: string
  events: string[]
  has_multiple_single_files?: boolean
  html_url: string
  id: number
  permissions: t_app_permissions
  repositories_url: string
  repository_selection: "all" | "selected"
  single_file_name: string | null
  single_file_paths?: string[]
  suspended_at: string | null
  suspended_by: t_nullable_simple_user
  target_id: number
  target_type: string
  updated_at: string
}

export type t_installation_token = {
  expires_at: string
  has_multiple_single_files?: boolean
  permissions?: t_app_permissions
  repositories?: t_repository[]
  repository_selection?: "all" | "selected"
  single_file?: string
  single_file_paths?: string[]
  token: string
}

export type t_integration = {
  client_id?: string
  client_secret?: string
  created_at: string
  description: string | null
  events: string[]
  external_url: string
  html_url: string
  id: number
  installations_count?: number
  name: string
  node_id: string
  owner: t_nullable_simple_user
  pem?: string
  permissions: {
    checks?: string
    contents?: string
    deployments?: string
    issues?: string
    metadata?: string
    [key: string]: unknown
  }
  slug?: string
  updated_at: string
  webhook_secret?: string | null
}

export type t_interaction_expiry =
  | "one_day"
  | "three_days"
  | "one_week"
  | "one_month"
  | "six_months"

export type t_interaction_group =
  | "existing_users"
  | "contributors_only"
  | "collaborators_only"

export type t_interaction_limit = {
  expiry?: t_interaction_expiry
  limit: t_interaction_group
}

export type t_interaction_limit_response = {
  expires_at: string
  limit: t_interaction_group
  origin: string
}

export type t_issue = {
  active_lock_reason?: string | null
  assignee: t_nullable_simple_user
  assignees?: t_simple_user[] | null
  author_association: t_author_association
  body?: string | null
  body_html?: string
  body_text?: string
  closed_at: string | null
  closed_by?: t_nullable_simple_user
  comments: number
  comments_url: string
  created_at: string
  draft?: boolean
  events_url: string
  html_url: string
  id: number
  labels: (
    | string
    | {
        color?: string | null
        default?: boolean
        description?: string | null
        id?: number
        name?: string
        node_id?: string
        url?: string
      }
  )[]
  labels_url: string
  locked: boolean
  milestone: t_nullable_milestone
  node_id: string
  number: number
  performed_via_github_app?: t_nullable_integration
  pull_request?: {
    diff_url: string | null
    html_url: string | null
    merged_at?: string | null
    patch_url: string | null
    url: string | null
  }
  reactions?: t_reaction_rollup
  repository?: t_repository
  repository_url: string
  state: string
  state_reason?: "completed" | "reopened" | "not_planned" | null
  timeline_url?: string
  title: string
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_issue_comment = {
  author_association: t_author_association
  body?: string
  body_html?: string
  body_text?: string
  created_at: string
  html_url: string
  id: number
  issue_url: string
  node_id: string
  performed_via_github_app?: t_nullable_integration
  reactions?: t_reaction_rollup
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_issue_event = {
  actor: t_nullable_simple_user
  assignee?: t_nullable_simple_user
  assigner?: t_nullable_simple_user
  author_association?: t_author_association
  commit_id: string | null
  commit_url: string | null
  created_at: string
  dismissed_review?: t_issue_event_dismissed_review
  event: string
  id: number
  issue?: t_nullable_issue
  label?: t_issue_event_label
  lock_reason?: string | null
  milestone?: t_issue_event_milestone
  node_id: string
  performed_via_github_app?: t_nullable_integration
  project_card?: t_issue_event_project_card
  rename?: t_issue_event_rename
  requested_reviewer?: t_nullable_simple_user
  requested_team?: t_team
  review_requester?: t_nullable_simple_user
  url: string
}

export type t_issue_event_dismissed_review = {
  dismissal_commit_id?: string | null
  dismissal_message: string | null
  review_id: number
  state: string
}

export type t_issue_event_for_issue = {
  [key: string]: unknown
}

export type t_issue_event_label = {
  color: string | null
  name: string | null
}

export type t_issue_event_milestone = {
  title: string
}

export type t_issue_event_project_card = {
  column_name: string
  id: number
  previous_column_name?: string
  project_id: number
  project_url: string
  url: string
}

export type t_issue_event_rename = {
  from: string
  to: string
}

export type t_issue_search_result_item = {
  active_lock_reason?: string | null
  assignee: t_nullable_simple_user
  assignees?: t_simple_user[] | null
  author_association: t_author_association
  body?: string
  body_html?: string
  body_text?: string
  closed_at: string | null
  comments: number
  comments_url: string
  created_at: string
  draft?: boolean
  events_url: string
  html_url: string
  id: number
  labels: {
    color?: string
    default?: boolean
    description?: string | null
    id?: number
    name?: string
    node_id?: string
    url?: string
  }[]
  labels_url: string
  locked: boolean
  milestone: t_nullable_milestone
  node_id: string
  number: number
  performed_via_github_app?: t_nullable_integration
  pull_request?: {
    diff_url: string | null
    html_url: string | null
    merged_at?: string | null
    patch_url: string | null
    url: string | null
  }
  reactions?: t_reaction_rollup
  repository?: t_repository
  repository_url: string
  score: number
  state: string
  state_reason?: string | null
  text_matches?: t_search_result_text_matches
  timeline_url?: string
  title: string
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_job = {
  check_run_url: string
  completed_at: string | null
  conclusion:
    | "success"
    | "failure"
    | "neutral"
    | "cancelled"
    | "skipped"
    | "timed_out"
    | "action_required"
    | null
  head_branch: string | null
  head_sha: string
  html_url: string | null
  id: number
  labels: string[]
  name: string
  node_id: string
  run_attempt?: number
  run_id: number
  run_url: string
  runner_group_id: number | null
  runner_group_name: string | null
  runner_id: number | null
  runner_name: string | null
  started_at: string
  status: "queued" | "in_progress" | "completed"
  steps?: {
    completed_at?: string | null
    conclusion: string | null
    name: string
    number: number
    started_at?: string | null
    status: "queued" | "in_progress" | "completed"
  }[]
  url: string
  workflow_name: string | null
}

export type t_key = {
  created_at: string
  id: number
  key: string
  read_only: boolean
  title: string
  url: string
  verified: boolean
}

export type t_key_simple = {
  id: number
  key: string
}

export type t_label = {
  color: string
  default: boolean
  description: string | null
  id: number
  name: string
  node_id: string
  url: string
}

export type t_label_search_result_item = {
  color: string
  default: boolean
  description: string | null
  id: number
  name: string
  node_id: string
  score: number
  text_matches?: t_search_result_text_matches
  url: string
}

export type t_language = {
  [key: string]: unknown
}

export type t_license = {
  body: string
  conditions: string[]
  description: string
  featured: boolean
  html_url: string
  implementation: string
  key: string
  limitations: string[]
  name: string
  node_id: string
  permissions: string[]
  spdx_id: string | null
  url: string | null
}

export type t_license_content = {
  _links: {
    git: string | null
    html: string | null
    self: string
  }
  content: string
  download_url: string | null
  encoding: string
  git_url: string | null
  html_url: string | null
  license: t_nullable_license_simple
  name: string
  path: string
  sha: string
  size: number
  type: string
  url: string
}

export type t_license_simple = {
  html_url?: string
  key: string
  name: string
  node_id: string
  spdx_id: string | null
  url: string | null
}

export type t_link = {
  href: string
}

export type t_link_with_type = {
  href: string
  type: string
}

export type t_marketplace_account = {
  email?: string | null
  id: number
  login: string
  node_id?: string
  organization_billing_email?: string | null
  type: string
  url: string
}

export type t_marketplace_listing_plan = {
  accounts_url: string
  bullets: string[]
  description: string
  has_free_trial: boolean
  id: number
  monthly_price_in_cents: number
  name: string
  number: number
  price_model: "FREE" | "FLAT_RATE" | "PER_UNIT"
  state: string
  unit_name: string | null
  url: string
  yearly_price_in_cents: number
}

export type t_marketplace_purchase = {
  email?: string | null
  id: number
  login: string
  marketplace_pending_change?: {
    effective_date?: string
    id?: number
    is_installed?: boolean
    plan?: t_marketplace_listing_plan
    unit_count?: number | null
  } | null | null
  marketplace_purchase: {
    billing_cycle?: string
    free_trial_ends_on?: string | null
    is_installed?: boolean
    next_billing_date?: string | null
    on_free_trial?: boolean
    plan?: t_marketplace_listing_plan
    unit_count?: number | null
    updated_at?: string
  }
  organization_billing_email?: string
  type: string
  url: string
}

export type t_merged_upstream = {
  base_branch?: string
  merge_type?: "merge" | "fast-forward" | "none"
  message?: string
}

export type t_metadata = {
  [key: string]: unknown
}

export type t_migration = {
  archive_url?: string
  created_at: string
  exclude?: {
    [key: string]: unknown
  }[]
  exclude_attachments: boolean
  exclude_git_data: boolean
  exclude_metadata: boolean
  exclude_owner_projects: boolean
  exclude_releases: boolean
  guid: string
  id: number
  lock_repositories: boolean
  node_id: string
  org_metadata_only: boolean
  owner: t_nullable_simple_user
  repositories: t_repository[]
  state: string
  updated_at: string
  url: string
}

export type t_milestone = {
  closed_at: string | null
  closed_issues: number
  created_at: string
  creator: t_nullable_simple_user
  description: string | null
  due_on: string | null
  html_url: string
  id: number
  labels_url: string
  node_id: string
  number: number
  open_issues: number
  state: "open" | "closed"
  title: string
  updated_at: string
  url: string
}

export type t_minimal_repository = {
  allow_forking?: boolean
  archive_url: string
  archived?: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url?: string
  code_of_conduct?: t_code_of_conduct
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at?: string | null
  default_branch?: string
  delete_branch_on_merge?: boolean
  deployments_url: string
  description: string | null
  disabled?: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks?: number
  forks_count?: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url?: string
  has_discussions?: boolean
  has_downloads?: boolean
  has_issues?: boolean
  has_pages?: boolean
  has_projects?: boolean
  has_wiki?: boolean
  homepage?: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language?: string | null
  languages_url: string
  license?: {
    key?: string
    name?: string
    node_id?: string
    spdx_id?: string
    url?: string
  } | null | null
  merges_url: string
  milestones_url: string
  mirror_url?: string | null
  name: string
  network_count?: number
  node_id: string
  notifications_url: string
  open_issues?: number
  open_issues_count?: number
  owner: t_simple_user
  permissions?: {
    admin?: boolean
    maintain?: boolean
    pull?: boolean
    push?: boolean
    triage?: boolean
  }
  private: boolean
  pulls_url: string
  pushed_at?: string | null
  releases_url: string
  role_name?: string
  security_and_analysis?: t_security_and_analysis
  size?: number
  ssh_url?: string
  stargazers_count?: number
  stargazers_url: string
  statuses_url: string
  subscribers_count?: number
  subscribers_url: string
  subscription_url: string
  svn_url?: string
  tags_url: string
  teams_url: string
  temp_clone_token?: string
  topics?: string[]
  trees_url: string
  updated_at?: string | null
  url: string
  visibility?: string
  watchers?: number
  watchers_count?: number
  web_commit_signoff_required?: boolean
}

export type t_nullable_alert_updated_at = string | null

export type t_nullable_code_of_conduct_simple = {
  html_url: string | null
  key: string
  name: string
  url: string
} | null

export type t_nullable_codespace_machine = {
  cpus: number
  display_name: string
  memory_in_bytes: number
  name: string
  operating_system: string
  prebuild_availability: "none" | "ready" | "in_progress" | null
  storage_in_bytes: number
} | null

export type t_nullable_collaborator = {
  avatar_url: string
  email?: string | null
  events_url: string
  followers_url: string
  following_url: string
  gists_url: string
  gravatar_id: string | null
  html_url: string
  id: number
  login: string
  name?: string | null
  node_id: string
  organizations_url: string
  permissions?: {
    admin: boolean
    maintain?: boolean
    pull: boolean
    push: boolean
    triage?: boolean
  }
  received_events_url: string
  repos_url: string
  role_name: string
  site_admin: boolean
  starred_url: string
  subscriptions_url: string
  type: string
  url: string
} | null

export type t_nullable_community_health_file = {
  html_url: string
  url: string
} | null

export type t_nullable_git_user = {
  date?: string
  email?: string
  name?: string
} | null

export type t_nullable_integration = {
  client_id?: string
  client_secret?: string
  created_at: string
  description: string | null
  events: string[]
  external_url: string
  html_url: string
  id: number
  installations_count?: number
  name: string
  node_id: string
  owner: t_nullable_simple_user
  pem?: string
  permissions: {
    checks?: string
    contents?: string
    deployments?: string
    issues?: string
    metadata?: string
    [key: string]: unknown
  }
  slug?: string
  updated_at: string
  webhook_secret?: string | null
} | null

export type t_nullable_issue = {
  active_lock_reason?: string | null
  assignee: t_nullable_simple_user
  assignees?: t_simple_user[] | null
  author_association: t_author_association
  body?: string | null
  body_html?: string
  body_text?: string
  closed_at: string | null
  closed_by?: t_nullable_simple_user
  comments: number
  comments_url: string
  created_at: string
  draft?: boolean
  events_url: string
  html_url: string
  id: number
  labels: (
    | string
    | {
        color?: string | null
        default?: boolean
        description?: string | null
        id?: number
        name?: string
        node_id?: string
        url?: string
      }
  )[]
  labels_url: string
  locked: boolean
  milestone: t_nullable_milestone
  node_id: string
  number: number
  performed_via_github_app?: t_nullable_integration
  pull_request?: {
    diff_url: string | null
    html_url: string | null
    merged_at?: string | null
    patch_url: string | null
    url: string | null
  }
  reactions?: t_reaction_rollup
  repository?: t_repository
  repository_url: string
  state: string
  state_reason?: "completed" | "reopened" | "not_planned" | null
  timeline_url?: string
  title: string
  updated_at: string
  url: string
  user: t_nullable_simple_user
} | null

export type t_nullable_license_simple = {
  html_url?: string
  key: string
  name: string
  node_id: string
  spdx_id: string | null
  url: string | null
} | null

export type t_nullable_milestone = {
  closed_at: string | null
  closed_issues: number
  created_at: string
  creator: t_nullable_simple_user
  description: string | null
  due_on: string | null
  html_url: string
  id: number
  labels_url: string
  node_id: string
  number: number
  open_issues: number
  state: "open" | "closed"
  title: string
  updated_at: string
  url: string
} | null

export type t_nullable_minimal_repository = {
  allow_forking?: boolean
  archive_url: string
  archived?: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url?: string
  code_of_conduct?: t_code_of_conduct
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at?: string | null
  default_branch?: string
  delete_branch_on_merge?: boolean
  deployments_url: string
  description: string | null
  disabled?: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks?: number
  forks_count?: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url?: string
  has_discussions?: boolean
  has_downloads?: boolean
  has_issues?: boolean
  has_pages?: boolean
  has_projects?: boolean
  has_wiki?: boolean
  homepage?: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language?: string | null
  languages_url: string
  license?: {
    key?: string
    name?: string
    node_id?: string
    spdx_id?: string
    url?: string
  } | null | null
  merges_url: string
  milestones_url: string
  mirror_url?: string | null
  name: string
  network_count?: number
  node_id: string
  notifications_url: string
  open_issues?: number
  open_issues_count?: number
  owner: t_simple_user
  permissions?: {
    admin?: boolean
    maintain?: boolean
    pull?: boolean
    push?: boolean
    triage?: boolean
  }
  private: boolean
  pulls_url: string
  pushed_at?: string | null
  releases_url: string
  role_name?: string
  security_and_analysis?: t_security_and_analysis
  size?: number
  ssh_url?: string
  stargazers_count?: number
  stargazers_url: string
  statuses_url: string
  subscribers_count?: number
  subscribers_url: string
  subscription_url: string
  svn_url?: string
  tags_url: string
  teams_url: string
  temp_clone_token?: string
  topics?: string[]
  trees_url: string
  updated_at?: string | null
  url: string
  visibility?: string
  watchers?: number
  watchers_count?: number
  web_commit_signoff_required?: boolean
} | null

export type t_nullable_repository = {
  allow_auto_merge?: boolean
  allow_forking?: boolean
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  allow_update_branch?: boolean
  anonymous_access_enabled?: boolean
  archive_url: string
  archived: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url: string
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at: string | null
  default_branch: string
  delete_branch_on_merge?: boolean
  deployments_url: string
  description: string | null
  disabled: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks: number
  forks_count: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url: string
  has_discussions?: boolean
  has_downloads: boolean
  has_issues: boolean
  has_pages: boolean
  has_projects: boolean
  has_wiki: boolean
  homepage: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language: string | null
  languages_url: string
  license: t_nullable_license_simple
  master_branch?: string
  merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK"
  merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE"
  merges_url: string
  milestones_url: string
  mirror_url: string | null
  name: string
  network_count?: number
  node_id: string
  notifications_url: string
  open_issues: number
  open_issues_count: number
  organization?: t_nullable_simple_user
  owner: t_simple_user
  permissions?: {
    admin: boolean
    maintain?: boolean
    pull: boolean
    push: boolean
    triage?: boolean
  }
  private: boolean
  pulls_url: string
  pushed_at: string | null
  releases_url: string
  size: number
  squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK"
  squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE"
  ssh_url: string
  stargazers_count: number
  stargazers_url: string
  starred_at?: string
  statuses_url: string
  subscribers_count?: number
  subscribers_url: string
  subscription_url: string
  svn_url: string
  tags_url: string
  teams_url: string
  temp_clone_token?: string
  template_repository?: {
    allow_auto_merge?: boolean
    allow_merge_commit?: boolean
    allow_rebase_merge?: boolean
    allow_squash_merge?: boolean
    allow_update_branch?: boolean
    archive_url?: string
    archived?: boolean
    assignees_url?: string
    blobs_url?: string
    branches_url?: string
    clone_url?: string
    collaborators_url?: string
    comments_url?: string
    commits_url?: string
    compare_url?: string
    contents_url?: string
    contributors_url?: string
    created_at?: string
    default_branch?: string
    delete_branch_on_merge?: boolean
    deployments_url?: string
    description?: string
    disabled?: boolean
    downloads_url?: string
    events_url?: string
    fork?: boolean
    forks_count?: number
    forks_url?: string
    full_name?: string
    git_commits_url?: string
    git_refs_url?: string
    git_tags_url?: string
    git_url?: string
    has_downloads?: boolean
    has_issues?: boolean
    has_pages?: boolean
    has_projects?: boolean
    has_wiki?: boolean
    homepage?: string
    hooks_url?: string
    html_url?: string
    id?: number
    is_template?: boolean
    issue_comment_url?: string
    issue_events_url?: string
    issues_url?: string
    keys_url?: string
    labels_url?: string
    language?: string
    languages_url?: string
    merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK"
    merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE"
    merges_url?: string
    milestones_url?: string
    mirror_url?: string
    name?: string
    network_count?: number
    node_id?: string
    notifications_url?: string
    open_issues_count?: number
    owner?: {
      avatar_url?: string
      events_url?: string
      followers_url?: string
      following_url?: string
      gists_url?: string
      gravatar_id?: string
      html_url?: string
      id?: number
      login?: string
      node_id?: string
      organizations_url?: string
      received_events_url?: string
      repos_url?: string
      site_admin?: boolean
      starred_url?: string
      subscriptions_url?: string
      type?: string
      url?: string
    }
    permissions?: {
      admin?: boolean
      maintain?: boolean
      pull?: boolean
      push?: boolean
      triage?: boolean
    }
    private?: boolean
    pulls_url?: string
    pushed_at?: string
    releases_url?: string
    size?: number
    squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK"
    squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE"
    ssh_url?: string
    stargazers_count?: number
    stargazers_url?: string
    statuses_url?: string
    subscribers_count?: number
    subscribers_url?: string
    subscription_url?: string
    svn_url?: string
    tags_url?: string
    teams_url?: string
    temp_clone_token?: string
    topics?: string[]
    trees_url?: string
    updated_at?: string
    url?: string
    use_squash_pr_title_as_default?: boolean
    visibility?: string
    watchers_count?: number
  } | null | null
  topics?: string[]
  trees_url: string
  updated_at: string | null
  url: string
  use_squash_pr_title_as_default?: boolean
  visibility?: string
  watchers: number
  watchers_count: number
  web_commit_signoff_required?: boolean
} | null

export type t_nullable_scoped_installation = {
  account: t_simple_user
  has_multiple_single_files?: boolean
  permissions: t_app_permissions
  repositories_url: string
  repository_selection: "all" | "selected"
  single_file_name: string | null
  single_file_paths?: string[]
} | null

export type t_nullable_simple_commit = {
  author: {
    email: string
    name: string
  } | null | null
  committer: {
    email: string
    name: string
  } | null | null
  id: string
  message: string
  timestamp: string
  tree_id: string
} | null

export type t_nullable_simple_user = {
  avatar_url: string
  email?: string | null
  events_url: string
  followers_url: string
  following_url: string
  gists_url: string
  gravatar_id: string | null
  html_url: string
  id: number
  login: string
  name?: string | null
  node_id: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  site_admin: boolean
  starred_at?: string
  starred_url: string
  subscriptions_url: string
  type: string
  url: string
} | null

export type t_nullable_team_simple = {
  description: string | null
  html_url: string
  id: number
  ldap_dn?: string
  members_url: string
  name: string
  node_id: string
  permission: string
  privacy?: string
  repositories_url: string
  slug: string
  url: string
} | null

export type t_oidc_custom_sub = {
  include_claim_keys: string[]
}

export type t_oidc_custom_sub_repo = {
  include_claim_keys?: string[]
  use_default: boolean
}

export type t_org_hook = {
  active: boolean
  config: {
    content_type?: string
    insecure_ssl?: string
    secret?: string
    url?: string
  }
  created_at: string
  deliveries_url?: string
  events: string[]
  id: number
  name: string
  ping_url: string
  type: string
  updated_at: string
  url: string
}

export type t_org_membership = {
  organization: t_organization_simple
  organization_url: string
  permissions?: {
    can_create_repository: boolean
  }
  role: "admin" | "member" | "billing_manager"
  state: "active" | "pending"
  url: string
  user: t_nullable_simple_user
}

export type t_organization_actions_secret = {
  created_at: string
  name: string
  selected_repositories_url?: string
  updated_at: string
  visibility: "all" | "private" | "selected"
}

export type t_organization_actions_variable = {
  created_at: string
  name: string
  selected_repositories_url?: string
  updated_at: string
  value: string
  visibility: "all" | "private" | "selected"
}

export type t_organization_dependabot_secret = {
  created_at: string
  name: string
  selected_repositories_url?: string
  updated_at: string
  visibility: "all" | "private" | "selected"
}

export type t_organization_full = {
  advanced_security_enabled_for_new_repositories?: boolean
  avatar_url: string
  billing_email?: string | null
  blog?: string
  collaborators?: number | null
  company?: string
  created_at: string
  default_repository_permission?: string | null
  dependabot_alerts_enabled_for_new_repositories?: boolean
  dependabot_security_updates_enabled_for_new_repositories?: boolean
  dependency_graph_enabled_for_new_repositories?: boolean
  description: string | null
  disk_usage?: number | null
  email?: string
  events_url: string
  followers: number
  following: number
  has_organization_projects: boolean
  has_repository_projects: boolean
  hooks_url: string
  html_url: string
  id: number
  is_verified?: boolean
  issues_url: string
  location?: string
  login: string
  members_allowed_repository_creation_type?: string
  members_can_create_internal_repositories?: boolean
  members_can_create_pages?: boolean
  members_can_create_private_pages?: boolean
  members_can_create_private_repositories?: boolean
  members_can_create_public_pages?: boolean
  members_can_create_public_repositories?: boolean
  members_can_create_repositories?: boolean | null
  members_can_fork_private_repositories?: boolean | null
  members_url: string
  name?: string
  node_id: string
  owned_private_repos?: number
  plan?: {
    filled_seats?: number
    name: string
    private_repos: number
    seats?: number
    space: number
  }
  private_gists?: number | null
  public_gists: number
  public_members_url: string
  public_repos: number
  repos_url: string
  secret_scanning_enabled_for_new_repositories?: boolean
  secret_scanning_push_protection_custom_link?: string | null
  secret_scanning_push_protection_custom_link_enabled?: boolean
  secret_scanning_push_protection_enabled_for_new_repositories?: boolean
  total_private_repos?: number
  twitter_username?: string | null
  two_factor_requirement_enabled?: boolean | null
  type: string
  updated_at: string
  url: string
  web_commit_signoff_required?: boolean
}

export type t_organization_invitation = {
  created_at: string
  email: string | null
  failed_at?: string | null
  failed_reason?: string | null
  id: number
  invitation_source?: string
  invitation_teams_url: string
  inviter: t_simple_user
  login: string | null
  node_id: string
  role: string
  team_count: number
}

export type t_organization_secret_scanning_alert = {
  created_at?: t_alert_created_at
  html_url?: t_alert_html_url
  locations_url?: string
  number?: t_alert_number
  push_protection_bypassed?: boolean | null
  push_protection_bypassed_at?: string | null
  push_protection_bypassed_by?: t_nullable_simple_user
  repository?: t_simple_repository
  resolution?: t_secret_scanning_alert_resolution
  resolution_comment?: string | null
  resolved_at?: string | null
  resolved_by?: t_nullable_simple_user
  secret?: string
  secret_type?: string
  secret_type_display_name?: string
  state?: t_secret_scanning_alert_state
  updated_at?: t_nullable_alert_updated_at
  url?: t_alert_url
}

export type t_organization_simple = {
  avatar_url: string
  description: string | null
  events_url: string
  hooks_url: string
  id: number
  issues_url: string
  login: string
  members_url: string
  node_id: string
  public_members_url: string
  repos_url: string
  url: string
}

export type t_package = {
  created_at: string
  html_url: string
  id: number
  name: string
  owner?: t_nullable_simple_user
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  repository?: t_nullable_minimal_repository
  updated_at: string
  url: string
  version_count: number
  visibility: "private" | "public"
}

export type t_package_version = {
  created_at: string
  deleted_at?: string
  description?: string
  html_url?: string
  id: number
  license?: string
  metadata?: {
    container?: {
      tags: string[]
    }
    docker?: {
      tag?: string[]
    }
    package_type:
      | "npm"
      | "maven"
      | "rubygems"
      | "docker"
      | "nuget"
      | "container"
  }
  name: string
  package_html_url: string
  updated_at: string
  url: string
}

export type t_packages_billing_usage = {
  included_gigabytes_bandwidth: number
  total_gigabytes_bandwidth_used: number
  total_paid_gigabytes_bandwidth_used: number
}

export type t_page = {
  build_type?: "legacy" | "workflow" | null
  cname: string | null
  custom_404: boolean
  html_url?: string
  https_certificate?: t_pages_https_certificate
  https_enforced?: boolean
  pending_domain_unverified_at?: string | null
  protected_domain_state?: "pending" | "verified" | "unverified" | null
  public: boolean
  source?: t_pages_source_hash
  status: "built" | "building" | "errored" | null
  url: string
}

export type t_page_build = {
  commit: string
  created_at: string
  duration: number
  error: {
    message: string | null
  }
  pusher: t_nullable_simple_user
  status: string
  updated_at: string
  url: string
}

export type t_page_build_status = {
  status: string
  url: string
}

export type t_page_deployment = {
  page_url: string
  preview_url?: string
  status_url: string
}

export type t_pages_health_check = {
  alt_domain?: {
    caa_error?: string | null
    dns_resolves?: boolean
    enforces_https?: boolean
    has_cname_record?: boolean | null
    has_mx_records_present?: boolean | null
    host?: string
    https_error?: string | null
    is_a_record?: boolean | null
    is_apex_domain?: boolean
    is_cloudflare_ip?: boolean | null
    is_cname_to_fastly?: boolean | null
    is_cname_to_github_user_domain?: boolean | null
    is_cname_to_pages_dot_github_dot_com?: boolean | null
    is_fastly_ip?: boolean | null
    is_https_eligible?: boolean | null
    is_non_github_pages_ip_present?: boolean | null
    is_old_ip_address?: boolean | null
    is_pages_domain?: boolean
    is_pointed_to_github_pages_ip?: boolean | null
    is_proxied?: boolean | null
    is_served_by_pages?: boolean | null
    is_valid?: boolean
    is_valid_domain?: boolean
    nameservers?: string
    reason?: string | null
    responds_to_https?: boolean
    should_be_a_record?: boolean | null
    uri?: string
  } | null | null
  domain?: {
    caa_error?: string | null
    dns_resolves?: boolean
    enforces_https?: boolean
    has_cname_record?: boolean | null
    has_mx_records_present?: boolean | null
    host?: string
    https_error?: string | null
    is_a_record?: boolean | null
    is_apex_domain?: boolean
    is_cloudflare_ip?: boolean | null
    is_cname_to_fastly?: boolean | null
    is_cname_to_github_user_domain?: boolean | null
    is_cname_to_pages_dot_github_dot_com?: boolean | null
    is_fastly_ip?: boolean | null
    is_https_eligible?: boolean | null
    is_non_github_pages_ip_present?: boolean | null
    is_old_ip_address?: boolean | null
    is_pages_domain?: boolean
    is_pointed_to_github_pages_ip?: boolean | null
    is_proxied?: boolean | null
    is_served_by_pages?: boolean | null
    is_valid?: boolean
    is_valid_domain?: boolean
    nameservers?: string
    reason?: string | null
    responds_to_https?: boolean
    should_be_a_record?: boolean | null
    uri?: string
  }
}

export type t_pages_https_certificate = {
  description: string
  domains: string[]
  expires_at?: string
  state:
    | "new"
    | "authorization_created"
    | "authorization_pending"
    | "authorized"
    | "authorization_revoked"
    | "issued"
    | "uploaded"
    | "approved"
    | "errored"
    | "bad_authz"
    | "destroy_pending"
    | "dns_changed"
}

export type t_pages_source_hash = {
  branch: string
  path: string
}

export type t_participation_stats = {
  all: number[]
  owner: number[]
}

export type t_pending_deployment = {
  current_user_can_approve: boolean
  environment: {
    html_url?: string
    id?: number
    name?: string
    node_id?: string
    url?: string
  }
  reviewers: {
    reviewer?: {
      [key: string]: unknown
    }
    type?: t_deployment_reviewer_type
  }[]
  wait_timer: number
  wait_timer_started_at: string | null
}

export type t_porter_author = {
  email: string
  id: number
  import_url: string
  name: string
  remote_id: string
  remote_name: string
  url: string
}

export type t_porter_large_file = {
  oid: string
  path: string
  ref_name: string
  size: number
}

export type t_private_user = {
  avatar_url: string
  bio: string | null
  blog: string | null
  business_plus?: boolean
  collaborators: number
  company: string | null
  created_at: string
  disk_usage: number
  email: string | null
  events_url: string
  followers: number
  followers_url: string
  following: number
  following_url: string
  gists_url: string
  gravatar_id: string | null
  hireable: boolean | null
  html_url: string
  id: number
  ldap_dn?: string
  location: string | null
  login: string
  name: string | null
  node_id: string
  organizations_url: string
  owned_private_repos: number
  plan?: {
    collaborators: number
    name: string
    private_repos: number
    space: number
  }
  private_gists: number
  public_gists: number
  public_repos: number
  received_events_url: string
  repos_url: string
  site_admin: boolean
  starred_url: string
  subscriptions_url: string
  suspended_at?: string | null
  total_private_repos: number
  twitter_username?: string | null
  two_factor_authentication: boolean
  type: string
  updated_at: string
  url: string
}

export type t_project = {
  body: string | null
  columns_url: string
  created_at: string
  creator: t_nullable_simple_user
  html_url: string
  id: number
  name: string
  node_id: string
  number: number
  organization_permission?: "read" | "write" | "admin" | "none"
  owner_url: string
  private?: boolean
  state: string
  updated_at: string
  url: string
}

export type t_project_card = {
  archived?: boolean
  column_name?: string
  column_url: string
  content_url?: string
  created_at: string
  creator: t_nullable_simple_user
  id: number
  node_id: string
  note: string | null
  project_id?: string
  project_url: string
  updated_at: string
  url: string
}

export type t_project_collaborator_permission = {
  permission: string
  user: t_nullable_simple_user
}

export type t_project_column = {
  cards_url: string
  created_at: string
  id: number
  name: string
  node_id: string
  project_url: string
  updated_at: string
  url: string
}

export type t_protected_branch = {
  allow_deletions?: {
    enabled: boolean
  }
  allow_force_pushes?: {
    enabled: boolean
  }
  allow_fork_syncing?: {
    enabled?: boolean
  }
  block_creations?: {
    enabled: boolean
  }
  enforce_admins?: {
    enabled: boolean
    url: string
  }
  lock_branch?: {
    enabled?: boolean
  }
  required_conversation_resolution?: {
    enabled?: boolean
  }
  required_linear_history?: {
    enabled: boolean
  }
  required_pull_request_reviews?: {
    bypass_pull_request_allowances?: {
      apps?: t_integration[]
      teams: t_team[]
      users: t_simple_user[]
    }
    dismiss_stale_reviews?: boolean
    dismissal_restrictions?: {
      apps?: t_integration[]
      teams: t_team[]
      teams_url: string
      url: string
      users: t_simple_user[]
      users_url: string
    }
    require_code_owner_reviews?: boolean
    require_last_push_approval?: boolean
    required_approving_review_count?: number
    url: string
  }
  required_signatures?: {
    enabled: boolean
    url: string
  }
  required_status_checks?: t_status_check_policy
  restrictions?: t_branch_restriction_policy
  url: string
}

export type t_protected_branch_admin_enforced = {
  enabled: boolean
  url: string
}

export type t_protected_branch_pull_request_review = {
  bypass_pull_request_allowances?: {
    apps?: t_integration[]
    teams?: t_team[]
    users?: t_simple_user[]
  }
  dismiss_stale_reviews: boolean
  dismissal_restrictions?: {
    apps?: t_integration[]
    teams?: t_team[]
    teams_url?: string
    url?: string
    users?: t_simple_user[]
    users_url?: string
  }
  require_code_owner_reviews: boolean
  require_last_push_approval?: boolean
  required_approving_review_count?: number
  url?: string
}

export type t_protected_branch_required_status_check = {
  checks: {
    app_id: number | null
    context: string
  }[]
  contexts: string[]
  contexts_url?: string
  enforcement_level?: string
  strict?: boolean
  url?: string
}

export type t_public_user = {
  avatar_url: string
  bio: string | null
  blog: string | null
  collaborators?: number
  company: string | null
  created_at: string
  disk_usage?: number
  email: string | null
  events_url: string
  followers: number
  followers_url: string
  following: number
  following_url: string
  gists_url: string
  gravatar_id: string | null
  hireable: boolean | null
  html_url: string
  id: number
  location: string | null
  login: string
  name: string | null
  node_id: string
  organizations_url: string
  owned_private_repos?: number
  plan?: {
    collaborators: number
    name: string
    private_repos: number
    space: number
  }
  private_gists?: number
  public_gists: number
  public_repos: number
  received_events_url: string
  repos_url: string
  site_admin: boolean
  starred_url: string
  subscriptions_url: string
  suspended_at?: string | null
  total_private_repos?: number
  twitter_username?: string | null
  type: string
  updated_at: string
  url: string
}

export type t_pull_request = {
  _links: {
    comments: t_link
    commits: t_link
    html: t_link
    issue: t_link
    review_comment: t_link
    review_comments: t_link
    self: t_link
    statuses: t_link
  }
  active_lock_reason?: string | null
  additions: number
  assignee: t_nullable_simple_user
  assignees?: t_simple_user[] | null
  author_association: t_author_association
  auto_merge: t_auto_merge
  base: {
    label: string
    ref: string
    repo: {
      allow_forking?: boolean
      allow_merge_commit?: boolean
      allow_rebase_merge?: boolean
      allow_squash_merge?: boolean
      archive_url: string
      archived: boolean
      assignees_url: string
      blobs_url: string
      branches_url: string
      clone_url: string
      collaborators_url: string
      comments_url: string
      commits_url: string
      compare_url: string
      contents_url: string
      contributors_url: string
      created_at: string
      default_branch: string
      deployments_url: string
      description: string | null
      disabled: boolean
      downloads_url: string
      events_url: string
      fork: boolean
      forks: number
      forks_count: number
      forks_url: string
      full_name: string
      git_commits_url: string
      git_refs_url: string
      git_tags_url: string
      git_url: string
      has_discussions: boolean
      has_downloads: boolean
      has_issues: boolean
      has_pages: boolean
      has_projects: boolean
      has_wiki: boolean
      homepage: string | null
      hooks_url: string
      html_url: string
      id: number
      is_template?: boolean
      issue_comment_url: string
      issue_events_url: string
      issues_url: string
      keys_url: string
      labels_url: string
      language: string | null
      languages_url: string
      license: t_nullable_license_simple
      master_branch?: string
      merges_url: string
      milestones_url: string
      mirror_url: string | null
      name: string
      node_id: string
      notifications_url: string
      open_issues: number
      open_issues_count: number
      owner: {
        avatar_url: string
        events_url: string
        followers_url: string
        following_url: string
        gists_url: string
        gravatar_id: string | null
        html_url: string
        id: number
        login: string
        node_id: string
        organizations_url: string
        received_events_url: string
        repos_url: string
        site_admin: boolean
        starred_url: string
        subscriptions_url: string
        type: string
        url: string
      }
      permissions?: {
        admin: boolean
        maintain?: boolean
        pull: boolean
        push: boolean
        triage?: boolean
      }
      private: boolean
      pulls_url: string
      pushed_at: string
      releases_url: string
      size: number
      ssh_url: string
      stargazers_count: number
      stargazers_url: string
      statuses_url: string
      subscribers_url: string
      subscription_url: string
      svn_url: string
      tags_url: string
      teams_url: string
      temp_clone_token?: string
      topics?: string[]
      trees_url: string
      updated_at: string
      url: string
      visibility?: string
      watchers: number
      watchers_count: number
      web_commit_signoff_required?: boolean
    }
    sha: string
    user: {
      avatar_url: string
      events_url: string
      followers_url: string
      following_url: string
      gists_url: string
      gravatar_id: string | null
      html_url: string
      id: number
      login: string
      node_id: string
      organizations_url: string
      received_events_url: string
      repos_url: string
      site_admin: boolean
      starred_url: string
      subscriptions_url: string
      type: string
      url: string
    }
  }
  body: string | null
  changed_files: number
  closed_at: string | null
  comments: number
  comments_url: string
  commits: number
  commits_url: string
  created_at: string
  deletions: number
  diff_url: string
  draft?: boolean
  head: {
    label: string
    ref: string
    repo: {
      allow_forking?: boolean
      allow_merge_commit?: boolean
      allow_rebase_merge?: boolean
      allow_squash_merge?: boolean
      archive_url: string
      archived: boolean
      assignees_url: string
      blobs_url: string
      branches_url: string
      clone_url: string
      collaborators_url: string
      comments_url: string
      commits_url: string
      compare_url: string
      contents_url: string
      contributors_url: string
      created_at: string
      default_branch: string
      deployments_url: string
      description: string | null
      disabled: boolean
      downloads_url: string
      events_url: string
      fork: boolean
      forks: number
      forks_count: number
      forks_url: string
      full_name: string
      git_commits_url: string
      git_refs_url: string
      git_tags_url: string
      git_url: string
      has_discussions: boolean
      has_downloads: boolean
      has_issues: boolean
      has_pages: boolean
      has_projects: boolean
      has_wiki: boolean
      homepage: string | null
      hooks_url: string
      html_url: string
      id: number
      is_template?: boolean
      issue_comment_url: string
      issue_events_url: string
      issues_url: string
      keys_url: string
      labels_url: string
      language: string | null
      languages_url: string
      license: {
        key: string
        name: string
        node_id: string
        spdx_id: string | null
        url: string | null
      } | null | null
      master_branch?: string
      merges_url: string
      milestones_url: string
      mirror_url: string | null
      name: string
      node_id: string
      notifications_url: string
      open_issues: number
      open_issues_count: number
      owner: {
        avatar_url: string
        events_url: string
        followers_url: string
        following_url: string
        gists_url: string
        gravatar_id: string | null
        html_url: string
        id: number
        login: string
        node_id: string
        organizations_url: string
        received_events_url: string
        repos_url: string
        site_admin: boolean
        starred_url: string
        subscriptions_url: string
        type: string
        url: string
      }
      permissions?: {
        admin: boolean
        maintain?: boolean
        pull: boolean
        push: boolean
        triage?: boolean
      }
      private: boolean
      pulls_url: string
      pushed_at: string
      releases_url: string
      size: number
      ssh_url: string
      stargazers_count: number
      stargazers_url: string
      statuses_url: string
      subscribers_url: string
      subscription_url: string
      svn_url: string
      tags_url: string
      teams_url: string
      temp_clone_token?: string
      topics?: string[]
      trees_url: string
      updated_at: string
      url: string
      visibility?: string
      watchers: number
      watchers_count: number
      web_commit_signoff_required?: boolean
    } | null | null
    sha: string
    user: {
      avatar_url: string
      events_url: string
      followers_url: string
      following_url: string
      gists_url: string
      gravatar_id: string | null
      html_url: string
      id: number
      login: string
      node_id: string
      organizations_url: string
      received_events_url: string
      repos_url: string
      site_admin: boolean
      starred_url: string
      subscriptions_url: string
      type: string
      url: string
    }
  }
  html_url: string
  id: number
  issue_url: string
  labels: {
    color: string
    default: boolean
    description: string | null
    id: number
    name: string
    node_id: string
    url: string
  }[]
  locked: boolean
  maintainer_can_modify: boolean
  merge_commit_sha: string | null
  mergeable: boolean | null
  mergeable_state: string
  merged: boolean
  merged_at: string | null
  merged_by: t_nullable_simple_user
  milestone: t_nullable_milestone
  node_id: string
  number: number
  patch_url: string
  rebaseable?: boolean | null
  requested_reviewers?: t_simple_user[] | null
  requested_teams?: t_team_simple[] | null
  review_comment_url: string
  review_comments: number
  review_comments_url: string
  state: "open" | "closed"
  statuses_url: string
  title: string
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_pull_request_merge_result = {
  merged: boolean
  message: string
  sha: string
}

export type t_pull_request_minimal = {
  base: {
    ref: string
    repo: {
      id: number
      name: string
      url: string
    }
    sha: string
  }
  head: {
    ref: string
    repo: {
      id: number
      name: string
      url: string
    }
    sha: string
  }
  id: number
  number: number
  url: string
}

export type t_pull_request_review = {
  _links: {
    html: {
      href: string
    }
    pull_request: {
      href: string
    }
  }
  author_association: t_author_association
  body: string
  body_html?: string
  body_text?: string
  commit_id: string | null
  html_url: string
  id: number
  node_id: string
  pull_request_url: string
  state: string
  submitted_at?: string
  user: t_nullable_simple_user
}

export type t_pull_request_review_comment = {
  _links: {
    html: {
      href: string
    }
    pull_request: {
      href: string
    }
    self: {
      href: string
    }
  }
  author_association: t_author_association
  body: string
  body_html?: string
  body_text?: string
  commit_id: string
  created_at: string
  diff_hunk: string
  html_url: string
  id: number
  in_reply_to_id?: number
  line?: number
  node_id: string
  original_commit_id: string
  original_line?: number
  original_position: number
  original_start_line?: number | null
  path: string
  position: number
  pull_request_review_id: number | null
  pull_request_url: string
  reactions?: t_reaction_rollup
  side?: "LEFT" | "RIGHT"
  start_line?: number | null
  start_side?: "LEFT" | "RIGHT" | null
  updated_at: string
  url: string
  user: t_simple_user
}

export type t_pull_request_review_request = {
  teams: t_team[]
  users: t_simple_user[]
}

export type t_pull_request_simple = {
  _links: {
    comments: t_link
    commits: t_link
    html: t_link
    issue: t_link
    review_comment: t_link
    review_comments: t_link
    self: t_link
    statuses: t_link
  }
  active_lock_reason?: string | null
  assignee: t_nullable_simple_user
  assignees?: t_simple_user[] | null
  author_association: t_author_association
  auto_merge: t_auto_merge
  base: {
    label: string
    ref: string
    repo: t_repository
    sha: string
    user: t_nullable_simple_user
  }
  body: string | null
  closed_at: string | null
  comments_url: string
  commits_url: string
  created_at: string
  diff_url: string
  draft?: boolean
  head: {
    label: string
    ref: string
    repo: t_repository
    sha: string
    user: t_nullable_simple_user
  }
  html_url: string
  id: number
  issue_url: string
  labels: {
    color: string
    default: boolean
    description: string
    id: number
    name: string
    node_id: string
    url: string
  }[]
  locked: boolean
  merge_commit_sha: string | null
  merged_at: string | null
  milestone: t_nullable_milestone
  node_id: string
  number: number
  patch_url: string
  requested_reviewers?: t_simple_user[] | null
  requested_teams?: t_team[] | null
  review_comment_url: string
  review_comments_url: string
  state: string
  statuses_url: string
  title: string
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_rate_limit = {
  limit: number
  remaining: number
  reset: number
  used: number
}

export type t_rate_limit_overview = {
  rate: t_rate_limit
  resources: {
    actions_runner_registration?: t_rate_limit
    code_scanning_upload?: t_rate_limit
    core: t_rate_limit
    dependency_snapshots?: t_rate_limit
    graphql?: t_rate_limit
    integration_manifest?: t_rate_limit
    scim?: t_rate_limit
    search: t_rate_limit
    source_import?: t_rate_limit
  }
}

export type t_reaction = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
  created_at: string
  id: number
  node_id: string
  user: t_nullable_simple_user
}

export type t_reaction_rollup = {
  "+1": number
  "-1": number
  confused: number
  eyes: number
  heart: number
  hooray: number
  laugh: number
  rocket: number
  total_count: number
  url: string
}

export type t_referenced_workflow = {
  path: string
  ref?: string
  sha: string
}

export type t_referrer_traffic = {
  count: number
  referrer: string
  uniques: number
}

export type t_release = {
  assets: t_release_asset[]
  assets_url: string
  author: t_simple_user
  body?: string | null
  body_html?: string
  body_text?: string
  created_at: string
  discussion_url?: string
  draft: boolean
  html_url: string
  id: number
  mentions_count?: number
  name: string | null
  node_id: string
  prerelease: boolean
  published_at: string | null
  reactions?: t_reaction_rollup
  tag_name: string
  tarball_url: string | null
  target_commitish: string
  upload_url: string
  url: string
  zipball_url: string | null
}

export type t_release_asset = {
  browser_download_url: string
  content_type: string
  created_at: string
  download_count: number
  id: number
  label: string | null
  name: string
  node_id: string
  size: number
  state: "uploaded" | "open"
  updated_at: string
  uploader: t_nullable_simple_user
  url: string
}

export type t_release_notes_content = {
  body: string
  name: string
}

export type t_repo_codespaces_secret = {
  created_at: string
  name: string
  updated_at: string
}

export type t_repo_required_workflow = {
  badge_url: string
  created_at: string
  html_url: string
  id: number
  name: string
  node_id: string
  path: string
  source_repository: t_minimal_repository
  state: "active" | "deleted"
  updated_at: string
  url: string
}

export type t_repo_search_result_item = {
  allow_auto_merge?: boolean
  allow_forking?: boolean
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  archive_url: string
  archived: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url: string
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at: string
  default_branch: string
  delete_branch_on_merge?: boolean
  deployments_url: string
  description: string | null
  disabled: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks: number
  forks_count: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url: string
  has_discussions?: boolean
  has_downloads: boolean
  has_issues: boolean
  has_pages: boolean
  has_projects: boolean
  has_wiki: boolean
  homepage: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language: string | null
  languages_url: string
  license: t_nullable_license_simple
  master_branch?: string
  merges_url: string
  milestones_url: string
  mirror_url: string | null
  name: string
  node_id: string
  notifications_url: string
  open_issues: number
  open_issues_count: number
  owner: t_nullable_simple_user
  permissions?: {
    admin: boolean
    maintain?: boolean
    pull: boolean
    push: boolean
    triage?: boolean
  }
  private: boolean
  pulls_url: string
  pushed_at: string
  releases_url: string
  score: number
  size: number
  ssh_url: string
  stargazers_count: number
  stargazers_url: string
  statuses_url: string
  subscribers_url: string
  subscription_url: string
  svn_url: string
  tags_url: string
  teams_url: string
  temp_clone_token?: string
  text_matches?: t_search_result_text_matches
  topics?: string[]
  trees_url: string
  updated_at: string
  url: string
  visibility?: string
  watchers: number
  watchers_count: number
  web_commit_signoff_required?: boolean
}

export type t_repository = {
  allow_auto_merge?: boolean
  allow_forking?: boolean
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  allow_update_branch?: boolean
  anonymous_access_enabled?: boolean
  archive_url: string
  archived: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url: string
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at: string | null
  default_branch: string
  delete_branch_on_merge?: boolean
  deployments_url: string
  description: string | null
  disabled: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks: number
  forks_count: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url: string
  has_discussions?: boolean
  has_downloads: boolean
  has_issues: boolean
  has_pages: boolean
  has_projects: boolean
  has_wiki: boolean
  homepage: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language: string | null
  languages_url: string
  license: t_nullable_license_simple
  master_branch?: string
  merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK"
  merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE"
  merges_url: string
  milestones_url: string
  mirror_url: string | null
  name: string
  network_count?: number
  node_id: string
  notifications_url: string
  open_issues: number
  open_issues_count: number
  organization?: t_nullable_simple_user
  owner: t_simple_user
  permissions?: {
    admin: boolean
    maintain?: boolean
    pull: boolean
    push: boolean
    triage?: boolean
  }
  private: boolean
  pulls_url: string
  pushed_at: string | null
  releases_url: string
  size: number
  squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK"
  squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE"
  ssh_url: string
  stargazers_count: number
  stargazers_url: string
  starred_at?: string
  statuses_url: string
  subscribers_count?: number
  subscribers_url: string
  subscription_url: string
  svn_url: string
  tags_url: string
  teams_url: string
  temp_clone_token?: string
  template_repository?: {
    allow_auto_merge?: boolean
    allow_merge_commit?: boolean
    allow_rebase_merge?: boolean
    allow_squash_merge?: boolean
    allow_update_branch?: boolean
    archive_url?: string
    archived?: boolean
    assignees_url?: string
    blobs_url?: string
    branches_url?: string
    clone_url?: string
    collaborators_url?: string
    comments_url?: string
    commits_url?: string
    compare_url?: string
    contents_url?: string
    contributors_url?: string
    created_at?: string
    default_branch?: string
    delete_branch_on_merge?: boolean
    deployments_url?: string
    description?: string
    disabled?: boolean
    downloads_url?: string
    events_url?: string
    fork?: boolean
    forks_count?: number
    forks_url?: string
    full_name?: string
    git_commits_url?: string
    git_refs_url?: string
    git_tags_url?: string
    git_url?: string
    has_downloads?: boolean
    has_issues?: boolean
    has_pages?: boolean
    has_projects?: boolean
    has_wiki?: boolean
    homepage?: string
    hooks_url?: string
    html_url?: string
    id?: number
    is_template?: boolean
    issue_comment_url?: string
    issue_events_url?: string
    issues_url?: string
    keys_url?: string
    labels_url?: string
    language?: string
    languages_url?: string
    merge_commit_message?: "PR_BODY" | "PR_TITLE" | "BLANK"
    merge_commit_title?: "PR_TITLE" | "MERGE_MESSAGE"
    merges_url?: string
    milestones_url?: string
    mirror_url?: string
    name?: string
    network_count?: number
    node_id?: string
    notifications_url?: string
    open_issues_count?: number
    owner?: {
      avatar_url?: string
      events_url?: string
      followers_url?: string
      following_url?: string
      gists_url?: string
      gravatar_id?: string
      html_url?: string
      id?: number
      login?: string
      node_id?: string
      organizations_url?: string
      received_events_url?: string
      repos_url?: string
      site_admin?: boolean
      starred_url?: string
      subscriptions_url?: string
      type?: string
      url?: string
    }
    permissions?: {
      admin?: boolean
      maintain?: boolean
      pull?: boolean
      push?: boolean
      triage?: boolean
    }
    private?: boolean
    pulls_url?: string
    pushed_at?: string
    releases_url?: string
    size?: number
    squash_merge_commit_message?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK"
    squash_merge_commit_title?: "PR_TITLE" | "COMMIT_OR_PR_TITLE"
    ssh_url?: string
    stargazers_count?: number
    stargazers_url?: string
    statuses_url?: string
    subscribers_count?: number
    subscribers_url?: string
    subscription_url?: string
    svn_url?: string
    tags_url?: string
    teams_url?: string
    temp_clone_token?: string
    topics?: string[]
    trees_url?: string
    updated_at?: string
    url?: string
    use_squash_pr_title_as_default?: boolean
    visibility?: string
    watchers_count?: number
  } | null | null
  topics?: string[]
  trees_url: string
  updated_at: string | null
  url: string
  use_squash_pr_title_as_default?: boolean
  visibility?: string
  watchers: number
  watchers_count: number
  web_commit_signoff_required?: boolean
}

export type t_repository_collaborator_permission = {
  permission: string
  role_name: string
  user: t_nullable_collaborator
}

export type t_repository_invitation = {
  created_at: string
  expired?: boolean
  html_url: string
  id: number
  invitee: t_nullable_simple_user
  inviter: t_nullable_simple_user
  node_id: string
  permissions: "read" | "write" | "admin" | "triage" | "maintain"
  repository: t_minimal_repository
  url: string
}

export type t_repository_subscription = {
  created_at: string
  ignored: boolean
  reason: string | null
  repository_url: string
  subscribed: boolean
  url: string
}

export type t_required_workflow = {
  created_at: string
  id: number
  name: string
  path: string
  ref: string
  repository: t_minimal_repository
  scope: "all" | "selected"
  selected_repositories_url?: string
  state: "active" | "deleted"
  updated_at: string
}

export type t_review_comment = {
  _links: {
    html: t_link
    pull_request: t_link
    self: t_link
  }
  author_association: t_author_association
  body: string
  body_html?: string
  body_text?: string
  commit_id: string
  created_at: string
  diff_hunk: string
  html_url: string
  id: number
  in_reply_to_id?: number
  line?: number
  node_id: string
  original_commit_id: string
  original_line?: number
  original_position: number
  original_start_line?: number | null
  path: string
  position: number | null
  pull_request_review_id: number | null
  pull_request_url: string
  reactions?: t_reaction_rollup
  side?: "LEFT" | "RIGHT"
  start_line?: number | null
  start_side?: "LEFT" | "RIGHT" | null
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_root = {
  authorizations_url: string
  code_search_url: string
  commit_search_url: string
  current_user_authorizations_html_url: string
  current_user_repositories_url: string
  current_user_url: string
  emails_url: string
  emojis_url: string
  events_url: string
  feeds_url: string
  followers_url: string
  following_url: string
  gists_url: string
  hub_url: string
  issue_search_url: string
  issues_url: string
  keys_url: string
  label_search_url: string
  notifications_url: string
  organization_repositories_url: string
  organization_teams_url: string
  organization_url: string
  public_gists_url: string
  rate_limit_url: string
  repository_search_url: string
  repository_url: string
  starred_gists_url: string
  starred_url: string
  topic_search_url?: string
  user_organizations_url: string
  user_repositories_url: string
  user_search_url: string
  user_url: string
}

export type t_runner = {
  busy: boolean
  id: number
  labels: t_runner_label[]
  name: string
  os: string
  status: string
}

export type t_runner_application = {
  architecture: string
  download_url: string
  filename: string
  os: string
  sha256_checksum?: string
  temp_download_token?: string
}

export type t_runner_groups_enterprise = {
  allows_public_repositories: boolean
  default: boolean
  id: number
  name: string
  restricted_to_workflows?: boolean
  runners_url: string
  selected_organizations_url?: string
  selected_workflows?: string[]
  visibility: string
  workflow_restrictions_read_only?: boolean
}

export type t_runner_groups_org = {
  allows_public_repositories: boolean
  default: boolean
  id: number
  inherited: boolean
  inherited_allows_public_repositories?: boolean
  name: string
  restricted_to_workflows?: boolean
  runners_url: string
  selected_repositories_url?: string
  selected_workflows?: string[]
  visibility: string
  workflow_restrictions_read_only?: boolean
}

export type t_runner_label = {
  id?: number
  name: string
  type?: "read-only" | "custom"
}

export type t_scim_error = {
  detail?: string | null
  documentation_url?: string | null
  message?: string | null
  schemas?: string[]
  scimType?: string | null
  status?: number
}

export type t_search_result_text_matches = {
  fragment?: string
  matches?: {
    indices?: number[]
    text?: string
  }[]
  object_type?: string | null
  object_url?: string
  property?: string
}[]

export type t_secret_scanning_alert = {
  created_at?: t_alert_created_at
  html_url?: t_alert_html_url
  locations_url?: string
  number?: t_alert_number
  push_protection_bypassed?: boolean | null
  push_protection_bypassed_at?: string | null
  push_protection_bypassed_by?: t_nullable_simple_user
  resolution?: t_secret_scanning_alert_resolution
  resolution_comment?: string | null
  resolved_at?: string | null
  resolved_by?: t_nullable_simple_user
  secret?: string
  secret_type?: string
  secret_type_display_name?: string
  state?: t_secret_scanning_alert_state
  updated_at?: t_nullable_alert_updated_at
  url?: t_alert_url
}

export type t_secret_scanning_alert_resolution =
  | "null"
  | "false_positive"
  | "wont_fix"
  | "revoked"
  | "used_in_tests"
  | null

export type t_secret_scanning_alert_resolution_comment = string | null

export type t_secret_scanning_alert_state = "open" | "resolved"

export type t_secret_scanning_location = {
  details:
    | t_secret_scanning_location_commit
    | t_secret_scanning_location_issue_title
    | t_secret_scanning_location_issue_body
    | t_secret_scanning_location_issue_comment
  type: "commit" | "issue_title" | "issue_body" | "issue_comment"
}

export type t_secret_scanning_location_commit = {
  blob_sha: string
  blob_url: string
  commit_sha: string
  commit_url: string
  end_column: number
  end_line: number
  path: string
  start_column: number
  start_line: number
}

export type t_secret_scanning_location_issue_body = {
  issue_body_url: string
}

export type t_secret_scanning_location_issue_comment = {
  issue_comment_url: string
}

export type t_secret_scanning_location_issue_title = {
  issue_title_url: string
}

export type t_security_and_analysis = {
  advanced_security?: {
    status?: "enabled" | "disabled"
  }
  secret_scanning?: {
    status?: "enabled" | "disabled"
  }
  secret_scanning_push_protection?: {
    status?: "enabled" | "disabled"
  }
} | null

export type t_selected_actions = {
  github_owned_allowed?: boolean
  patterns_allowed?: string[]
  verified_allowed?: boolean
}

export type t_selected_actions_url = string

export type t_short_blob = {
  sha: string
  url: string
}

export type t_short_branch = {
  commit: {
    sha: string
    url: string
  }
  name: string
  protected: boolean
  protection?: t_branch_protection
  protection_url?: string
}

export type t_simple_commit = {
  author: {
    email: string
    name: string
  } | null | null
  committer: {
    email: string
    name: string
  } | null | null
  id: string
  message: string
  timestamp: string
  tree_id: string
}

export type t_simple_commit_status = {
  avatar_url: string | null
  context: string
  created_at: string
  description: string | null
  id: number
  node_id: string
  required?: boolean | null
  state: string
  target_url: string | null
  updated_at: string
  url: string
}

export type t_simple_repository = {
  archive_url: string
  assignees_url: string
  blobs_url: string
  branches_url: string
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  deployments_url: string
  description: string | null
  downloads_url: string
  events_url: string
  fork: boolean
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  hooks_url: string
  html_url: string
  id: number
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  languages_url: string
  merges_url: string
  milestones_url: string
  name: string
  node_id: string
  notifications_url: string
  owner: t_simple_user
  private: boolean
  pulls_url: string
  releases_url: string
  stargazers_url: string
  statuses_url: string
  subscribers_url: string
  subscription_url: string
  tags_url: string
  teams_url: string
  trees_url: string
  url: string
}

export type t_simple_user = {
  avatar_url: string
  email?: string | null
  events_url: string
  followers_url: string
  following_url: string
  gists_url: string
  gravatar_id: string | null
  html_url: string
  id: number
  login: string
  name?: string | null
  node_id: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  site_admin: boolean
  starred_at?: string
  starred_url: string
  subscriptions_url: string
  type: string
  url: string
}

export type t_snapshot = {
  detector: {
    name: string
    url: string
    version: string
  }
  job: {
    correlator: string
    html_url?: string
    id: string
  }
  manifests?: {
    [key: string]: unknown
  }
  metadata?: t_metadata
  ref: string
  scanned: string
  sha: string
  version: number
}

export type t_ssh_signing_key = {
  created_at: string
  id: number
  key: string
  title: string
}

export type t_starred_repository = {
  repo: t_repository
  starred_at: string
}

export type t_status = {
  avatar_url: string | null
  context: string
  created_at: string
  creator: t_nullable_simple_user
  description: string | null
  id: number
  node_id: string
  state: string
  target_url: string | null
  updated_at: string
  url: string
}

export type t_status_check_policy = {
  checks: {
    app_id: number | null
    context: string
  }[]
  contexts: string[]
  contexts_url: string
  strict: boolean
  url: string
}

export type t_tag = {
  commit: {
    sha: string
    url: string
  }
  name: string
  node_id: string
  tarball_url: string
  zipball_url: string
}

export type t_tag_protection = {
  created_at?: string
  enabled?: boolean
  id?: number
  pattern: string
  updated_at?: string
}

export type t_team = {
  description: string | null
  html_url: string
  id: number
  members_url: string
  name: string
  node_id: string
  parent: t_nullable_team_simple
  permission: string
  permissions?: {
    admin: boolean
    maintain: boolean
    pull: boolean
    push: boolean
    triage: boolean
  }
  privacy?: string
  repositories_url: string
  slug: string
  url: string
}

export type t_team_discussion = {
  author: t_nullable_simple_user
  body: string
  body_html: string
  body_version: string
  comments_count: number
  comments_url: string
  created_at: string
  html_url: string
  last_edited_at: string | null
  node_id: string
  number: number
  pinned: boolean
  private: boolean
  reactions?: t_reaction_rollup
  team_url: string
  title: string
  updated_at: string
  url: string
}

export type t_team_discussion_comment = {
  author: t_nullable_simple_user
  body: string
  body_html: string
  body_version: string
  created_at: string
  discussion_url: string
  html_url: string
  last_edited_at: string | null
  node_id: string
  number: number
  reactions?: t_reaction_rollup
  updated_at: string
  url: string
}

export type t_team_full = {
  created_at: string
  description: string | null
  html_url: string
  id: number
  ldap_dn?: string
  members_count: number
  members_url: string
  name: string
  node_id: string
  organization: t_team_organization
  parent?: t_nullable_team_simple
  permission: string
  privacy?: "closed" | "secret"
  repos_count: number
  repositories_url: string
  slug: string
  updated_at: string
  url: string
}

export type t_team_membership = {
  role: "member" | "maintainer"
  state: "active" | "pending"
  url: string
}

export type t_team_organization = {
  avatar_url: string
  billing_email?: string | null
  blog?: string
  collaborators?: number | null
  company?: string
  created_at: string
  default_repository_permission?: string | null
  description: string | null
  disk_usage?: number | null
  email?: string
  events_url: string
  followers: number
  following: number
  has_organization_projects: boolean
  has_repository_projects: boolean
  hooks_url: string
  html_url: string
  id: number
  is_verified?: boolean
  issues_url: string
  location?: string
  login: string
  members_allowed_repository_creation_type?: string
  members_can_create_internal_repositories?: boolean
  members_can_create_pages?: boolean
  members_can_create_private_pages?: boolean
  members_can_create_private_repositories?: boolean
  members_can_create_public_pages?: boolean
  members_can_create_public_repositories?: boolean
  members_can_create_repositories?: boolean | null
  members_can_fork_private_repositories?: boolean | null
  members_url: string
  name?: string
  node_id: string
  owned_private_repos?: number
  plan?: {
    filled_seats?: number
    name: string
    private_repos: number
    seats?: number
    space: number
  }
  private_gists?: number | null
  public_gists: number
  public_members_url: string
  public_repos: number
  repos_url: string
  total_private_repos?: number
  twitter_username?: string | null
  two_factor_requirement_enabled?: boolean | null
  type: string
  updated_at: string
  url: string
  web_commit_signoff_required?: boolean
}

export type t_team_project = {
  body: string | null
  columns_url: string
  created_at: string
  creator: t_simple_user
  html_url: string
  id: number
  name: string
  node_id: string
  number: number
  organization_permission?: string
  owner_url: string
  permissions: {
    admin: boolean
    read: boolean
    write: boolean
  }
  private?: boolean
  state: string
  updated_at: string
  url: string
}

export type t_team_repository = {
  allow_auto_merge?: boolean
  allow_forking?: boolean
  allow_merge_commit?: boolean
  allow_rebase_merge?: boolean
  allow_squash_merge?: boolean
  archive_url: string
  archived: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url: string
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at: string | null
  default_branch: string
  delete_branch_on_merge?: boolean
  deployments_url: string
  description: string | null
  disabled: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks: number
  forks_count: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url: string
  has_downloads: boolean
  has_issues: boolean
  has_pages: boolean
  has_projects: boolean
  has_wiki: boolean
  homepage: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language: string | null
  languages_url: string
  license: t_nullable_license_simple
  master_branch?: string
  merges_url: string
  milestones_url: string
  mirror_url: string | null
  name: string
  network_count?: number
  node_id: string
  notifications_url: string
  open_issues: number
  open_issues_count: number
  owner: t_nullable_simple_user
  permissions?: {
    admin: boolean
    maintain?: boolean
    pull: boolean
    push: boolean
    triage?: boolean
  }
  private: boolean
  pulls_url: string
  pushed_at: string | null
  releases_url: string
  role_name?: string
  size: number
  ssh_url: string
  stargazers_count: number
  stargazers_url: string
  statuses_url: string
  subscribers_count?: number
  subscribers_url: string
  subscription_url: string
  svn_url: string
  tags_url: string
  teams_url: string
  temp_clone_token?: string
  template_repository?: t_nullable_repository
  topics?: string[]
  trees_url: string
  updated_at: string | null
  url: string
  visibility?: string
  watchers: number
  watchers_count: number
  web_commit_signoff_required?: boolean
}

export type t_team_simple = {
  description: string | null
  html_url: string
  id: number
  ldap_dn?: string
  members_url: string
  name: string
  node_id: string
  permission: string
  privacy?: string
  repositories_url: string
  slug: string
  url: string
}

export type t_thread = {
  id: string
  last_read_at: string | null
  reason: string
  repository: t_minimal_repository
  subject: {
    latest_comment_url: string
    title: string
    type: string
    url: string
  }
  subscription_url: string
  unread: boolean
  updated_at: string
  url: string
}

export type t_thread_subscription = {
  created_at: string | null
  ignored: boolean
  reason: string | null
  repository_url?: string
  subscribed: boolean
  thread_url?: string
  url: string
}

export type t_timeline_issue_events = {
  [key: string]: unknown
}

export type t_topic = {
  names: string[]
}

export type t_topic_search_result_item = {
  aliases?:
    | {
        topic_relation?: {
          id?: number
          name?: string
          relation_type?: string
          topic_id?: number
        }
      }[]
    | null
  created_at: string
  created_by: string | null
  curated: boolean
  description: string | null
  display_name: string | null
  featured: boolean
  logo_url?: string | null
  name: string
  related?:
    | {
        topic_relation?: {
          id?: number
          name?: string
          relation_type?: string
          topic_id?: number
        }
      }[]
    | null
  released: string | null
  repository_count?: number | null
  score: number
  short_description: string | null
  text_matches?: t_search_result_text_matches
  updated_at: string
}

export type t_traffic = {
  count: number
  timestamp: string
  uniques: number
}

export type t_user_marketplace_purchase = {
  account: t_marketplace_account
  billing_cycle: string
  free_trial_ends_on: string | null
  next_billing_date: string | null
  on_free_trial: boolean
  plan: t_marketplace_listing_plan
  unit_count: number | null
  updated_at: string | null
}

export type t_user_search_result_item = {
  avatar_url: string
  bio?: string | null
  blog?: string | null
  company?: string | null
  created_at?: string
  email?: string | null
  events_url: string
  followers?: number
  followers_url: string
  following?: number
  following_url: string
  gists_url: string
  gravatar_id: string | null
  hireable?: boolean | null
  html_url: string
  id: number
  location?: string | null
  login: string
  name?: string | null
  node_id: string
  organizations_url: string
  public_gists?: number
  public_repos?: number
  received_events_url: string
  repos_url: string
  score: number
  site_admin: boolean
  starred_url: string
  subscriptions_url: string
  suspended_at?: string | null
  text_matches?: t_search_result_text_matches
  type: string
  updated_at?: string
  url: string
}

export type t_validation_error = {
  documentation_url: string
  errors?: {
    code: string
    field?: string
    index?: number
    message?: string
    resource?: string
    value?: string | null | number | string[]
  }[]
  message: string
}

export type t_validation_error_simple = {
  documentation_url: string
  errors?: string[]
  message: string
}

export type t_verification = {
  payload: string | null
  reason: string
  signature: string | null
  verified: boolean
}

export type t_view_traffic = {
  count: number
  uniques: number
  views: t_traffic[]
}

export type t_wait_timer = number

export type t_webhook_config = {
  content_type?: t_webhook_config_content_type
  insecure_ssl?: t_webhook_config_insecure_ssl
  secret?: t_webhook_config_secret
  url?: t_webhook_config_url
}

export type t_webhook_config_content_type = string

export type t_webhook_config_insecure_ssl = string | number

export type t_webhook_config_secret = string

export type t_webhook_config_url = string

export type t_workflow = {
  badge_url: string
  created_at: string
  deleted_at?: string
  html_url: string
  id: number
  name: string
  node_id: string
  path: string
  state:
    | "active"
    | "deleted"
    | "disabled_fork"
    | "disabled_inactivity"
    | "disabled_manually"
  updated_at: string
  url: string
}

export type t_workflow_run = {
  actor?: t_simple_user
  artifacts_url: string
  cancel_url: string
  check_suite_id?: number
  check_suite_node_id?: string
  check_suite_url: string
  conclusion: string | null
  created_at: string
  display_title: string
  event: string
  head_branch: string | null
  head_commit: t_nullable_simple_commit
  head_repository: t_minimal_repository
  head_repository_id?: number
  head_sha: string
  html_url: string
  id: number
  jobs_url: string
  logs_url: string
  name?: string | null
  node_id: string
  path: string
  previous_attempt_url?: string | null
  pull_requests: t_pull_request_minimal[] | null
  referenced_workflows?: t_referenced_workflow[] | null
  repository: t_minimal_repository
  rerun_url: string
  run_attempt?: number
  run_number: number
  run_started_at?: string
  status: string | null
  triggering_actor?: t_simple_user
  updated_at: string
  url: string
  workflow_id: number
  workflow_url: string
}

export type t_workflow_run_usage = {
  billable: {
    MACOS?: {
      job_runs?: {
        duration_ms: number
        job_id: number
      }[]
      jobs: number
      total_ms: number
    }
    UBUNTU?: {
      job_runs?: {
        duration_ms: number
        job_id: number
      }[]
      jobs: number
      total_ms: number
    }
    WINDOWS?: {
      job_runs?: {
        duration_ms: number
        job_id: number
      }[]
      jobs: number
      total_ms: number
    }
  }
  run_duration_ms?: number
}

export type t_workflow_usage = {
  billable: {
    MACOS?: {
      total_ms?: number
    }
    UBUNTU?: {
      total_ms?: number
    }
    WINDOWS?: {
      total_ms?: number
    }
  }
}
