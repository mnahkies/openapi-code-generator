/** AUTOGENERATED - DO NOT EDIT **/
/* tslint:disable */
/* eslint-disable */

export type EmptyObject = {[key: string]: never}

export type t_actions_billing_usage = {
  included_minutes: number
  minutes_used_breakdown: {
    MACOS?: number | undefined
    UBUNTU?: number | undefined
    WINDOWS?: number | undefined
    macos_12_core?: number | undefined
    total?: number | undefined
    ubuntu_16_core?: number | undefined
    ubuntu_32_core?: number | undefined
    ubuntu_4_core?: number | undefined
    ubuntu_64_core?: number | undefined
    ubuntu_8_core?: number | undefined
    windows_16_core?: number | undefined
    windows_32_core?: number | undefined
    windows_4_core?: number | undefined
    windows_64_core?: number | undefined
    windows_8_core?: number | undefined
  }
  total_minutes_used: number
  total_paid_minutes_used: number
}

export type t_actions_cache_list = {
  actions_caches: {
    created_at?: string | undefined
    id?: number | undefined
    key?: string | undefined
    last_accessed_at?: string | undefined
    ref?: string | undefined
    size_in_bytes?: number | undefined
    version?: string | undefined
  }[]
  total_count: number
}

export type t_actions_cache_usage_by_repository = {
  active_caches_count: number
  active_caches_size_in_bytes: number
  full_name: string
}

export type t_actions_cache_usage_org_enterprise = {
  total_active_caches_count: number
  total_active_caches_size_in_bytes: number
}

export type t_actions_can_approve_pull_request_reviews = boolean

export type t_actions_default_workflow_permissions = "read" | "write"

export type t_actions_enabled = boolean

export type t_actions_get_default_workflow_permissions = {
  can_approve_pull_request_reviews: t_actions_can_approve_pull_request_reviews
  default_workflow_permissions: t_actions_default_workflow_permissions
}

export type t_actions_hosted_runner = {
  id: number
  image_details: t_nullable_actions_hosted_runner_pool_image
  last_active_on?: (string | null) | undefined
  machine_size_details: t_actions_hosted_runner_machine_spec
  maximum_runners?: number | undefined
  name: string
  platform: string
  public_ip_enabled: boolean
  public_ips?: t_public_ip[] | undefined
  runner_group_id?: number | undefined
  status: "Ready" | "Provisioning" | "Shutdown" | "Deleting" | "Stuck"
}

export type t_actions_hosted_runner_image = {
  display_name: string
  id: string
  platform: string
  size_gb: number
  source: "github" | "partner" | "custom"
}

export type t_actions_hosted_runner_limits = {
  public_ips: {
    current_usage: number
    maximum: number
  }
}

export type t_actions_hosted_runner_machine_spec = {
  cpu_cores: number
  id: string
  memory_gb: number
  storage_gb: number
}

export type t_actions_organization_permissions = {
  allowed_actions?: t_allowed_actions | undefined
  enabled_repositories: t_enabled_repositories
  selected_actions_url?: t_selected_actions_url | undefined
  selected_repositories_url?: string | undefined
}

export type t_actions_public_key = {
  created_at?: string | undefined
  id?: number | undefined
  key: string
  key_id: string
  title?: string | undefined
  url?: string | undefined
}

export type t_actions_repository_permissions = {
  allowed_actions?: t_allowed_actions | undefined
  enabled: t_actions_enabled
  selected_actions_url?: t_selected_actions_url | undefined
}

export type t_actions_secret = {
  created_at: string
  name: string
  updated_at: string
}

export type t_actions_variable = {
  created_at: string
  name: string
  updated_at: string
  value: string
}

export type t_actions_workflow_access_to_repository = {
  access_level: "none" | "user" | "organization"
}

export type t_activity = {
  activity_type:
    | "push"
    | "force_push"
    | "branch_deletion"
    | "branch_creation"
    | "pr_merge"
    | "merge_queue_merge"
  actor: t_nullable_simple_user
  after: string
  before: string
  id: number
  node_id: string
  ref: string
  timestamp: string
}

export type t_actor = {
  avatar_url: string
  display_login?: string | undefined
  gravatar_id: string | null
  id: number
  login: string
  url: string
}

export type t_added_to_project_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  project_card?:
    | {
        column_name: string
        id: number
        previous_column_name?: string | undefined
        project_id: number
        project_url: string
        url: string
      }
    | undefined
  url: string
}

export type t_alert_auto_dismissed_at = string | null

export type t_alert_created_at = string

export type t_alert_dismissed_at = string | null

export type t_alert_fixed_at = string | null

export type t_alert_html_url = string

export type t_alert_instances_url = string

export type t_alert_number = number

export type t_alert_updated_at = string

export type t_alert_url = string

export type t_allowed_actions = "all" | "local_only" | "selected"

export type t_api_insights_route_stats = {
  api_route?: string | undefined
  http_method?: string | undefined
  last_rate_limited_timestamp?: (string | null) | undefined
  last_request_timestamp?: string | undefined
  rate_limited_request_count?: number | undefined
  total_request_count?: number | undefined
}[]

export type t_api_insights_subject_stats = {
  last_rate_limited_timestamp?: (string | null) | undefined
  last_request_timestamp?: string | undefined
  rate_limited_request_count?: number | undefined
  subject_id?: number | undefined
  subject_name?: string | undefined
  subject_type?: string | undefined
  total_request_count?: number | undefined
}[]

export type t_api_insights_summary_stats = {
  rate_limited_request_count?: number | undefined
  total_request_count?: number | undefined
}

export type t_api_insights_time_stats = {
  rate_limited_request_count?: number | undefined
  timestamp?: string | undefined
  total_request_count?: number | undefined
}[]

export type t_api_insights_user_stats = {
  actor_id?: number | undefined
  actor_name?: string | undefined
  actor_type?: string | undefined
  integration_id?: (number | null) | undefined
  last_rate_limited_timestamp?: (string | null) | undefined
  last_request_timestamp?: string | undefined
  oauth_application_id?: (number | null) | undefined
  rate_limited_request_count?: number | undefined
  total_request_count?: number | undefined
}[]

export type t_api_overview = {
  actions?: string[] | undefined
  actions_macos?: string[] | undefined
  api?: string[] | undefined
  codespaces?: string[] | undefined
  copilot?: string[] | undefined
  dependabot?: string[] | undefined
  domains?:
    | {
        actions?: string[] | undefined
        actions_inbound?:
          | {
              full_domains?: string[] | undefined
              wildcard_domains?: string[] | undefined
            }
          | undefined
        artifact_attestations?:
          | {
              services?: string[] | undefined
              trust_domain?: string | undefined
            }
          | undefined
        codespaces?: string[] | undefined
        copilot?: string[] | undefined
        packages?: string[] | undefined
        website?: string[] | undefined
      }
    | undefined
  git?: string[] | undefined
  github_enterprise_importer?: string[] | undefined
  hooks?: string[] | undefined
  importer?: string[] | undefined
  packages?: string[] | undefined
  pages?: string[] | undefined
  ssh_key_fingerprints?:
    | {
        SHA256_DSA?: string | undefined
        SHA256_ECDSA?: string | undefined
        SHA256_ED25519?: string | undefined
        SHA256_RSA?: string | undefined
      }
    | undefined
  ssh_keys?: string[] | undefined
  verifiable_password_authentication: boolean
  web?: string[] | undefined
}

export type t_app_permissions = {
  actions?: ("read" | "write") | undefined
  administration?: ("read" | "write") | undefined
  checks?: ("read" | "write") | undefined
  codespaces?: ("read" | "write") | undefined
  contents?: ("read" | "write") | undefined
  dependabot_secrets?: ("read" | "write") | undefined
  deployments?: ("read" | "write") | undefined
  email_addresses?: ("read" | "write") | undefined
  environments?: ("read" | "write") | undefined
  followers?: ("read" | "write") | undefined
  git_ssh_keys?: ("read" | "write") | undefined
  gpg_keys?: ("read" | "write") | undefined
  interaction_limits?: ("read" | "write") | undefined
  issues?: ("read" | "write") | undefined
  members?: ("read" | "write") | undefined
  metadata?: ("read" | "write") | undefined
  organization_administration?: ("read" | "write") | undefined
  organization_announcement_banners?: ("read" | "write") | undefined
  organization_copilot_seat_management?: "write" | undefined
  organization_custom_org_roles?: ("read" | "write") | undefined
  organization_custom_properties?: ("read" | "write" | "admin") | undefined
  organization_custom_roles?: ("read" | "write") | undefined
  organization_events?: "read" | undefined
  organization_hooks?: ("read" | "write") | undefined
  organization_packages?: ("read" | "write") | undefined
  organization_personal_access_token_requests?: ("read" | "write") | undefined
  organization_personal_access_tokens?: ("read" | "write") | undefined
  organization_plan?: "read" | undefined
  organization_projects?: ("read" | "write" | "admin") | undefined
  organization_secrets?: ("read" | "write") | undefined
  organization_self_hosted_runners?: ("read" | "write") | undefined
  organization_user_blocking?: ("read" | "write") | undefined
  packages?: ("read" | "write") | undefined
  pages?: ("read" | "write") | undefined
  profile?: "write" | undefined
  pull_requests?: ("read" | "write") | undefined
  repository_custom_properties?: ("read" | "write") | undefined
  repository_hooks?: ("read" | "write") | undefined
  repository_projects?: ("read" | "write" | "admin") | undefined
  secret_scanning_alerts?: ("read" | "write") | undefined
  secrets?: ("read" | "write") | undefined
  security_events?: ("read" | "write") | undefined
  single_file?: ("read" | "write") | undefined
  starring?: ("read" | "write") | undefined
  statuses?: ("read" | "write") | undefined
  team_discussions?: ("read" | "write") | undefined
  vulnerability_alerts?: ("read" | "write") | undefined
  workflows?: "write" | undefined
}

export type t_artifact = {
  archive_download_url: string
  created_at: string | null
  digest?: (string | null) | undefined
  expired: boolean
  expires_at: string | null
  id: number
  name: string
  node_id: string
  size_in_bytes: number
  updated_at: string | null
  url: string
  workflow_run?:
    | ({
        head_branch?: string | undefined
        head_repository_id?: number | undefined
        head_sha?: string | undefined
        id?: number | undefined
        repository_id?: number | undefined
      } | null)
    | undefined
}

export type t_assigned_issue_event = {
  actor: t_simple_user
  assignee: t_simple_user
  assigner: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_integration
  url: string
}

export type t_authentication_token = {
  expires_at: string
  permissions?: EmptyObject | undefined
  repositories?: t_repository[] | undefined
  repository_selection?: ("all" | "selected") | undefined
  single_file?: (string | null) | undefined
  token: string
}

export type t_author_association =
  | "COLLABORATOR"
  | "CONTRIBUTOR"
  | "FIRST_TIMER"
  | "FIRST_TIME_CONTRIBUTOR"
  | "MANNEQUIN"
  | "MEMBER"
  | "NONE"
  | "OWNER"

export type t_authorization = {
  app: {
    client_id: string
    name: string
    url: string
  }
  created_at: string
  expires_at: string | null
  fingerprint: string | null
  hashed_token: string | null
  id: number
  installation?: t_nullable_scoped_installation | undefined
  note: string | null
  note_url: string | null
  scopes: string[] | null
  token: string
  token_last_eight: string | null
  updated_at: string
  url: string
  user?: t_nullable_simple_user | undefined
}

export type t_auto_merge = {
  commit_message: string
  commit_title: string
  enabled_by: t_simple_user
  merge_method: "merge" | "squash" | "rebase"
} | null

export type t_autolink = {
  id: number
  is_alphanumeric: boolean
  key_prefix: string
  url_template: string
}

export type t_base_gist = {
  comments: number
  comments_enabled?: boolean | undefined
  comments_url: string
  commits_url: string
  created_at: string
  description: string | null
  files: {
    [key: string]:
      | {
          encoding?: string | undefined
          filename?: string | undefined
          language?: string | undefined
          raw_url?: string | undefined
          size?: number | undefined
          type?: string | undefined
        }
      | undefined
  }
  forks?: unknown[] | undefined
  forks_url: string
  git_pull_url: string
  git_push_url: string
  history?: unknown[] | undefined
  html_url: string
  id: string
  node_id: string
  owner?: t_simple_user | undefined
  public: boolean
  truncated?: boolean | undefined
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_basic_error = {
  documentation_url?: string | undefined
  message?: string | undefined
  status?: string | undefined
  url?: string | undefined
}

export type t_billing_usage_report = {
  usageItems?:
    | {
        date: string
        discountAmount: number
        grossAmount: number
        netAmount: number
        organizationName: string
        pricePerUnit: number
        product: string
        quantity: number
        repositoryName?: string | undefined
        sku: string
        unitType: string
      }[]
    | undefined
}

export type t_billing_usage_report_user = {
  usageItems?:
    | {
        date: string
        discountAmount: number
        grossAmount: number
        netAmount: number
        pricePerUnit: number
        product: string
        quantity: number
        repositoryName?: string | undefined
        sku: string
        unitType: string
      }[]
    | undefined
}

export type t_blob = {
  content: string
  encoding: string
  highlighted_content?: string | undefined
  node_id: string
  sha: string
  size: number | null
  url: string
}

export type t_branch_protection = {
  allow_deletions?:
    | {
        enabled?: boolean | undefined
      }
    | undefined
  allow_force_pushes?:
    | {
        enabled?: boolean | undefined
      }
    | undefined
  allow_fork_syncing?:
    | {
        enabled?: boolean | undefined
      }
    | undefined
  block_creations?:
    | {
        enabled?: boolean | undefined
      }
    | undefined
  enabled?: boolean | undefined
  enforce_admins?: t_protected_branch_admin_enforced | undefined
  lock_branch?:
    | {
        enabled?: boolean | undefined
      }
    | undefined
  name?: string | undefined
  protection_url?: string | undefined
  required_conversation_resolution?:
    | {
        enabled?: boolean | undefined
      }
    | undefined
  required_linear_history?:
    | {
        enabled?: boolean | undefined
      }
    | undefined
  required_pull_request_reviews?:
    | t_protected_branch_pull_request_review
    | undefined
  required_signatures?:
    | {
        enabled: boolean
        url: string
      }
    | undefined
  required_status_checks?: t_protected_branch_required_status_check | undefined
  restrictions?: t_branch_restriction_policy | undefined
  url?: string | undefined
}

export type t_branch_restriction_policy = {
  apps: {
    client_id?: string | undefined
    created_at?: string | undefined
    description?: string | undefined
    events?: string[] | undefined
    external_url?: string | undefined
    html_url?: string | undefined
    id?: number | undefined
    name?: string | undefined
    node_id?: string | undefined
    owner?:
      | {
          avatar_url?: string | undefined
          description?: string | undefined
          events_url?: string | undefined
          followers_url?: string | undefined
          following_url?: string | undefined
          gists_url?: string | undefined
          gravatar_id?: string | undefined
          hooks_url?: string | undefined
          html_url?: string | undefined
          id?: number | undefined
          issues_url?: string | undefined
          login?: string | undefined
          members_url?: string | undefined
          node_id?: string | undefined
          organizations_url?: string | undefined
          public_members_url?: string | undefined
          received_events_url?: string | undefined
          repos_url?: string | undefined
          site_admin?: boolean | undefined
          starred_url?: string | undefined
          subscriptions_url?: string | undefined
          type?: string | undefined
          url?: string | undefined
          user_view_type?: string | undefined
        }
      | undefined
    permissions?:
      | {
          contents?: string | undefined
          issues?: string | undefined
          metadata?: string | undefined
          single_file?: string | undefined
        }
      | undefined
    slug?: string | undefined
    updated_at?: string | undefined
  }[]
  apps_url: string
  teams: {
    description?: (string | null) | undefined
    html_url?: string | undefined
    id?: number | undefined
    members_url?: string | undefined
    name?: string | undefined
    node_id?: string | undefined
    notification_setting?: string | undefined
    parent?: (string | null) | undefined
    permission?: string | undefined
    privacy?: string | undefined
    repositories_url?: string | undefined
    slug?: string | undefined
    url?: string | undefined
  }[]
  teams_url: string
  url: string
  users: {
    avatar_url?: string | undefined
    events_url?: string | undefined
    followers_url?: string | undefined
    following_url?: string | undefined
    gists_url?: string | undefined
    gravatar_id?: string | undefined
    html_url?: string | undefined
    id?: number | undefined
    login?: string | undefined
    node_id?: string | undefined
    organizations_url?: string | undefined
    received_events_url?: string | undefined
    repos_url?: string | undefined
    site_admin?: boolean | undefined
    starred_url?: string | undefined
    subscriptions_url?: string | undefined
    type?: string | undefined
    url?: string | undefined
    user_view_type?: string | undefined
  }[]
  users_url: string
}

export type t_branch_short = {
  commit: {
    sha: string
    url: string
  }
  name: string
  protected: boolean
}

export type t_branch_with_protection = {
  _links: {
    html: string
    self: string
  }
  commit: t_commit
  name: string
  pattern?: string | undefined
  protected: boolean
  protection: t_branch_protection
  protection_url: string
  required_approving_review_count?: number | undefined
}

export type t_campaign_state = "open" | "closed"

export type t_campaign_summary = {
  alert_stats?:
    | {
        closed_count: number
        in_progress_count: number
        open_count: number
      }
    | undefined
  closed_at?: (string | null) | undefined
  contact_link: string | null
  created_at: string
  description: string
  ends_at: string
  managers: t_simple_user[]
  name?: string | undefined
  number: number
  published_at?: string | undefined
  state: t_campaign_state
  team_managers?: t_team[] | undefined
  updated_at: string
}

export type t_check_annotation = {
  annotation_level: string | null
  blob_href: string
  end_column: number | null
  end_line: number
  message: string | null
  path: string
  raw_details: string | null
  start_column: number | null
  start_line: number
  title: string | null
}

export type t_check_automated_security_fixes = {
  enabled: boolean
  paused: boolean
}

export type t_check_run = {
  app: t_nullable_integration
  check_suite: {
    id: number
  } | null
  completed_at: string | null
  conclusion:
    | "success"
    | "failure"
    | "neutral"
    | "cancelled"
    | "skipped"
    | "timed_out"
    | "action_required"
    | null
  deployment?: t_deployment_simple | undefined
  details_url: string | null
  external_id: string | null
  head_sha: string
  html_url: string | null
  id: number
  name: string
  node_id: string
  output: {
    annotations_count: number
    annotations_url: string
    summary: string | null
    text: string | null
    title: string | null
  }
  pull_requests: t_pull_request_minimal[]
  started_at: string | null
  status:
    | "queued"
    | "in_progress"
    | "completed"
    | "waiting"
    | "requested"
    | "pending"
  url: string
}

export type t_check_suite = {
  after: string | null
  app: t_nullable_integration
  before: string | null
  check_runs_url: string
  conclusion:
    | "success"
    | "failure"
    | "neutral"
    | "cancelled"
    | "skipped"
    | "timed_out"
    | "action_required"
    | "startup_failure"
    | "stale"
    | null
  created_at: string | null
  head_branch: string | null
  head_commit: t_simple_commit
  head_sha: string
  id: number
  latest_check_runs_count: number
  node_id: string
  pull_requests: t_pull_request_minimal[] | null
  repository: t_minimal_repository
  rerequestable?: boolean | undefined
  runs_rerequestable?: boolean | undefined
  status:
    | "queued"
    | "in_progress"
    | "completed"
    | "waiting"
    | "requested"
    | "pending"
    | null
  updated_at: string | null
  url: string | null
}

export type t_check_suite_preference = {
  preferences: {
    auto_trigger_checks?:
      | {
          app_id: number
          setting: boolean
        }[]
      | undefined
  }
  repository: t_minimal_repository
}

export type t_classroom = {
  archived: boolean
  id: number
  name: string
  organization: t_simple_classroom_organization
  url: string
}

export type t_classroom_accepted_assignment = {
  assignment: t_simple_classroom_assignment
  commit_count: number
  grade: string
  id: number
  passing: boolean
  repository: t_simple_classroom_repository
  students: t_simple_classroom_user[]
  submitted: boolean
}

export type t_classroom_assignment = {
  accepted: number
  classroom: t_classroom
  deadline: string | null
  editor: string
  feedback_pull_requests_enabled: boolean
  id: number
  invitations_enabled: boolean
  invite_link: string
  language: string
  max_members: number | null
  max_teams: number | null
  passing: number
  public_repo: boolean
  slug: string
  starter_code_repository: t_simple_classroom_repository
  students_are_repo_admins: boolean
  submitted: number
  title: string
  type: "individual" | "group"
}

export type t_classroom_assignment_grade = {
  assignment_name: string
  assignment_url: string
  github_username: string
  group_name?: string | undefined
  points_available: number
  points_awarded: number
  roster_identifier: string
  starter_code_url: string
  student_repository_name: string
  student_repository_url: string
  submission_timestamp: string
}

export type t_clone_traffic = {
  clones: t_traffic[]
  count: number
  uniques: number
}

export type t_code_frequency_stat = number[]

export type t_code_of_conduct = {
  body?: string | undefined
  html_url: string | null
  key: string
  name: string
  url: string
}

export type t_code_of_conduct_simple = {
  html_url: string | null
  key: string
  name: string
  url: string
}

export type t_code_scanning_alert = {
  created_at: t_alert_created_at
  dismissal_approved_by?: t_nullable_simple_user | undefined
  dismissed_at: t_alert_dismissed_at
  dismissed_by: t_nullable_simple_user
  dismissed_comment?: t_code_scanning_alert_dismissed_comment | undefined
  dismissed_reason: t_code_scanning_alert_dismissed_reason
  fixed_at?: t_alert_fixed_at | undefined
  html_url: t_alert_html_url
  instances_url: t_alert_instances_url
  most_recent_instance: t_code_scanning_alert_instance
  number: t_alert_number
  rule: t_code_scanning_alert_rule
  state: t_code_scanning_alert_state
  tool: t_code_scanning_analysis_tool
  updated_at?: t_alert_updated_at | undefined
  url: t_alert_url
}

export type t_code_scanning_alert_classification =
  | "source"
  | "generated"
  | "test"
  | "library"
  | null

export type t_code_scanning_alert_create_request = boolean

export type t_code_scanning_alert_dismissed_comment = string | null

export type t_code_scanning_alert_dismissed_reason =
  | "false positive"
  | "won't fix"
  | "used in tests"
  | null

export type t_code_scanning_alert_environment = string

export type t_code_scanning_alert_instance = {
  analysis_key?: t_code_scanning_analysis_analysis_key | undefined
  category?: t_code_scanning_analysis_category | undefined
  classifications?: t_code_scanning_alert_classification[] | undefined
  commit_sha?: string | undefined
  environment?: t_code_scanning_alert_environment | undefined
  html_url?: string | undefined
  location?: t_code_scanning_alert_location | undefined
  message?:
    | {
        text?: string | undefined
      }
    | undefined
  ref?: t_code_scanning_ref | undefined
  state?: t_code_scanning_alert_state | undefined
}

export type t_code_scanning_alert_items = {
  created_at: t_alert_created_at
  dismissal_approved_by?: t_nullable_simple_user | undefined
  dismissed_at: t_alert_dismissed_at
  dismissed_by: t_nullable_simple_user
  dismissed_comment?: t_code_scanning_alert_dismissed_comment | undefined
  dismissed_reason: t_code_scanning_alert_dismissed_reason
  fixed_at?: t_alert_fixed_at | undefined
  html_url: t_alert_html_url
  instances_url: t_alert_instances_url
  most_recent_instance: t_code_scanning_alert_instance
  number: t_alert_number
  rule: t_code_scanning_alert_rule_summary
  state: t_code_scanning_alert_state
  tool: t_code_scanning_analysis_tool
  updated_at?: t_alert_updated_at | undefined
  url: t_alert_url
}

export type t_code_scanning_alert_location = {
  end_column?: number | undefined
  end_line?: number | undefined
  path?: string | undefined
  start_column?: number | undefined
  start_line?: number | undefined
}

export type t_code_scanning_alert_rule = {
  description?: string | undefined
  full_description?: string | undefined
  help?: (string | null) | undefined
  help_uri?: (string | null) | undefined
  id?: (string | null) | undefined
  name?: string | undefined
  security_severity_level?:
    | ("low" | "medium" | "high" | "critical" | null)
    | undefined
  severity?: ("none" | "note" | "warning" | "error" | null) | undefined
  tags?: (string[] | null) | undefined
}

export type t_code_scanning_alert_rule_summary = {
  description?: string | undefined
  full_description?: string | undefined
  help?: (string | null) | undefined
  help_uri?: (string | null) | undefined
  id?: (string | null) | undefined
  name?: string | undefined
  security_severity_level?:
    | ("low" | "medium" | "high" | "critical" | null)
    | undefined
  severity?: ("none" | "note" | "warning" | "error" | null) | undefined
  tags?: (string[] | null) | undefined
}

export type t_code_scanning_alert_set_state = "open" | "dismissed"

export type t_code_scanning_alert_severity =
  | "critical"
  | "high"
  | "medium"
  | "low"
  | "warning"
  | "note"
  | "error"

export type t_code_scanning_alert_state = "open" | "dismissed" | "fixed" | null

export type t_code_scanning_alert_state_query =
  | "open"
  | "closed"
  | "dismissed"
  | "fixed"

export type t_code_scanning_analysis = {
  analysis_key: t_code_scanning_analysis_analysis_key
  category?: t_code_scanning_analysis_category | undefined
  commit_sha: t_code_scanning_analysis_commit_sha
  created_at: t_code_scanning_analysis_created_at
  deletable: boolean
  environment: t_code_scanning_analysis_environment
  error: string
  id: number
  ref: t_code_scanning_ref
  results_count: number
  rules_count: number
  sarif_id: t_code_scanning_analysis_sarif_id
  tool: t_code_scanning_analysis_tool
  url: t_code_scanning_analysis_url
  warning: string
}

export type t_code_scanning_analysis_analysis_key = string

export type t_code_scanning_analysis_category = string

export type t_code_scanning_analysis_commit_sha = string

export type t_code_scanning_analysis_created_at = string

export type t_code_scanning_analysis_deletion = {
  readonly confirm_delete_url: string | null
  readonly next_analysis_url: string | null
}

export type t_code_scanning_analysis_environment = string

export type t_code_scanning_analysis_sarif_file = string

export type t_code_scanning_analysis_sarif_id = string

export type t_code_scanning_analysis_tool = {
  guid?: t_code_scanning_analysis_tool_guid | undefined
  name?: t_code_scanning_analysis_tool_name | undefined
  version?: t_code_scanning_analysis_tool_version | undefined
}

export type t_code_scanning_analysis_tool_guid = string | null

export type t_code_scanning_analysis_tool_name = string

export type t_code_scanning_analysis_tool_version = string | null

export type t_code_scanning_analysis_url = string

export type t_code_scanning_autofix = {
  description: t_code_scanning_autofix_description
  started_at: t_code_scanning_autofix_started_at
  status: t_code_scanning_autofix_status
}

export type t_code_scanning_autofix_commits_response = {
  sha?: string | undefined
  target_ref?: string | undefined
}

export type t_code_scanning_autofix_description = string | null

export type t_code_scanning_autofix_started_at = string

export type t_code_scanning_autofix_status =
  | "pending"
  | "error"
  | "success"
  | "outdated"

export type t_code_scanning_codeql_database = {
  commit_oid?: (string | null) | undefined
  content_type: string
  created_at: string
  id: number
  language: string
  name: string
  size: number
  updated_at: string
  uploader: t_simple_user
  url: string
}

export type t_code_scanning_default_setup = {
  languages?:
    | (
        | "actions"
        | "c-cpp"
        | "csharp"
        | "go"
        | "java-kotlin"
        | "javascript-typescript"
        | "javascript"
        | "python"
        | "ruby"
        | "typescript"
        | "swift"
      )[]
    | undefined
  query_suite?: ("default" | "extended") | undefined
  runner_label?: (string | null) | undefined
  runner_type?: ("standard" | "labeled" | null) | undefined
  schedule?: ("weekly" | null) | undefined
  state?: ("configured" | "not-configured") | undefined
  threat_model?: ("remote" | "remote_and_local") | undefined
  updated_at?: (string | null) | undefined
}

export type t_code_scanning_default_setup_options = {
  runner_label?: (string | null) | undefined
  runner_type?: ("standard" | "labeled" | "not_set") | undefined
} | null

export type t_code_scanning_default_setup_update_response = {
  run_id?: number | undefined
  run_url?: string | undefined
}

export type t_code_scanning_organization_alert_items = {
  created_at: t_alert_created_at
  dismissal_approved_by?: t_nullable_simple_user | undefined
  dismissed_at: t_alert_dismissed_at
  dismissed_by: t_nullable_simple_user
  dismissed_comment?: t_code_scanning_alert_dismissed_comment | undefined
  dismissed_reason: t_code_scanning_alert_dismissed_reason
  fixed_at?: t_alert_fixed_at | undefined
  html_url: t_alert_html_url
  instances_url: t_alert_instances_url
  most_recent_instance: t_code_scanning_alert_instance
  number: t_alert_number
  repository: t_simple_repository
  rule: t_code_scanning_alert_rule_summary
  state: t_code_scanning_alert_state
  tool: t_code_scanning_analysis_tool
  updated_at?: t_alert_updated_at | undefined
  url: t_alert_url
}

export type t_code_scanning_ref = string

export type t_code_scanning_ref_full = string

export type t_code_scanning_sarifs_receipt = {
  id?: t_code_scanning_analysis_sarif_id | undefined
  readonly url?: string | undefined
}

export type t_code_scanning_sarifs_status = {
  readonly analyses_url?: (string | null) | undefined
  readonly errors?: (string[] | null) | undefined
  processing_status?: ("pending" | "complete" | "failed") | undefined
}

export type t_code_scanning_variant_analysis = {
  actions_workflow_run_id?: number | undefined
  actor: t_simple_user
  completed_at?: (string | null) | undefined
  controller_repo: t_simple_repository
  created_at?: string | undefined
  failure_reason?:
    | ("no_repos_queried" | "actions_workflow_run_failed" | "internal_error")
    | undefined
  id: number
  query_language: t_code_scanning_variant_analysis_language
  query_pack_url: string
  scanned_repositories?:
    | {
        analysis_status: t_code_scanning_variant_analysis_status
        artifact_size_in_bytes?: number | undefined
        failure_message?: string | undefined
        repository: t_code_scanning_variant_analysis_repository
        result_count?: number | undefined
      }[]
    | undefined
  skipped_repositories?:
    | {
        access_mismatch_repos: t_code_scanning_variant_analysis_skipped_repo_group
        no_codeql_db_repos: t_code_scanning_variant_analysis_skipped_repo_group
        not_found_repos: {
          repository_count: number
          repository_full_names: string[]
        }
        over_limit_repos: t_code_scanning_variant_analysis_skipped_repo_group
      }
    | undefined
  status: "in_progress" | "succeeded" | "failed" | "cancelled"
  updated_at?: string | undefined
}

export type t_code_scanning_variant_analysis_language =
  | "cpp"
  | "csharp"
  | "go"
  | "java"
  | "javascript"
  | "python"
  | "ruby"
  | "rust"
  | "swift"

export type t_code_scanning_variant_analysis_repo_task = {
  analysis_status: t_code_scanning_variant_analysis_status
  artifact_size_in_bytes?: number | undefined
  artifact_url?: string | undefined
  database_commit_sha?: string | undefined
  failure_message?: string | undefined
  repository: t_simple_repository
  result_count?: number | undefined
  source_location_prefix?: string | undefined
}

export type t_code_scanning_variant_analysis_repository = {
  full_name: string
  id: number
  name: string
  private: boolean
  stargazers_count: number
  updated_at: string | null
}

export type t_code_scanning_variant_analysis_skipped_repo_group = {
  repositories: t_code_scanning_variant_analysis_repository[]
  repository_count: number
}

export type t_code_scanning_variant_analysis_status =
  | "pending"
  | "in_progress"
  | "succeeded"
  | "failed"
  | "canceled"
  | "timed_out"

export type t_code_search_result_item = {
  file_size?: number | undefined
  git_url: string
  html_url: string
  language?: (string | null) | undefined
  last_modified_at?: string | undefined
  line_numbers?: string[] | undefined
  name: string
  path: string
  repository: t_minimal_repository
  score: number
  sha: string
  text_matches?: t_search_result_text_matches | undefined
  url: string
}

export type t_code_security_configuration = {
  advanced_security?:
    | ("enabled" | "disabled" | "code_security" | "secret_protection")
    | undefined
  code_scanning_default_setup?: ("enabled" | "disabled" | "not_set") | undefined
  code_scanning_default_setup_options?:
    | ({
        runner_label?: (string | null) | undefined
        runner_type?: ("standard" | "labeled" | "not_set" | null) | undefined
      } | null)
    | undefined
  code_scanning_delegated_alert_dismissal?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  code_scanning_options?: (EmptyObject | null) | undefined
  created_at?: string | undefined
  dependabot_alerts?: ("enabled" | "disabled" | "not_set") | undefined
  dependabot_security_updates?: ("enabled" | "disabled" | "not_set") | undefined
  dependency_graph?: ("enabled" | "disabled" | "not_set") | undefined
  dependency_graph_autosubmit_action?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  dependency_graph_autosubmit_action_options?:
    | {
        labeled_runners?: boolean | undefined
      }
    | undefined
  description?: string | undefined
  enforcement?: ("enforced" | "unenforced") | undefined
  html_url?: string | undefined
  id?: number | undefined
  name?: string | undefined
  private_vulnerability_reporting?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning?: ("enabled" | "disabled" | "not_set") | undefined
  secret_scanning_delegated_alert_dismissal?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_delegated_bypass?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_delegated_bypass_options?:
    | {
        reviewers?:
          | {
              reviewer_id: number
              reviewer_type: "TEAM" | "ROLE"
            }[]
          | undefined
      }
    | undefined
  secret_scanning_generic_secrets?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_non_provider_patterns?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_push_protection?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_validity_checks?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  target_type?: ("global" | "organization" | "enterprise") | undefined
  updated_at?: string | undefined
  url?: string | undefined
}

export type t_code_security_configuration_for_repository = {
  configuration?: t_code_security_configuration | undefined
  status?:
    | (
        | "attached"
        | "attaching"
        | "detached"
        | "removed"
        | "enforced"
        | "failed"
        | "updating"
        | "removed_by_enterprise"
      )
    | undefined
}

export type t_code_security_configuration_repositories = {
  repository?: t_simple_repository | undefined
  status?:
    | (
        | "attached"
        | "attaching"
        | "detached"
        | "removed"
        | "enforced"
        | "failed"
        | "updating"
        | "removed_by_enterprise"
      )
    | undefined
}

export type t_code_security_default_configurations = {
  configuration?: t_code_security_configuration | undefined
  default_for_new_repos?: EmptyObject | undefined
}[]

export type t_codeowners_errors = {
  errors: {
    column: number
    kind: string
    line: number
    message: string
    path: string
    source?: string | undefined
    suggestion?: (string | null) | undefined
  }[]
}

export type t_codespace = {
  billable_owner: t_simple_user
  created_at: string
  devcontainer_path?: (string | null) | undefined
  display_name?: (string | null) | undefined
  environment_id: string | null
  git_status: {
    ahead?: number | undefined
    behind?: number | undefined
    has_uncommitted_changes?: boolean | undefined
    has_unpushed_changes?: boolean | undefined
    ref?: string | undefined
  }
  id: number
  idle_timeout_minutes: number | null
  idle_timeout_notice?: (string | null) | undefined
  last_known_stop_notice?: (string | null) | undefined
  last_used_at: string
  location: "EastUs" | "SouthEastAsia" | "WestEurope" | "WestUs2"
  machine: t_nullable_codespace_machine
  machines_url: string
  name: string
  owner: t_simple_user
  pending_operation?: (boolean | null) | undefined
  pending_operation_disabled_reason?: (string | null) | undefined
  prebuild: boolean | null
  publish_url?: (string | null) | undefined
  pulls_url: string | null
  recent_folders: string[]
  repository: t_minimal_repository
  retention_expires_at?: (string | null) | undefined
  retention_period_minutes?: (number | null) | undefined
  runtime_constraints?:
    | {
        allowed_port_privacy_settings?: (string[] | null) | undefined
      }
    | undefined
  start_url: string
  state:
    | "Unknown"
    | "Created"
    | "Queued"
    | "Provisioning"
    | "Available"
    | "Awaiting"
    | "Unavailable"
    | "Deleted"
    | "Moved"
    | "Shutdown"
    | "Archived"
    | "Starting"
    | "ShuttingDown"
    | "Failed"
    | "Exporting"
    | "Updating"
    | "Rebuilding"
  stop_url: string
  updated_at: string
  url: string
  web_url: string
}

export type t_codespace_export_details = {
  branch?: (string | null) | undefined
  completed_at?: (string | null) | undefined
  export_url?: string | undefined
  html_url?: (string | null) | undefined
  id?: string | undefined
  sha?: (string | null) | undefined
  state?: (string | null) | undefined
}

export type t_codespace_machine = {
  cpus: number
  display_name: string
  memory_in_bytes: number
  name: string
  operating_system: string
  prebuild_availability: "none" | "ready" | "in_progress" | null
  storage_in_bytes: number
}

export type t_codespace_with_full_repository = {
  billable_owner: t_simple_user
  created_at: string
  devcontainer_path?: (string | null) | undefined
  display_name?: (string | null) | undefined
  environment_id: string | null
  git_status: {
    ahead?: number | undefined
    behind?: number | undefined
    has_uncommitted_changes?: boolean | undefined
    has_unpushed_changes?: boolean | undefined
    ref?: string | undefined
  }
  id: number
  idle_timeout_minutes: number | null
  idle_timeout_notice?: (string | null) | undefined
  last_used_at: string
  location: "EastUs" | "SouthEastAsia" | "WestEurope" | "WestUs2"
  machine: t_nullable_codespace_machine
  machines_url: string
  name: string
  owner: t_simple_user
  pending_operation?: (boolean | null) | undefined
  pending_operation_disabled_reason?: (string | null) | undefined
  prebuild: boolean | null
  publish_url?: (string | null) | undefined
  pulls_url: string | null
  recent_folders: string[]
  repository: t_full_repository
  retention_expires_at?: (string | null) | undefined
  retention_period_minutes?: (number | null) | undefined
  runtime_constraints?:
    | {
        allowed_port_privacy_settings?: (string[] | null) | undefined
      }
    | undefined
  start_url: string
  state:
    | "Unknown"
    | "Created"
    | "Queued"
    | "Provisioning"
    | "Available"
    | "Awaiting"
    | "Unavailable"
    | "Deleted"
    | "Moved"
    | "Shutdown"
    | "Archived"
    | "Starting"
    | "ShuttingDown"
    | "Failed"
    | "Exporting"
    | "Updating"
    | "Rebuilding"
  stop_url: string
  updated_at: string
  url: string
  web_url: string
}

export type t_codespaces_org_secret = {
  created_at: string
  name: string
  selected_repositories_url?: string | undefined
  updated_at: string
  visibility: "all" | "private" | "selected"
}

export type t_codespaces_permissions_check_for_devcontainer = {
  accepted: boolean
}

export type t_codespaces_public_key = {
  created_at?: string | undefined
  id?: number | undefined
  key: string
  key_id: string
  title?: string | undefined
  url?: string | undefined
}

export type t_codespaces_secret = {
  created_at: string
  name: string
  selected_repositories_url: string
  updated_at: string
  visibility: "all" | "private" | "selected"
}

export type t_codespaces_user_public_key = {
  key: string
  key_id: string
}

export type t_collaborator = {
  avatar_url: string
  email?: (string | null) | undefined
  events_url: string
  followers_url: string
  following_url: string
  gists_url: string
  gravatar_id: string | null
  html_url: string
  id: number
  login: string
  name?: (string | null) | undefined
  node_id: string
  organizations_url: string
  permissions?:
    | {
        admin: boolean
        maintain?: boolean | undefined
        pull: boolean
        push: boolean
        triage?: boolean | undefined
      }
    | undefined
  received_events_url: string
  repos_url: string
  role_name: string
  site_admin: boolean
  starred_url: string
  subscriptions_url: string
  type: string
  url: string
  user_view_type?: string | undefined
}

export type t_combined_billing_usage = {
  days_left_in_billing_cycle: number
  estimated_paid_storage_for_month: number
  estimated_storage_for_month: number
}

export type t_combined_commit_status = {
  commit_url: string
  repository: t_minimal_repository
  sha: string
  state: string
  statuses: t_simple_commit_status[]
  total_count: number
  url: string
}

export type t_commit = {
  author: t_simple_user | t_empty_object | null
  comments_url: string
  commit: {
    author: t_nullable_git_user
    comment_count: number
    committer: t_nullable_git_user
    message: string
    tree: {
      sha: string
      url: string
    }
    url: string
    verification?: t_verification | undefined
  }
  committer: t_simple_user | t_empty_object | null
  files?: t_diff_entry[] | undefined
  html_url: string
  node_id: string
  parents: {
    html_url?: string | undefined
    sha: string
    url: string
  }[]
  sha: string
  stats?:
    | {
        additions?: number | undefined
        deletions?: number | undefined
        total?: number | undefined
      }
    | undefined
  url: string
}

export type t_commit_activity = {
  days: number[]
  total: number
  week: number
}

export type t_commit_comment = {
  author_association: t_author_association
  body: string
  commit_id: string
  created_at: string
  html_url: string
  id: number
  line: number | null
  node_id: string
  path: string | null
  position: number | null
  reactions?: t_reaction_rollup | undefined
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_commit_comparison = {
  ahead_by: number
  base_commit: t_commit
  behind_by: number
  commits: t_commit[]
  diff_url: string
  files?: t_diff_entry[] | undefined
  html_url: string
  merge_base_commit: t_commit
  patch_url: string
  permalink_url: string
  status: "diverged" | "ahead" | "behind" | "identical"
  total_commits: number
  url: string
}

export type t_commit_search_result_item = {
  author: t_nullable_simple_user
  comments_url: string
  commit: {
    author: {
      date: string
      email: string
      name: string
    }
    comment_count: number
    committer: t_nullable_git_user
    message: string
    tree: {
      sha: string
      url: string
    }
    url: string
    verification?: t_verification | undefined
  }
  committer: t_nullable_git_user
  html_url: string
  node_id: string
  parents: {
    html_url?: string | undefined
    sha?: string | undefined
    url?: string | undefined
  }[]
  repository: t_minimal_repository
  score: number
  sha: string
  text_matches?: t_search_result_text_matches | undefined
  url: string
}

export type t_community_profile = {
  content_reports_enabled?: boolean | undefined
  description: string | null
  documentation: string | null
  files: {
    code_of_conduct: t_nullable_code_of_conduct_simple
    code_of_conduct_file: t_nullable_community_health_file
    contributing: t_nullable_community_health_file
    issue_template: t_nullable_community_health_file
    license: t_nullable_license_simple
    pull_request_template: t_nullable_community_health_file
    readme: t_nullable_community_health_file
  }
  health_percentage: number
  updated_at: string | null
}

export type t_content_directory = {
  _links: {
    git: string | null
    html: string | null
    self: string
  }
  content?: string | undefined
  download_url: string | null
  git_url: string | null
  html_url: string | null
  name: string
  path: string
  sha: string
  size: number
  type: "dir" | "file" | "submodule" | "symlink"
  url: string
}[]

export type t_content_file = {
  _links: {
    git: string | null
    html: string | null
    self: string
  }
  content: string
  download_url: string | null
  encoding: string
  git_url: string | null
  html_url: string | null
  name: string
  path: string
  sha: string
  size: number
  submodule_git_url?: string | undefined
  target?: string | undefined
  type: "file"
  url: string
}

export type t_content_submodule = {
  _links: {
    git: string | null
    html: string | null
    self: string
  }
  download_url: string | null
  git_url: string | null
  html_url: string | null
  name: string
  path: string
  sha: string
  size: number
  submodule_git_url: string
  type: "submodule"
  url: string
}

export type t_content_symlink = {
  _links: {
    git: string | null
    html: string | null
    self: string
  }
  download_url: string | null
  git_url: string | null
  html_url: string | null
  name: string
  path: string
  sha: string
  size: number
  target: string
  type: "symlink"
  url: string
}

export type t_content_traffic = {
  count: number
  path: string
  title: string
  uniques: number
}

export type t_contributor = {
  avatar_url?: string | undefined
  contributions: number
  email?: string | undefined
  events_url?: string | undefined
  followers_url?: string | undefined
  following_url?: string | undefined
  gists_url?: string | undefined
  gravatar_id?: (string | null) | undefined
  html_url?: string | undefined
  id?: number | undefined
  login?: string | undefined
  name?: string | undefined
  node_id?: string | undefined
  organizations_url?: string | undefined
  received_events_url?: string | undefined
  repos_url?: string | undefined
  site_admin?: boolean | undefined
  starred_url?: string | undefined
  subscriptions_url?: string | undefined
  type: string
  url?: string | undefined
  user_view_type?: string | undefined
}

export type t_contributor_activity = {
  author: t_nullable_simple_user
  total: number
  weeks: {
    a?: number | undefined
    c?: number | undefined
    d?: number | undefined
    w?: number | undefined
  }[]
}

export type t_converted_note_to_issue_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_integration
  project_card?:
    | {
        column_name: string
        id: number
        previous_column_name?: string | undefined
        project_id: number
        project_url: string
        url: string
      }
    | undefined
  url: string
}

export type t_copilot_dotcom_chat = {
  models?:
    | {
        custom_model_training_date?: (string | null) | undefined
        is_custom_model?: boolean | undefined
        name?: string | undefined
        total_chats?: number | undefined
        total_engaged_users?: number | undefined
      }[]
    | undefined
  total_engaged_users?: number | undefined
  [key: string]: unknown | undefined
} | null

export type t_copilot_dotcom_pull_requests = {
  repositories?:
    | {
        models?:
          | {
              custom_model_training_date?: (string | null) | undefined
              is_custom_model?: boolean | undefined
              name?: string | undefined
              total_engaged_users?: number | undefined
              total_pr_summaries_created?: number | undefined
            }[]
          | undefined
        name?: string | undefined
        total_engaged_users?: number | undefined
      }[]
    | undefined
  total_engaged_users?: number | undefined
  [key: string]: unknown | undefined
} | null

export type t_copilot_ide_chat = {
  editors?:
    | {
        models?:
          | {
              custom_model_training_date?: (string | null) | undefined
              is_custom_model?: boolean | undefined
              name?: string | undefined
              total_chat_copy_events?: number | undefined
              total_chat_insertion_events?: number | undefined
              total_chats?: number | undefined
              total_engaged_users?: number | undefined
            }[]
          | undefined
        name?: string | undefined
        total_engaged_users?: number | undefined
      }[]
    | undefined
  total_engaged_users?: number | undefined
  [key: string]: unknown | undefined
} | null

export type t_copilot_ide_code_completions = {
  editors?:
    | {
        models?:
          | {
              custom_model_training_date?: (string | null) | undefined
              is_custom_model?: boolean | undefined
              languages?:
                | {
                    name?: string | undefined
                    total_code_acceptances?: number | undefined
                    total_code_lines_accepted?: number | undefined
                    total_code_lines_suggested?: number | undefined
                    total_code_suggestions?: number | undefined
                    total_engaged_users?: number | undefined
                  }[]
                | undefined
              name?: string | undefined
              total_engaged_users?: number | undefined
            }[]
          | undefined
        name?: string | undefined
        total_engaged_users?: number | undefined
        [key: string]: unknown | undefined
      }[]
    | undefined
  languages?:
    | {
        name?: string | undefined
        total_engaged_users?: number | undefined
      }[]
    | undefined
  total_engaged_users?: number | undefined
  [key: string]: unknown | undefined
} | null

export type t_copilot_organization_details = {
  cli?: ("enabled" | "disabled" | "unconfigured") | undefined
  ide_chat?: ("enabled" | "disabled" | "unconfigured") | undefined
  plan_type?: ("business" | "enterprise") | undefined
  platform_chat?: ("enabled" | "disabled" | "unconfigured") | undefined
  public_code_suggestions: "allow" | "block" | "unconfigured"
  seat_breakdown: t_copilot_organization_seat_breakdown
  seat_management_setting:
    | "assign_all"
    | "assign_selected"
    | "disabled"
    | "unconfigured"
  [key: string]: unknown | undefined
}

export type t_copilot_organization_seat_breakdown = {
  active_this_cycle?: number | undefined
  added_this_cycle?: number | undefined
  inactive_this_cycle?: number | undefined
  pending_cancellation?: number | undefined
  pending_invitation?: number | undefined
  total?: number | undefined
}

export type t_copilot_seat_details = {
  assignee?: t_nullable_simple_user | undefined
  assigning_team?: (t_team | t_enterprise_team | null) | undefined
  created_at: string
  last_activity_at?: (string | null) | undefined
  last_activity_editor?: (string | null) | undefined
  organization?: t_nullable_organization_simple | undefined
  pending_cancellation_date?: (string | null) | undefined
  plan_type?: ("business" | "enterprise" | "unknown") | undefined
  updated_at?: string | undefined
}

export type t_copilot_usage_metrics_day = {
  copilot_dotcom_chat?: t_copilot_dotcom_chat | undefined
  copilot_dotcom_pull_requests?: t_copilot_dotcom_pull_requests | undefined
  copilot_ide_chat?: t_copilot_ide_chat | undefined
  copilot_ide_code_completions?: t_copilot_ide_code_completions | undefined
  date: string
  total_active_users?: number | undefined
  total_engaged_users?: number | undefined
  [key: string]: unknown | undefined
}

export type t_custom_deployment_rule_app = {
  id: number
  integration_url: string
  node_id: string
  slug: string
}

export type t_custom_property = {
  allowed_values?: (string[] | null) | undefined
  default_value?: (string | string[] | null) | undefined
  description?: (string | null) | undefined
  property_name: string
  required?: boolean | undefined
  source_type?: ("organization" | "enterprise") | undefined
  url?: string | undefined
  value_type: "string" | "single_select" | "multi_select" | "true_false"
  values_editable_by?: ("org_actors" | "org_and_repo_actors" | null) | undefined
}

export type t_custom_property_value = {
  property_name: string
  value: string | string[] | null
}

export type t_cvss_severities = {
  cvss_v3?:
    | ({
        readonly score: number | null
        vector_string: string | null
      } | null)
    | undefined
  cvss_v4?:
    | ({
        readonly score: number | null
        vector_string: string | null
      } | null)
    | undefined
} | null

export type t_demilestoned_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  milestone: {
    title: string
  }
  node_id: string
  performed_via_github_app: t_nullable_integration
  url: string
}

export type t_dependabot_alert = {
  auto_dismissed_at?: t_alert_auto_dismissed_at | undefined
  created_at: t_alert_created_at
  readonly dependency: {
    readonly manifest_path?: string | undefined
    package?: t_dependabot_alert_package | undefined
    readonly relationship?:
      | ("unknown" | "direct" | "transitive" | null)
      | undefined
    readonly scope?: ("development" | "runtime" | null) | undefined
  }
  dismissed_at: t_alert_dismissed_at
  dismissed_by: t_nullable_simple_user
  dismissed_comment: string | null
  dismissed_reason:
    | "fix_started"
    | "inaccurate"
    | "no_bandwidth"
    | "not_used"
    | "tolerable_risk"
    | null
  fixed_at: t_alert_fixed_at
  html_url: t_alert_html_url
  number: t_alert_number
  security_advisory: t_dependabot_alert_security_advisory
  security_vulnerability: t_dependabot_alert_security_vulnerability
  readonly state: "auto_dismissed" | "dismissed" | "fixed" | "open"
  updated_at: t_alert_updated_at
  url: t_alert_url
}

export type t_dependabot_alert_package = {
  readonly ecosystem: string
  readonly name: string
}

export type t_dependabot_alert_security_advisory = {
  readonly cve_id: string | null
  readonly cvss: {
    readonly score: number
    readonly vector_string: string | null
  }
  cvss_severities?: t_cvss_severities | undefined
  readonly cwes: {
    readonly cwe_id: string
    readonly name: string
  }[]
  readonly description: string
  epss?: t_security_advisory_epss | undefined
  readonly ghsa_id: string
  readonly identifiers: {
    readonly type: "CVE" | "GHSA"
    readonly value: string
  }[]
  readonly published_at: string
  readonly references: {
    readonly url: string
  }[]
  readonly severity: "low" | "medium" | "high" | "critical"
  readonly summary: string
  readonly updated_at: string
  readonly vulnerabilities: t_dependabot_alert_security_vulnerability[]
  readonly withdrawn_at: string | null
}

export type t_dependabot_alert_security_vulnerability = {
  readonly first_patched_version: {
    readonly identifier: string
  } | null
  package: t_dependabot_alert_package
  readonly severity: "low" | "medium" | "high" | "critical"
  readonly vulnerable_version_range: string
}

export type t_dependabot_alert_with_repository = {
  auto_dismissed_at?: t_alert_auto_dismissed_at | undefined
  created_at: t_alert_created_at
  readonly dependency: {
    readonly manifest_path?: string | undefined
    package?: t_dependabot_alert_package | undefined
    readonly relationship?:
      | ("unknown" | "direct" | "transitive" | null)
      | undefined
    readonly scope?: ("development" | "runtime" | null) | undefined
  }
  dismissed_at: t_alert_dismissed_at
  dismissed_by: t_nullable_simple_user
  dismissed_comment: string | null
  dismissed_reason:
    | "fix_started"
    | "inaccurate"
    | "no_bandwidth"
    | "not_used"
    | "tolerable_risk"
    | null
  fixed_at: t_alert_fixed_at
  html_url: t_alert_html_url
  number: t_alert_number
  repository: t_simple_repository
  security_advisory: t_dependabot_alert_security_advisory
  security_vulnerability: t_dependabot_alert_security_vulnerability
  readonly state: "auto_dismissed" | "dismissed" | "fixed" | "open"
  updated_at: t_alert_updated_at
  url: t_alert_url
}

export type t_dependabot_public_key = {
  key: string
  key_id: string
}

export type t_dependabot_repository_access_details = {
  accessible_repositories?: t_nullable_simple_repository[] | undefined
  default_level?: ("public" | "internal" | null) | undefined
}

export type t_dependabot_secret = {
  created_at: string
  name: string
  updated_at: string
}

export type t_dependency = {
  dependencies?: string[] | undefined
  metadata?: t_metadata | undefined
  package_url?: string | undefined
  relationship?: ("direct" | "indirect") | undefined
  scope?: ("runtime" | "development") | undefined
}

export type t_dependency_graph_diff = {
  change_type: "added" | "removed"
  ecosystem: string
  license: string | null
  manifest: string
  name: string
  package_url: string | null
  scope: "unknown" | "runtime" | "development"
  source_repository_url: string | null
  version: string
  vulnerabilities: {
    advisory_ghsa_id: string
    advisory_summary: string
    advisory_url: string
    severity: string
  }[]
}[]

export type t_dependency_graph_spdx_sbom = {
  sbom: {
    SPDXID: string
    comment?: string | undefined
    creationInfo: {
      created: string
      creators: string[]
    }
    dataLicense: string
    documentNamespace: string
    name: string
    packages: {
      SPDXID?: string | undefined
      copyrightText?: string | undefined
      downloadLocation?: string | undefined
      externalRefs?:
        | {
            referenceCategory: string
            referenceLocator: string
            referenceType: string
          }[]
        | undefined
      filesAnalyzed?: boolean | undefined
      licenseConcluded?: string | undefined
      licenseDeclared?: string | undefined
      name?: string | undefined
      supplier?: string | undefined
      versionInfo?: string | undefined
    }[]
    relationships?:
      | {
          relatedSpdxElement?: string | undefined
          relationshipType?: string | undefined
          spdxElementId?: string | undefined
        }[]
      | undefined
    spdxVersion: string
  }
}

export type t_deploy_key = {
  added_by?: (string | null) | undefined
  created_at: string
  enabled?: boolean | undefined
  id: number
  key: string
  last_used?: (string | null) | undefined
  read_only: boolean
  title: string
  url: string
  verified: boolean
}

export type t_deployment = {
  created_at: string
  creator: t_nullable_simple_user
  description: string | null
  environment: string
  id: number
  node_id: string
  original_environment?: string | undefined
  payload:
    | {
        [key: string]: unknown | undefined
      }
    | string
  performed_via_github_app?: t_nullable_integration | undefined
  production_environment?: boolean | undefined
  ref: string
  repository_url: string
  sha: string
  statuses_url: string
  task: string
  transient_environment?: boolean | undefined
  updated_at: string
  url: string
}

export type t_deployment_branch_policy = {
  id?: number | undefined
  name?: string | undefined
  node_id?: string | undefined
  type?: ("branch" | "tag") | undefined
}

export type t_deployment_branch_policy_settings = {
  custom_branch_policies: boolean
  protected_branches: boolean
} | null

export type t_deployment_protection_rule = {
  app: t_custom_deployment_rule_app
  enabled: boolean
  id: number
  node_id: string
}

export type t_deployment_reviewer_type = "User" | "Team"

export type t_deployment_simple = {
  created_at: string
  description: string | null
  environment: string
  id: number
  node_id: string
  original_environment?: string | undefined
  performed_via_github_app?: t_nullable_integration | undefined
  production_environment?: boolean | undefined
  repository_url: string
  statuses_url: string
  task: string
  transient_environment?: boolean | undefined
  updated_at: string
  url: string
}

export type t_deployment_status = {
  created_at: string
  creator: t_nullable_simple_user
  deployment_url: string
  description: string
  environment?: string | undefined
  environment_url?: string | undefined
  id: number
  log_url?: string | undefined
  node_id: string
  performed_via_github_app?: t_nullable_integration | undefined
  repository_url: string
  state:
    | "error"
    | "failure"
    | "inactive"
    | "pending"
    | "success"
    | "queued"
    | "in_progress"
  target_url: string
  updated_at: string
  url: string
}

export type t_diff_entry = {
  additions: number
  blob_url: string
  changes: number
  contents_url: string
  deletions: number
  filename: string
  patch?: string | undefined
  previous_filename?: string | undefined
  raw_url: string
  sha: string
  status:
    | "added"
    | "removed"
    | "modified"
    | "renamed"
    | "copied"
    | "changed"
    | "unchanged"
}

export type t_email = {
  email: string
  primary: boolean
  verified: boolean
  visibility: string | null
}

export type t_empty_object = EmptyObject

export type t_enabled_repositories = "all" | "none" | "selected"

export type t_enterprise = {
  avatar_url: string
  created_at: string | null
  description?: (string | null) | undefined
  html_url: string
  id: number
  name: string
  node_id: string
  slug: string
  updated_at: string | null
  website_url?: (string | null) | undefined
}

export type t_enterprise_team = {
  created_at: string
  description?: string | undefined
  group_id?: (string | null) | undefined
  group_name?: (string | null) | undefined
  html_url: string
  id: number
  members_url: string
  name: string
  organization_selection_type?: string | undefined
  slug: string
  sync_to_organizations?: string | undefined
  updated_at: string
  url: string
}

export type t_environment = {
  created_at: string
  deployment_branch_policy?: t_deployment_branch_policy_settings | undefined
  html_url: string
  id: number
  name: string
  node_id: string
  protection_rules?:
    | (
        | {
            id: number
            node_id: string
            type: string
            wait_timer?: t_wait_timer | undefined
          }
        | {
            id: number
            node_id: string
            prevent_self_review?: boolean | undefined
            reviewers?:
              | {
                  reviewer?: (t_simple_user | t_team) | undefined
                  type?: t_deployment_reviewer_type | undefined
                }[]
              | undefined
            type: string
          }
        | {
            id: number
            node_id: string
            type: string
          }
      )[]
    | undefined
  updated_at: string
  url: string
}

export type t_environment_approvals = {
  comment: string
  environments: {
    created_at?: string | undefined
    html_url?: string | undefined
    id?: number | undefined
    name?: string | undefined
    node_id?: string | undefined
    updated_at?: string | undefined
    url?: string | undefined
  }[]
  state: "approved" | "rejected" | "pending"
  user: t_simple_user
}

export type t_event = {
  actor: t_actor
  created_at: string | null
  id: string
  org?: t_actor | undefined
  payload: {
    action?: string | undefined
    comment?: t_issue_comment | undefined
    issue?: t_issue | undefined
    pages?:
      | {
          action?: string | undefined
          html_url?: string | undefined
          page_name?: string | undefined
          sha?: string | undefined
          summary?: (string | null) | undefined
          title?: string | undefined
        }[]
      | undefined
  }
  public: boolean
  repo: {
    id: number
    name: string
    url: string
  }
  type: string | null
}

export type t_feed = {
  _links: {
    current_user?: t_link_with_type | undefined
    current_user_actor?: t_link_with_type | undefined
    current_user_organization?: t_link_with_type | undefined
    current_user_organizations?: t_link_with_type[] | undefined
    current_user_public?: t_link_with_type | undefined
    repository_discussions?: t_link_with_type | undefined
    repository_discussions_category?: t_link_with_type | undefined
    security_advisories?: t_link_with_type | undefined
    timeline: t_link_with_type
    user: t_link_with_type
  }
  current_user_actor_url?: string | undefined
  current_user_organization_url?: string | undefined
  current_user_organization_urls?: string[] | undefined
  current_user_public_url?: string | undefined
  current_user_url?: string | undefined
  repository_discussions_category_url?: string | undefined
  repository_discussions_url?: string | undefined
  security_advisories_url?: string | undefined
  timeline_url: string
  user_url: string
}

export type t_file_commit = {
  commit: {
    author?:
      | {
          date?: string | undefined
          email?: string | undefined
          name?: string | undefined
        }
      | undefined
    committer?:
      | {
          date?: string | undefined
          email?: string | undefined
          name?: string | undefined
        }
      | undefined
    html_url?: string | undefined
    message?: string | undefined
    node_id?: string | undefined
    parents?:
      | {
          html_url?: string | undefined
          sha?: string | undefined
          url?: string | undefined
        }[]
      | undefined
    sha?: string | undefined
    tree?:
      | {
          sha?: string | undefined
          url?: string | undefined
        }
      | undefined
    url?: string | undefined
    verification?:
      | {
          payload?: (string | null) | undefined
          reason?: string | undefined
          signature?: (string | null) | undefined
          verified?: boolean | undefined
          verified_at?: (string | null) | undefined
        }
      | undefined
  }
  content: {
    _links?:
      | {
          git?: string | undefined
          html?: string | undefined
          self?: string | undefined
        }
      | undefined
    download_url?: string | undefined
    git_url?: string | undefined
    html_url?: string | undefined
    name?: string | undefined
    path?: string | undefined
    sha?: string | undefined
    size?: number | undefined
    type?: string | undefined
    url?: string | undefined
  } | null
}

export type t_full_repository = {
  allow_auto_merge?: boolean | undefined
  allow_forking?: boolean | undefined
  allow_merge_commit?: boolean | undefined
  allow_rebase_merge?: boolean | undefined
  allow_squash_merge?: boolean | undefined
  allow_update_branch?: boolean | undefined
  anonymous_access_enabled?: boolean | undefined
  archive_url: string
  archived: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url: string
  code_of_conduct?: t_code_of_conduct_simple | undefined
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at: string
  custom_properties?:
    | {
        [key: string]: unknown | undefined
      }
    | undefined
  default_branch: string
  delete_branch_on_merge?: boolean | undefined
  deployments_url: string
  description: string | null
  disabled: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks: number
  forks_count: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url: string
  has_discussions: boolean
  has_downloads?: boolean | undefined
  has_issues: boolean
  has_pages: boolean
  has_projects: boolean
  has_wiki: boolean
  homepage: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean | undefined
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language: string | null
  languages_url: string
  license: t_nullable_license_simple
  master_branch?: string | undefined
  merge_commit_message?: ("PR_BODY" | "PR_TITLE" | "BLANK") | undefined
  merge_commit_title?: ("PR_TITLE" | "MERGE_MESSAGE") | undefined
  merges_url: string
  milestones_url: string
  mirror_url: string | null
  name: string
  network_count: number
  node_id: string
  notifications_url: string
  open_issues: number
  open_issues_count: number
  organization?: t_nullable_simple_user | undefined
  owner: t_simple_user
  parent?: t_repository | undefined
  permissions?:
    | {
        admin: boolean
        maintain?: boolean | undefined
        pull: boolean
        push: boolean
        triage?: boolean | undefined
      }
    | undefined
  private: boolean
  pulls_url: string
  pushed_at: string
  releases_url: string
  security_and_analysis?: t_security_and_analysis | undefined
  size: number
  source?: t_repository | undefined
  squash_merge_commit_message?:
    | ("PR_BODY" | "COMMIT_MESSAGES" | "BLANK")
    | undefined
  squash_merge_commit_title?: ("PR_TITLE" | "COMMIT_OR_PR_TITLE") | undefined
  ssh_url: string
  stargazers_count: number
  stargazers_url: string
  statuses_url: string
  subscribers_count: number
  subscribers_url: string
  subscription_url: string
  svn_url: string
  tags_url: string
  teams_url: string
  temp_clone_token?: (string | null) | undefined
  template_repository?: t_nullable_repository | undefined
  topics?: string[] | undefined
  trees_url: string
  updated_at: string
  url: string
  use_squash_pr_title_as_default?: boolean | undefined
  visibility?: string | undefined
  watchers: number
  watchers_count: number
  web_commit_signoff_required?: boolean | undefined
}

export type t_gist_comment = {
  author_association: t_author_association
  body: string
  created_at: string
  id: number
  node_id: string
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_gist_commit = {
  change_status: {
    additions?: number | undefined
    deletions?: number | undefined
    total?: number | undefined
  }
  committed_at: string
  url: string
  user: t_nullable_simple_user
  version: string
}

export type t_gist_history = {
  change_status?:
    | {
        additions?: number | undefined
        deletions?: number | undefined
        total?: number | undefined
      }
    | undefined
  committed_at?: string | undefined
  url?: string | undefined
  user?: t_nullable_simple_user | undefined
  version?: string | undefined
}

export type t_gist_simple = {
  comments?: number | undefined
  comments_enabled?: boolean | undefined
  comments_url?: string | undefined
  commits_url?: string | undefined
  created_at?: string | undefined
  description?: (string | null) | undefined
  files?:
    | {
        [key: string]:
          | ({
              content?: string | undefined
              encoding?: string | undefined
              filename?: string | undefined
              language?: string | undefined
              raw_url?: string | undefined
              size?: number | undefined
              truncated?: boolean | undefined
              type?: string | undefined
            } | null)
          | undefined
      }
    | undefined
  fork_of?:
    | ({
        comments: number
        comments_enabled?: boolean | undefined
        comments_url: string
        commits_url: string
        created_at: string
        description: string | null
        files: {
          [key: string]:
            | {
                filename?: string | undefined
                language?: string | undefined
                raw_url?: string | undefined
                size?: number | undefined
                type?: string | undefined
              }
            | undefined
        }
        forks?: unknown[] | undefined
        forks_url: string
        git_pull_url: string
        git_push_url: string
        history?: unknown[] | undefined
        html_url: string
        id: string
        node_id: string
        owner?: t_nullable_simple_user | undefined
        public: boolean
        truncated?: boolean | undefined
        updated_at: string
        url: string
        user: t_nullable_simple_user
      } | null)
    | undefined
  forks?:
    | (
        | {
            created_at?: string | undefined
            id?: string | undefined
            updated_at?: string | undefined
            url?: string | undefined
            user?: t_public_user | undefined
          }[]
        | null
      )
    | undefined
  forks_url?: string | undefined
  git_pull_url?: string | undefined
  git_push_url?: string | undefined
  history?: (t_gist_history[] | null) | undefined
  html_url?: string | undefined
  id?: string | undefined
  node_id?: string | undefined
  owner?: t_simple_user | undefined
  public?: boolean | undefined
  truncated?: boolean | undefined
  updated_at?: string | undefined
  url?: string | undefined
  user?: (string | null) | undefined
}

export type t_git_commit = {
  author: {
    date: string
    email: string
    name: string
  }
  committer: {
    date: string
    email: string
    name: string
  }
  html_url: string
  message: string
  node_id: string
  parents: {
    html_url: string
    sha: string
    url: string
  }[]
  sha: string
  tree: {
    sha: string
    url: string
  }
  url: string
  verification: {
    payload: string | null
    reason: string
    signature: string | null
    verified: boolean
    verified_at: string | null
  }
}

export type t_git_ref = {
  node_id: string
  object: {
    sha: string
    type: string
    url: string
  }
  ref: string
  url: string
}

export type t_git_tag = {
  message: string
  node_id: string
  object: {
    sha: string
    type: string
    url: string
  }
  sha: string
  tag: string
  tagger: {
    date: string
    email: string
    name: string
  }
  url: string
  verification?: t_verification | undefined
}

export type t_git_tree = {
  sha: string
  tree: {
    mode: string
    path: string
    sha: string
    size?: number | undefined
    type: string
    url?: string | undefined
  }[]
  truncated: boolean
  url?: string | undefined
}

export type t_gitignore_template = {
  name: string
  source: string
}

export type t_global_advisory = {
  readonly credits:
    | {
        type: t_security_advisory_credit_types
        user: t_simple_user
      }[]
    | null
  readonly cve_id: string | null
  cvss: {
    readonly score: number | null
    vector_string: string | null
  } | null
  cvss_severities?: t_cvss_severities | undefined
  cwes:
    | {
        cwe_id: string
        readonly name: string
      }[]
    | null
  description: string | null
  epss?: t_security_advisory_epss | undefined
  readonly ghsa_id: string
  readonly github_reviewed_at: string | null
  readonly html_url: string
  readonly identifiers:
    | {
        type: "CVE" | "GHSA"
        value: string
      }[]
    | null
  readonly nvd_published_at: string | null
  readonly published_at: string
  references: string[] | null
  readonly repository_advisory_url: string | null
  severity: "critical" | "high" | "medium" | "low" | "unknown"
  source_code_location: string | null
  summary: string
  readonly type: "reviewed" | "unreviewed" | "malware"
  readonly updated_at: string
  readonly url: string
  vulnerabilities: t_vulnerability[] | null
  readonly withdrawn_at: string | null
}

export type t_gpg_key = {
  can_certify: boolean
  can_encrypt_comms: boolean
  can_encrypt_storage: boolean
  can_sign: boolean
  created_at: string
  emails: {
    email?: string | undefined
    verified?: boolean | undefined
  }[]
  expires_at: string | null
  id: number
  key_id: string
  name?: (string | null) | undefined
  primary_key_id: number | null
  public_key: string
  raw_key: string | null
  revoked: boolean
  subkeys: {
    can_certify?: boolean | undefined
    can_encrypt_comms?: boolean | undefined
    can_encrypt_storage?: boolean | undefined
    can_sign?: boolean | undefined
    created_at?: string | undefined
    emails?:
      | {
          email?: string | undefined
          verified?: boolean | undefined
        }[]
      | undefined
    expires_at?: (string | null) | undefined
    id?: number | undefined
    key_id?: string | undefined
    primary_key_id?: number | undefined
    public_key?: string | undefined
    raw_key?: (string | null) | undefined
    revoked?: boolean | undefined
    subkeys?: unknown[] | undefined
  }[]
}

export type t_hook = {
  active: boolean
  config: t_webhook_config
  created_at: string
  deliveries_url?: string | undefined
  events: string[]
  id: number
  last_response: t_hook_response
  name: string
  ping_url: string
  test_url: string
  type: string
  updated_at: string
  url: string
}

export type t_hook_delivery = {
  action: string | null
  delivered_at: string
  duration: number
  event: string
  guid: string
  id: number
  installation_id: number | null
  redelivery: boolean
  repository_id: number | null
  request: {
    headers: {
      [key: string]: unknown | undefined
    } | null
    payload: {
      [key: string]: unknown | undefined
    } | null
  }
  response: {
    headers: {
      [key: string]: unknown | undefined
    } | null
    payload: string | null
  }
  status: string
  status_code: number
  throttled_at?: (string | null) | undefined
  url?: string | undefined
}

export type t_hook_delivery_item = {
  action: string | null
  delivered_at: string
  duration: number
  event: string
  guid: string
  id: number
  installation_id: number | null
  redelivery: boolean
  repository_id: number | null
  status: string
  status_code: number
  throttled_at?: (string | null) | undefined
}

export type t_hook_response = {
  code: number | null
  message: string | null
  status: string | null
}

export type t_hovercard = {
  contexts: {
    message: string
    octicon: string
  }[]
}

export type t_import = {
  authors_count?: (number | null) | undefined
  authors_url: string
  commit_count?: (number | null) | undefined
  error_message?: (string | null) | undefined
  failed_step?: (string | null) | undefined
  has_large_files?: boolean | undefined
  html_url: string
  import_percent?: (number | null) | undefined
  large_files_count?: number | undefined
  large_files_size?: number | undefined
  message?: string | undefined
  project_choices?:
    | {
        human_name?: string | undefined
        tfvc_project?: string | undefined
        vcs?: string | undefined
      }[]
    | undefined
  push_percent?: (number | null) | undefined
  repository_url: string
  status:
    | "auth"
    | "error"
    | "none"
    | "detecting"
    | "choose"
    | "auth_failed"
    | "importing"
    | "mapping"
    | "waiting_to_push"
    | "pushing"
    | "complete"
    | "setup"
    | "unknown"
    | "detection_found_multiple"
    | "detection_found_nothing"
    | "detection_needs_auth"
  status_text?: (string | null) | undefined
  svc_root?: string | undefined
  svn_root?: string | undefined
  tfvc_project?: string | undefined
  url: string
  use_lfs?: boolean | undefined
  vcs: string | null
  vcs_url: string
}

export type t_installation = {
  access_tokens_url: string
  account: t_simple_user | t_enterprise | null
  app_id: number
  app_slug: string
  client_id?: string | undefined
  contact_email?: (string | null) | undefined
  created_at: string
  events: string[]
  has_multiple_single_files?: boolean | undefined
  html_url: string
  id: number
  permissions: t_app_permissions
  repositories_url: string
  repository_selection: "all" | "selected"
  single_file_name: string | null
  single_file_paths?: string[] | undefined
  suspended_at: string | null
  suspended_by: t_nullable_simple_user
  target_id: number
  target_type: string
  updated_at: string
}

export type t_installation_token = {
  expires_at: string
  has_multiple_single_files?: boolean | undefined
  permissions?: t_app_permissions | undefined
  repositories?: t_repository[] | undefined
  repository_selection?: ("all" | "selected") | undefined
  single_file?: string | undefined
  single_file_paths?: string[] | undefined
  token: string
}

export type t_integration = {
  client_id?: string | undefined
  created_at: string
  description: string | null
  events: string[]
  external_url: string
  html_url: string
  id: number
  installations_count?: number | undefined
  name: string
  node_id: string
  owner: t_simple_user | t_enterprise
  permissions: {
    checks?: string | undefined
    contents?: string | undefined
    deployments?: string | undefined
    issues?: string | undefined
    metadata?: string | undefined
    [key: string]: string | undefined
  }
  slug?: string | undefined
  updated_at: string
} | null

export type t_integration_installation_request = {
  account: t_simple_user | t_enterprise
  created_at: string
  id: number
  node_id?: string | undefined
  requester: t_simple_user
}

export type t_interaction_expiry =
  | "one_day"
  | "three_days"
  | "one_week"
  | "one_month"
  | "six_months"

export type t_interaction_group =
  | "existing_users"
  | "contributors_only"
  | "collaborators_only"

export type t_interaction_limit_response = {
  expires_at: string
  limit: t_interaction_group
  origin: string
}

export type t_issue = {
  active_lock_reason?: (string | null) | undefined
  assignee: t_nullable_simple_user
  assignees?: (t_simple_user[] | null) | undefined
  author_association: t_author_association
  body?: (string | null) | undefined
  body_html?: string | undefined
  body_text?: string | undefined
  closed_at: string | null
  closed_by?: t_nullable_simple_user | undefined
  comments: number
  comments_url: string
  created_at: string
  draft?: boolean | undefined
  events_url: string
  html_url: string
  id: number
  labels: (
    | string
    | {
        color?: (string | null) | undefined
        default?: boolean | undefined
        description?: (string | null) | undefined
        id?: number | undefined
        name?: string | undefined
        node_id?: string | undefined
        url?: string | undefined
      }
  )[]
  labels_url: string
  locked: boolean
  milestone: t_nullable_milestone
  node_id: string
  number: number
  performed_via_github_app?: t_nullable_integration | undefined
  pull_request?:
    | {
        diff_url: string | null
        html_url: string | null
        merged_at?: (string | null) | undefined
        patch_url: string | null
        url: string | null
      }
    | undefined
  reactions?: t_reaction_rollup | undefined
  repository?: t_repository | undefined
  repository_url: string
  state: string
  state_reason?: ("completed" | "reopened" | "not_planned" | null) | undefined
  sub_issues_summary?: t_sub_issues_summary | undefined
  timeline_url?: string | undefined
  title: string
  type?: t_issue_type | undefined
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_issue_comment = {
  author_association: t_author_association
  body?: string | undefined
  body_html?: string | undefined
  body_text?: string | undefined
  created_at: string
  html_url: string
  id: number
  issue_url: string
  node_id: string
  performed_via_github_app?: t_nullable_integration | undefined
  reactions?: t_reaction_rollup | undefined
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_issue_event = {
  actor: t_nullable_simple_user
  assignee?: t_nullable_simple_user | undefined
  assigner?: t_nullable_simple_user | undefined
  author_association?: t_author_association | undefined
  commit_id: string | null
  commit_url: string | null
  created_at: string
  dismissed_review?: t_issue_event_dismissed_review | undefined
  event: string
  id: number
  issue?: t_nullable_issue | undefined
  label?: t_issue_event_label | undefined
  lock_reason?: (string | null) | undefined
  milestone?: t_issue_event_milestone | undefined
  node_id: string
  performed_via_github_app?: t_nullable_integration | undefined
  project_card?: t_issue_event_project_card | undefined
  rename?: t_issue_event_rename | undefined
  requested_reviewer?: t_nullable_simple_user | undefined
  requested_team?: t_team | undefined
  review_requester?: t_nullable_simple_user | undefined
  url: string
}

export type t_issue_event_dismissed_review = {
  dismissal_commit_id?: (string | null) | undefined
  dismissal_message: string | null
  review_id: number
  state: string
}

export type t_issue_event_for_issue =
  | t_labeled_issue_event
  | t_unlabeled_issue_event
  | t_assigned_issue_event
  | t_unassigned_issue_event
  | t_milestoned_issue_event
  | t_demilestoned_issue_event
  | t_renamed_issue_event
  | t_review_requested_issue_event
  | t_review_request_removed_issue_event
  | t_review_dismissed_issue_event
  | t_locked_issue_event
  | t_added_to_project_issue_event
  | t_moved_column_in_project_issue_event
  | t_removed_from_project_issue_event
  | t_converted_note_to_issue_issue_event

export type t_issue_event_label = {
  color: string | null
  name: string | null
}

export type t_issue_event_milestone = {
  title: string
}

export type t_issue_event_project_card = {
  column_name: string
  id: number
  previous_column_name?: string | undefined
  project_id: number
  project_url: string
  url: string
}

export type t_issue_event_rename = {
  from: string
  to: string
}

export type t_issue_search_result_item = {
  active_lock_reason?: (string | null) | undefined
  assignee: t_nullable_simple_user
  assignees?: (t_simple_user[] | null) | undefined
  author_association: t_author_association
  body?: string | undefined
  body_html?: string | undefined
  body_text?: string | undefined
  closed_at: string | null
  comments: number
  comments_url: string
  created_at: string
  draft?: boolean | undefined
  events_url: string
  html_url: string
  id: number
  labels: {
    color?: string | undefined
    default?: boolean | undefined
    description?: (string | null) | undefined
    id?: number | undefined
    name?: string | undefined
    node_id?: string | undefined
    url?: string | undefined
  }[]
  labels_url: string
  locked: boolean
  milestone: t_nullable_milestone
  node_id: string
  number: number
  performed_via_github_app?: t_nullable_integration | undefined
  pull_request?:
    | {
        diff_url: string | null
        html_url: string | null
        merged_at?: (string | null) | undefined
        patch_url: string | null
        url: string | null
      }
    | undefined
  reactions?: t_reaction_rollup | undefined
  repository?: t_repository | undefined
  repository_url: string
  score: number
  state: string
  state_reason?: (string | null) | undefined
  sub_issues_summary?:
    | {
        completed: number
        percent_completed: number
        total: number
      }
    | undefined
  text_matches?: t_search_result_text_matches | undefined
  timeline_url?: string | undefined
  title: string
  type?: t_issue_type | undefined
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_issue_type = {
  color?:
    | (
        | "gray"
        | "blue"
        | "green"
        | "yellow"
        | "orange"
        | "red"
        | "pink"
        | "purple"
        | null
      )
    | undefined
  created_at?: string | undefined
  description: string | null
  id: number
  is_enabled?: boolean | undefined
  name: string
  node_id: string
  updated_at?: string | undefined
} | null

export type t_job = {
  check_run_url: string
  completed_at: string | null
  conclusion:
    | "success"
    | "failure"
    | "neutral"
    | "cancelled"
    | "skipped"
    | "timed_out"
    | "action_required"
    | null
  created_at: string
  head_branch: string | null
  head_sha: string
  html_url: string | null
  id: number
  labels: string[]
  name: string
  node_id: string
  run_attempt?: number | undefined
  run_id: number
  run_url: string
  runner_group_id: number | null
  runner_group_name: string | null
  runner_id: number | null
  runner_name: string | null
  started_at: string
  status:
    | "queued"
    | "in_progress"
    | "completed"
    | "waiting"
    | "requested"
    | "pending"
  steps?:
    | {
        completed_at?: (string | null) | undefined
        conclusion: string | null
        name: string
        number: number
        started_at?: (string | null) | undefined
        status: "queued" | "in_progress" | "completed"
      }[]
    | undefined
  url: string
  workflow_name: string | null
}

export type t_key = {
  created_at: string
  id: number
  key: string
  read_only: boolean
  title: string
  url: string
  verified: boolean
}

export type t_key_simple = {
  created_at?: string | undefined
  id: number
  key: string
}

export type t_label = {
  color: string
  default: boolean
  description: string | null
  id: number
  name: string
  node_id: string
  url: string
}

export type t_label_search_result_item = {
  color: string
  default: boolean
  description: string | null
  id: number
  name: string
  node_id: string
  score: number
  text_matches?: t_search_result_text_matches | undefined
  url: string
}

export type t_labeled_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  label: {
    color: string
    name: string
  }
  node_id: string
  performed_via_github_app: t_nullable_integration
  url: string
}

export type t_language = {
  [key: string]: number | undefined
}

export type t_license = {
  body: string
  conditions: string[]
  description: string
  featured: boolean
  html_url: string
  implementation: string
  key: string
  limitations: string[]
  name: string
  node_id: string
  permissions: string[]
  spdx_id: string | null
  url: string | null
}

export type t_license_content = {
  _links: {
    git: string | null
    html: string | null
    self: string
  }
  content: string
  download_url: string | null
  encoding: string
  git_url: string | null
  html_url: string | null
  license: t_nullable_license_simple
  name: string
  path: string
  sha: string
  size: number
  type: string
  url: string
}

export type t_license_simple = {
  html_url?: string | undefined
  key: string
  name: string
  node_id: string
  spdx_id: string | null
  url: string | null
}

export type t_link = {
  href: string
}

export type t_link_with_type = {
  href: string
  type: string
}

export type t_locked_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  lock_reason: string | null
  node_id: string
  performed_via_github_app: t_nullable_integration
  url: string
}

export type t_manifest = {
  file?:
    | {
        source_location?: string | undefined
      }
    | undefined
  metadata?: t_metadata | undefined
  name: string
  resolved?:
    | {
        [key: string]: t_dependency | undefined
      }
    | undefined
}

export type t_marketplace_account = {
  email?: (string | null) | undefined
  id: number
  login: string
  node_id?: string | undefined
  organization_billing_email?: (string | null) | undefined
  type: string
  url: string
}

export type t_marketplace_listing_plan = {
  accounts_url: string
  bullets: string[]
  description: string
  has_free_trial: boolean
  id: number
  monthly_price_in_cents: number
  name: string
  number: number
  price_model: "FREE" | "FLAT_RATE" | "PER_UNIT"
  state: string
  unit_name: string | null
  url: string
  yearly_price_in_cents: number
}

export type t_marketplace_purchase = {
  email?: (string | null) | undefined
  id: number
  login: string
  marketplace_pending_change?:
    | ({
        effective_date?: string | undefined
        id?: number | undefined
        is_installed?: boolean | undefined
        plan?: t_marketplace_listing_plan | undefined
        unit_count?: (number | null) | undefined
      } | null)
    | undefined
  marketplace_purchase: {
    billing_cycle?: string | undefined
    free_trial_ends_on?: (string | null) | undefined
    is_installed?: boolean | undefined
    next_billing_date?: (string | null) | undefined
    on_free_trial?: boolean | undefined
    plan?: t_marketplace_listing_plan | undefined
    unit_count?: (number | null) | undefined
    updated_at?: string | undefined
  }
  organization_billing_email?: string | undefined
  type: string
  url: string
}

export type t_merged_upstream = {
  base_branch?: string | undefined
  merge_type?: ("merge" | "fast-forward" | "none") | undefined
  message?: string | undefined
}

export type t_metadata = {
  [key: string]: (string | number | boolean | null) | undefined
}

export type t_migration = {
  archive_url?: string | undefined
  created_at: string
  exclude?: string[] | undefined
  exclude_attachments: boolean
  exclude_git_data: boolean
  exclude_metadata: boolean
  exclude_owner_projects: boolean
  exclude_releases: boolean
  guid: string
  id: number
  lock_repositories: boolean
  node_id: string
  org_metadata_only: boolean
  owner: t_nullable_simple_user
  repositories: t_repository[]
  state: string
  updated_at: string
  url: string
}

export type t_milestone = {
  closed_at: string | null
  closed_issues: number
  created_at: string
  creator: t_nullable_simple_user
  description: string | null
  due_on: string | null
  html_url: string
  id: number
  labels_url: string
  node_id: string
  number: number
  open_issues: number
  state: "open" | "closed"
  title: string
  updated_at: string
  url: string
}

export type t_milestoned_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  milestone: {
    title: string
  }
  node_id: string
  performed_via_github_app: t_nullable_integration
  url: string
}

export type t_minimal_repository = {
  allow_forking?: boolean | undefined
  archive_url: string
  archived?: boolean | undefined
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url?: string | undefined
  code_of_conduct?: t_code_of_conduct | undefined
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at?: (string | null) | undefined
  custom_properties?:
    | {
        [key: string]: unknown | undefined
      }
    | undefined
  default_branch?: string | undefined
  delete_branch_on_merge?: boolean | undefined
  deployments_url: string
  description: string | null
  disabled?: boolean | undefined
  downloads_url: string
  events_url: string
  fork: boolean
  forks?: number | undefined
  forks_count?: number | undefined
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url?: string | undefined
  has_discussions?: boolean | undefined
  has_downloads?: boolean | undefined
  has_issues?: boolean | undefined
  has_pages?: boolean | undefined
  has_projects?: boolean | undefined
  has_wiki?: boolean | undefined
  homepage?: (string | null) | undefined
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean | undefined
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language?: (string | null) | undefined
  languages_url: string
  license?:
    | ({
        key?: string | undefined
        name?: string | undefined
        node_id?: string | undefined
        spdx_id?: string | undefined
        url?: string | undefined
      } | null)
    | undefined
  merges_url: string
  milestones_url: string
  mirror_url?: (string | null) | undefined
  name: string
  network_count?: number | undefined
  node_id: string
  notifications_url: string
  open_issues?: number | undefined
  open_issues_count?: number | undefined
  owner: t_simple_user
  permissions?:
    | {
        admin?: boolean | undefined
        maintain?: boolean | undefined
        pull?: boolean | undefined
        push?: boolean | undefined
        triage?: boolean | undefined
      }
    | undefined
  private: boolean
  pulls_url: string
  pushed_at?: (string | null) | undefined
  releases_url: string
  role_name?: string | undefined
  security_and_analysis?: t_security_and_analysis | undefined
  size?: number | undefined
  ssh_url?: string | undefined
  stargazers_count?: number | undefined
  stargazers_url: string
  statuses_url: string
  subscribers_count?: number | undefined
  subscribers_url: string
  subscription_url: string
  svn_url?: string | undefined
  tags_url: string
  teams_url: string
  temp_clone_token?: string | undefined
  topics?: string[] | undefined
  trees_url: string
  updated_at?: (string | null) | undefined
  url: string
  visibility?: string | undefined
  watchers?: number | undefined
  watchers_count?: number | undefined
  web_commit_signoff_required?: boolean | undefined
}

export type t_moved_column_in_project_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  project_card?:
    | {
        column_name: string
        id: number
        previous_column_name?: string | undefined
        project_id: number
        project_url: string
        url: string
      }
    | undefined
  url: string
}

export type t_network_configuration = {
  compute_service?: ("none" | "actions" | "codespaces") | undefined
  created_on: string | null
  id: string
  name: string
  network_settings_ids?: string[] | undefined
}

export type t_network_settings = {
  id: string
  name: string
  network_configuration_id?: string | undefined
  region: string
  subnet_id: string
}

export type t_nullable_actions_hosted_runner_pool_image = {
  display_name: string
  id: string
  size_gb: number
  source: "github" | "partner" | "custom"
} | null

export type t_nullable_alert_updated_at = string | null

export type t_nullable_code_of_conduct_simple = {
  html_url: string | null
  key: string
  name: string
  url: string
} | null

export type t_nullable_codespace_machine = {
  cpus: number
  display_name: string
  memory_in_bytes: number
  name: string
  operating_system: string
  prebuild_availability: "none" | "ready" | "in_progress" | null
  storage_in_bytes: number
} | null

export type t_nullable_collaborator = {
  avatar_url: string
  email?: (string | null) | undefined
  events_url: string
  followers_url: string
  following_url: string
  gists_url: string
  gravatar_id: string | null
  html_url: string
  id: number
  login: string
  name?: (string | null) | undefined
  node_id: string
  organizations_url: string
  permissions?:
    | {
        admin: boolean
        maintain?: boolean | undefined
        pull: boolean
        push: boolean
        triage?: boolean | undefined
      }
    | undefined
  received_events_url: string
  repos_url: string
  role_name: string
  site_admin: boolean
  starred_url: string
  subscriptions_url: string
  type: string
  url: string
  user_view_type?: string | undefined
} | null

export type t_nullable_community_health_file = {
  html_url: string
  url: string
} | null

export type t_nullable_git_user = {
  date?: string | undefined
  email?: string | undefined
  name?: string | undefined
} | null

export type t_nullable_integration = {
  client_id?: string | undefined
  created_at: string
  description: string | null
  events: string[]
  external_url: string
  html_url: string
  id: number
  installations_count?: number | undefined
  name: string
  node_id: string
  owner: t_simple_user | t_enterprise
  permissions: {
    checks?: string | undefined
    contents?: string | undefined
    deployments?: string | undefined
    issues?: string | undefined
    metadata?: string | undefined
    [key: string]: string | undefined
  }
  slug?: string | undefined
  updated_at: string
} | null

export type t_nullable_issue = {
  active_lock_reason?: (string | null) | undefined
  assignee: t_nullable_simple_user
  assignees?: (t_simple_user[] | null) | undefined
  author_association: t_author_association
  body?: (string | null) | undefined
  body_html?: string | undefined
  body_text?: string | undefined
  closed_at: string | null
  closed_by?: t_nullable_simple_user | undefined
  comments: number
  comments_url: string
  created_at: string
  draft?: boolean | undefined
  events_url: string
  html_url: string
  id: number
  labels: (
    | string
    | {
        color?: (string | null) | undefined
        default?: boolean | undefined
        description?: (string | null) | undefined
        id?: number | undefined
        name?: string | undefined
        node_id?: string | undefined
        url?: string | undefined
      }
  )[]
  labels_url: string
  locked: boolean
  milestone: t_nullable_milestone
  node_id: string
  number: number
  performed_via_github_app?: t_nullable_integration | undefined
  pull_request?:
    | {
        diff_url: string | null
        html_url: string | null
        merged_at?: (string | null) | undefined
        patch_url: string | null
        url: string | null
      }
    | undefined
  reactions?: t_reaction_rollup | undefined
  repository?: t_repository | undefined
  repository_url: string
  state: string
  state_reason?: ("completed" | "reopened" | "not_planned" | null) | undefined
  sub_issues_summary?: t_sub_issues_summary | undefined
  timeline_url?: string | undefined
  title: string
  type?: t_issue_type | undefined
  updated_at: string
  url: string
  user: t_nullable_simple_user
} | null

export type t_nullable_license_simple = {
  html_url?: string | undefined
  key: string
  name: string
  node_id: string
  spdx_id: string | null
  url: string | null
} | null

export type t_nullable_milestone = {
  closed_at: string | null
  closed_issues: number
  created_at: string
  creator: t_nullable_simple_user
  description: string | null
  due_on: string | null
  html_url: string
  id: number
  labels_url: string
  node_id: string
  number: number
  open_issues: number
  state: "open" | "closed"
  title: string
  updated_at: string
  url: string
} | null

export type t_nullable_minimal_repository = {
  allow_forking?: boolean | undefined
  archive_url: string
  archived?: boolean | undefined
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url?: string | undefined
  code_of_conduct?: t_code_of_conduct | undefined
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at?: (string | null) | undefined
  custom_properties?:
    | {
        [key: string]: unknown | undefined
      }
    | undefined
  default_branch?: string | undefined
  delete_branch_on_merge?: boolean | undefined
  deployments_url: string
  description: string | null
  disabled?: boolean | undefined
  downloads_url: string
  events_url: string
  fork: boolean
  forks?: number | undefined
  forks_count?: number | undefined
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url?: string | undefined
  has_discussions?: boolean | undefined
  has_downloads?: boolean | undefined
  has_issues?: boolean | undefined
  has_pages?: boolean | undefined
  has_projects?: boolean | undefined
  has_wiki?: boolean | undefined
  homepage?: (string | null) | undefined
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean | undefined
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language?: (string | null) | undefined
  languages_url: string
  license?:
    | ({
        key?: string | undefined
        name?: string | undefined
        node_id?: string | undefined
        spdx_id?: string | undefined
        url?: string | undefined
      } | null)
    | undefined
  merges_url: string
  milestones_url: string
  mirror_url?: (string | null) | undefined
  name: string
  network_count?: number | undefined
  node_id: string
  notifications_url: string
  open_issues?: number | undefined
  open_issues_count?: number | undefined
  owner: t_simple_user
  permissions?:
    | {
        admin?: boolean | undefined
        maintain?: boolean | undefined
        pull?: boolean | undefined
        push?: boolean | undefined
        triage?: boolean | undefined
      }
    | undefined
  private: boolean
  pulls_url: string
  pushed_at?: (string | null) | undefined
  releases_url: string
  role_name?: string | undefined
  security_and_analysis?: t_security_and_analysis | undefined
  size?: number | undefined
  ssh_url?: string | undefined
  stargazers_count?: number | undefined
  stargazers_url: string
  statuses_url: string
  subscribers_count?: number | undefined
  subscribers_url: string
  subscription_url: string
  svn_url?: string | undefined
  tags_url: string
  teams_url: string
  temp_clone_token?: string | undefined
  topics?: string[] | undefined
  trees_url: string
  updated_at?: (string | null) | undefined
  url: string
  visibility?: string | undefined
  watchers?: number | undefined
  watchers_count?: number | undefined
  web_commit_signoff_required?: boolean | undefined
} | null

export type t_nullable_organization_simple = {
  avatar_url: string
  description: string | null
  events_url: string
  hooks_url: string
  id: number
  issues_url: string
  login: string
  members_url: string
  node_id: string
  public_members_url: string
  repos_url: string
  url: string
} | null

export type t_nullable_repository = {
  allow_auto_merge?: boolean | undefined
  allow_forking?: boolean | undefined
  allow_merge_commit?: boolean | undefined
  allow_rebase_merge?: boolean | undefined
  allow_squash_merge?: boolean | undefined
  allow_update_branch?: boolean | undefined
  anonymous_access_enabled?: boolean | undefined
  archive_url: string
  archived: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url: string
  code_search_index_status?:
    | {
        lexical_commit_sha?: string | undefined
        lexical_search_ok?: boolean | undefined
      }
    | undefined
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at: string | null
  default_branch: string
  delete_branch_on_merge?: boolean | undefined
  deployments_url: string
  description: string | null
  disabled: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks: number
  forks_count: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url: string
  has_discussions?: boolean | undefined
  has_downloads: boolean
  has_issues: boolean
  has_pages: boolean
  has_projects: boolean
  has_wiki: boolean
  homepage: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean | undefined
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language: string | null
  languages_url: string
  license: t_nullable_license_simple
  master_branch?: string | undefined
  merge_commit_message?: ("PR_BODY" | "PR_TITLE" | "BLANK") | undefined
  merge_commit_title?: ("PR_TITLE" | "MERGE_MESSAGE") | undefined
  merges_url: string
  milestones_url: string
  mirror_url: string | null
  name: string
  node_id: string
  notifications_url: string
  open_issues: number
  open_issues_count: number
  owner: t_simple_user
  permissions?:
    | {
        admin: boolean
        maintain?: boolean | undefined
        pull: boolean
        push: boolean
        triage?: boolean | undefined
      }
    | undefined
  private: boolean
  pulls_url: string
  pushed_at: string | null
  releases_url: string
  size: number
  squash_merge_commit_message?:
    | ("PR_BODY" | "COMMIT_MESSAGES" | "BLANK")
    | undefined
  squash_merge_commit_title?: ("PR_TITLE" | "COMMIT_OR_PR_TITLE") | undefined
  ssh_url: string
  stargazers_count: number
  stargazers_url: string
  starred_at?: string | undefined
  statuses_url: string
  subscribers_url: string
  subscription_url: string
  svn_url: string
  tags_url: string
  teams_url: string
  temp_clone_token?: string | undefined
  topics?: string[] | undefined
  trees_url: string
  updated_at: string | null
  url: string
  use_squash_pr_title_as_default?: boolean | undefined
  visibility?: string | undefined
  watchers: number
  watchers_count: number
  web_commit_signoff_required?: boolean | undefined
} | null

export type t_nullable_scoped_installation = {
  account: t_simple_user
  has_multiple_single_files?: boolean | undefined
  permissions: t_app_permissions
  repositories_url: string
  repository_selection: "all" | "selected"
  single_file_name: string | null
  single_file_paths?: string[] | undefined
} | null

export type t_nullable_secret_scanning_first_detected_location =
  | t_secret_scanning_location_commit
  | t_secret_scanning_location_wiki_commit
  | t_secret_scanning_location_issue_title
  | t_secret_scanning_location_issue_body
  | t_secret_scanning_location_issue_comment
  | t_secret_scanning_location_discussion_title
  | t_secret_scanning_location_discussion_body
  | t_secret_scanning_location_discussion_comment
  | t_secret_scanning_location_pull_request_title
  | t_secret_scanning_location_pull_request_body
  | t_secret_scanning_location_pull_request_comment
  | t_secret_scanning_location_pull_request_review
  | t_secret_scanning_location_pull_request_review_comment
  | null

export type t_nullable_simple_commit = {
  author: {
    email: string
    name: string
  } | null
  committer: {
    email: string
    name: string
  } | null
  id: string
  message: string
  timestamp: string
  tree_id: string
} | null

export type t_nullable_simple_repository = {
  archive_url: string
  assignees_url: string
  blobs_url: string
  branches_url: string
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  deployments_url: string
  description: string | null
  downloads_url: string
  events_url: string
  fork: boolean
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  hooks_url: string
  html_url: string
  id: number
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  languages_url: string
  merges_url: string
  milestones_url: string
  name: string
  node_id: string
  notifications_url: string
  owner: t_simple_user
  private: boolean
  pulls_url: string
  releases_url: string
  stargazers_url: string
  statuses_url: string
  subscribers_url: string
  subscription_url: string
  tags_url: string
  teams_url: string
  trees_url: string
  url: string
} | null

export type t_nullable_simple_user = {
  avatar_url: string
  email?: (string | null) | undefined
  events_url: string
  followers_url: string
  following_url: string
  gists_url: string
  gravatar_id: string | null
  html_url: string
  id: number
  login: string
  name?: (string | null) | undefined
  node_id: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  site_admin: boolean
  starred_at?: string | undefined
  starred_url: string
  subscriptions_url: string
  type: string
  url: string
  user_view_type?: string | undefined
} | null

export type t_nullable_team_simple = {
  description: string | null
  html_url: string
  id: number
  ldap_dn?: string | undefined
  members_url: string
  name: string
  node_id: string
  notification_setting?: string | undefined
  permission: string
  privacy?: string | undefined
  repositories_url: string
  slug: string
  url: string
} | null

export type t_oidc_custom_sub = {
  include_claim_keys: string[]
}

export type t_oidc_custom_sub_repo = {
  include_claim_keys?: string[] | undefined
  use_default: boolean
}

export type t_org_hook = {
  active: boolean
  config: {
    content_type?: string | undefined
    insecure_ssl?: string | undefined
    secret?: string | undefined
    url?: string | undefined
  }
  created_at: string
  deliveries_url?: string | undefined
  events: string[]
  id: number
  name: string
  ping_url: string
  type: string
  updated_at: string
  url: string
}

export type t_org_membership = {
  organization: t_organization_simple
  organization_url: string
  permissions?:
    | {
        can_create_repository: boolean
      }
    | undefined
  role: "admin" | "member" | "billing_manager"
  state: "active" | "pending"
  url: string
  user: t_nullable_simple_user
}

export type t_org_private_registry_configuration = {
  created_at: string
  name: string
  registry_type: "maven_repository" | "nuget_feed" | "goproxy_server"
  updated_at: string
  username?: (string | null) | undefined
  visibility: "all" | "private" | "selected"
}

export type t_org_private_registry_configuration_with_selected_repositories = {
  created_at: string
  name: string
  registry_type: "maven_repository" | "nuget_feed" | "goproxy_server"
  selected_repository_ids?: number[] | undefined
  updated_at: string
  username?: string | undefined
  visibility: "all" | "private" | "selected"
}

export type t_org_repo_custom_property_values = {
  properties: t_custom_property_value[]
  repository_full_name: string
  repository_id: number
  repository_name: string
}

export type t_org_ruleset_conditions =
  | (t_repository_ruleset_conditions &
      t_repository_ruleset_conditions_repository_name_target)
  | (t_repository_ruleset_conditions &
      t_repository_ruleset_conditions_repository_id_target)
  | (t_repository_ruleset_conditions &
      t_repository_ruleset_conditions_repository_property_target)

export type t_organization_actions_secret = {
  created_at: string
  name: string
  selected_repositories_url?: string | undefined
  updated_at: string
  visibility: "all" | "private" | "selected"
}

export type t_organization_actions_variable = {
  created_at: string
  name: string
  selected_repositories_url?: string | undefined
  updated_at: string
  value: string
  visibility: "all" | "private" | "selected"
}

export type t_organization_dependabot_secret = {
  created_at: string
  name: string
  selected_repositories_url?: string | undefined
  updated_at: string
  visibility: "all" | "private" | "selected"
}

export type t_organization_full = {
  advanced_security_enabled_for_new_repositories?: boolean | undefined
  archived_at: string | null
  avatar_url: string
  billing_email?: (string | null) | undefined
  blog?: string | undefined
  collaborators?: (number | null) | undefined
  company?: string | undefined
  created_at: string
  default_repository_branch?: (string | null) | undefined
  default_repository_permission?: (string | null) | undefined
  dependabot_alerts_enabled_for_new_repositories?: boolean | undefined
  dependabot_security_updates_enabled_for_new_repositories?: boolean | undefined
  dependency_graph_enabled_for_new_repositories?: boolean | undefined
  deploy_keys_enabled_for_repositories?: boolean | undefined
  description: string | null
  disk_usage?: (number | null) | undefined
  display_commenter_full_name_setting_enabled?: boolean | undefined
  email?: string | undefined
  events_url: string
  followers: number
  following: number
  has_organization_projects: boolean
  has_repository_projects: boolean
  hooks_url: string
  html_url: string
  id: number
  is_verified?: boolean | undefined
  issues_url: string
  location?: string | undefined
  login: string
  members_allowed_repository_creation_type?: string | undefined
  members_can_change_repo_visibility?: boolean | undefined
  members_can_create_internal_repositories?: boolean | undefined
  members_can_create_pages?: boolean | undefined
  members_can_create_private_pages?: boolean | undefined
  members_can_create_private_repositories?: boolean | undefined
  members_can_create_public_pages?: boolean | undefined
  members_can_create_public_repositories?: boolean | undefined
  members_can_create_repositories?: (boolean | null) | undefined
  members_can_create_teams?: boolean | undefined
  members_can_delete_issues?: boolean | undefined
  members_can_delete_repositories?: boolean | undefined
  members_can_fork_private_repositories?: (boolean | null) | undefined
  members_can_invite_outside_collaborators?: boolean | undefined
  members_can_view_dependency_insights?: boolean | undefined
  members_url: string
  name?: string | undefined
  node_id: string
  owned_private_repos?: number | undefined
  plan?:
    | {
        filled_seats?: number | undefined
        name: string
        private_repos: number
        seats?: number | undefined
        space: number
      }
    | undefined
  private_gists?: (number | null) | undefined
  public_gists: number
  public_members_url: string
  public_repos: number
  readers_can_create_discussions?: boolean | undefined
  repos_url: string
  secret_scanning_enabled_for_new_repositories?: boolean | undefined
  secret_scanning_push_protection_custom_link?: (string | null) | undefined
  secret_scanning_push_protection_custom_link_enabled?: boolean | undefined
  secret_scanning_push_protection_enabled_for_new_repositories?:
    | boolean
    | undefined
  total_private_repos?: number | undefined
  twitter_username?: (string | null) | undefined
  two_factor_requirement_enabled?: (boolean | null) | undefined
  type: string
  updated_at: string
  url: string
  web_commit_signoff_required?: boolean | undefined
}

export type t_organization_invitation = {
  created_at: string
  email: string | null
  failed_at?: (string | null) | undefined
  failed_reason?: (string | null) | undefined
  id: number
  invitation_source?: string | undefined
  invitation_teams_url: string
  inviter: t_simple_user
  login: string | null
  node_id: string
  role: string
  team_count: number
}

export type t_organization_programmatic_access_grant = {
  access_granted_at: string
  id: number
  owner: t_simple_user
  permissions: {
    organization?:
      | {
          [key: string]: string | undefined
        }
      | undefined
    other?:
      | {
          [key: string]: string | undefined
        }
      | undefined
    repository?:
      | {
          [key: string]: string | undefined
        }
      | undefined
  }
  repositories_url: string
  repository_selection: "none" | "all" | "subset"
  token_expired: boolean
  token_expires_at: string | null
  token_id: number
  token_last_used_at: string | null
  token_name: string
}

export type t_organization_programmatic_access_grant_request = {
  created_at: string
  id: number
  owner: t_simple_user
  permissions: {
    organization?:
      | {
          [key: string]: string | undefined
        }
      | undefined
    other?:
      | {
          [key: string]: string | undefined
        }
      | undefined
    repository?:
      | {
          [key: string]: string | undefined
        }
      | undefined
  }
  reason: string | null
  repositories_url: string
  repository_selection: "none" | "all" | "subset"
  token_expired: boolean
  token_expires_at: string | null
  token_id: number
  token_last_used_at: string | null
  token_name: string
}

export type t_organization_role = {
  base_role?:
    | ("read" | "triage" | "write" | "maintain" | "admin" | null)
    | undefined
  created_at: string
  description?: (string | null) | undefined
  id: number
  name: string
  organization: t_nullable_simple_user
  permissions: string[]
  source?: ("Organization" | "Enterprise" | "Predefined" | null) | undefined
  updated_at: string
}

export type t_organization_secret_scanning_alert = {
  created_at?: t_alert_created_at | undefined
  first_location_detected?:
    | t_nullable_secret_scanning_first_detected_location
    | undefined
  has_more_locations?: boolean | undefined
  html_url?: t_alert_html_url | undefined
  is_base64_encoded?: (boolean | null) | undefined
  locations_url?: string | undefined
  multi_repo?: (boolean | null) | undefined
  number?: t_alert_number | undefined
  publicly_leaked?: (boolean | null) | undefined
  push_protection_bypass_request_comment?: (string | null) | undefined
  push_protection_bypass_request_html_url?: (string | null) | undefined
  push_protection_bypass_request_reviewer?: t_nullable_simple_user | undefined
  push_protection_bypass_request_reviewer_comment?: (string | null) | undefined
  push_protection_bypassed?: (boolean | null) | undefined
  push_protection_bypassed_at?: (string | null) | undefined
  push_protection_bypassed_by?: t_nullable_simple_user | undefined
  repository?: t_simple_repository | undefined
  resolution?: t_secret_scanning_alert_resolution | undefined
  resolution_comment?: (string | null) | undefined
  resolved_at?: (string | null) | undefined
  resolved_by?: t_nullable_simple_user | undefined
  secret?: string | undefined
  secret_type?: string | undefined
  secret_type_display_name?: string | undefined
  state?: t_secret_scanning_alert_state | undefined
  updated_at?: t_nullable_alert_updated_at | undefined
  url?: t_alert_url | undefined
  validity?: ("active" | "inactive" | "unknown") | undefined
}

export type t_organization_simple = {
  avatar_url: string
  description: string | null
  events_url: string
  hooks_url: string
  id: number
  issues_url: string
  login: string
  members_url: string
  node_id: string
  public_members_url: string
  repos_url: string
  url: string
}

export type t_package = {
  created_at: string
  html_url: string
  id: number
  name: string
  owner?: t_nullable_simple_user | undefined
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  repository?: t_nullable_minimal_repository | undefined
  updated_at: string
  url: string
  version_count: number
  visibility: "private" | "public"
}

export type t_package_version = {
  created_at: string
  deleted_at?: string | undefined
  description?: string | undefined
  html_url?: string | undefined
  id: number
  license?: string | undefined
  metadata?:
    | {
        container?:
          | {
              tags: string[]
            }
          | undefined
        docker?:
          | {
              tag?: string[] | undefined
            }
          | undefined
        package_type:
          | "npm"
          | "maven"
          | "rubygems"
          | "docker"
          | "nuget"
          | "container"
      }
    | undefined
  name: string
  package_html_url: string
  updated_at: string
  url: string
}

export type t_packages_billing_usage = {
  included_gigabytes_bandwidth: number
  total_gigabytes_bandwidth_used: number
  total_paid_gigabytes_bandwidth_used: number
}

export type t_page = {
  build_type?: ("legacy" | "workflow" | null) | undefined
  cname: string | null
  custom_404: boolean
  html_url?: string | undefined
  https_certificate?: t_pages_https_certificate | undefined
  https_enforced?: boolean | undefined
  pending_domain_unverified_at?: (string | null) | undefined
  protected_domain_state?:
    | ("pending" | "verified" | "unverified" | null)
    | undefined
  public: boolean
  source?: t_pages_source_hash | undefined
  status: "built" | "building" | "errored" | null
  url: string
}

export type t_page_build = {
  commit: string
  created_at: string
  duration: number
  error: {
    message: string | null
  }
  pusher: t_nullable_simple_user
  status: string
  updated_at: string
  url: string
}

export type t_page_build_status = {
  status: string
  url: string
}

export type t_page_deployment = {
  id: number | string
  page_url: string
  preview_url?: string | undefined
  status_url: string
}

export type t_pages_deployment_status = {
  status?:
    | (
        | "deployment_in_progress"
        | "syncing_files"
        | "finished_file_sync"
        | "updating_pages"
        | "purging_cdn"
        | "deployment_cancelled"
        | "deployment_failed"
        | "deployment_content_failed"
        | "deployment_attempt_error"
        | "deployment_lost"
        | "succeed"
      )
    | undefined
}

export type t_pages_health_check = {
  alt_domain?:
    | ({
        caa_error?: (string | null) | undefined
        dns_resolves?: boolean | undefined
        enforces_https?: boolean | undefined
        has_cname_record?: (boolean | null) | undefined
        has_mx_records_present?: (boolean | null) | undefined
        host?: string | undefined
        https_error?: (string | null) | undefined
        is_a_record?: (boolean | null) | undefined
        is_apex_domain?: boolean | undefined
        is_cloudflare_ip?: (boolean | null) | undefined
        is_cname_to_fastly?: (boolean | null) | undefined
        is_cname_to_github_user_domain?: (boolean | null) | undefined
        is_cname_to_pages_dot_github_dot_com?: (boolean | null) | undefined
        is_fastly_ip?: (boolean | null) | undefined
        is_https_eligible?: (boolean | null) | undefined
        is_non_github_pages_ip_present?: (boolean | null) | undefined
        is_old_ip_address?: (boolean | null) | undefined
        is_pages_domain?: boolean | undefined
        is_pointed_to_github_pages_ip?: (boolean | null) | undefined
        is_proxied?: (boolean | null) | undefined
        is_served_by_pages?: (boolean | null) | undefined
        is_valid?: boolean | undefined
        is_valid_domain?: boolean | undefined
        nameservers?: string | undefined
        reason?: (string | null) | undefined
        responds_to_https?: boolean | undefined
        should_be_a_record?: (boolean | null) | undefined
        uri?: string | undefined
      } | null)
    | undefined
  domain?:
    | {
        caa_error?: (string | null) | undefined
        dns_resolves?: boolean | undefined
        enforces_https?: boolean | undefined
        has_cname_record?: (boolean | null) | undefined
        has_mx_records_present?: (boolean | null) | undefined
        host?: string | undefined
        https_error?: (string | null) | undefined
        is_a_record?: (boolean | null) | undefined
        is_apex_domain?: boolean | undefined
        is_cloudflare_ip?: (boolean | null) | undefined
        is_cname_to_fastly?: (boolean | null) | undefined
        is_cname_to_github_user_domain?: (boolean | null) | undefined
        is_cname_to_pages_dot_github_dot_com?: (boolean | null) | undefined
        is_fastly_ip?: (boolean | null) | undefined
        is_https_eligible?: (boolean | null) | undefined
        is_non_github_pages_ip_present?: (boolean | null) | undefined
        is_old_ip_address?: (boolean | null) | undefined
        is_pages_domain?: boolean | undefined
        is_pointed_to_github_pages_ip?: (boolean | null) | undefined
        is_proxied?: (boolean | null) | undefined
        is_served_by_pages?: (boolean | null) | undefined
        is_valid?: boolean | undefined
        is_valid_domain?: boolean | undefined
        nameservers?: string | undefined
        reason?: (string | null) | undefined
        responds_to_https?: boolean | undefined
        should_be_a_record?: (boolean | null) | undefined
        uri?: string | undefined
      }
    | undefined
}

export type t_pages_https_certificate = {
  description: string
  domains: string[]
  expires_at?: string | undefined
  state:
    | "new"
    | "authorization_created"
    | "authorization_pending"
    | "authorized"
    | "authorization_revoked"
    | "issued"
    | "uploaded"
    | "approved"
    | "errored"
    | "bad_authz"
    | "destroy_pending"
    | "dns_changed"
}

export type t_pages_source_hash = {
  branch: string
  path: string
}

export type t_participation_stats = {
  all: number[]
  owner: number[]
}

export type t_pending_deployment = {
  current_user_can_approve: boolean
  environment: {
    html_url?: string | undefined
    id?: number | undefined
    name?: string | undefined
    node_id?: string | undefined
    url?: string | undefined
  }
  reviewers: {
    reviewer?: (t_simple_user | t_team) | undefined
    type?: t_deployment_reviewer_type | undefined
  }[]
  wait_timer: number
  wait_timer_started_at: string | null
}

export type t_porter_author = {
  email: string
  id: number
  import_url: string
  name: string
  remote_id: string
  remote_name: string
  url: string
}

export type t_porter_large_file = {
  oid: string
  path: string
  ref_name: string
  size: number
}

export type t_prevent_self_review = boolean

export type t_private_user = {
  avatar_url: string
  bio: string | null
  blog: string | null
  business_plus?: boolean | undefined
  collaborators: number
  company: string | null
  created_at: string
  disk_usage: number
  email: string | null
  events_url: string
  followers: number
  followers_url: string
  following: number
  following_url: string
  gists_url: string
  gravatar_id: string | null
  hireable: boolean | null
  html_url: string
  id: number
  ldap_dn?: string | undefined
  location: string | null
  login: string
  name: string | null
  node_id: string
  notification_email?: (string | null) | undefined
  organizations_url: string
  owned_private_repos: number
  plan?:
    | {
        collaborators: number
        name: string
        private_repos: number
        space: number
      }
    | undefined
  private_gists: number
  public_gists: number
  public_repos: number
  received_events_url: string
  repos_url: string
  site_admin: boolean
  starred_url: string
  subscriptions_url: string
  total_private_repos: number
  twitter_username?: (string | null) | undefined
  two_factor_authentication: boolean
  type: string
  updated_at: string
  url: string
  user_view_type?: string | undefined
}

export type t_project = {
  body: string | null
  columns_url: string
  created_at: string
  creator: t_nullable_simple_user
  html_url: string
  id: number
  name: string
  node_id: string
  number: number
  organization_permission?: ("read" | "write" | "admin" | "none") | undefined
  owner_url: string
  private?: boolean | undefined
  state: string
  updated_at: string
  url: string
}

export type t_project_card = {
  archived?: boolean | undefined
  column_name?: string | undefined
  column_url: string
  content_url?: string | undefined
  created_at: string
  creator: t_nullable_simple_user
  id: number
  node_id: string
  note: string | null
  project_id?: string | undefined
  project_url: string
  updated_at: string
  url: string
}

export type t_project_collaborator_permission = {
  permission: string
  user: t_nullable_simple_user
}

export type t_project_column = {
  cards_url: string
  created_at: string
  id: number
  name: string
  node_id: string
  project_url: string
  updated_at: string
  url: string
}

export type t_protected_branch = {
  allow_deletions?:
    | {
        enabled: boolean
      }
    | undefined
  allow_force_pushes?:
    | {
        enabled: boolean
      }
    | undefined
  allow_fork_syncing?:
    | {
        enabled?: boolean | undefined
      }
    | undefined
  block_creations?:
    | {
        enabled: boolean
      }
    | undefined
  enforce_admins?:
    | {
        enabled: boolean
        url: string
      }
    | undefined
  lock_branch?:
    | {
        enabled?: boolean | undefined
      }
    | undefined
  required_conversation_resolution?:
    | {
        enabled?: boolean | undefined
      }
    | undefined
  required_linear_history?:
    | {
        enabled: boolean
      }
    | undefined
  required_pull_request_reviews?:
    | {
        bypass_pull_request_allowances?:
          | {
              apps?: t_integration[] | undefined
              teams: t_team[]
              users: t_simple_user[]
            }
          | undefined
        dismiss_stale_reviews?: boolean | undefined
        dismissal_restrictions?:
          | {
              apps?: t_integration[] | undefined
              teams: t_team[]
              teams_url: string
              url: string
              users: t_simple_user[]
              users_url: string
            }
          | undefined
        require_code_owner_reviews?: boolean | undefined
        require_last_push_approval?: boolean | undefined
        required_approving_review_count?: number | undefined
        url: string
      }
    | undefined
  required_signatures?:
    | {
        enabled: boolean
        url: string
      }
    | undefined
  required_status_checks?: t_status_check_policy | undefined
  restrictions?: t_branch_restriction_policy | undefined
  url: string
}

export type t_protected_branch_admin_enforced = {
  enabled: boolean
  url: string
}

export type t_protected_branch_pull_request_review = {
  bypass_pull_request_allowances?:
    | {
        apps?: t_integration[] | undefined
        teams?: t_team[] | undefined
        users?: t_simple_user[] | undefined
      }
    | undefined
  dismiss_stale_reviews: boolean
  dismissal_restrictions?:
    | {
        apps?: t_integration[] | undefined
        teams?: t_team[] | undefined
        teams_url?: string | undefined
        url?: string | undefined
        users?: t_simple_user[] | undefined
        users_url?: string | undefined
      }
    | undefined
  require_code_owner_reviews: boolean
  require_last_push_approval?: boolean | undefined
  required_approving_review_count?: number | undefined
  url?: string | undefined
}

export type t_protected_branch_required_status_check = {
  checks: {
    app_id: number | null
    context: string
  }[]
  contexts: string[]
  contexts_url?: string | undefined
  enforcement_level?: string | undefined
  strict?: boolean | undefined
  url?: string | undefined
}

export type t_public_ip = {
  enabled?: boolean | undefined
  length?: number | undefined
  prefix?: string | undefined
}

export type t_public_user = {
  avatar_url: string
  bio: string | null
  blog: string | null
  collaborators?: number | undefined
  company: string | null
  created_at: string
  disk_usage?: number | undefined
  email: string | null
  events_url: string
  followers: number
  followers_url: string
  following: number
  following_url: string
  gists_url: string
  gravatar_id: string | null
  hireable: boolean | null
  html_url: string
  id: number
  location: string | null
  login: string
  name: string | null
  node_id: string
  notification_email?: (string | null) | undefined
  organizations_url: string
  owned_private_repos?: number | undefined
  plan?:
    | {
        collaborators: number
        name: string
        private_repos: number
        space: number
      }
    | undefined
  private_gists?: number | undefined
  public_gists: number
  public_repos: number
  received_events_url: string
  repos_url: string
  site_admin: boolean
  starred_url: string
  subscriptions_url: string
  total_private_repos?: number | undefined
  twitter_username?: (string | null) | undefined
  type: string
  updated_at: string
  url: string
  user_view_type?: string | undefined
}

export type t_pull_request = {
  _links: {
    comments: t_link
    commits: t_link
    html: t_link
    issue: t_link
    review_comment: t_link
    review_comments: t_link
    self: t_link
    statuses: t_link
  }
  active_lock_reason?: (string | null) | undefined
  additions: number
  assignee: t_nullable_simple_user
  assignees?: (t_simple_user[] | null) | undefined
  author_association: t_author_association
  auto_merge: t_auto_merge
  base: {
    label: string
    ref: string
    repo: t_repository
    sha: string
    user: t_simple_user
  }
  body: string | null
  changed_files: number
  closed_at: string | null
  comments: number
  comments_url: string
  commits: number
  commits_url: string
  created_at: string
  deletions: number
  diff_url: string
  draft?: boolean | undefined
  head: {
    label: string
    ref: string
    repo: t_repository
    sha: string
    user: t_simple_user
  }
  html_url: string
  id: number
  issue_url: string
  labels: {
    color: string
    default: boolean
    description: string | null
    id: number
    name: string
    node_id: string
    url: string
  }[]
  locked: boolean
  maintainer_can_modify: boolean
  merge_commit_sha: string | null
  mergeable: boolean | null
  mergeable_state: string
  merged: boolean
  merged_at: string | null
  merged_by: t_nullable_simple_user
  milestone: t_nullable_milestone
  node_id: string
  number: number
  patch_url: string
  rebaseable?: (boolean | null) | undefined
  requested_reviewers?: (t_simple_user[] | null) | undefined
  requested_teams?: (t_team_simple[] | null) | undefined
  review_comment_url: string
  review_comments: number
  review_comments_url: string
  state: "open" | "closed"
  statuses_url: string
  title: string
  updated_at: string
  url: string
  user: t_simple_user
}

export type t_pull_request_merge_result = {
  merged: boolean
  message: string
  sha: string
}

export type t_pull_request_minimal = {
  base: {
    ref: string
    repo: {
      id: number
      name: string
      url: string
    }
    sha: string
  }
  head: {
    ref: string
    repo: {
      id: number
      name: string
      url: string
    }
    sha: string
  }
  id: number
  number: number
  url: string
}

export type t_pull_request_review = {
  _links: {
    html: {
      href: string
    }
    pull_request: {
      href: string
    }
  }
  author_association: t_author_association
  body: string
  body_html?: string | undefined
  body_text?: string | undefined
  commit_id: string | null
  html_url: string
  id: number
  node_id: string
  pull_request_url: string
  state: string
  submitted_at?: string | undefined
  user: t_nullable_simple_user
}

export type t_pull_request_review_comment = {
  _links: {
    html: {
      href: string
    }
    pull_request: {
      href: string
    }
    self: {
      href: string
    }
  }
  author_association: t_author_association
  body: string
  body_html?: string | undefined
  body_text?: string | undefined
  commit_id: string
  created_at: string
  diff_hunk: string
  html_url: string
  id: number
  in_reply_to_id?: number | undefined
  line?: number | undefined
  node_id: string
  original_commit_id: string
  original_line?: number | undefined
  original_position?: number | undefined
  original_start_line?: (number | null) | undefined
  path: string
  position?: number | undefined
  pull_request_review_id: number | null
  pull_request_url: string
  reactions?: t_reaction_rollup | undefined
  side?: ("LEFT" | "RIGHT") | undefined
  start_line?: (number | null) | undefined
  start_side?: ("LEFT" | "RIGHT" | null) | undefined
  subject_type?: ("line" | "file") | undefined
  updated_at: string
  url: string
  user: t_simple_user
}

export type t_pull_request_review_request = {
  teams: t_team[]
  users: t_simple_user[]
}

export type t_pull_request_simple = {
  _links: {
    comments: t_link
    commits: t_link
    html: t_link
    issue: t_link
    review_comment: t_link
    review_comments: t_link
    self: t_link
    statuses: t_link
  }
  active_lock_reason?: (string | null) | undefined
  assignee: t_nullable_simple_user
  assignees?: (t_simple_user[] | null) | undefined
  author_association: t_author_association
  auto_merge: t_auto_merge
  base: {
    label: string
    ref: string
    repo: t_repository
    sha: string
    user: t_nullable_simple_user
  }
  body: string | null
  closed_at: string | null
  comments_url: string
  commits_url: string
  created_at: string
  diff_url: string
  draft?: boolean | undefined
  head: {
    label: string
    ref: string
    repo: t_repository
    sha: string
    user: t_nullable_simple_user
  }
  html_url: string
  id: number
  issue_url: string
  labels: {
    color: string
    default: boolean
    description: string
    id: number
    name: string
    node_id: string
    url: string
  }[]
  locked: boolean
  merge_commit_sha: string | null
  merged_at: string | null
  milestone: t_nullable_milestone
  node_id: string
  number: number
  patch_url: string
  requested_reviewers?: (t_simple_user[] | null) | undefined
  requested_teams?: (t_team[] | null) | undefined
  review_comment_url: string
  review_comments_url: string
  state: string
  statuses_url: string
  title: string
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_rate_limit = {
  limit: number
  remaining: number
  reset: number
  used: number
}

export type t_rate_limit_overview = {
  rate: t_rate_limit
  resources: {
    actions_runner_registration?: t_rate_limit | undefined
    code_scanning_autofix?: t_rate_limit | undefined
    code_scanning_upload?: t_rate_limit | undefined
    code_search?: t_rate_limit | undefined
    core: t_rate_limit
    dependency_sbom?: t_rate_limit | undefined
    dependency_snapshots?: t_rate_limit | undefined
    graphql?: t_rate_limit | undefined
    integration_manifest?: t_rate_limit | undefined
    scim?: t_rate_limit | undefined
    search: t_rate_limit
    source_import?: t_rate_limit | undefined
  }
}

export type t_reaction = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
  created_at: string
  id: number
  node_id: string
  user: t_nullable_simple_user
}

export type t_reaction_rollup = {
  "+1": number
  "-1": number
  confused: number
  eyes: number
  heart: number
  hooray: number
  laugh: number
  rocket: number
  total_count: number
  url: string
}

export type t_referenced_workflow = {
  path: string
  ref?: string | undefined
  sha: string
}

export type t_referrer_traffic = {
  count: number
  referrer: string
  uniques: number
}

export type t_release = {
  assets: t_release_asset[]
  assets_url: string
  author: t_simple_user
  body?: (string | null) | undefined
  body_html?: string | undefined
  body_text?: string | undefined
  created_at: string
  discussion_url?: string | undefined
  draft: boolean
  html_url: string
  id: number
  mentions_count?: number | undefined
  name: string | null
  node_id: string
  prerelease: boolean
  published_at: string | null
  reactions?: t_reaction_rollup | undefined
  tag_name: string
  tarball_url: string | null
  target_commitish: string
  upload_url: string
  url: string
  zipball_url: string | null
}

export type t_release_asset = {
  browser_download_url: string
  content_type: string
  created_at: string
  digest: string | null
  download_count: number
  id: number
  label: string | null
  name: string
  node_id: string
  size: number
  state: "uploaded" | "open"
  updated_at: string
  uploader: t_nullable_simple_user
  url: string
}

export type t_release_notes_content = {
  body: string
  name: string
}

export type t_removed_from_project_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  project_card?:
    | {
        column_name: string
        id: number
        previous_column_name?: string | undefined
        project_id: number
        project_url: string
        url: string
      }
    | undefined
  url: string
}

export type t_renamed_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  rename: {
    from: string
    to: string
  }
  url: string
}

export type t_repo_codespaces_secret = {
  created_at: string
  name: string
  updated_at: string
}

export type t_repo_search_result_item = {
  allow_auto_merge?: boolean | undefined
  allow_forking?: boolean | undefined
  allow_merge_commit?: boolean | undefined
  allow_rebase_merge?: boolean | undefined
  allow_squash_merge?: boolean | undefined
  archive_url: string
  archived: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url: string
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at: string
  default_branch: string
  delete_branch_on_merge?: boolean | undefined
  deployments_url: string
  description: string | null
  disabled: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks: number
  forks_count: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url: string
  has_discussions?: boolean | undefined
  has_downloads: boolean
  has_issues: boolean
  has_pages: boolean
  has_projects: boolean
  has_wiki: boolean
  homepage: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean | undefined
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language: string | null
  languages_url: string
  license: t_nullable_license_simple
  master_branch?: string | undefined
  merges_url: string
  milestones_url: string
  mirror_url: string | null
  name: string
  node_id: string
  notifications_url: string
  open_issues: number
  open_issues_count: number
  owner: t_nullable_simple_user
  permissions?:
    | {
        admin: boolean
        maintain?: boolean | undefined
        pull: boolean
        push: boolean
        triage?: boolean | undefined
      }
    | undefined
  private: boolean
  pulls_url: string
  pushed_at: string
  releases_url: string
  score: number
  size: number
  ssh_url: string
  stargazers_count: number
  stargazers_url: string
  statuses_url: string
  subscribers_url: string
  subscription_url: string
  svn_url: string
  tags_url: string
  teams_url: string
  temp_clone_token?: string | undefined
  text_matches?: t_search_result_text_matches | undefined
  topics?: string[] | undefined
  trees_url: string
  updated_at: string
  url: string
  visibility?: string | undefined
  watchers: number
  watchers_count: number
  web_commit_signoff_required?: boolean | undefined
}

export type t_repository = {
  allow_auto_merge?: boolean | undefined
  allow_forking?: boolean | undefined
  allow_merge_commit?: boolean | undefined
  allow_rebase_merge?: boolean | undefined
  allow_squash_merge?: boolean | undefined
  allow_update_branch?: boolean | undefined
  anonymous_access_enabled?: boolean | undefined
  archive_url: string
  archived: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url: string
  code_search_index_status?:
    | {
        lexical_commit_sha?: string | undefined
        lexical_search_ok?: boolean | undefined
      }
    | undefined
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at: string | null
  default_branch: string
  delete_branch_on_merge?: boolean | undefined
  deployments_url: string
  description: string | null
  disabled: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks: number
  forks_count: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url: string
  has_discussions?: boolean | undefined
  has_downloads: boolean
  has_issues: boolean
  has_pages: boolean
  has_projects: boolean
  has_wiki: boolean
  homepage: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean | undefined
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language: string | null
  languages_url: string
  license: t_nullable_license_simple
  master_branch?: string | undefined
  merge_commit_message?: ("PR_BODY" | "PR_TITLE" | "BLANK") | undefined
  merge_commit_title?: ("PR_TITLE" | "MERGE_MESSAGE") | undefined
  merges_url: string
  milestones_url: string
  mirror_url: string | null
  name: string
  node_id: string
  notifications_url: string
  open_issues: number
  open_issues_count: number
  owner: t_simple_user
  permissions?:
    | {
        admin: boolean
        maintain?: boolean | undefined
        pull: boolean
        push: boolean
        triage?: boolean | undefined
      }
    | undefined
  private: boolean
  pulls_url: string
  pushed_at: string | null
  releases_url: string
  size: number
  squash_merge_commit_message?:
    | ("PR_BODY" | "COMMIT_MESSAGES" | "BLANK")
    | undefined
  squash_merge_commit_title?: ("PR_TITLE" | "COMMIT_OR_PR_TITLE") | undefined
  ssh_url: string
  stargazers_count: number
  stargazers_url: string
  starred_at?: string | undefined
  statuses_url: string
  subscribers_url: string
  subscription_url: string
  svn_url: string
  tags_url: string
  teams_url: string
  temp_clone_token?: string | undefined
  topics?: string[] | undefined
  trees_url: string
  updated_at: string | null
  url: string
  use_squash_pr_title_as_default?: boolean | undefined
  visibility?: string | undefined
  watchers: number
  watchers_count: number
  web_commit_signoff_required?: boolean | undefined
}

export type t_repository_advisory = {
  readonly author: t_simple_user | null
  readonly closed_at: string | null
  collaborating_teams: t_team[] | null
  collaborating_users: t_simple_user[] | null
  readonly created_at: string | null
  credits:
    | {
        login?: string | undefined
        type?: t_security_advisory_credit_types | undefined
      }[]
    | null
  readonly credits_detailed: t_repository_advisory_credit[] | null
  cve_id: string | null
  cvss: {
    readonly score: number | null
    vector_string: string | null
  } | null
  cvss_severities?: t_cvss_severities | undefined
  cwe_ids: string[] | null
  readonly cwes:
    | {
        cwe_id: string
        readonly name: string
      }[]
    | null
  description: string | null
  readonly ghsa_id: string
  readonly html_url: string
  readonly identifiers: {
    type: "CVE" | "GHSA"
    value: string
  }[]
  readonly private_fork: t_simple_repository | null
  readonly published_at: string | null
  readonly publisher: t_simple_user | null
  severity: "critical" | "high" | "medium" | "low" | null
  state: "published" | "closed" | "withdrawn" | "draft" | "triage"
  readonly submission: {
    readonly accepted: boolean
  } | null
  summary: string
  readonly updated_at: string | null
  readonly url: string
  vulnerabilities: t_repository_advisory_vulnerability[] | null
  readonly withdrawn_at: string | null
}

export type t_repository_advisory_credit = {
  state: "accepted" | "declined" | "pending"
  type: t_security_advisory_credit_types
  user: t_simple_user
}

export type t_repository_advisory_vulnerability = {
  package: {
    ecosystem: t_security_advisory_ecosystems
    name: string | null
  } | null
  patched_versions: string | null
  vulnerable_functions: string[] | null
  vulnerable_version_range: string | null
}

export type t_repository_collaborator_permission = {
  permission: string
  role_name: string
  user: t_nullable_collaborator
}

export type t_repository_invitation = {
  created_at: string
  expired?: boolean | undefined
  html_url: string
  id: number
  invitee: t_nullable_simple_user
  inviter: t_nullable_simple_user
  node_id: string
  permissions: "read" | "write" | "admin" | "triage" | "maintain"
  repository: t_minimal_repository
  url: string
}

export type t_repository_rule =
  | t_repository_rule_creation
  | t_repository_rule_update
  | t_repository_rule_deletion
  | t_repository_rule_required_linear_history
  | t_repository_rule_merge_queue
  | t_repository_rule_required_deployments
  | t_repository_rule_required_signatures
  | t_repository_rule_pull_request
  | t_repository_rule_required_status_checks
  | t_repository_rule_non_fast_forward
  | t_repository_rule_commit_message_pattern
  | t_repository_rule_commit_author_email_pattern
  | t_repository_rule_committer_email_pattern
  | t_repository_rule_branch_name_pattern
  | t_repository_rule_tag_name_pattern
  | t_repository_rule_file_path_restriction
  | t_repository_rule_max_file_path_length
  | t_repository_rule_file_extension_restriction
  | t_repository_rule_max_file_size
  | t_repository_rule_workflows
  | t_repository_rule_code_scanning

export type t_repository_rule_branch_name_pattern = {
  parameters?:
    | {
        name?: string | undefined
        negate?: boolean | undefined
        operator: "starts_with" | "ends_with" | "contains" | "regex"
        pattern: string
      }
    | undefined
  type: "branch_name_pattern"
}

export type t_repository_rule_code_scanning = {
  parameters?:
    | {
        code_scanning_tools: t_repository_rule_params_code_scanning_tool[]
      }
    | undefined
  type: "code_scanning"
}

export type t_repository_rule_commit_author_email_pattern = {
  parameters?:
    | {
        name?: string | undefined
        negate?: boolean | undefined
        operator: "starts_with" | "ends_with" | "contains" | "regex"
        pattern: string
      }
    | undefined
  type: "commit_author_email_pattern"
}

export type t_repository_rule_commit_message_pattern = {
  parameters?:
    | {
        name?: string | undefined
        negate?: boolean | undefined
        operator: "starts_with" | "ends_with" | "contains" | "regex"
        pattern: string
      }
    | undefined
  type: "commit_message_pattern"
}

export type t_repository_rule_committer_email_pattern = {
  parameters?:
    | {
        name?: string | undefined
        negate?: boolean | undefined
        operator: "starts_with" | "ends_with" | "contains" | "regex"
        pattern: string
      }
    | undefined
  type: "committer_email_pattern"
}

export type t_repository_rule_creation = {
  type: "creation"
}

export type t_repository_rule_deletion = {
  type: "deletion"
}

export type t_repository_rule_detailed =
  | (t_repository_rule_creation & t_repository_rule_ruleset_info)
  | (t_repository_rule_update & t_repository_rule_ruleset_info)
  | (t_repository_rule_deletion & t_repository_rule_ruleset_info)
  | (t_repository_rule_required_linear_history & t_repository_rule_ruleset_info)
  | (t_repository_rule_merge_queue & t_repository_rule_ruleset_info)
  | (t_repository_rule_required_deployments & t_repository_rule_ruleset_info)
  | (t_repository_rule_required_signatures & t_repository_rule_ruleset_info)
  | (t_repository_rule_pull_request & t_repository_rule_ruleset_info)
  | (t_repository_rule_required_status_checks & t_repository_rule_ruleset_info)
  | (t_repository_rule_non_fast_forward & t_repository_rule_ruleset_info)
  | (t_repository_rule_commit_message_pattern & t_repository_rule_ruleset_info)
  | (t_repository_rule_commit_author_email_pattern &
      t_repository_rule_ruleset_info)
  | (t_repository_rule_committer_email_pattern & t_repository_rule_ruleset_info)
  | (t_repository_rule_branch_name_pattern & t_repository_rule_ruleset_info)
  | (t_repository_rule_tag_name_pattern & t_repository_rule_ruleset_info)
  | (t_repository_rule_file_path_restriction & t_repository_rule_ruleset_info)
  | (t_repository_rule_max_file_path_length & t_repository_rule_ruleset_info)
  | (t_repository_rule_file_extension_restriction &
      t_repository_rule_ruleset_info)
  | (t_repository_rule_max_file_size & t_repository_rule_ruleset_info)
  | (t_repository_rule_workflows & t_repository_rule_ruleset_info)
  | (t_repository_rule_code_scanning & t_repository_rule_ruleset_info)

export type t_repository_rule_enforcement = "disabled" | "active" | "evaluate"

export type t_repository_rule_file_extension_restriction = {
  parameters?:
    | {
        restricted_file_extensions: string[]
      }
    | undefined
  type: "file_extension_restriction"
}

export type t_repository_rule_file_path_restriction = {
  parameters?:
    | {
        restricted_file_paths: string[]
      }
    | undefined
  type: "file_path_restriction"
}

export type t_repository_rule_max_file_path_length = {
  parameters?:
    | {
        max_file_path_length: number
      }
    | undefined
  type: "max_file_path_length"
}

export type t_repository_rule_max_file_size = {
  parameters?:
    | {
        max_file_size: number
      }
    | undefined
  type: "max_file_size"
}

export type t_repository_rule_merge_queue = {
  parameters?:
    | {
        check_response_timeout_minutes: number
        grouping_strategy: "ALLGREEN" | "HEADGREEN"
        max_entries_to_build: number
        max_entries_to_merge: number
        merge_method: "MERGE" | "SQUASH" | "REBASE"
        min_entries_to_merge: number
        min_entries_to_merge_wait_minutes: number
      }
    | undefined
  type: "merge_queue"
}

export type t_repository_rule_non_fast_forward = {
  type: "non_fast_forward"
}

export type t_repository_rule_params_code_scanning_tool = {
  alerts_threshold: "none" | "errors" | "errors_and_warnings" | "all"
  security_alerts_threshold:
    | "none"
    | "critical"
    | "high_or_higher"
    | "medium_or_higher"
    | "all"
  tool: string
}

export type t_repository_rule_params_status_check_configuration = {
  context: string
  integration_id?: number | undefined
}

export type t_repository_rule_params_workflow_file_reference = {
  path: string
  ref?: string | undefined
  repository_id: number
  sha?: string | undefined
}

export type t_repository_rule_pull_request = {
  parameters?:
    | {
        allowed_merge_methods?: ("merge" | "squash" | "rebase")[] | undefined
        automatic_copilot_code_review_enabled?: boolean | undefined
        dismiss_stale_reviews_on_push: boolean
        require_code_owner_review: boolean
        require_last_push_approval: boolean
        required_approving_review_count: number
        required_review_thread_resolution: boolean
      }
    | undefined
  type: "pull_request"
}

export type t_repository_rule_required_deployments = {
  parameters?:
    | {
        required_deployment_environments: string[]
      }
    | undefined
  type: "required_deployments"
}

export type t_repository_rule_required_linear_history = {
  type: "required_linear_history"
}

export type t_repository_rule_required_signatures = {
  type: "required_signatures"
}

export type t_repository_rule_required_status_checks = {
  parameters?:
    | {
        do_not_enforce_on_create?: boolean | undefined
        required_status_checks: t_repository_rule_params_status_check_configuration[]
        strict_required_status_checks_policy: boolean
      }
    | undefined
  type: "required_status_checks"
}

export type t_repository_rule_ruleset_info = {
  ruleset_id?: number | undefined
  ruleset_source?: string | undefined
  ruleset_source_type?: ("Repository" | "Organization") | undefined
}

export type t_repository_rule_tag_name_pattern = {
  parameters?:
    | {
        name?: string | undefined
        negate?: boolean | undefined
        operator: "starts_with" | "ends_with" | "contains" | "regex"
        pattern: string
      }
    | undefined
  type: "tag_name_pattern"
}

export type t_repository_rule_update = {
  parameters?:
    | {
        update_allows_fetch_and_merge: boolean
      }
    | undefined
  type: "update"
}

export type t_repository_rule_violation_error = {
  documentation_url?: string | undefined
  message?: string | undefined
  metadata?:
    | {
        secret_scanning?:
          | {
              bypass_placeholders?:
                | {
                    placeholder_id?:
                      | t_secret_scanning_push_protection_bypass_placeholder_id
                      | undefined
                    token_type?: string | undefined
                  }[]
                | undefined
            }
          | undefined
      }
    | undefined
  status?: string | undefined
}

export type t_repository_rule_workflows = {
  parameters?:
    | {
        do_not_enforce_on_create?: boolean | undefined
        workflows: t_repository_rule_params_workflow_file_reference[]
      }
    | undefined
  type: "workflows"
}

export type t_repository_ruleset = {
  _links?:
    | {
        html?:
          | ({
              href?: string | undefined
            } | null)
          | undefined
        self?:
          | {
              href?: string | undefined
            }
          | undefined
      }
    | undefined
  bypass_actors?: t_repository_ruleset_bypass_actor[] | undefined
  conditions?:
    | (t_repository_ruleset_conditions | t_org_ruleset_conditions | null)
    | undefined
  created_at?: string | undefined
  current_user_can_bypass?:
    | ("always" | "pull_requests_only" | "never")
    | undefined
  enforcement: t_repository_rule_enforcement
  id: number
  name: string
  node_id?: string | undefined
  rules?: t_repository_rule[] | undefined
  source: string
  source_type?: ("Repository" | "Organization" | "Enterprise") | undefined
  target?: ("branch" | "tag" | "push" | "repository") | undefined
  updated_at?: string | undefined
}

export type t_repository_ruleset_bypass_actor = {
  actor_id?: (number | null) | undefined
  actor_type:
    | "Integration"
    | "OrganizationAdmin"
    | "RepositoryRole"
    | "Team"
    | "DeployKey"
  bypass_mode?: ("always" | "pull_request") | undefined
}

export type t_repository_ruleset_conditions = {
  ref_name?:
    | {
        exclude?: string[] | undefined
        include?: string[] | undefined
      }
    | undefined
}

export type t_repository_ruleset_conditions_repository_id_target = {
  repository_id: {
    repository_ids?: number[] | undefined
  }
}

export type t_repository_ruleset_conditions_repository_name_target = {
  repository_name: {
    exclude?: string[] | undefined
    include?: string[] | undefined
    protected?: boolean | undefined
  }
}

export type t_repository_ruleset_conditions_repository_property_spec = {
  name: string
  property_values: string[]
  source?: ("custom" | "system") | undefined
}

export type t_repository_ruleset_conditions_repository_property_target = {
  repository_property: {
    exclude?:
      | t_repository_ruleset_conditions_repository_property_spec[]
      | undefined
    include?:
      | t_repository_ruleset_conditions_repository_property_spec[]
      | undefined
  }
}

export type t_repository_subscription = {
  created_at: string
  ignored: boolean
  reason: string | null
  repository_url: string
  subscribed: boolean
  url: string
}

export type t_review_comment = {
  _links: {
    html: t_link
    pull_request: t_link
    self: t_link
  }
  author_association: t_author_association
  body: string
  body_html?: string | undefined
  body_text?: string | undefined
  commit_id: string
  created_at: string
  diff_hunk: string
  html_url: string
  id: number
  in_reply_to_id?: number | undefined
  line?: number | undefined
  node_id: string
  original_commit_id: string
  original_line?: number | undefined
  original_position: number
  original_start_line?: (number | null) | undefined
  path: string
  position: number | null
  pull_request_review_id: number | null
  pull_request_url: string
  reactions?: t_reaction_rollup | undefined
  side?: ("LEFT" | "RIGHT") | undefined
  start_line?: (number | null) | undefined
  start_side?: ("LEFT" | "RIGHT" | null) | undefined
  subject_type?: ("line" | "file") | undefined
  updated_at: string
  url: string
  user: t_nullable_simple_user
}

export type t_review_custom_gates_comment_required = {
  comment: string
  environment_name: string
}

export type t_review_custom_gates_state_required = {
  comment?: string | undefined
  environment_name: string
  state: "approved" | "rejected"
}

export type t_review_dismissed_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  dismissed_review: {
    dismissal_commit_id?: string | undefined
    dismissal_message: string | null
    review_id: number
    state: string
  }
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  url: string
}

export type t_review_request_removed_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  requested_reviewer?: t_simple_user | undefined
  requested_team?: t_team | undefined
  review_requester: t_simple_user
  url: string
}

export type t_review_requested_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  requested_reviewer?: t_simple_user | undefined
  requested_team?: t_team | undefined
  review_requester: t_simple_user
  url: string
}

export type t_root = {
  authorizations_url: string
  code_search_url: string
  commit_search_url: string
  current_user_authorizations_html_url: string
  current_user_repositories_url: string
  current_user_url: string
  emails_url: string
  emojis_url: string
  events_url: string
  feeds_url: string
  followers_url: string
  following_url: string
  gists_url: string
  hub_url?: string | undefined
  issue_search_url: string
  issues_url: string
  keys_url: string
  label_search_url: string
  notifications_url: string
  organization_repositories_url: string
  organization_teams_url: string
  organization_url: string
  public_gists_url: string
  rate_limit_url: string
  repository_search_url: string
  repository_url: string
  starred_gists_url: string
  starred_url: string
  topic_search_url?: string | undefined
  user_organizations_url: string
  user_repositories_url: string
  user_search_url: string
  user_url: string
}

export type t_rule_suite = {
  actor_id?: (number | null) | undefined
  actor_name?: (string | null) | undefined
  after_sha?: string | undefined
  before_sha?: string | undefined
  evaluation_result?: ("pass" | "fail" | "bypass" | null) | undefined
  id?: number | undefined
  pushed_at?: string | undefined
  ref?: string | undefined
  repository_id?: number | undefined
  repository_name?: string | undefined
  result?: ("pass" | "fail" | "bypass") | undefined
  rule_evaluations?:
    | {
        details?: (string | null) | undefined
        enforcement?: ("active" | "evaluate" | "deleted ruleset") | undefined
        result?: ("pass" | "fail") | undefined
        rule_source?:
          | {
              id?: (number | null) | undefined
              name?: (string | null) | undefined
              type?: string | undefined
            }
          | undefined
        rule_type?: string | undefined
      }[]
    | undefined
}

export type t_rule_suites = {
  actor_id?: number | undefined
  actor_name?: string | undefined
  after_sha?: string | undefined
  before_sha?: string | undefined
  evaluation_result?: ("pass" | "fail" | "bypass") | undefined
  id?: number | undefined
  pushed_at?: string | undefined
  ref?: string | undefined
  repository_id?: number | undefined
  repository_name?: string | undefined
  result?: ("pass" | "fail" | "bypass") | undefined
}[]

export type t_ruleset_version = {
  actor: {
    id?: number | undefined
    type?: string | undefined
  }
  updated_at: string
  version_id: number
}

export type t_ruleset_version_with_state = t_ruleset_version & {
  state: EmptyObject
}

export type t_runner = {
  busy: boolean
  ephemeral?: boolean | undefined
  id: number
  labels: t_runner_label[]
  name: string
  os: string
  runner_group_id?: number | undefined
  status: string
}

export type t_runner_application = {
  architecture: string
  download_url: string
  filename: string
  os: string
  sha256_checksum?: string | undefined
  temp_download_token?: string | undefined
}

export type t_runner_groups_org = {
  allows_public_repositories: boolean
  default: boolean
  hosted_runners_url?: string | undefined
  id: number
  inherited: boolean
  inherited_allows_public_repositories?: boolean | undefined
  name: string
  network_configuration_id?: string | undefined
  restricted_to_workflows?: boolean | undefined
  runners_url: string
  selected_repositories_url?: string | undefined
  selected_workflows?: string[] | undefined
  visibility: string
  workflow_restrictions_read_only?: boolean | undefined
}

export type t_runner_label = {
  id?: number | undefined
  name: string
  type?: ("read-only" | "custom") | undefined
}

export type t_scim_error = {
  detail?: (string | null) | undefined
  documentation_url?: (string | null) | undefined
  message?: (string | null) | undefined
  schemas?: string[] | undefined
  scimType?: (string | null) | undefined
  status?: number | undefined
}

export type t_search_result_text_matches = {
  fragment?: string | undefined
  matches?:
    | {
        indices?: number[] | undefined
        text?: string | undefined
      }[]
    | undefined
  object_type?: (string | null) | undefined
  object_url?: string | undefined
  property?: string | undefined
}[]

export type t_secret_scanning_alert = {
  created_at?: t_alert_created_at | undefined
  first_location_detected?:
    | t_nullable_secret_scanning_first_detected_location
    | undefined
  has_more_locations?: boolean | undefined
  html_url?: t_alert_html_url | undefined
  is_base64_encoded?: (boolean | null) | undefined
  locations_url?: string | undefined
  multi_repo?: (boolean | null) | undefined
  number?: t_alert_number | undefined
  publicly_leaked?: (boolean | null) | undefined
  push_protection_bypass_request_comment?: (string | null) | undefined
  push_protection_bypass_request_html_url?: (string | null) | undefined
  push_protection_bypass_request_reviewer?: t_nullable_simple_user | undefined
  push_protection_bypass_request_reviewer_comment?: (string | null) | undefined
  push_protection_bypassed?: (boolean | null) | undefined
  push_protection_bypassed_at?: (string | null) | undefined
  push_protection_bypassed_by?: t_nullable_simple_user | undefined
  resolution?: t_secret_scanning_alert_resolution | undefined
  resolution_comment?: (string | null) | undefined
  resolved_at?: (string | null) | undefined
  resolved_by?: t_nullable_simple_user | undefined
  secret?: string | undefined
  secret_type?: string | undefined
  secret_type_display_name?: string | undefined
  state?: t_secret_scanning_alert_state | undefined
  updated_at?: t_nullable_alert_updated_at | undefined
  url?: t_alert_url | undefined
  validity?: ("active" | "inactive" | "unknown") | undefined
}

export type t_secret_scanning_alert_resolution =
  | "false_positive"
  | "wont_fix"
  | "revoked"
  | "used_in_tests"
  | null

export type t_secret_scanning_alert_resolution_comment = string | null

export type t_secret_scanning_alert_state = "open" | "resolved"

export type t_secret_scanning_location = {
  details?:
    | (
        | t_secret_scanning_location_commit
        | t_secret_scanning_location_wiki_commit
        | t_secret_scanning_location_issue_title
        | t_secret_scanning_location_issue_body
        | t_secret_scanning_location_issue_comment
        | t_secret_scanning_location_discussion_title
        | t_secret_scanning_location_discussion_body
        | t_secret_scanning_location_discussion_comment
        | t_secret_scanning_location_pull_request_title
        | t_secret_scanning_location_pull_request_body
        | t_secret_scanning_location_pull_request_comment
        | t_secret_scanning_location_pull_request_review
        | t_secret_scanning_location_pull_request_review_comment
      )
    | undefined
  type?:
    | (
        | "commit"
        | "wiki_commit"
        | "issue_title"
        | "issue_body"
        | "issue_comment"
        | "discussion_title"
        | "discussion_body"
        | "discussion_comment"
        | "pull_request_title"
        | "pull_request_body"
        | "pull_request_comment"
        | "pull_request_review"
        | "pull_request_review_comment"
      )
    | undefined
}

export type t_secret_scanning_location_commit = {
  blob_sha: string
  blob_url: string
  commit_sha: string
  commit_url: string
  end_column: number
  end_line: number
  path: string
  start_column: number
  start_line: number
}

export type t_secret_scanning_location_discussion_body = {
  discussion_body_url: string
}

export type t_secret_scanning_location_discussion_comment = {
  discussion_comment_url: string
}

export type t_secret_scanning_location_discussion_title = {
  discussion_title_url: string
}

export type t_secret_scanning_location_issue_body = {
  issue_body_url: string
}

export type t_secret_scanning_location_issue_comment = {
  issue_comment_url: string
}

export type t_secret_scanning_location_issue_title = {
  issue_title_url: string
}

export type t_secret_scanning_location_pull_request_body = {
  pull_request_body_url: string
}

export type t_secret_scanning_location_pull_request_comment = {
  pull_request_comment_url: string
}

export type t_secret_scanning_location_pull_request_review = {
  pull_request_review_url: string
}

export type t_secret_scanning_location_pull_request_review_comment = {
  pull_request_review_comment_url: string
}

export type t_secret_scanning_location_pull_request_title = {
  pull_request_title_url: string
}

export type t_secret_scanning_location_wiki_commit = {
  blob_sha: string
  commit_sha: string
  commit_url: string
  end_column: number
  end_line: number
  page_url: string
  path: string
  start_column: number
  start_line: number
}

export type t_secret_scanning_push_protection_bypass = {
  expire_at?: (string | null) | undefined
  reason?: t_secret_scanning_push_protection_bypass_reason | undefined
  token_type?: string | undefined
}

export type t_secret_scanning_push_protection_bypass_placeholder_id = string

export type t_secret_scanning_push_protection_bypass_reason =
  | "false_positive"
  | "used_in_tests"
  | "will_fix_later"

export type t_secret_scanning_scan = {
  completed_at?: (string | null) | undefined
  started_at?: (string | null) | undefined
  status?: string | undefined
  type?: string | undefined
}

export type t_secret_scanning_scan_history = {
  backfill_scans?: t_secret_scanning_scan[] | undefined
  custom_pattern_backfill_scans?:
    | (t_secret_scanning_scan & {
        pattern_name?: string | undefined
        pattern_scope?: string | undefined
      })[]
    | undefined
  incremental_scans?: t_secret_scanning_scan[] | undefined
  pattern_update_scans?: t_secret_scanning_scan[] | undefined
}

export type t_security_advisory_credit_types =
  | "analyst"
  | "finder"
  | "reporter"
  | "coordinator"
  | "remediation_developer"
  | "remediation_reviewer"
  | "remediation_verifier"
  | "tool"
  | "sponsor"
  | "other"

export type t_security_advisory_ecosystems =
  | "rubygems"
  | "npm"
  | "pip"
  | "maven"
  | "nuget"
  | "composer"
  | "go"
  | "rust"
  | "erlang"
  | "actions"
  | "pub"
  | "other"
  | "swift"

export type t_security_advisory_epss = {
  percentage?: number | undefined
  percentile?: number | undefined
} | null

export type t_security_and_analysis = {
  advanced_security?:
    | {
        status?: ("enabled" | "disabled") | undefined
      }
    | undefined
  code_security?:
    | {
        status?: ("enabled" | "disabled") | undefined
      }
    | undefined
  dependabot_security_updates?:
    | {
        status?: ("enabled" | "disabled") | undefined
      }
    | undefined
  secret_scanning?:
    | {
        status?: ("enabled" | "disabled") | undefined
      }
    | undefined
  secret_scanning_ai_detection?:
    | {
        status?: ("enabled" | "disabled") | undefined
      }
    | undefined
  secret_scanning_non_provider_patterns?:
    | {
        status?: ("enabled" | "disabled") | undefined
      }
    | undefined
  secret_scanning_push_protection?:
    | {
        status?: ("enabled" | "disabled") | undefined
      }
    | undefined
} | null

export type t_selected_actions = {
  github_owned_allowed?: boolean | undefined
  patterns_allowed?: string[] | undefined
  verified_allowed?: boolean | undefined
}

export type t_selected_actions_url = string

export type t_short_blob = {
  sha: string
  url: string
}

export type t_short_branch = {
  commit: {
    sha: string
    url: string
  }
  name: string
  protected: boolean
  protection?: t_branch_protection | undefined
  protection_url?: string | undefined
}

export type t_simple_classroom = {
  archived: boolean
  id: number
  name: string
  url: string
}

export type t_simple_classroom_assignment = {
  accepted: number
  classroom: t_simple_classroom
  deadline: string | null
  editor: string
  feedback_pull_requests_enabled: boolean
  id: number
  invitations_enabled: boolean
  invite_link: string
  language: string
  max_members?: (number | null) | undefined
  max_teams?: (number | null) | undefined
  passing: number
  public_repo: boolean
  slug: string
  students_are_repo_admins: boolean
  submitted: number
  title: string
  type: "individual" | "group"
}

export type t_simple_classroom_organization = {
  avatar_url: string
  html_url: string
  id: number
  login: string
  name: string | null
  node_id: string
}

export type t_simple_classroom_repository = {
  default_branch: string
  full_name: string
  html_url: string
  id: number
  node_id: string
  private: boolean
}

export type t_simple_classroom_user = {
  avatar_url: string
  html_url: string
  id: number
  login: string
}

export type t_simple_commit = {
  author: {
    email: string
    name: string
  } | null
  committer: {
    email: string
    name: string
  } | null
  id: string
  message: string
  timestamp: string
  tree_id: string
}

export type t_simple_commit_status = {
  avatar_url: string | null
  context: string
  created_at: string
  description: string | null
  id: number
  node_id: string
  required?: (boolean | null) | undefined
  state: string
  target_url: string | null
  updated_at: string
  url: string
}

export type t_simple_repository = {
  archive_url: string
  assignees_url: string
  blobs_url: string
  branches_url: string
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  deployments_url: string
  description: string | null
  downloads_url: string
  events_url: string
  fork: boolean
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  hooks_url: string
  html_url: string
  id: number
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  languages_url: string
  merges_url: string
  milestones_url: string
  name: string
  node_id: string
  notifications_url: string
  owner: t_simple_user
  private: boolean
  pulls_url: string
  releases_url: string
  stargazers_url: string
  statuses_url: string
  subscribers_url: string
  subscription_url: string
  tags_url: string
  teams_url: string
  trees_url: string
  url: string
}

export type t_simple_user = {
  avatar_url: string
  email?: (string | null) | undefined
  events_url: string
  followers_url: string
  following_url: string
  gists_url: string
  gravatar_id: string | null
  html_url: string
  id: number
  login: string
  name?: (string | null) | undefined
  node_id: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  site_admin: boolean
  starred_at?: string | undefined
  starred_url: string
  subscriptions_url: string
  type: string
  url: string
  user_view_type?: string | undefined
}

export type t_social_account = {
  provider: string
  url: string
}

export type t_ssh_signing_key = {
  created_at: string
  id: number
  key: string
  title: string
}

export type t_stargazer = {
  starred_at: string
  user: t_nullable_simple_user
}

export type t_starred_repository = {
  repo: t_repository
  starred_at: string
}

export type t_state_change_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  state_reason?: (string | null) | undefined
  url: string
}

export type t_status = {
  avatar_url: string | null
  context: string
  created_at: string
  creator: t_nullable_simple_user
  description: string | null
  id: number
  node_id: string
  state: string
  target_url: string | null
  updated_at: string
  url: string
}

export type t_status_check_policy = {
  checks: {
    app_id: number | null
    context: string
  }[]
  contexts: string[]
  contexts_url: string
  strict: boolean
  url: string
}

export type t_sub_issues_summary = {
  completed: number
  percent_completed: number
  total: number
}

export type t_tag = {
  commit: {
    sha: string
    url: string
  }
  name: string
  node_id: string
  tarball_url: string
  zipball_url: string
}

export type t_tag_protection = {
  created_at?: string | undefined
  enabled?: boolean | undefined
  id?: number | undefined
  pattern: string
  updated_at?: string | undefined
}

export type t_team = {
  description: string | null
  html_url: string
  id: number
  members_url: string
  name: string
  node_id: string
  notification_setting?: string | undefined
  parent: t_nullable_team_simple
  permission: string
  permissions?:
    | {
        admin: boolean
        maintain: boolean
        pull: boolean
        push: boolean
        triage: boolean
      }
    | undefined
  privacy?: string | undefined
  repositories_url: string
  slug: string
  url: string
}

export type t_team_discussion = {
  author: t_nullable_simple_user
  body: string
  body_html: string
  body_version: string
  comments_count: number
  comments_url: string
  created_at: string
  html_url: string
  last_edited_at: string | null
  node_id: string
  number: number
  pinned: boolean
  private: boolean
  reactions?: t_reaction_rollup | undefined
  team_url: string
  title: string
  updated_at: string
  url: string
}

export type t_team_discussion_comment = {
  author: t_nullable_simple_user
  body: string
  body_html: string
  body_version: string
  created_at: string
  discussion_url: string
  html_url: string
  last_edited_at: string | null
  node_id: string
  number: number
  reactions?: t_reaction_rollup | undefined
  updated_at: string
  url: string
}

export type t_team_full = {
  created_at: string
  description: string | null
  html_url: string
  id: number
  ldap_dn?: string | undefined
  members_count: number
  members_url: string
  name: string
  node_id: string
  notification_setting?:
    | ("notifications_enabled" | "notifications_disabled")
    | undefined
  organization: t_team_organization
  parent?: t_nullable_team_simple | undefined
  permission: string
  privacy?: ("closed" | "secret") | undefined
  repos_count: number
  repositories_url: string
  slug: string
  updated_at: string
  url: string
}

export type t_team_membership = {
  role: "member" | "maintainer"
  state: "active" | "pending"
  url: string
}

export type t_team_organization = {
  archived_at: string | null
  avatar_url: string
  billing_email?: (string | null) | undefined
  blog?: string | undefined
  collaborators?: (number | null) | undefined
  company?: string | undefined
  created_at: string
  default_repository_permission?: (string | null) | undefined
  description: string | null
  disk_usage?: (number | null) | undefined
  email?: string | undefined
  events_url: string
  followers: number
  following: number
  has_organization_projects: boolean
  has_repository_projects: boolean
  hooks_url: string
  html_url: string
  id: number
  is_verified?: boolean | undefined
  issues_url: string
  location?: string | undefined
  login: string
  members_allowed_repository_creation_type?: string | undefined
  members_can_create_internal_repositories?: boolean | undefined
  members_can_create_pages?: boolean | undefined
  members_can_create_private_pages?: boolean | undefined
  members_can_create_private_repositories?: boolean | undefined
  members_can_create_public_pages?: boolean | undefined
  members_can_create_public_repositories?: boolean | undefined
  members_can_create_repositories?: (boolean | null) | undefined
  members_can_fork_private_repositories?: (boolean | null) | undefined
  members_url: string
  name?: string | undefined
  node_id: string
  owned_private_repos?: number | undefined
  plan?:
    | {
        filled_seats?: number | undefined
        name: string
        private_repos: number
        seats?: number | undefined
        space: number
      }
    | undefined
  private_gists?: (number | null) | undefined
  public_gists: number
  public_members_url: string
  public_repos: number
  repos_url: string
  total_private_repos?: number | undefined
  twitter_username?: (string | null) | undefined
  two_factor_requirement_enabled?: (boolean | null) | undefined
  type: string
  updated_at: string
  url: string
  web_commit_signoff_required?: boolean | undefined
}

export type t_team_project = {
  body: string | null
  columns_url: string
  created_at: string
  creator: t_simple_user
  html_url: string
  id: number
  name: string
  node_id: string
  number: number
  organization_permission?: string | undefined
  owner_url: string
  permissions: {
    admin: boolean
    read: boolean
    write: boolean
  }
  private?: boolean | undefined
  state: string
  updated_at: string
  url: string
}

export type t_team_repository = {
  allow_auto_merge?: boolean | undefined
  allow_forking?: boolean | undefined
  allow_merge_commit?: boolean | undefined
  allow_rebase_merge?: boolean | undefined
  allow_squash_merge?: boolean | undefined
  archive_url: string
  archived: boolean
  assignees_url: string
  blobs_url: string
  branches_url: string
  clone_url: string
  collaborators_url: string
  comments_url: string
  commits_url: string
  compare_url: string
  contents_url: string
  contributors_url: string
  created_at: string | null
  default_branch: string
  delete_branch_on_merge?: boolean | undefined
  deployments_url: string
  description: string | null
  disabled: boolean
  downloads_url: string
  events_url: string
  fork: boolean
  forks: number
  forks_count: number
  forks_url: string
  full_name: string
  git_commits_url: string
  git_refs_url: string
  git_tags_url: string
  git_url: string
  has_downloads: boolean
  has_issues: boolean
  has_pages: boolean
  has_projects: boolean
  has_wiki: boolean
  homepage: string | null
  hooks_url: string
  html_url: string
  id: number
  is_template?: boolean | undefined
  issue_comment_url: string
  issue_events_url: string
  issues_url: string
  keys_url: string
  labels_url: string
  language: string | null
  languages_url: string
  license: t_nullable_license_simple
  master_branch?: string | undefined
  merges_url: string
  milestones_url: string
  mirror_url: string | null
  name: string
  network_count?: number | undefined
  node_id: string
  notifications_url: string
  open_issues: number
  open_issues_count: number
  owner: t_nullable_simple_user
  permissions?:
    | {
        admin: boolean
        maintain?: boolean | undefined
        pull: boolean
        push: boolean
        triage?: boolean | undefined
      }
    | undefined
  private: boolean
  pulls_url: string
  pushed_at: string | null
  releases_url: string
  role_name?: string | undefined
  size: number
  ssh_url: string
  stargazers_count: number
  stargazers_url: string
  statuses_url: string
  subscribers_count?: number | undefined
  subscribers_url: string
  subscription_url: string
  svn_url: string
  tags_url: string
  teams_url: string
  temp_clone_token?: string | undefined
  topics?: string[] | undefined
  trees_url: string
  updated_at: string | null
  url: string
  visibility?: string | undefined
  watchers: number
  watchers_count: number
  web_commit_signoff_required?: boolean | undefined
}

export type t_team_role_assignment = {
  assignment?: ("direct" | "indirect" | "mixed") | undefined
  description: string | null
  html_url: string
  id: number
  members_url: string
  name: string
  node_id: string
  notification_setting?: string | undefined
  parent: t_nullable_team_simple
  permission: string
  permissions?:
    | {
        admin: boolean
        maintain: boolean
        pull: boolean
        push: boolean
        triage: boolean
      }
    | undefined
  privacy?: string | undefined
  repositories_url: string
  slug: string
  url: string
}

export type t_team_simple = {
  description: string | null
  html_url: string
  id: number
  ldap_dn?: string | undefined
  members_url: string
  name: string
  node_id: string
  notification_setting?: string | undefined
  permission: string
  privacy?: string | undefined
  repositories_url: string
  slug: string
  url: string
}

export type t_thread = {
  id: string
  last_read_at: string | null
  reason: string
  repository: t_minimal_repository
  subject: {
    latest_comment_url: string
    title: string
    type: string
    url: string
  }
  subscription_url: string
  unread: boolean
  updated_at: string
  url: string
}

export type t_thread_subscription = {
  created_at: string | null
  ignored: boolean
  reason: string | null
  repository_url?: string | undefined
  subscribed: boolean
  thread_url?: string | undefined
  url: string
}

export type t_timeline_assigned_issue_event = {
  actor: t_simple_user
  assignee: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  url: string
}

export type t_timeline_comment_event = {
  actor: t_simple_user
  author_association: t_author_association
  body?: string | undefined
  body_html?: string | undefined
  body_text?: string | undefined
  created_at: string
  event: string
  html_url: string
  id: number
  issue_url: string
  node_id: string
  performed_via_github_app?: t_nullable_integration | undefined
  reactions?: t_reaction_rollup | undefined
  updated_at: string
  url: string
  user: t_simple_user
}

export type t_timeline_commit_commented_event = {
  comments?: t_commit_comment[] | undefined
  commit_id?: string | undefined
  event?: string | undefined
  node_id?: string | undefined
}

export type t_timeline_committed_event = {
  author: {
    date: string
    email: string
    name: string
  }
  committer: {
    date: string
    email: string
    name: string
  }
  event?: string | undefined
  html_url: string
  message: string
  node_id: string
  parents: {
    html_url: string
    sha: string
    url: string
  }[]
  sha: string
  tree: {
    sha: string
    url: string
  }
  url: string
  verification: {
    payload: string | null
    reason: string
    signature: string | null
    verified: boolean
    verified_at: string | null
  }
}

export type t_timeline_cross_referenced_event = {
  actor?: t_simple_user | undefined
  created_at: string
  event: string
  source: {
    issue?: t_issue | undefined
    type?: string | undefined
  }
  updated_at: string
}

export type t_timeline_issue_events =
  | t_labeled_issue_event
  | t_unlabeled_issue_event
  | t_milestoned_issue_event
  | t_demilestoned_issue_event
  | t_renamed_issue_event
  | t_review_requested_issue_event
  | t_review_request_removed_issue_event
  | t_review_dismissed_issue_event
  | t_locked_issue_event
  | t_added_to_project_issue_event
  | t_moved_column_in_project_issue_event
  | t_removed_from_project_issue_event
  | t_converted_note_to_issue_issue_event
  | t_timeline_comment_event
  | t_timeline_cross_referenced_event
  | t_timeline_committed_event
  | t_timeline_reviewed_event
  | t_timeline_line_commented_event
  | t_timeline_commit_commented_event
  | t_timeline_assigned_issue_event
  | t_timeline_unassigned_issue_event
  | t_state_change_issue_event

export type t_timeline_line_commented_event = {
  comments?: t_pull_request_review_comment[] | undefined
  event?: string | undefined
  node_id?: string | undefined
}

export type t_timeline_reviewed_event = {
  _links: {
    html: {
      href: string
    }
    pull_request: {
      href: string
    }
  }
  author_association: t_author_association
  body: string | null
  body_html?: string | undefined
  body_text?: string | undefined
  commit_id: string
  event: string
  html_url: string
  id: number
  node_id: string
  pull_request_url: string
  state: string
  submitted_at?: string | undefined
  user: t_simple_user
}

export type t_timeline_unassigned_issue_event = {
  actor: t_simple_user
  assignee: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  url: string
}

export type t_topic = {
  names: string[]
}

export type t_topic_search_result_item = {
  aliases?:
    | (
        | {
            topic_relation?:
              | {
                  id?: number | undefined
                  name?: string | undefined
                  relation_type?: string | undefined
                  topic_id?: number | undefined
                }
              | undefined
          }[]
        | null
      )
    | undefined
  created_at: string
  created_by: string | null
  curated: boolean
  description: string | null
  display_name: string | null
  featured: boolean
  logo_url?: (string | null) | undefined
  name: string
  related?:
    | (
        | {
            topic_relation?:
              | {
                  id?: number | undefined
                  name?: string | undefined
                  relation_type?: string | undefined
                  topic_id?: number | undefined
                }
              | undefined
          }[]
        | null
      )
    | undefined
  released: string | null
  repository_count?: (number | null) | undefined
  score: number
  short_description: string | null
  text_matches?: t_search_result_text_matches | undefined
  updated_at: string
}

export type t_traffic = {
  count: number
  timestamp: string
  uniques: number
}

export type t_unassigned_issue_event = {
  actor: t_simple_user
  assignee: t_simple_user
  assigner: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  node_id: string
  performed_via_github_app: t_nullable_integration
  url: string
}

export type t_unlabeled_issue_event = {
  actor: t_simple_user
  commit_id: string | null
  commit_url: string | null
  created_at: string
  event: string
  id: number
  label: {
    color: string
    name: string
  }
  node_id: string
  performed_via_github_app: t_nullable_integration
  url: string
}

export type t_user_marketplace_purchase = {
  account: t_marketplace_account
  billing_cycle: string
  free_trial_ends_on: string | null
  next_billing_date: string | null
  on_free_trial: boolean
  plan: t_marketplace_listing_plan
  unit_count: number | null
  updated_at: string | null
}

export type t_user_role_assignment = {
  assignment?: ("direct" | "indirect" | "mixed") | undefined
  avatar_url: string
  email?: (string | null) | undefined
  events_url: string
  followers_url: string
  following_url: string
  gists_url: string
  gravatar_id: string | null
  html_url: string
  id: number
  inherited_from?: t_team_simple[] | undefined
  login: string
  name?: (string | null) | undefined
  node_id: string
  organizations_url: string
  received_events_url: string
  repos_url: string
  site_admin: boolean
  starred_at?: string | undefined
  starred_url: string
  subscriptions_url: string
  type: string
  url: string
  user_view_type?: string | undefined
}

export type t_user_search_result_item = {
  avatar_url: string
  bio?: (string | null) | undefined
  blog?: (string | null) | undefined
  company?: (string | null) | undefined
  created_at?: string | undefined
  email?: (string | null) | undefined
  events_url: string
  followers?: number | undefined
  followers_url: string
  following?: number | undefined
  following_url: string
  gists_url: string
  gravatar_id: string | null
  hireable?: (boolean | null) | undefined
  html_url: string
  id: number
  location?: (string | null) | undefined
  login: string
  name?: (string | null) | undefined
  node_id: string
  organizations_url: string
  public_gists?: number | undefined
  public_repos?: number | undefined
  received_events_url: string
  repos_url: string
  score: number
  site_admin: boolean
  starred_url: string
  subscriptions_url: string
  suspended_at?: (string | null) | undefined
  text_matches?: t_search_result_text_matches | undefined
  type: string
  updated_at?: string | undefined
  url: string
  user_view_type?: string | undefined
}

export type t_validation_error = {
  documentation_url: string
  errors?:
    | {
        code: string
        field?: string | undefined
        index?: number | undefined
        message?: string | undefined
        resource?: string | undefined
        value?: (string | null | number | string[]) | undefined
      }[]
    | undefined
  message: string
}

export type t_validation_error_simple = {
  documentation_url: string
  errors?: string[] | undefined
  message: string
}

export type t_verification = {
  payload: string | null
  reason: string
  signature: string | null
  verified: boolean
  verified_at: string | null
}

export type t_view_traffic = {
  count: number
  uniques: number
  views: t_traffic[]
}

export type t_vulnerability = {
  first_patched_version: string | null
  package: {
    ecosystem: t_security_advisory_ecosystems
    name: string | null
  } | null
  readonly vulnerable_functions: string[] | null
  vulnerable_version_range: string | null
}

export type t_wait_timer = number

export type t_webhook_config = {
  content_type?: t_webhook_config_content_type | undefined
  insecure_ssl?: t_webhook_config_insecure_ssl | undefined
  secret?: t_webhook_config_secret | undefined
  url?: t_webhook_config_url | undefined
}

export type t_webhook_config_content_type = string

export type t_webhook_config_insecure_ssl = string | number

export type t_webhook_config_secret = string

export type t_webhook_config_url = string

export type t_workflow = {
  badge_url: string
  created_at: string
  deleted_at?: string | undefined
  html_url: string
  id: number
  name: string
  node_id: string
  path: string
  state:
    | "active"
    | "deleted"
    | "disabled_fork"
    | "disabled_inactivity"
    | "disabled_manually"
  updated_at: string
  url: string
}

export type t_workflow_run = {
  actor?: t_simple_user | undefined
  artifacts_url: string
  cancel_url: string
  check_suite_id?: number | undefined
  check_suite_node_id?: string | undefined
  check_suite_url: string
  conclusion: string | null
  created_at: string
  display_title: string
  event: string
  head_branch: string | null
  head_commit: t_nullable_simple_commit
  head_repository: t_minimal_repository
  head_repository_id?: number | undefined
  head_sha: string
  html_url: string
  id: number
  jobs_url: string
  logs_url: string
  name?: (string | null) | undefined
  node_id: string
  path: string
  previous_attempt_url?: (string | null) | undefined
  pull_requests: t_pull_request_minimal[] | null
  referenced_workflows?: (t_referenced_workflow[] | null) | undefined
  repository: t_minimal_repository
  rerun_url: string
  run_attempt?: number | undefined
  run_number: number
  run_started_at?: string | undefined
  status: string | null
  triggering_actor?: t_simple_user | undefined
  updated_at: string
  url: string
  workflow_id: number
  workflow_url: string
}

export type t_workflow_run_usage = {
  billable: {
    MACOS?:
      | {
          job_runs?:
            | {
                duration_ms: number
                job_id: number
              }[]
            | undefined
          jobs: number
          total_ms: number
        }
      | undefined
    UBUNTU?:
      | {
          job_runs?:
            | {
                duration_ms: number
                job_id: number
              }[]
            | undefined
          jobs: number
          total_ms: number
        }
      | undefined
    WINDOWS?:
      | {
          job_runs?:
            | {
                duration_ms: number
                job_id: number
              }[]
            | undefined
          jobs: number
          total_ms: number
        }
      | undefined
  }
  run_duration_ms?: number | undefined
}

export type t_workflow_usage = {
  billable: {
    MACOS?:
      | {
          total_ms?: number | undefined
        }
      | undefined
    UBUNTU?:
      | {
          total_ms?: number | undefined
        }
      | undefined
    WINDOWS?:
      | {
          total_ms?: number | undefined
        }
      | undefined
  }
}

export type t_ActionsAddCustomLabelsToSelfHostedRunnerForOrgParamSchema = {
  org: string
  runner_id: number
}

export type t_ActionsAddCustomLabelsToSelfHostedRunnerForOrgRequestBodySchema =
  {
    labels: string[]
  }

export type t_ActionsAddCustomLabelsToSelfHostedRunnerForRepoParamSchema = {
  owner: string
  repo: string
  runner_id: number
}

export type t_ActionsAddCustomLabelsToSelfHostedRunnerForRepoRequestBodySchema =
  {
    labels: string[]
  }

export type t_ActionsAddRepoAccessToSelfHostedRunnerGroupInOrgParamSchema = {
  org: string
  repository_id: number
  runner_group_id: number
}

export type t_ActionsAddSelectedRepoToOrgSecretParamSchema = {
  org: string
  repository_id: number
  secret_name: string
}

export type t_ActionsAddSelectedRepoToOrgVariableParamSchema = {
  name: string
  org: string
  repository_id: number
}

export type t_ActionsAddSelfHostedRunnerToGroupForOrgParamSchema = {
  org: string
  runner_group_id: number
  runner_id: number
}

export type t_ActionsApproveWorkflowRunParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsCancelWorkflowRunParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsCreateEnvironmentVariableParamSchema = {
  environment_name: string
  owner: string
  repo: string
}

export type t_ActionsCreateEnvironmentVariableRequestBodySchema = {
  name: string
  value: string
}

export type t_ActionsCreateHostedRunnerForOrgParamSchema = {
  org: string
}

export type t_ActionsCreateHostedRunnerForOrgRequestBodySchema = {
  enable_static_ip?: boolean | undefined
  image: {
    id?: string | undefined
    source?: ("github" | "partner" | "custom") | undefined
  }
  maximum_runners?: number | undefined
  name: string
  runner_group_id: number
  size: string
}

export type t_ActionsCreateOrUpdateEnvironmentSecretParamSchema = {
  environment_name: string
  owner: string
  repo: string
  secret_name: string
}

export type t_ActionsCreateOrUpdateEnvironmentSecretRequestBodySchema = {
  encrypted_value: string
  key_id: string
}

export type t_ActionsCreateOrUpdateOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_ActionsCreateOrUpdateOrgSecretRequestBodySchema = {
  encrypted_value: string
  key_id: string
  selected_repository_ids?: number[] | undefined
  visibility: "all" | "private" | "selected"
}

export type t_ActionsCreateOrUpdateRepoSecretParamSchema = {
  owner: string
  repo: string
  secret_name: string
}

export type t_ActionsCreateOrUpdateRepoSecretRequestBodySchema = {
  encrypted_value: string
  key_id: string
}

export type t_ActionsCreateOrgVariableParamSchema = {
  org: string
}

export type t_ActionsCreateOrgVariableRequestBodySchema = {
  name: string
  selected_repository_ids?: number[] | undefined
  value: string
  visibility: "all" | "private" | "selected"
}

export type t_ActionsCreateRegistrationTokenForOrgParamSchema = {
  org: string
}

export type t_ActionsCreateRegistrationTokenForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsCreateRemoveTokenForOrgParamSchema = {
  org: string
}

export type t_ActionsCreateRemoveTokenForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsCreateRepoVariableParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsCreateRepoVariableRequestBodySchema = {
  name: string
  value: string
}

export type t_ActionsCreateSelfHostedRunnerGroupForOrgParamSchema = {
  org: string
}

export type t_ActionsCreateSelfHostedRunnerGroupForOrgRequestBodySchema = {
  allows_public_repositories?: boolean | undefined
  name: string
  network_configuration_id?: string | undefined
  restricted_to_workflows?: boolean | undefined
  runners?: number[] | undefined
  selected_repository_ids?: number[] | undefined
  selected_workflows?: string[] | undefined
  visibility?: ("selected" | "all" | "private") | undefined
}

export type t_ActionsCreateWorkflowDispatchParamSchema = {
  owner: string
  repo: string
  workflow_id: number | string
}

export type t_ActionsCreateWorkflowDispatchRequestBodySchema = {
  inputs?:
    | {
        [key: string]: unknown | undefined
      }
    | undefined
  ref: string
}

export type t_ActionsDeleteActionsCacheByIdParamSchema = {
  cache_id: number
  owner: string
  repo: string
}

export type t_ActionsDeleteActionsCacheByKeyParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsDeleteActionsCacheByKeyQuerySchema = {
  key: string
  ref?: string | undefined
}

export type t_ActionsDeleteArtifactParamSchema = {
  artifact_id: number
  owner: string
  repo: string
}

export type t_ActionsDeleteEnvironmentSecretParamSchema = {
  environment_name: string
  owner: string
  repo: string
  secret_name: string
}

export type t_ActionsDeleteEnvironmentVariableParamSchema = {
  environment_name: string
  name: string
  owner: string
  repo: string
}

export type t_ActionsDeleteHostedRunnerForOrgParamSchema = {
  hosted_runner_id: number
  org: string
}

export type t_ActionsDeleteOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_ActionsDeleteOrgVariableParamSchema = {
  name: string
  org: string
}

export type t_ActionsDeleteRepoSecretParamSchema = {
  owner: string
  repo: string
  secret_name: string
}

export type t_ActionsDeleteRepoVariableParamSchema = {
  name: string
  owner: string
  repo: string
}

export type t_ActionsDeleteSelfHostedRunnerFromOrgParamSchema = {
  org: string
  runner_id: number
}

export type t_ActionsDeleteSelfHostedRunnerFromRepoParamSchema = {
  owner: string
  repo: string
  runner_id: number
}

export type t_ActionsDeleteSelfHostedRunnerGroupFromOrgParamSchema = {
  org: string
  runner_group_id: number
}

export type t_ActionsDeleteWorkflowRunParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsDeleteWorkflowRunLogsParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsDisableSelectedRepositoryGithubActionsOrganizationParamSchema =
  {
    org: string
    repository_id: number
  }

export type t_ActionsDisableWorkflowParamSchema = {
  owner: string
  repo: string
  workflow_id: number | string
}

export type t_ActionsDownloadArtifactParamSchema = {
  archive_format: string
  artifact_id: number
  owner: string
  repo: string
}

export type t_ActionsDownloadJobLogsForWorkflowRunParamSchema = {
  job_id: number
  owner: string
  repo: string
}

export type t_ActionsDownloadWorkflowRunAttemptLogsParamSchema = {
  attempt_number: number
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsDownloadWorkflowRunLogsParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsEnableSelectedRepositoryGithubActionsOrganizationParamSchema =
  {
    org: string
    repository_id: number
  }

export type t_ActionsEnableWorkflowParamSchema = {
  owner: string
  repo: string
  workflow_id: number | string
}

export type t_ActionsForceCancelWorkflowRunParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsGenerateRunnerJitconfigForOrgParamSchema = {
  org: string
}

export type t_ActionsGenerateRunnerJitconfigForOrgRequestBodySchema = {
  labels: string[]
  name: string
  runner_group_id: number
  work_folder?: string | undefined
}

export type t_ActionsGenerateRunnerJitconfigForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsGenerateRunnerJitconfigForRepoRequestBodySchema = {
  labels: string[]
  name: string
  runner_group_id: number
  work_folder?: string | undefined
}

export type t_ActionsGetActionsCacheListParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsGetActionsCacheListQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  key?: string | undefined
  page?: number | undefined
  per_page?: number | undefined
  ref?: string | undefined
  sort?: ("created_at" | "last_accessed_at" | "size_in_bytes") | undefined
}

export type t_ActionsGetActionsCacheUsageParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsGetActionsCacheUsageByRepoForOrgParamSchema = {
  org: string
}

export type t_ActionsGetActionsCacheUsageByRepoForOrgQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsGetActionsCacheUsageForOrgParamSchema = {
  org: string
}

export type t_ActionsGetAllowedActionsOrganizationParamSchema = {
  org: string
}

export type t_ActionsGetAllowedActionsRepositoryParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsGetArtifactParamSchema = {
  artifact_id: number
  owner: string
  repo: string
}

export type t_ActionsGetCustomOidcSubClaimForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsGetEnvironmentPublicKeyParamSchema = {
  environment_name: string
  owner: string
  repo: string
}

export type t_ActionsGetEnvironmentSecretParamSchema = {
  environment_name: string
  owner: string
  repo: string
  secret_name: string
}

export type t_ActionsGetEnvironmentVariableParamSchema = {
  environment_name: string
  name: string
  owner: string
  repo: string
}

export type t_ActionsGetGithubActionsDefaultWorkflowPermissionsOrganizationParamSchema =
  {
    org: string
  }

export type t_ActionsGetGithubActionsDefaultWorkflowPermissionsRepositoryParamSchema =
  {
    owner: string
    repo: string
  }

export type t_ActionsGetGithubActionsPermissionsOrganizationParamSchema = {
  org: string
}

export type t_ActionsGetGithubActionsPermissionsRepositoryParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsGetHostedRunnerForOrgParamSchema = {
  hosted_runner_id: number
  org: string
}

export type t_ActionsGetHostedRunnersGithubOwnedImagesForOrgParamSchema = {
  org: string
}

export type t_ActionsGetHostedRunnersLimitsForOrgParamSchema = {
  org: string
}

export type t_ActionsGetHostedRunnersMachineSpecsForOrgParamSchema = {
  org: string
}

export type t_ActionsGetHostedRunnersPartnerImagesForOrgParamSchema = {
  org: string
}

export type t_ActionsGetHostedRunnersPlatformsForOrgParamSchema = {
  org: string
}

export type t_ActionsGetJobForWorkflowRunParamSchema = {
  job_id: number
  owner: string
  repo: string
}

export type t_ActionsGetOrgPublicKeyParamSchema = {
  org: string
}

export type t_ActionsGetOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_ActionsGetOrgVariableParamSchema = {
  name: string
  org: string
}

export type t_ActionsGetPendingDeploymentsForRunParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsGetRepoPublicKeyParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsGetRepoSecretParamSchema = {
  owner: string
  repo: string
  secret_name: string
}

export type t_ActionsGetRepoVariableParamSchema = {
  name: string
  owner: string
  repo: string
}

export type t_ActionsGetReviewsForRunParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsGetSelfHostedRunnerForOrgParamSchema = {
  org: string
  runner_id: number
}

export type t_ActionsGetSelfHostedRunnerForRepoParamSchema = {
  owner: string
  repo: string
  runner_id: number
}

export type t_ActionsGetSelfHostedRunnerGroupForOrgParamSchema = {
  org: string
  runner_group_id: number
}

export type t_ActionsGetWorkflowParamSchema = {
  owner: string
  repo: string
  workflow_id: number | string
}

export type t_ActionsGetWorkflowAccessToRepositoryParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsGetWorkflowRunParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsGetWorkflowRunQuerySchema = {
  exclude_pull_requests?: boolean | undefined
}

export type t_ActionsGetWorkflowRunAttemptParamSchema = {
  attempt_number: number
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsGetWorkflowRunAttemptQuerySchema = {
  exclude_pull_requests?: boolean | undefined
}

export type t_ActionsGetWorkflowRunUsageParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsGetWorkflowUsageParamSchema = {
  owner: string
  repo: string
  workflow_id: number | string
}

export type t_ActionsListArtifactsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsListArtifactsForRepoQuerySchema = {
  name?: string | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListEnvironmentSecretsParamSchema = {
  environment_name: string
  owner: string
  repo: string
}

export type t_ActionsListEnvironmentSecretsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListEnvironmentVariablesParamSchema = {
  environment_name: string
  owner: string
  repo: string
}

export type t_ActionsListEnvironmentVariablesQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListGithubHostedRunnersInGroupForOrgParamSchema = {
  org: string
  runner_group_id: number
}

export type t_ActionsListGithubHostedRunnersInGroupForOrgQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListHostedRunnersForOrgParamSchema = {
  org: string
}

export type t_ActionsListHostedRunnersForOrgQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListJobsForWorkflowRunParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsListJobsForWorkflowRunQuerySchema = {
  filter?: ("latest" | "all") | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListJobsForWorkflowRunAttemptParamSchema = {
  attempt_number: number
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsListJobsForWorkflowRunAttemptQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListLabelsForSelfHostedRunnerForOrgParamSchema = {
  org: string
  runner_id: number
}

export type t_ActionsListLabelsForSelfHostedRunnerForRepoParamSchema = {
  owner: string
  repo: string
  runner_id: number
}

export type t_ActionsListOrgSecretsParamSchema = {
  org: string
}

export type t_ActionsListOrgSecretsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListOrgVariablesParamSchema = {
  org: string
}

export type t_ActionsListOrgVariablesQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListRepoAccessToSelfHostedRunnerGroupInOrgParamSchema = {
  org: string
  runner_group_id: number
}

export type t_ActionsListRepoAccessToSelfHostedRunnerGroupInOrgQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListRepoOrganizationSecretsParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsListRepoOrganizationSecretsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListRepoOrganizationVariablesParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsListRepoOrganizationVariablesQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListRepoSecretsParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsListRepoSecretsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListRepoVariablesParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsListRepoVariablesQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListRepoWorkflowsParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsListRepoWorkflowsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListRunnerApplicationsForOrgParamSchema = {
  org: string
}

export type t_ActionsListRunnerApplicationsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsListSelectedReposForOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_ActionsListSelectedReposForOrgSecretQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListSelectedReposForOrgVariableParamSchema = {
  name: string
  org: string
}

export type t_ActionsListSelectedReposForOrgVariableQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListSelectedRepositoriesEnabledGithubActionsOrganizationParamSchema =
  {
    org: string
  }

export type t_ActionsListSelectedRepositoriesEnabledGithubActionsOrganizationQuerySchema =
  {
    page?: number | undefined
    per_page?: number | undefined
  }

export type t_ActionsListSelfHostedRunnerGroupsForOrgParamSchema = {
  org: string
}

export type t_ActionsListSelfHostedRunnerGroupsForOrgQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  visible_to_repository?: string | undefined
}

export type t_ActionsListSelfHostedRunnersForOrgParamSchema = {
  org: string
}

export type t_ActionsListSelfHostedRunnersForOrgQuerySchema = {
  name?: string | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListSelfHostedRunnersForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsListSelfHostedRunnersForRepoQuerySchema = {
  name?: string | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListSelfHostedRunnersInGroupForOrgParamSchema = {
  org: string
  runner_group_id: number
}

export type t_ActionsListSelfHostedRunnersInGroupForOrgQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListWorkflowRunArtifactsParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsListWorkflowRunArtifactsQuerySchema = {
  name?: string | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActionsListWorkflowRunsParamSchema = {
  owner: string
  repo: string
  workflow_id: number | string
}

export type t_ActionsListWorkflowRunsQuerySchema = {
  actor?: string | undefined
  branch?: string | undefined
  check_suite_id?: number | undefined
  created?: string | undefined
  event?: string | undefined
  exclude_pull_requests?: boolean | undefined
  head_sha?: string | undefined
  page?: number | undefined
  per_page?: number | undefined
  status?:
    | (
        | "completed"
        | "action_required"
        | "cancelled"
        | "failure"
        | "neutral"
        | "skipped"
        | "stale"
        | "success"
        | "timed_out"
        | "in_progress"
        | "queued"
        | "requested"
        | "waiting"
        | "pending"
      )
    | undefined
}

export type t_ActionsListWorkflowRunsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsListWorkflowRunsForRepoQuerySchema = {
  actor?: string | undefined
  branch?: string | undefined
  check_suite_id?: number | undefined
  created?: string | undefined
  event?: string | undefined
  exclude_pull_requests?: boolean | undefined
  head_sha?: string | undefined
  page?: number | undefined
  per_page?: number | undefined
  status?:
    | (
        | "completed"
        | "action_required"
        | "cancelled"
        | "failure"
        | "neutral"
        | "skipped"
        | "stale"
        | "success"
        | "timed_out"
        | "in_progress"
        | "queued"
        | "requested"
        | "waiting"
        | "pending"
      )
    | undefined
}

export type t_ActionsReRunJobForWorkflowRunParamSchema = {
  job_id: number
  owner: string
  repo: string
}

export type t_ActionsReRunJobForWorkflowRunRequestBodySchema = {
  enable_debug_logging?: boolean | undefined
} | null

export type t_ActionsReRunWorkflowParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsReRunWorkflowRequestBodySchema = {
  enable_debug_logging?: boolean | undefined
} | null

export type t_ActionsReRunWorkflowFailedJobsParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsReRunWorkflowFailedJobsRequestBodySchema = {
  enable_debug_logging?: boolean | undefined
} | null

export type t_ActionsRemoveAllCustomLabelsFromSelfHostedRunnerForOrgParamSchema =
  {
    org: string
    runner_id: number
  }

export type t_ActionsRemoveAllCustomLabelsFromSelfHostedRunnerForRepoParamSchema =
  {
    owner: string
    repo: string
    runner_id: number
  }

export type t_ActionsRemoveCustomLabelFromSelfHostedRunnerForOrgParamSchema = {
  name: string
  org: string
  runner_id: number
}

export type t_ActionsRemoveCustomLabelFromSelfHostedRunnerForRepoParamSchema = {
  name: string
  owner: string
  repo: string
  runner_id: number
}

export type t_ActionsRemoveRepoAccessToSelfHostedRunnerGroupInOrgParamSchema = {
  org: string
  repository_id: number
  runner_group_id: number
}

export type t_ActionsRemoveSelectedRepoFromOrgSecretParamSchema = {
  org: string
  repository_id: number
  secret_name: string
}

export type t_ActionsRemoveSelectedRepoFromOrgVariableParamSchema = {
  name: string
  org: string
  repository_id: number
}

export type t_ActionsRemoveSelfHostedRunnerFromGroupForOrgParamSchema = {
  org: string
  runner_group_id: number
  runner_id: number
}

export type t_ActionsReviewCustomGatesForRunParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsReviewCustomGatesForRunRequestBodySchema =
  | t_review_custom_gates_comment_required
  | t_review_custom_gates_state_required

export type t_ActionsReviewPendingDeploymentsForRunParamSchema = {
  owner: string
  repo: string
  run_id: number
}

export type t_ActionsReviewPendingDeploymentsForRunRequestBodySchema = {
  comment: string
  environment_ids: number[]
  state: "approved" | "rejected"
}

export type t_ActionsSetAllowedActionsOrganizationParamSchema = {
  org: string
}

export type t_ActionsSetAllowedActionsOrganizationRequestBodySchema = {
  github_owned_allowed?: boolean | undefined
  patterns_allowed?: string[] | undefined
  verified_allowed?: boolean | undefined
}

export type t_ActionsSetAllowedActionsRepositoryParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsSetAllowedActionsRepositoryRequestBodySchema = {
  github_owned_allowed?: boolean | undefined
  patterns_allowed?: string[] | undefined
  verified_allowed?: boolean | undefined
}

export type t_ActionsSetCustomLabelsForSelfHostedRunnerForOrgParamSchema = {
  org: string
  runner_id: number
}

export type t_ActionsSetCustomLabelsForSelfHostedRunnerForOrgRequestBodySchema =
  {
    labels: string[]
  }

export type t_ActionsSetCustomLabelsForSelfHostedRunnerForRepoParamSchema = {
  owner: string
  repo: string
  runner_id: number
}

export type t_ActionsSetCustomLabelsForSelfHostedRunnerForRepoRequestBodySchema =
  {
    labels: string[]
  }

export type t_ActionsSetCustomOidcSubClaimForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsSetCustomOidcSubClaimForRepoRequestBodySchema = {
  include_claim_keys?: string[] | undefined
  use_default: boolean
}

export type t_ActionsSetGithubActionsDefaultWorkflowPermissionsOrganizationParamSchema =
  {
    org: string
  }

export type t_ActionsSetGithubActionsDefaultWorkflowPermissionsOrganizationRequestBodySchema =
  {
    can_approve_pull_request_reviews?:
      | t_actions_can_approve_pull_request_reviews
      | undefined
    default_workflow_permissions?:
      | t_actions_default_workflow_permissions
      | undefined
  }

export type t_ActionsSetGithubActionsDefaultWorkflowPermissionsRepositoryParamSchema =
  {
    owner: string
    repo: string
  }

export type t_ActionsSetGithubActionsDefaultWorkflowPermissionsRepositoryRequestBodySchema =
  {
    can_approve_pull_request_reviews?:
      | t_actions_can_approve_pull_request_reviews
      | undefined
    default_workflow_permissions?:
      | t_actions_default_workflow_permissions
      | undefined
  }

export type t_ActionsSetGithubActionsPermissionsOrganizationParamSchema = {
  org: string
}

export type t_ActionsSetGithubActionsPermissionsOrganizationRequestBodySchema =
  {
    allowed_actions?: t_allowed_actions | undefined
    enabled_repositories: t_enabled_repositories
  }

export type t_ActionsSetGithubActionsPermissionsRepositoryParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsSetGithubActionsPermissionsRepositoryRequestBodySchema = {
  allowed_actions?: t_allowed_actions | undefined
  enabled: t_actions_enabled
}

export type t_ActionsSetRepoAccessToSelfHostedRunnerGroupInOrgParamSchema = {
  org: string
  runner_group_id: number
}

export type t_ActionsSetRepoAccessToSelfHostedRunnerGroupInOrgRequestBodySchema =
  {
    selected_repository_ids: number[]
  }

export type t_ActionsSetSelectedReposForOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_ActionsSetSelectedReposForOrgSecretRequestBodySchema = {
  selected_repository_ids: number[]
}

export type t_ActionsSetSelectedReposForOrgVariableParamSchema = {
  name: string
  org: string
}

export type t_ActionsSetSelectedReposForOrgVariableRequestBodySchema = {
  selected_repository_ids: number[]
}

export type t_ActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationParamSchema =
  {
    org: string
  }

export type t_ActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationRequestBodySchema =
  {
    selected_repository_ids: number[]
  }

export type t_ActionsSetSelfHostedRunnersInGroupForOrgParamSchema = {
  org: string
  runner_group_id: number
}

export type t_ActionsSetSelfHostedRunnersInGroupForOrgRequestBodySchema = {
  runners: number[]
}

export type t_ActionsSetWorkflowAccessToRepositoryParamSchema = {
  owner: string
  repo: string
}

export type t_ActionsSetWorkflowAccessToRepositoryRequestBodySchema = {
  access_level: "none" | "user" | "organization"
}

export type t_ActionsUpdateEnvironmentVariableParamSchema = {
  environment_name: string
  name: string
  owner: string
  repo: string
}

export type t_ActionsUpdateEnvironmentVariableRequestBodySchema = {
  name?: string | undefined
  value?: string | undefined
}

export type t_ActionsUpdateHostedRunnerForOrgParamSchema = {
  hosted_runner_id: number
  org: string
}

export type t_ActionsUpdateHostedRunnerForOrgRequestBodySchema = {
  enable_static_ip?: boolean | undefined
  maximum_runners?: number | undefined
  name?: string | undefined
  runner_group_id?: number | undefined
}

export type t_ActionsUpdateOrgVariableParamSchema = {
  name: string
  org: string
}

export type t_ActionsUpdateOrgVariableRequestBodySchema = {
  name?: string | undefined
  selected_repository_ids?: number[] | undefined
  value?: string | undefined
  visibility?: ("all" | "private" | "selected") | undefined
}

export type t_ActionsUpdateRepoVariableParamSchema = {
  name: string
  owner: string
  repo: string
}

export type t_ActionsUpdateRepoVariableRequestBodySchema = {
  name?: string | undefined
  value?: string | undefined
}

export type t_ActionsUpdateSelfHostedRunnerGroupForOrgParamSchema = {
  org: string
  runner_group_id: number
}

export type t_ActionsUpdateSelfHostedRunnerGroupForOrgRequestBodySchema = {
  allows_public_repositories?: boolean | undefined
  name: string
  network_configuration_id?: (string | null) | undefined
  restricted_to_workflows?: boolean | undefined
  selected_workflows?: string[] | undefined
  visibility?: ("selected" | "all" | "private") | undefined
}

export type t_ActivityCheckRepoIsStarredByAuthenticatedUserParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityDeleteRepoSubscriptionParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityDeleteThreadSubscriptionParamSchema = {
  thread_id: number
}

export type t_ActivityGetRepoSubscriptionParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityGetThreadParamSchema = {
  thread_id: number
}

export type t_ActivityGetThreadSubscriptionForAuthenticatedUserParamSchema = {
  thread_id: number
}

export type t_ActivityListEventsForAuthenticatedUserParamSchema = {
  username: string
}

export type t_ActivityListEventsForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActivityListNotificationsForAuthenticatedUserQuerySchema = {
  all?: boolean | undefined
  before?: string | undefined
  page?: number | undefined
  participating?: boolean | undefined
  per_page?: number | undefined
  since?: string | undefined
}

export type t_ActivityListOrgEventsForAuthenticatedUserParamSchema = {
  org: string
  username: string
}

export type t_ActivityListOrgEventsForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActivityListPublicEventsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActivityListPublicEventsForRepoNetworkParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityListPublicEventsForRepoNetworkQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActivityListPublicEventsForUserParamSchema = {
  username: string
}

export type t_ActivityListPublicEventsForUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActivityListPublicOrgEventsParamSchema = {
  org: string
}

export type t_ActivityListPublicOrgEventsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActivityListReceivedEventsForUserParamSchema = {
  username: string
}

export type t_ActivityListReceivedEventsForUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActivityListReceivedPublicEventsForUserParamSchema = {
  username: string
}

export type t_ActivityListReceivedPublicEventsForUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActivityListRepoEventsParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityListRepoEventsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActivityListRepoNotificationsForAuthenticatedUserParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityListRepoNotificationsForAuthenticatedUserQuerySchema = {
  all?: boolean | undefined
  before?: string | undefined
  page?: number | undefined
  participating?: boolean | undefined
  per_page?: number | undefined
  since?: string | undefined
}

export type t_ActivityListReposStarredByAuthenticatedUserQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  sort?: ("created" | "updated") | undefined
}

export type t_ActivityListReposStarredByUserParamSchema = {
  username: string
}

export type t_ActivityListReposStarredByUserQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  sort?: ("created" | "updated") | undefined
}

export type t_ActivityListReposWatchedByUserParamSchema = {
  username: string
}

export type t_ActivityListReposWatchedByUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActivityListStargazersForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityListStargazersForRepoQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActivityListWatchedReposForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActivityListWatchersForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityListWatchersForRepoQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ActivityMarkNotificationsAsReadRequestBodySchema = {
  last_read_at?: string | undefined
  read?: boolean | undefined
}

export type t_ActivityMarkRepoNotificationsAsReadParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityMarkRepoNotificationsAsReadRequestBodySchema = {
  last_read_at?: string | undefined
}

export type t_ActivityMarkThreadAsDoneParamSchema = {
  thread_id: number
}

export type t_ActivityMarkThreadAsReadParamSchema = {
  thread_id: number
}

export type t_ActivitySetRepoSubscriptionParamSchema = {
  owner: string
  repo: string
}

export type t_ActivitySetRepoSubscriptionRequestBodySchema = {
  ignored?: boolean | undefined
  subscribed?: boolean | undefined
}

export type t_ActivitySetThreadSubscriptionParamSchema = {
  thread_id: number
}

export type t_ActivitySetThreadSubscriptionRequestBodySchema = {
  ignored?: boolean | undefined
}

export type t_ActivityStarRepoForAuthenticatedUserParamSchema = {
  owner: string
  repo: string
}

export type t_ActivityUnstarRepoForAuthenticatedUserParamSchema = {
  owner: string
  repo: string
}

export type t_ApiInsightsGetRouteStatsByActorParamSchema = {
  actor_id: number
  actor_type:
    | "installation"
    | "classic_pat"
    | "fine_grained_pat"
    | "oauth_app"
    | "github_app_user_to_server"
  org: string
}

export type t_ApiInsightsGetRouteStatsByActorQuerySchema = {
  api_route_substring?: string | undefined
  direction?: ("asc" | "desc") | undefined
  max_timestamp?: string | undefined
  min_timestamp: string
  page?: number | undefined
  per_page?: number | undefined
  sort?:
    | (
        | "last_rate_limited_timestamp"
        | "last_request_timestamp"
        | "rate_limited_request_count"
        | "http_method"
        | "api_route"
        | "total_request_count"
      )[]
    | undefined
}

export type t_ApiInsightsGetSubjectStatsParamSchema = {
  org: string
}

export type t_ApiInsightsGetSubjectStatsQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  max_timestamp?: string | undefined
  min_timestamp: string
  page?: number | undefined
  per_page?: number | undefined
  sort?:
    | (
        | "last_rate_limited_timestamp"
        | "last_request_timestamp"
        | "rate_limited_request_count"
        | "subject_name"
        | "total_request_count"
      )[]
    | undefined
  subject_name_substring?: string | undefined
}

export type t_ApiInsightsGetSummaryStatsParamSchema = {
  org: string
}

export type t_ApiInsightsGetSummaryStatsQuerySchema = {
  max_timestamp?: string | undefined
  min_timestamp: string
}

export type t_ApiInsightsGetSummaryStatsByActorParamSchema = {
  actor_id: number
  actor_type:
    | "installation"
    | "classic_pat"
    | "fine_grained_pat"
    | "oauth_app"
    | "github_app_user_to_server"
  org: string
}

export type t_ApiInsightsGetSummaryStatsByActorQuerySchema = {
  max_timestamp?: string | undefined
  min_timestamp: string
}

export type t_ApiInsightsGetSummaryStatsByUserParamSchema = {
  org: string
  user_id: string
}

export type t_ApiInsightsGetSummaryStatsByUserQuerySchema = {
  max_timestamp?: string | undefined
  min_timestamp: string
}

export type t_ApiInsightsGetTimeStatsParamSchema = {
  org: string
}

export type t_ApiInsightsGetTimeStatsQuerySchema = {
  max_timestamp?: string | undefined
  min_timestamp: string
  timestamp_increment: string
}

export type t_ApiInsightsGetTimeStatsByActorParamSchema = {
  actor_id: number
  actor_type:
    | "installation"
    | "classic_pat"
    | "fine_grained_pat"
    | "oauth_app"
    | "github_app_user_to_server"
  org: string
}

export type t_ApiInsightsGetTimeStatsByActorQuerySchema = {
  max_timestamp?: string | undefined
  min_timestamp: string
  timestamp_increment: string
}

export type t_ApiInsightsGetTimeStatsByUserParamSchema = {
  org: string
  user_id: string
}

export type t_ApiInsightsGetTimeStatsByUserQuerySchema = {
  max_timestamp?: string | undefined
  min_timestamp: string
  timestamp_increment: string
}

export type t_ApiInsightsGetUserStatsParamSchema = {
  org: string
  user_id: string
}

export type t_ApiInsightsGetUserStatsQuerySchema = {
  actor_name_substring?: string | undefined
  direction?: ("asc" | "desc") | undefined
  max_timestamp?: string | undefined
  min_timestamp: string
  page?: number | undefined
  per_page?: number | undefined
  sort?:
    | (
        | "last_rate_limited_timestamp"
        | "last_request_timestamp"
        | "rate_limited_request_count"
        | "subject_name"
        | "total_request_count"
      )[]
    | undefined
}

export type t_AppsAddRepoToInstallationForAuthenticatedUserParamSchema = {
  installation_id: number
  repository_id: number
}

export type t_AppsCheckTokenParamSchema = {
  client_id: string
}

export type t_AppsCheckTokenRequestBodySchema = {
  access_token: string
}

export type t_AppsCreateFromManifestParamSchema = {
  code: string
}

export type t_AppsCreateInstallationAccessTokenParamSchema = {
  installation_id: number
}

export type t_AppsCreateInstallationAccessTokenRequestBodySchema = {
  permissions?: t_app_permissions | undefined
  repositories?: string[] | undefined
  repository_ids?: number[] | undefined
}

export type t_AppsDeleteAuthorizationParamSchema = {
  client_id: string
}

export type t_AppsDeleteAuthorizationRequestBodySchema = {
  access_token: string
}

export type t_AppsDeleteInstallationParamSchema = {
  installation_id: number
}

export type t_AppsDeleteTokenParamSchema = {
  client_id: string
}

export type t_AppsDeleteTokenRequestBodySchema = {
  access_token: string
}

export type t_AppsGetBySlugParamSchema = {
  app_slug: string
}

export type t_AppsGetInstallationParamSchema = {
  installation_id: number
}

export type t_AppsGetOrgInstallationParamSchema = {
  org: string
}

export type t_AppsGetRepoInstallationParamSchema = {
  owner: string
  repo: string
}

export type t_AppsGetSubscriptionPlanForAccountParamSchema = {
  account_id: number
}

export type t_AppsGetSubscriptionPlanForAccountStubbedParamSchema = {
  account_id: number
}

export type t_AppsGetUserInstallationParamSchema = {
  username: string
}

export type t_AppsGetWebhookDeliveryParamSchema = {
  delivery_id: number
}

export type t_AppsListAccountsForPlanParamSchema = {
  plan_id: number
}

export type t_AppsListAccountsForPlanQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  sort?: ("created" | "updated") | undefined
}

export type t_AppsListAccountsForPlanStubbedParamSchema = {
  plan_id: number
}

export type t_AppsListAccountsForPlanStubbedQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  sort?: ("created" | "updated") | undefined
}

export type t_AppsListInstallationReposForAuthenticatedUserParamSchema = {
  installation_id: number
}

export type t_AppsListInstallationReposForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_AppsListInstallationRequestsForAuthenticatedAppQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_AppsListInstallationsQuerySchema = {
  outdated?: string | undefined
  page?: number | undefined
  per_page?: number | undefined
  since?: string | undefined
}

export type t_AppsListInstallationsForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_AppsListPlansQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_AppsListPlansStubbedQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_AppsListReposAccessibleToInstallationQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_AppsListSubscriptionsForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_AppsListSubscriptionsForAuthenticatedUserStubbedQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_AppsListWebhookDeliveriesQuerySchema = {
  cursor?: string | undefined
  per_page?: number | undefined
}

export type t_AppsRedeliverWebhookDeliveryParamSchema = {
  delivery_id: number
}

export type t_AppsRemoveRepoFromInstallationForAuthenticatedUserParamSchema = {
  installation_id: number
  repository_id: number
}

export type t_AppsResetTokenParamSchema = {
  client_id: string
}

export type t_AppsResetTokenRequestBodySchema = {
  access_token: string
}

export type t_AppsScopeTokenParamSchema = {
  client_id: string
}

export type t_AppsScopeTokenRequestBodySchema = {
  access_token: string
  permissions?: t_app_permissions | undefined
  repositories?: string[] | undefined
  repository_ids?: number[] | undefined
  target?: string | undefined
  target_id?: number | undefined
}

export type t_AppsSuspendInstallationParamSchema = {
  installation_id: number
}

export type t_AppsUnsuspendInstallationParamSchema = {
  installation_id: number
}

export type t_AppsUpdateWebhookConfigForAppRequestBodySchema = {
  content_type?: t_webhook_config_content_type | undefined
  insecure_ssl?: t_webhook_config_insecure_ssl | undefined
  secret?: t_webhook_config_secret | undefined
  url?: t_webhook_config_url | undefined
}

export type t_BillingGetGithubActionsBillingOrgParamSchema = {
  org: string
}

export type t_BillingGetGithubActionsBillingUserParamSchema = {
  username: string
}

export type t_BillingGetGithubBillingUsageReportOrgParamSchema = {
  org: string
}

export type t_BillingGetGithubBillingUsageReportOrgQuerySchema = {
  day?: number | undefined
  hour?: number | undefined
  month?: number | undefined
  year?: number | undefined
}

export type t_BillingGetGithubBillingUsageReportUserParamSchema = {
  username: string
}

export type t_BillingGetGithubBillingUsageReportUserQuerySchema = {
  day?: number | undefined
  hour?: number | undefined
  month?: number | undefined
  year?: number | undefined
}

export type t_BillingGetGithubPackagesBillingOrgParamSchema = {
  org: string
}

export type t_BillingGetGithubPackagesBillingUserParamSchema = {
  username: string
}

export type t_BillingGetSharedStorageBillingOrgParamSchema = {
  org: string
}

export type t_BillingGetSharedStorageBillingUserParamSchema = {
  username: string
}

export type t_CampaignsCreateCampaignParamSchema = {
  org: string
}

export type t_CampaignsCreateCampaignRequestBodySchema = {
  code_scanning_alerts: {
    alert_numbers: number[]
    repository_id: number
  }[]
  contact_link?: (string | null) | undefined
  description: string
  ends_at: string
  generate_issues?: boolean | undefined
  managers?: string[] | undefined
  name: string
  team_managers?: string[] | undefined
}

export type t_CampaignsDeleteCampaignParamSchema = {
  campaign_number: number
  org: string
}

export type t_CampaignsGetCampaignSummaryParamSchema = {
  campaign_number: number
  org: string
}

export type t_CampaignsListOrgCampaignsParamSchema = {
  org: string
}

export type t_CampaignsListOrgCampaignsQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  sort?: ("created" | "updated" | "ends_at" | "published") | undefined
  state?: t_campaign_state | undefined
}

export type t_CampaignsUpdateCampaignParamSchema = {
  campaign_number: number
  org: string
}

export type t_CampaignsUpdateCampaignRequestBodySchema = {
  contact_link?: (string | null) | undefined
  description?: string | undefined
  ends_at?: string | undefined
  managers?: string[] | undefined
  name?: string | undefined
  state?: t_campaign_state | undefined
  team_managers?: string[] | undefined
}

export type t_ChecksCreateParamSchema = {
  owner: string
  repo: string
}

export type t_ChecksCreateRequestBodySchema =
  | {
      status: EmptyObject
      [key: string]: unknown | undefined
    }
  | {
      status?: EmptyObject | undefined
      [key: string]: unknown | undefined
    }

export type t_ChecksCreateSuiteParamSchema = {
  owner: string
  repo: string
}

export type t_ChecksCreateSuiteRequestBodySchema = {
  head_sha: string
}

export type t_ChecksGetParamSchema = {
  check_run_id: number
  owner: string
  repo: string
}

export type t_ChecksGetSuiteParamSchema = {
  check_suite_id: number
  owner: string
  repo: string
}

export type t_ChecksListAnnotationsParamSchema = {
  check_run_id: number
  owner: string
  repo: string
}

export type t_ChecksListAnnotationsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ChecksListForRefParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_ChecksListForRefQuerySchema = {
  app_id?: number | undefined
  check_name?: string | undefined
  filter?: ("latest" | "all") | undefined
  page?: number | undefined
  per_page?: number | undefined
  status?: ("queued" | "in_progress" | "completed") | undefined
}

export type t_ChecksListForSuiteParamSchema = {
  check_suite_id: number
  owner: string
  repo: string
}

export type t_ChecksListForSuiteQuerySchema = {
  check_name?: string | undefined
  filter?: ("latest" | "all") | undefined
  page?: number | undefined
  per_page?: number | undefined
  status?: ("queued" | "in_progress" | "completed") | undefined
}

export type t_ChecksListSuitesForRefParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_ChecksListSuitesForRefQuerySchema = {
  app_id?: number | undefined
  check_name?: string | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ChecksRerequestRunParamSchema = {
  check_run_id: number
  owner: string
  repo: string
}

export type t_ChecksRerequestSuiteParamSchema = {
  check_suite_id: number
  owner: string
  repo: string
}

export type t_ChecksSetSuitesPreferencesParamSchema = {
  owner: string
  repo: string
}

export type t_ChecksSetSuitesPreferencesRequestBodySchema = {
  auto_trigger_checks?:
    | {
        app_id: number
        setting: boolean
      }[]
    | undefined
}

export type t_ChecksUpdateParamSchema = {
  check_run_id: number
  owner: string
  repo: string
}

export type t_ChecksUpdateRequestBodySchema = {
  actions?:
    | {
        description: string
        identifier: string
        label: string
      }[]
    | undefined
  completed_at?: string | undefined
  conclusion?:
    | (
        | "action_required"
        | "cancelled"
        | "failure"
        | "neutral"
        | "success"
        | "skipped"
        | "stale"
        | "timed_out"
      )
    | undefined
  details_url?: string | undefined
  external_id?: string | undefined
  name?: string | undefined
  output?:
    | {
        annotations?:
          | {
              annotation_level: "notice" | "warning" | "failure"
              end_column?: number | undefined
              end_line: number
              message: string
              path: string
              raw_details?: string | undefined
              start_column?: number | undefined
              start_line: number
              title?: string | undefined
            }[]
          | undefined
        images?:
          | {
              alt: string
              caption?: string | undefined
              image_url: string
            }[]
          | undefined
        summary: string
        text?: string | undefined
        title?: string | undefined
      }
    | undefined
  started_at?: string | undefined
  status?:
    | (
        | "queued"
        | "in_progress"
        | "completed"
        | "waiting"
        | "requested"
        | "pending"
      )
    | undefined
}

export type t_ClassroomGetAClassroomParamSchema = {
  classroom_id: number
}

export type t_ClassroomGetAnAssignmentParamSchema = {
  assignment_id: number
}

export type t_ClassroomGetAssignmentGradesParamSchema = {
  assignment_id: number
}

export type t_ClassroomListAcceptedAssignmentsForAnAssignmentParamSchema = {
  assignment_id: number
}

export type t_ClassroomListAcceptedAssignmentsForAnAssignmentQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ClassroomListAssignmentsForAClassroomParamSchema = {
  classroom_id: number
}

export type t_ClassroomListAssignmentsForAClassroomQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ClassroomListClassroomsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_CodeScanningCommitAutofixParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_CodeScanningCommitAutofixRequestBodySchema = {
  message?: string | undefined
  target_ref?: string | undefined
} | null

export type t_CodeScanningCreateAutofixParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_CodeScanningCreateVariantAnalysisParamSchema = {
  owner: string
  repo: string
}

export type t_CodeScanningCreateVariantAnalysisRequestBodySchema = EmptyObject

export type t_CodeScanningDeleteAnalysisParamSchema = {
  analysis_id: number
  owner: string
  repo: string
}

export type t_CodeScanningDeleteAnalysisQuerySchema = {
  confirm_delete?: (string | null) | undefined
}

export type t_CodeScanningDeleteCodeqlDatabaseParamSchema = {
  language: string
  owner: string
  repo: string
}

export type t_CodeScanningGetAlertParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_CodeScanningGetAnalysisParamSchema = {
  analysis_id: number
  owner: string
  repo: string
}

export type t_CodeScanningGetAutofixParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_CodeScanningGetCodeqlDatabaseParamSchema = {
  language: string
  owner: string
  repo: string
}

export type t_CodeScanningGetDefaultSetupParamSchema = {
  owner: string
  repo: string
}

export type t_CodeScanningGetSarifParamSchema = {
  owner: string
  repo: string
  sarif_id: string
}

export type t_CodeScanningGetVariantAnalysisParamSchema = {
  codeql_variant_analysis_id: number
  owner: string
  repo: string
}

export type t_CodeScanningGetVariantAnalysisRepoTaskParamSchema = {
  codeql_variant_analysis_id: number
  owner: string
  repo: string
  repo_name: string
  repo_owner: string
}

export type t_CodeScanningListAlertInstancesParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_CodeScanningListAlertInstancesQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  pr?: number | undefined
  ref?: t_code_scanning_ref | undefined
}

export type t_CodeScanningListAlertsForOrgParamSchema = {
  org: string
}

export type t_CodeScanningListAlertsForOrgQuerySchema = {
  after?: string | undefined
  before?: string | undefined
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  severity?: t_code_scanning_alert_severity | undefined
  sort?: ("created" | "updated") | undefined
  state?: t_code_scanning_alert_state_query | undefined
  tool_guid?: t_code_scanning_analysis_tool_guid | undefined
  tool_name?: t_code_scanning_analysis_tool_name | undefined
}

export type t_CodeScanningListAlertsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_CodeScanningListAlertsForRepoQuerySchema = {
  after?: string | undefined
  before?: string | undefined
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  pr?: number | undefined
  ref?: t_code_scanning_ref | undefined
  severity?: t_code_scanning_alert_severity | undefined
  sort?: ("created" | "updated") | undefined
  state?: t_code_scanning_alert_state_query | undefined
  tool_guid?: t_code_scanning_analysis_tool_guid | undefined
  tool_name?: t_code_scanning_analysis_tool_name | undefined
}

export type t_CodeScanningListCodeqlDatabasesParamSchema = {
  owner: string
  repo: string
}

export type t_CodeScanningListRecentAnalysesParamSchema = {
  owner: string
  repo: string
}

export type t_CodeScanningListRecentAnalysesQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  pr?: number | undefined
  ref?: t_code_scanning_ref | undefined
  sarif_id?: t_code_scanning_analysis_sarif_id | undefined
  sort?: "created" | undefined
  tool_guid?: t_code_scanning_analysis_tool_guid | undefined
  tool_name?: t_code_scanning_analysis_tool_name | undefined
}

export type t_CodeScanningUpdateAlertParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_CodeScanningUpdateAlertRequestBodySchema = {
  create_request?: t_code_scanning_alert_create_request | undefined
  dismissed_comment?: t_code_scanning_alert_dismissed_comment | undefined
  dismissed_reason?: t_code_scanning_alert_dismissed_reason | undefined
  state: t_code_scanning_alert_set_state
}

export type t_CodeScanningUpdateDefaultSetupParamSchema = {
  owner: string
  repo: string
}

export type t_CodeScanningUpdateDefaultSetupRequestBodySchema = {
  languages?:
    | (
        | "actions"
        | "c-cpp"
        | "csharp"
        | "go"
        | "java-kotlin"
        | "javascript-typescript"
        | "python"
        | "ruby"
        | "swift"
      )[]
    | undefined
  query_suite?: ("default" | "extended") | undefined
  runner_label?: (string | null) | undefined
  runner_type?: ("standard" | "labeled") | undefined
  state?: ("configured" | "not-configured") | undefined
  threat_model?: ("remote" | "remote_and_local") | undefined
}

export type t_CodeScanningUploadSarifParamSchema = {
  owner: string
  repo: string
}

export type t_CodeScanningUploadSarifRequestBodySchema = {
  checkout_uri?: string | undefined
  commit_sha: t_code_scanning_analysis_commit_sha
  ref: t_code_scanning_ref_full
  sarif: t_code_scanning_analysis_sarif_file
  started_at?: string | undefined
  tool_name?: string | undefined
  validate?: boolean | undefined
}

export type t_CodeSecurityAttachConfigurationParamSchema = {
  configuration_id: number
  org: string
}

export type t_CodeSecurityAttachConfigurationRequestBodySchema = {
  scope:
    | "all"
    | "all_without_configurations"
    | "public"
    | "private_or_internal"
    | "selected"
  selected_repository_ids?: number[] | undefined
}

export type t_CodeSecurityAttachEnterpriseConfigurationParamSchema = {
  configuration_id: number
  enterprise: string
}

export type t_CodeSecurityAttachEnterpriseConfigurationRequestBodySchema = {
  scope: "all" | "all_without_configurations"
}

export type t_CodeSecurityCreateConfigurationParamSchema = {
  org: string
}

export type t_CodeSecurityCreateConfigurationRequestBodySchema = {
  advanced_security?:
    | ("enabled" | "disabled" | "code_security" | "secret_protection")
    | undefined
  code_scanning_default_setup?: ("enabled" | "disabled" | "not_set") | undefined
  code_scanning_default_setup_options?:
    | t_code_scanning_default_setup_options
    | undefined
  code_scanning_delegated_alert_dismissal?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  dependabot_alerts?: ("enabled" | "disabled" | "not_set") | undefined
  dependabot_security_updates?: ("enabled" | "disabled" | "not_set") | undefined
  dependency_graph?: ("enabled" | "disabled" | "not_set") | undefined
  dependency_graph_autosubmit_action?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  dependency_graph_autosubmit_action_options?:
    | {
        labeled_runners?: boolean | undefined
      }
    | undefined
  description: string
  enforcement?: ("enforced" | "unenforced") | undefined
  name: string
  private_vulnerability_reporting?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning?: ("enabled" | "disabled" | "not_set") | undefined
  secret_scanning_delegated_alert_dismissal?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_delegated_bypass?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_delegated_bypass_options?:
    | {
        reviewers?:
          | {
              reviewer_id: number
              reviewer_type: "TEAM" | "ROLE"
            }[]
          | undefined
      }
    | undefined
  secret_scanning_generic_secrets?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_non_provider_patterns?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_push_protection?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_validity_checks?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
}

export type t_CodeSecurityCreateConfigurationForEnterpriseParamSchema = {
  enterprise: string
}

export type t_CodeSecurityCreateConfigurationForEnterpriseRequestBodySchema = {
  advanced_security?:
    | ("enabled" | "disabled" | "code_security" | "secret_protection")
    | undefined
  code_scanning_default_setup?: ("enabled" | "disabled" | "not_set") | undefined
  code_scanning_default_setup_options?:
    | t_code_scanning_default_setup_options
    | undefined
  code_scanning_delegated_alert_dismissal?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  dependabot_alerts?: ("enabled" | "disabled" | "not_set") | undefined
  dependabot_security_updates?: ("enabled" | "disabled" | "not_set") | undefined
  dependency_graph?: ("enabled" | "disabled" | "not_set") | undefined
  dependency_graph_autosubmit_action?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  dependency_graph_autosubmit_action_options?:
    | {
        labeled_runners?: boolean | undefined
      }
    | undefined
  description: string
  enforcement?: ("enforced" | "unenforced") | undefined
  name: string
  private_vulnerability_reporting?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning?: ("enabled" | "disabled" | "not_set") | undefined
  secret_scanning_delegated_alert_dismissal?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_generic_secrets?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_non_provider_patterns?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_push_protection?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_validity_checks?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
}

export type t_CodeSecurityDeleteConfigurationParamSchema = {
  configuration_id: number
  org: string
}

export type t_CodeSecurityDeleteConfigurationForEnterpriseParamSchema = {
  configuration_id: number
  enterprise: string
}

export type t_CodeSecurityDetachConfigurationParamSchema = {
  org: string
}

export type t_CodeSecurityDetachConfigurationRequestBodySchema = {
  selected_repository_ids?: number[] | undefined
}

export type t_CodeSecurityGetConfigurationParamSchema = {
  configuration_id: number
  org: string
}

export type t_CodeSecurityGetConfigurationForRepositoryParamSchema = {
  owner: string
  repo: string
}

export type t_CodeSecurityGetConfigurationsForEnterpriseParamSchema = {
  enterprise: string
}

export type t_CodeSecurityGetConfigurationsForEnterpriseQuerySchema = {
  after?: string | undefined
  before?: string | undefined
  per_page?: number | undefined
}

export type t_CodeSecurityGetConfigurationsForOrgParamSchema = {
  org: string
}

export type t_CodeSecurityGetConfigurationsForOrgQuerySchema = {
  after?: string | undefined
  before?: string | undefined
  per_page?: number | undefined
  target_type?: ("global" | "all") | undefined
}

export type t_CodeSecurityGetDefaultConfigurationsParamSchema = {
  org: string
}

export type t_CodeSecurityGetDefaultConfigurationsForEnterpriseParamSchema = {
  enterprise: string
}

export type t_CodeSecurityGetRepositoriesForConfigurationParamSchema = {
  configuration_id: number
  org: string
}

export type t_CodeSecurityGetRepositoriesForConfigurationQuerySchema = {
  after?: string | undefined
  before?: string | undefined
  per_page?: number | undefined
  status?: string | undefined
}

export type t_CodeSecurityGetRepositoriesForEnterpriseConfigurationParamSchema =
  {
    configuration_id: number
    enterprise: string
  }

export type t_CodeSecurityGetRepositoriesForEnterpriseConfigurationQuerySchema =
  {
    after?: string | undefined
    before?: string | undefined
    per_page?: number | undefined
    status?: string | undefined
  }

export type t_CodeSecurityGetSingleConfigurationForEnterpriseParamSchema = {
  configuration_id: number
  enterprise: string
}

export type t_CodeSecuritySetConfigurationAsDefaultParamSchema = {
  configuration_id: number
  org: string
}

export type t_CodeSecuritySetConfigurationAsDefaultRequestBodySchema = {
  default_for_new_repos?:
    | ("all" | "none" | "private_and_internal" | "public")
    | undefined
}

export type t_CodeSecuritySetConfigurationAsDefaultForEnterpriseParamSchema = {
  configuration_id: number
  enterprise: string
}

export type t_CodeSecuritySetConfigurationAsDefaultForEnterpriseRequestBodySchema =
  {
    default_for_new_repos?:
      | ("all" | "none" | "private_and_internal" | "public")
      | undefined
  }

export type t_CodeSecurityUpdateConfigurationParamSchema = {
  configuration_id: number
  org: string
}

export type t_CodeSecurityUpdateConfigurationRequestBodySchema = {
  advanced_security?:
    | ("enabled" | "disabled" | "code_security" | "secret_protection")
    | undefined
  code_scanning_default_setup?: ("enabled" | "disabled" | "not_set") | undefined
  code_scanning_default_setup_options?:
    | t_code_scanning_default_setup_options
    | undefined
  code_scanning_delegated_alert_dismissal?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  dependabot_alerts?: ("enabled" | "disabled" | "not_set") | undefined
  dependabot_security_updates?: ("enabled" | "disabled" | "not_set") | undefined
  dependency_graph?: ("enabled" | "disabled" | "not_set") | undefined
  dependency_graph_autosubmit_action?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  dependency_graph_autosubmit_action_options?:
    | {
        labeled_runners?: boolean | undefined
      }
    | undefined
  description?: string | undefined
  enforcement?: ("enforced" | "unenforced") | undefined
  name?: string | undefined
  private_vulnerability_reporting?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning?: ("enabled" | "disabled" | "not_set") | undefined
  secret_scanning_delegated_alert_dismissal?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_delegated_bypass?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_delegated_bypass_options?:
    | {
        reviewers?:
          | {
              reviewer_id: number
              reviewer_type: "TEAM" | "ROLE"
            }[]
          | undefined
      }
    | undefined
  secret_scanning_generic_secrets?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_non_provider_patterns?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_push_protection?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_validity_checks?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
}

export type t_CodeSecurityUpdateEnterpriseConfigurationParamSchema = {
  configuration_id: number
  enterprise: string
}

export type t_CodeSecurityUpdateEnterpriseConfigurationRequestBodySchema = {
  advanced_security?:
    | ("enabled" | "disabled" | "code_security" | "secret_protection")
    | undefined
  code_scanning_default_setup?: ("enabled" | "disabled" | "not_set") | undefined
  code_scanning_default_setup_options?:
    | t_code_scanning_default_setup_options
    | undefined
  code_scanning_delegated_alert_dismissal?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  dependabot_alerts?: ("enabled" | "disabled" | "not_set") | undefined
  dependabot_security_updates?: ("enabled" | "disabled" | "not_set") | undefined
  dependency_graph?: ("enabled" | "disabled" | "not_set") | undefined
  dependency_graph_autosubmit_action?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  dependency_graph_autosubmit_action_options?:
    | {
        labeled_runners?: boolean | undefined
      }
    | undefined
  description?: string | undefined
  enforcement?: ("enforced" | "unenforced") | undefined
  name?: string | undefined
  private_vulnerability_reporting?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning?: ("enabled" | "disabled" | "not_set") | undefined
  secret_scanning_delegated_alert_dismissal?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_generic_secrets?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_non_provider_patterns?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_push_protection?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
  secret_scanning_validity_checks?:
    | ("enabled" | "disabled" | "not_set")
    | undefined
}

export type t_CodesOfConductGetConductCodeParamSchema = {
  key: string
}

export type t_CodespacesAddRepositoryForSecretForAuthenticatedUserParamSchema =
  {
    repository_id: number
    secret_name: string
  }

export type t_CodespacesAddSelectedRepoToOrgSecretParamSchema = {
  org: string
  repository_id: number
  secret_name: string
}

export type t_CodespacesCheckPermissionsForDevcontainerParamSchema = {
  owner: string
  repo: string
}

export type t_CodespacesCheckPermissionsForDevcontainerQuerySchema = {
  devcontainer_path: string
  ref: string
}

export type t_CodespacesCodespaceMachinesForAuthenticatedUserParamSchema = {
  codespace_name: string
}

export type t_CodespacesCreateForAuthenticatedUserRequestBodySchema =
  | {
      client_ip?: string | undefined
      devcontainer_path?: string | undefined
      display_name?: string | undefined
      geo?: ("EuropeWest" | "SoutheastAsia" | "UsEast" | "UsWest") | undefined
      idle_timeout_minutes?: number | undefined
      location?: string | undefined
      machine?: string | undefined
      multi_repo_permissions_opt_out?: boolean | undefined
      ref?: string | undefined
      repository_id: number
      retention_period_minutes?: number | undefined
      working_directory?: string | undefined
    }
  | {
      devcontainer_path?: string | undefined
      geo?: ("EuropeWest" | "SoutheastAsia" | "UsEast" | "UsWest") | undefined
      idle_timeout_minutes?: number | undefined
      location?: string | undefined
      machine?: string | undefined
      pull_request: {
        pull_request_number: number
        repository_id: number
      }
      working_directory?: string | undefined
    }

export type t_CodespacesCreateOrUpdateOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_CodespacesCreateOrUpdateOrgSecretRequestBodySchema = {
  encrypted_value?: string | undefined
  key_id?: string | undefined
  selected_repository_ids?: number[] | undefined
  visibility: "all" | "private" | "selected"
}

export type t_CodespacesCreateOrUpdateRepoSecretParamSchema = {
  owner: string
  repo: string
  secret_name: string
}

export type t_CodespacesCreateOrUpdateRepoSecretRequestBodySchema = {
  encrypted_value?: string | undefined
  key_id?: string | undefined
}

export type t_CodespacesCreateOrUpdateSecretForAuthenticatedUserParamSchema = {
  secret_name: string
}

export type t_CodespacesCreateOrUpdateSecretForAuthenticatedUserRequestBodySchema =
  {
    encrypted_value?: string | undefined
    key_id: string
    selected_repository_ids?: (number | string)[] | undefined
  }

export type t_CodespacesCreateWithPrForAuthenticatedUserParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_CodespacesCreateWithPrForAuthenticatedUserRequestBodySchema = {
  client_ip?: string | undefined
  devcontainer_path?: string | undefined
  display_name?: string | undefined
  geo?: ("EuropeWest" | "SoutheastAsia" | "UsEast" | "UsWest") | undefined
  idle_timeout_minutes?: number | undefined
  location?: string | undefined
  machine?: string | undefined
  multi_repo_permissions_opt_out?: boolean | undefined
  retention_period_minutes?: number | undefined
  working_directory?: string | undefined
} | null

export type t_CodespacesCreateWithRepoForAuthenticatedUserParamSchema = {
  owner: string
  repo: string
}

export type t_CodespacesCreateWithRepoForAuthenticatedUserRequestBodySchema = {
  client_ip?: string | undefined
  devcontainer_path?: string | undefined
  display_name?: string | undefined
  geo?: ("EuropeWest" | "SoutheastAsia" | "UsEast" | "UsWest") | undefined
  idle_timeout_minutes?: number | undefined
  location?: string | undefined
  machine?: string | undefined
  multi_repo_permissions_opt_out?: boolean | undefined
  ref?: string | undefined
  retention_period_minutes?: number | undefined
  working_directory?: string | undefined
} | null

export type t_CodespacesDeleteCodespacesAccessUsersParamSchema = {
  org: string
}

export type t_CodespacesDeleteCodespacesAccessUsersRequestBodySchema = {
  selected_usernames: string[]
}

export type t_CodespacesDeleteForAuthenticatedUserParamSchema = {
  codespace_name: string
}

export type t_CodespacesDeleteFromOrganizationParamSchema = {
  codespace_name: string
  org: string
  username: string
}

export type t_CodespacesDeleteOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_CodespacesDeleteRepoSecretParamSchema = {
  owner: string
  repo: string
  secret_name: string
}

export type t_CodespacesDeleteSecretForAuthenticatedUserParamSchema = {
  secret_name: string
}

export type t_CodespacesExportForAuthenticatedUserParamSchema = {
  codespace_name: string
}

export type t_CodespacesGetCodespacesForUserInOrgParamSchema = {
  org: string
  username: string
}

export type t_CodespacesGetCodespacesForUserInOrgQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_CodespacesGetExportDetailsForAuthenticatedUserParamSchema = {
  codespace_name: string
  export_id: string
}

export type t_CodespacesGetForAuthenticatedUserParamSchema = {
  codespace_name: string
}

export type t_CodespacesGetOrgPublicKeyParamSchema = {
  org: string
}

export type t_CodespacesGetOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_CodespacesGetRepoPublicKeyParamSchema = {
  owner: string
  repo: string
}

export type t_CodespacesGetRepoSecretParamSchema = {
  owner: string
  repo: string
  secret_name: string
}

export type t_CodespacesGetSecretForAuthenticatedUserParamSchema = {
  secret_name: string
}

export type t_CodespacesListDevcontainersInRepositoryForAuthenticatedUserParamSchema =
  {
    owner: string
    repo: string
  }

export type t_CodespacesListDevcontainersInRepositoryForAuthenticatedUserQuerySchema =
  {
    page?: number | undefined
    per_page?: number | undefined
  }

export type t_CodespacesListForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  repository_id?: number | undefined
}

export type t_CodespacesListInOrganizationParamSchema = {
  org: string
}

export type t_CodespacesListInOrganizationQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_CodespacesListInRepositoryForAuthenticatedUserParamSchema = {
  owner: string
  repo: string
}

export type t_CodespacesListInRepositoryForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_CodespacesListOrgSecretsParamSchema = {
  org: string
}

export type t_CodespacesListOrgSecretsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_CodespacesListRepoSecretsParamSchema = {
  owner: string
  repo: string
}

export type t_CodespacesListRepoSecretsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_CodespacesListRepositoriesForSecretForAuthenticatedUserParamSchema =
  {
    secret_name: string
  }

export type t_CodespacesListSecretsForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_CodespacesListSelectedReposForOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_CodespacesListSelectedReposForOrgSecretQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_CodespacesPreFlightWithRepoForAuthenticatedUserParamSchema = {
  owner: string
  repo: string
}

export type t_CodespacesPreFlightWithRepoForAuthenticatedUserQuerySchema = {
  client_ip?: string | undefined
  ref?: string | undefined
}

export type t_CodespacesPublishForAuthenticatedUserParamSchema = {
  codespace_name: string
}

export type t_CodespacesPublishForAuthenticatedUserRequestBodySchema = {
  name?: string | undefined
  private?: boolean | undefined
}

export type t_CodespacesRemoveRepositoryForSecretForAuthenticatedUserParamSchema =
  {
    repository_id: number
    secret_name: string
  }

export type t_CodespacesRemoveSelectedRepoFromOrgSecretParamSchema = {
  org: string
  repository_id: number
  secret_name: string
}

export type t_CodespacesRepoMachinesForAuthenticatedUserParamSchema = {
  owner: string
  repo: string
}

export type t_CodespacesRepoMachinesForAuthenticatedUserQuerySchema = {
  client_ip?: string | undefined
  location?: string | undefined
  ref?: string | undefined
}

export type t_CodespacesSetCodespacesAccessParamSchema = {
  org: string
}

export type t_CodespacesSetCodespacesAccessRequestBodySchema = {
  selected_usernames?: string[] | undefined
  visibility:
    | "disabled"
    | "selected_members"
    | "all_members"
    | "all_members_and_outside_collaborators"
}

export type t_CodespacesSetCodespacesAccessUsersParamSchema = {
  org: string
}

export type t_CodespacesSetCodespacesAccessUsersRequestBodySchema = {
  selected_usernames: string[]
}

export type t_CodespacesSetRepositoriesForSecretForAuthenticatedUserParamSchema =
  {
    secret_name: string
  }

export type t_CodespacesSetRepositoriesForSecretForAuthenticatedUserRequestBodySchema =
  {
    selected_repository_ids: number[]
  }

export type t_CodespacesSetSelectedReposForOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_CodespacesSetSelectedReposForOrgSecretRequestBodySchema = {
  selected_repository_ids: number[]
}

export type t_CodespacesStartForAuthenticatedUserParamSchema = {
  codespace_name: string
}

export type t_CodespacesStopForAuthenticatedUserParamSchema = {
  codespace_name: string
}

export type t_CodespacesStopInOrganizationParamSchema = {
  codespace_name: string
  org: string
  username: string
}

export type t_CodespacesUpdateForAuthenticatedUserParamSchema = {
  codespace_name: string
}

export type t_CodespacesUpdateForAuthenticatedUserRequestBodySchema = {
  display_name?: string | undefined
  machine?: string | undefined
  recent_folders?: string[] | undefined
}

export type t_CopilotAddCopilotSeatsForTeamsParamSchema = {
  org: string
}

export type t_CopilotAddCopilotSeatsForTeamsRequestBodySchema = {
  selected_teams: string[]
}

export type t_CopilotAddCopilotSeatsForUsersParamSchema = {
  org: string
}

export type t_CopilotAddCopilotSeatsForUsersRequestBodySchema = {
  selected_usernames: string[]
}

export type t_CopilotCancelCopilotSeatAssignmentForTeamsParamSchema = {
  org: string
}

export type t_CopilotCancelCopilotSeatAssignmentForTeamsRequestBodySchema = {
  selected_teams: string[]
}

export type t_CopilotCancelCopilotSeatAssignmentForUsersParamSchema = {
  org: string
}

export type t_CopilotCancelCopilotSeatAssignmentForUsersRequestBodySchema = {
  selected_usernames: string[]
}

export type t_CopilotCopilotMetricsForOrganizationParamSchema = {
  org: string
}

export type t_CopilotCopilotMetricsForOrganizationQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  since?: string | undefined
  until?: string | undefined
}

export type t_CopilotCopilotMetricsForTeamParamSchema = {
  org: string
  team_slug: string
}

export type t_CopilotCopilotMetricsForTeamQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  since?: string | undefined
  until?: string | undefined
}

export type t_CopilotGetCopilotOrganizationDetailsParamSchema = {
  org: string
}

export type t_CopilotGetCopilotSeatDetailsForUserParamSchema = {
  org: string
  username: string
}

export type t_CopilotListCopilotSeatsParamSchema = {
  org: string
}

export type t_CopilotListCopilotSeatsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_CredentialsRevokeRequestBodySchema = {
  credentials: string[]
}

export type t_DependabotAddSelectedRepoToOrgSecretParamSchema = {
  org: string
  repository_id: number
  secret_name: string
}

export type t_DependabotCreateOrUpdateOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_DependabotCreateOrUpdateOrgSecretRequestBodySchema = {
  encrypted_value?: string | undefined
  key_id?: string | undefined
  selected_repository_ids?: string[] | undefined
  visibility: "all" | "private" | "selected"
}

export type t_DependabotCreateOrUpdateRepoSecretParamSchema = {
  owner: string
  repo: string
  secret_name: string
}

export type t_DependabotCreateOrUpdateRepoSecretRequestBodySchema = {
  encrypted_value?: string | undefined
  key_id?: string | undefined
}

export type t_DependabotDeleteOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_DependabotDeleteRepoSecretParamSchema = {
  owner: string
  repo: string
  secret_name: string
}

export type t_DependabotGetAlertParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_DependabotGetOrgPublicKeyParamSchema = {
  org: string
}

export type t_DependabotGetOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_DependabotGetRepoPublicKeyParamSchema = {
  owner: string
  repo: string
}

export type t_DependabotGetRepoSecretParamSchema = {
  owner: string
  repo: string
  secret_name: string
}

export type t_DependabotListAlertsForEnterpriseParamSchema = {
  enterprise: string
}

export type t_DependabotListAlertsForEnterpriseQuerySchema = {
  after?: string | undefined
  before?: string | undefined
  direction?: ("asc" | "desc") | undefined
  ecosystem?: string | undefined
  epss_percentage?: string | undefined
  first?: number | undefined
  has?: (string | "patch"[]) | undefined
  last?: number | undefined
  package?: string | undefined
  per_page?: number | undefined
  scope?: ("development" | "runtime") | undefined
  severity?: string | undefined
  sort?: ("created" | "updated" | "epss_percentage") | undefined
  state?: string | undefined
}

export type t_DependabotListAlertsForOrgParamSchema = {
  org: string
}

export type t_DependabotListAlertsForOrgQuerySchema = {
  after?: string | undefined
  before?: string | undefined
  direction?: ("asc" | "desc") | undefined
  ecosystem?: string | undefined
  epss_percentage?: string | undefined
  first?: number | undefined
  has?: (string | "patch"[]) | undefined
  last?: number | undefined
  package?: string | undefined
  per_page?: number | undefined
  scope?: ("development" | "runtime") | undefined
  severity?: string | undefined
  sort?: ("created" | "updated" | "epss_percentage") | undefined
  state?: string | undefined
}

export type t_DependabotListAlertsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_DependabotListAlertsForRepoQuerySchema = {
  after?: string | undefined
  before?: string | undefined
  direction?: ("asc" | "desc") | undefined
  ecosystem?: string | undefined
  epss_percentage?: string | undefined
  first?: number | undefined
  has?: (string | "patch"[]) | undefined
  last?: number | undefined
  manifest?: string | undefined
  package?: string | undefined
  page?: number | undefined
  per_page?: number | undefined
  scope?: ("development" | "runtime") | undefined
  severity?: string | undefined
  sort?: ("created" | "updated" | "epss_percentage") | undefined
  state?: string | undefined
}

export type t_DependabotListOrgSecretsParamSchema = {
  org: string
}

export type t_DependabotListOrgSecretsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_DependabotListRepoSecretsParamSchema = {
  owner: string
  repo: string
}

export type t_DependabotListRepoSecretsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_DependabotListSelectedReposForOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_DependabotListSelectedReposForOrgSecretQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_DependabotRemoveSelectedRepoFromOrgSecretParamSchema = {
  org: string
  repository_id: number
  secret_name: string
}

export type t_DependabotRepositoryAccessForOrgParamSchema = {
  org: string
}

export type t_DependabotRepositoryAccessForOrgQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_DependabotSetRepositoryAccessDefaultLevelParamSchema = {
  org: string
}

export type t_DependabotSetRepositoryAccessDefaultLevelRequestBodySchema = {
  default_level: "public" | "internal"
}

export type t_DependabotSetSelectedReposForOrgSecretParamSchema = {
  org: string
  secret_name: string
}

export type t_DependabotSetSelectedReposForOrgSecretRequestBodySchema = {
  selected_repository_ids: number[]
}

export type t_DependabotUpdateAlertParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_DependabotUpdateAlertRequestBodySchema = {
  dismissed_comment?: string | undefined
  dismissed_reason?:
    | (
        | "fix_started"
        | "inaccurate"
        | "no_bandwidth"
        | "not_used"
        | "tolerable_risk"
      )
    | undefined
  state: "dismissed" | "open"
}

export type t_DependabotUpdateRepositoryAccessForOrgParamSchema = {
  org: string
}

export type t_DependabotUpdateRepositoryAccessForOrgRequestBodySchema = {
  repository_ids_to_add?: number[] | undefined
  repository_ids_to_remove?: number[] | undefined
}

export type t_DependencyGraphCreateRepositorySnapshotParamSchema = {
  owner: string
  repo: string
}

export type t_DependencyGraphCreateRepositorySnapshotRequestBodySchema = {
  detector: {
    name: string
    url: string
    version: string
  }
  job: {
    correlator: string
    html_url?: string | undefined
    id: string
  }
  manifests?:
    | {
        [key: string]: t_manifest | undefined
      }
    | undefined
  metadata?: t_metadata | undefined
  ref: string
  scanned: string
  sha: string
  version: number
}

export type t_DependencyGraphDiffRangeParamSchema = {
  basehead: string
  owner: string
  repo: string
}

export type t_DependencyGraphDiffRangeQuerySchema = {
  name?: string | undefined
}

export type t_DependencyGraphExportSbomParamSchema = {
  owner: string
  repo: string
}

export type t_GistsCheckIsStarredParamSchema = {
  gist_id: string
}

export type t_GistsCreateRequestBodySchema = {
  description?: string | undefined
  files: {
    [key: string]:
      | {
          content: string
        }
      | undefined
  }
  public?: (boolean | "true" | "false") | undefined
}

export type t_GistsCreateCommentParamSchema = {
  gist_id: string
}

export type t_GistsCreateCommentRequestBodySchema = {
  body: string
}

export type t_GistsDeleteParamSchema = {
  gist_id: string
}

export type t_GistsDeleteCommentParamSchema = {
  comment_id: number
  gist_id: string
}

export type t_GistsForkParamSchema = {
  gist_id: string
}

export type t_GistsGetParamSchema = {
  gist_id: string
}

export type t_GistsGetCommentParamSchema = {
  comment_id: number
  gist_id: string
}

export type t_GistsGetRevisionParamSchema = {
  gist_id: string
  sha: string
}

export type t_GistsListQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  since?: string | undefined
}

export type t_GistsListCommentsParamSchema = {
  gist_id: string
}

export type t_GistsListCommentsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_GistsListCommitsParamSchema = {
  gist_id: string
}

export type t_GistsListCommitsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_GistsListForUserParamSchema = {
  username: string
}

export type t_GistsListForUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  since?: string | undefined
}

export type t_GistsListForksParamSchema = {
  gist_id: string
}

export type t_GistsListForksQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_GistsListPublicQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  since?: string | undefined
}

export type t_GistsListStarredQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  since?: string | undefined
}

export type t_GistsStarParamSchema = {
  gist_id: string
}

export type t_GistsUnstarParamSchema = {
  gist_id: string
}

export type t_GistsUpdateParamSchema = {
  gist_id: string
}

export type t_GistsUpdateRequestBodySchema = {
  description?: string | undefined
  files?:
    | {
        [key: string]:
          | ({
              content?: string | undefined
              filename?: (string | null) | undefined
            } | null)
          | undefined
      }
    | undefined
} | null

export type t_GistsUpdateCommentParamSchema = {
  comment_id: number
  gist_id: string
}

export type t_GistsUpdateCommentRequestBodySchema = {
  body: string
}

export type t_GitCreateBlobParamSchema = {
  owner: string
  repo: string
}

export type t_GitCreateBlobRequestBodySchema = {
  content: string
  encoding?: string | undefined
}

export type t_GitCreateCommitParamSchema = {
  owner: string
  repo: string
}

export type t_GitCreateCommitRequestBodySchema = {
  author?:
    | {
        date?: string | undefined
        email: string
        name: string
      }
    | undefined
  committer?:
    | {
        date?: string | undefined
        email?: string | undefined
        name?: string | undefined
      }
    | undefined
  message: string
  parents?: string[] | undefined
  signature?: string | undefined
  tree: string
}

export type t_GitCreateRefParamSchema = {
  owner: string
  repo: string
}

export type t_GitCreateRefRequestBodySchema = {
  ref: string
  sha: string
}

export type t_GitCreateTagParamSchema = {
  owner: string
  repo: string
}

export type t_GitCreateTagRequestBodySchema = {
  message: string
  object: string
  tag: string
  tagger?:
    | {
        date?: string | undefined
        email: string
        name: string
      }
    | undefined
  type: "commit" | "tree" | "blob"
}

export type t_GitCreateTreeParamSchema = {
  owner: string
  repo: string
}

export type t_GitCreateTreeRequestBodySchema = {
  base_tree?: string | undefined
  tree: {
    content?: string | undefined
    mode?: ("100644" | "100755" | "040000" | "160000" | "120000") | undefined
    path?: string | undefined
    sha?: (string | null) | undefined
    type?: ("blob" | "tree" | "commit") | undefined
  }[]
}

export type t_GitDeleteRefParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_GitGetBlobParamSchema = {
  file_sha: string
  owner: string
  repo: string
}

export type t_GitGetCommitParamSchema = {
  commit_sha: string
  owner: string
  repo: string
}

export type t_GitGetRefParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_GitGetTagParamSchema = {
  owner: string
  repo: string
  tag_sha: string
}

export type t_GitGetTreeParamSchema = {
  owner: string
  repo: string
  tree_sha: string
}

export type t_GitGetTreeQuerySchema = {
  recursive?: string | undefined
}

export type t_GitListMatchingRefsParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_GitUpdateRefParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_GitUpdateRefRequestBodySchema = {
  force?: boolean | undefined
  sha: string
}

export type t_GitignoreGetTemplateParamSchema = {
  name: string
}

export type t_HostedComputeCreateNetworkConfigurationForOrgParamSchema = {
  org: string
}

export type t_HostedComputeCreateNetworkConfigurationForOrgRequestBodySchema = {
  compute_service?: ("none" | "actions") | undefined
  name: string
  network_settings_ids: string[]
}

export type t_HostedComputeDeleteNetworkConfigurationFromOrgParamSchema = {
  network_configuration_id: string
  org: string
}

export type t_HostedComputeGetNetworkConfigurationForOrgParamSchema = {
  network_configuration_id: string
  org: string
}

export type t_HostedComputeGetNetworkSettingsForOrgParamSchema = {
  network_settings_id: string
  org: string
}

export type t_HostedComputeListNetworkConfigurationsForOrgParamSchema = {
  org: string
}

export type t_HostedComputeListNetworkConfigurationsForOrgQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_HostedComputeUpdateNetworkConfigurationForOrgParamSchema = {
  network_configuration_id: string
  org: string
}

export type t_HostedComputeUpdateNetworkConfigurationForOrgRequestBodySchema = {
  compute_service?: ("none" | "actions") | undefined
  name?: string | undefined
  network_settings_ids?: string[] | undefined
}

export type t_InteractionsGetRestrictionsForOrgParamSchema = {
  org: string
}

export type t_InteractionsGetRestrictionsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_InteractionsRemoveRestrictionsForOrgParamSchema = {
  org: string
}

export type t_InteractionsRemoveRestrictionsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_InteractionsSetRestrictionsForAuthenticatedUserRequestBodySchema =
  {
    expiry?: t_interaction_expiry | undefined
    limit: t_interaction_group
  }

export type t_InteractionsSetRestrictionsForOrgParamSchema = {
  org: string
}

export type t_InteractionsSetRestrictionsForOrgRequestBodySchema = {
  expiry?: t_interaction_expiry | undefined
  limit: t_interaction_group
}

export type t_InteractionsSetRestrictionsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_InteractionsSetRestrictionsForRepoRequestBodySchema = {
  expiry?: t_interaction_expiry | undefined
  limit: t_interaction_group
}

export type t_IssuesAddAssigneesParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesAddAssigneesRequestBodySchema = {
  assignees?: string[] | undefined
}

export type t_IssuesAddLabelsParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesAddLabelsRequestBodySchema =
  | {
      labels?: string[] | undefined
    }
  | string[]
  | {
      labels?:
        | {
            name: string
          }[]
        | undefined
    }
  | {
      name: string
    }[]
  | string

export type t_IssuesAddSubIssueParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesAddSubIssueRequestBodySchema = {
  replace_parent?: boolean | undefined
  sub_issue_id: number
}

export type t_IssuesCheckUserCanBeAssignedParamSchema = {
  assignee: string
  owner: string
  repo: string
}

export type t_IssuesCheckUserCanBeAssignedToIssueParamSchema = {
  assignee: string
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesCreateParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesCreateRequestBodySchema = {
  assignee?: (string | null) | undefined
  assignees?: string[] | undefined
  body?: string | undefined
  labels?:
    | (
        | string
        | {
            color?: (string | null) | undefined
            description?: (string | null) | undefined
            id?: number | undefined
            name?: string | undefined
          }
      )[]
    | undefined
  milestone?: (string | number | null) | undefined
  title: string | number
  type?: (string | null) | undefined
}

export type t_IssuesCreateCommentParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesCreateCommentRequestBodySchema = {
  body: string
}

export type t_IssuesCreateLabelParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesCreateLabelRequestBodySchema = {
  color?: string | undefined
  description?: string | undefined
  name: string
}

export type t_IssuesCreateMilestoneParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesCreateMilestoneRequestBodySchema = {
  description?: string | undefined
  due_on?: string | undefined
  state?: ("open" | "closed") | undefined
  title: string
}

export type t_IssuesDeleteCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_IssuesDeleteLabelParamSchema = {
  name: string
  owner: string
  repo: string
}

export type t_IssuesDeleteMilestoneParamSchema = {
  milestone_number: number
  owner: string
  repo: string
}

export type t_IssuesGetParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesGetCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_IssuesGetEventParamSchema = {
  event_id: number
  owner: string
  repo: string
}

export type t_IssuesGetLabelParamSchema = {
  name: string
  owner: string
  repo: string
}

export type t_IssuesGetMilestoneParamSchema = {
  milestone_number: number
  owner: string
  repo: string
}

export type t_IssuesListQuerySchema = {
  collab?: boolean | undefined
  direction?: ("asc" | "desc") | undefined
  filter?:
    | ("assigned" | "created" | "mentioned" | "subscribed" | "repos" | "all")
    | undefined
  labels?: string | undefined
  orgs?: boolean | undefined
  owned?: boolean | undefined
  page?: number | undefined
  per_page?: number | undefined
  pulls?: boolean | undefined
  since?: string | undefined
  sort?: ("created" | "updated" | "comments") | undefined
  state?: ("open" | "closed" | "all") | undefined
}

export type t_IssuesListAssigneesParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesListAssigneesQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_IssuesListCommentsParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesListCommentsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  since?: string | undefined
}

export type t_IssuesListCommentsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesListCommentsForRepoQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  since?: string | undefined
  sort?: ("created" | "updated") | undefined
}

export type t_IssuesListEventsParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesListEventsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_IssuesListEventsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesListEventsForRepoQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_IssuesListEventsForTimelineParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesListEventsForTimelineQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_IssuesListForAuthenticatedUserQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  filter?:
    | ("assigned" | "created" | "mentioned" | "subscribed" | "repos" | "all")
    | undefined
  labels?: string | undefined
  page?: number | undefined
  per_page?: number | undefined
  since?: string | undefined
  sort?: ("created" | "updated" | "comments") | undefined
  state?: ("open" | "closed" | "all") | undefined
}

export type t_IssuesListForOrgParamSchema = {
  org: string
}

export type t_IssuesListForOrgQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  filter?:
    | ("assigned" | "created" | "mentioned" | "subscribed" | "repos" | "all")
    | undefined
  labels?: string | undefined
  page?: number | undefined
  per_page?: number | undefined
  since?: string | undefined
  sort?: ("created" | "updated" | "comments") | undefined
  state?: ("open" | "closed" | "all") | undefined
  type?: string | undefined
}

export type t_IssuesListForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesListForRepoQuerySchema = {
  assignee?: string | undefined
  creator?: string | undefined
  direction?: ("asc" | "desc") | undefined
  labels?: string | undefined
  mentioned?: string | undefined
  milestone?: string | undefined
  page?: number | undefined
  per_page?: number | undefined
  since?: string | undefined
  sort?: ("created" | "updated" | "comments") | undefined
  state?: ("open" | "closed" | "all") | undefined
  type?: string | undefined
}

export type t_IssuesListLabelsForMilestoneParamSchema = {
  milestone_number: number
  owner: string
  repo: string
}

export type t_IssuesListLabelsForMilestoneQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_IssuesListLabelsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesListLabelsForRepoQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_IssuesListLabelsOnIssueParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesListLabelsOnIssueQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_IssuesListMilestonesParamSchema = {
  owner: string
  repo: string
}

export type t_IssuesListMilestonesQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  sort?: ("due_on" | "completeness") | undefined
  state?: ("open" | "closed" | "all") | undefined
}

export type t_IssuesListSubIssuesParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesListSubIssuesQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_IssuesLockParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesLockRequestBodySchema = {
  lock_reason?: ("off-topic" | "too heated" | "resolved" | "spam") | undefined
} | null

export type t_IssuesRemoveAllLabelsParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesRemoveAssigneesParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesRemoveAssigneesRequestBodySchema = {
  assignees?: string[] | undefined
}

export type t_IssuesRemoveLabelParamSchema = {
  issue_number: number
  name: string
  owner: string
  repo: string
}

export type t_IssuesRemoveSubIssueParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesRemoveSubIssueRequestBodySchema = {
  sub_issue_id: number
}

export type t_IssuesReprioritizeSubIssueParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesReprioritizeSubIssueRequestBodySchema = {
  after_id?: number | undefined
  before_id?: number | undefined
  sub_issue_id: number
}

export type t_IssuesSetLabelsParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesSetLabelsRequestBodySchema =
  | {
      labels?: string[] | undefined
    }
  | string[]
  | {
      labels?:
        | {
            name: string
          }[]
        | undefined
    }
  | {
      name: string
    }[]
  | string

export type t_IssuesUnlockParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesUpdateParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_IssuesUpdateRequestBodySchema = {
  assignee?: (string | null) | undefined
  assignees?: string[] | undefined
  body?: (string | null) | undefined
  labels?:
    | (
        | string
        | {
            color?: (string | null) | undefined
            description?: (string | null) | undefined
            id?: number | undefined
            name?: string | undefined
          }
      )[]
    | undefined
  milestone?: (string | number | null) | undefined
  state?: ("open" | "closed") | undefined
  state_reason?: ("completed" | "not_planned" | "reopened" | null) | undefined
  title?: (string | number | null) | undefined
  type?: (string | null) | undefined
}

export type t_IssuesUpdateCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_IssuesUpdateCommentRequestBodySchema = {
  body: string
}

export type t_IssuesUpdateLabelParamSchema = {
  name: string
  owner: string
  repo: string
}

export type t_IssuesUpdateLabelRequestBodySchema = {
  color?: string | undefined
  description?: string | undefined
  new_name?: string | undefined
}

export type t_IssuesUpdateMilestoneParamSchema = {
  milestone_number: number
  owner: string
  repo: string
}

export type t_IssuesUpdateMilestoneRequestBodySchema = {
  description?: string | undefined
  due_on?: string | undefined
  state?: ("open" | "closed") | undefined
  title?: string | undefined
}

export type t_LicensesGetParamSchema = {
  license: string
}

export type t_LicensesGetAllCommonlyUsedQuerySchema = {
  featured?: boolean | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_LicensesGetForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_LicensesGetForRepoQuerySchema = {
  ref?: t_code_scanning_ref | undefined
}

export type t_MarkdownRenderRequestBodySchema = {
  context?: string | undefined
  mode?: ("markdown" | "gfm") | undefined
  text: string
}

export type t_MarkdownRenderRawRequestBodySchema = string

export type t_MetaGetOctocatQuerySchema = {
  s?: string | undefined
}

export type t_MigrationsCancelImportParamSchema = {
  owner: string
  repo: string
}

export type t_MigrationsDeleteArchiveForAuthenticatedUserParamSchema = {
  migration_id: number
}

export type t_MigrationsDeleteArchiveForOrgParamSchema = {
  migration_id: number
  org: string
}

export type t_MigrationsDownloadArchiveForOrgParamSchema = {
  migration_id: number
  org: string
}

export type t_MigrationsGetArchiveForAuthenticatedUserParamSchema = {
  migration_id: number
}

export type t_MigrationsGetCommitAuthorsParamSchema = {
  owner: string
  repo: string
}

export type t_MigrationsGetCommitAuthorsQuerySchema = {
  since?: number | undefined
}

export type t_MigrationsGetImportStatusParamSchema = {
  owner: string
  repo: string
}

export type t_MigrationsGetLargeFilesParamSchema = {
  owner: string
  repo: string
}

export type t_MigrationsGetStatusForAuthenticatedUserParamSchema = {
  migration_id: number
}

export type t_MigrationsGetStatusForAuthenticatedUserQuerySchema = {
  exclude?: string[] | undefined
}

export type t_MigrationsGetStatusForOrgParamSchema = {
  migration_id: number
  org: string
}

export type t_MigrationsGetStatusForOrgQuerySchema = {
  exclude?: "repositories"[] | undefined
}

export type t_MigrationsListForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_MigrationsListForOrgParamSchema = {
  org: string
}

export type t_MigrationsListForOrgQuerySchema = {
  exclude?: "repositories"[] | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_MigrationsListReposForAuthenticatedUserParamSchema = {
  migration_id: number
}

export type t_MigrationsListReposForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_MigrationsListReposForOrgParamSchema = {
  migration_id: number
  org: string
}

export type t_MigrationsListReposForOrgQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_MigrationsMapCommitAuthorParamSchema = {
  author_id: number
  owner: string
  repo: string
}

export type t_MigrationsMapCommitAuthorRequestBodySchema = {
  email?: string | undefined
  name?: string | undefined
}

export type t_MigrationsSetLfsPreferenceParamSchema = {
  owner: string
  repo: string
}

export type t_MigrationsSetLfsPreferenceRequestBodySchema = {
  use_lfs: "opt_in" | "opt_out"
}

export type t_MigrationsStartForAuthenticatedUserRequestBodySchema = {
  exclude?: "repositories"[] | undefined
  exclude_attachments?: boolean | undefined
  exclude_git_data?: boolean | undefined
  exclude_metadata?: boolean | undefined
  exclude_owner_projects?: boolean | undefined
  exclude_releases?: boolean | undefined
  lock_repositories?: boolean | undefined
  org_metadata_only?: boolean | undefined
  repositories: string[]
}

export type t_MigrationsStartForOrgParamSchema = {
  org: string
}

export type t_MigrationsStartForOrgRequestBodySchema = {
  exclude?: "repositories"[] | undefined
  exclude_attachments?: boolean | undefined
  exclude_git_data?: boolean | undefined
  exclude_metadata?: boolean | undefined
  exclude_owner_projects?: boolean | undefined
  exclude_releases?: boolean | undefined
  lock_repositories?: boolean | undefined
  org_metadata_only?: boolean | undefined
  repositories: string[]
}

export type t_MigrationsStartImportParamSchema = {
  owner: string
  repo: string
}

export type t_MigrationsStartImportRequestBodySchema = {
  tfvc_project?: string | undefined
  vcs?: ("subversion" | "git" | "mercurial" | "tfvc") | undefined
  vcs_password?: string | undefined
  vcs_url: string
  vcs_username?: string | undefined
}

export type t_MigrationsUnlockRepoForAuthenticatedUserParamSchema = {
  migration_id: number
  repo_name: string
}

export type t_MigrationsUnlockRepoForOrgParamSchema = {
  migration_id: number
  org: string
  repo_name: string
}

export type t_MigrationsUpdateImportParamSchema = {
  owner: string
  repo: string
}

export type t_MigrationsUpdateImportRequestBodySchema = {
  tfvc_project?: string | undefined
  vcs?: ("subversion" | "tfvc" | "git" | "mercurial") | undefined
  vcs_password?: string | undefined
  vcs_username?: string | undefined
} | null

export type t_OidcGetOidcCustomSubTemplateForOrgParamSchema = {
  org: string
}

export type t_OidcUpdateOidcCustomSubTemplateForOrgParamSchema = {
  org: string
}

export type t_OidcUpdateOidcCustomSubTemplateForOrgRequestBodySchema = {
  include_claim_keys: string[]
}

export type t_OrgsAddSecurityManagerTeamParamSchema = {
  org: string
  team_slug: string
}

export type t_OrgsAssignTeamToOrgRoleParamSchema = {
  org: string
  role_id: number
  team_slug: string
}

export type t_OrgsAssignUserToOrgRoleParamSchema = {
  org: string
  role_id: number
  username: string
}

export type t_OrgsBlockUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsCancelInvitationParamSchema = {
  invitation_id: number
  org: string
}

export type t_OrgsCheckBlockedUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsCheckMembershipForUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsCheckPublicMembershipForUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsConvertMemberToOutsideCollaboratorParamSchema = {
  org: string
  username: string
}

export type t_OrgsConvertMemberToOutsideCollaboratorRequestBodySchema = {
  async?: boolean | undefined
}

export type t_OrgsCreateInvitationParamSchema = {
  org: string
}

export type t_OrgsCreateInvitationRequestBodySchema = {
  email?: string | undefined
  invitee_id?: number | undefined
  role?:
    | ("admin" | "direct_member" | "billing_manager" | "reinstate")
    | undefined
  team_ids?: number[] | undefined
}

export type t_OrgsCreateIssueTypeParamSchema = {
  org: string
}

export type t_OrgsCreateIssueTypeRequestBodySchema = {
  color?:
    | (
        | "gray"
        | "blue"
        | "green"
        | "yellow"
        | "orange"
        | "red"
        | "pink"
        | "purple"
        | null
      )
    | undefined
  description?: (string | null) | undefined
  is_enabled: boolean
  name: string
}

export type t_OrgsCreateOrUpdateCustomPropertiesParamSchema = {
  org: string
}

export type t_OrgsCreateOrUpdateCustomPropertiesRequestBodySchema = {
  properties: t_custom_property[]
}

export type t_OrgsCreateOrUpdateCustomPropertiesValuesForReposParamSchema = {
  org: string
}

export type t_OrgsCreateOrUpdateCustomPropertiesValuesForReposRequestBodySchema =
  {
    properties: t_custom_property_value[]
    repository_names: string[]
  }

export type t_OrgsCreateOrUpdateCustomPropertyParamSchema = {
  custom_property_name: string
  org: string
}

export type t_OrgsCreateOrUpdateCustomPropertyRequestBodySchema = {
  allowed_values?: (string[] | null) | undefined
  default_value?: (string | string[] | null) | undefined
  description?: (string | null) | undefined
  required?: boolean | undefined
  value_type: "string" | "single_select" | "multi_select" | "true_false"
  values_editable_by?: ("org_actors" | "org_and_repo_actors" | null) | undefined
}

export type t_OrgsCreateWebhookParamSchema = {
  org: string
}

export type t_OrgsCreateWebhookRequestBodySchema = {
  active?: boolean | undefined
  config: {
    content_type?: t_webhook_config_content_type | undefined
    insecure_ssl?: t_webhook_config_insecure_ssl | undefined
    password?: string | undefined
    secret?: t_webhook_config_secret | undefined
    url: t_webhook_config_url
    username?: string | undefined
  }
  events?: string[] | undefined
  name: string
}

export type t_OrgsDeleteParamSchema = {
  org: string
}

export type t_OrgsDeleteAttestationsBulkParamSchema = {
  org: string
}

export type t_OrgsDeleteAttestationsBulkRequestBodySchema =
  | {
      subject_digests: string[]
    }
  | {
      attestation_ids: number[]
    }

export type t_OrgsDeleteAttestationsByIdParamSchema = {
  attestation_id: number
  org: string
}

export type t_OrgsDeleteAttestationsBySubjectDigestParamSchema = {
  org: string
  subject_digest: string
}

export type t_OrgsDeleteIssueTypeParamSchema = {
  issue_type_id: number
  org: string
}

export type t_OrgsDeleteWebhookParamSchema = {
  hook_id: number
  org: string
}

export type t_OrgsEnableOrDisableSecurityProductOnAllOrgReposParamSchema = {
  enablement: "enable_all" | "disable_all"
  org: string
  security_product:
    | "dependency_graph"
    | "dependabot_alerts"
    | "dependabot_security_updates"
    | "advanced_security"
    | "code_scanning_default_setup"
    | "secret_scanning"
    | "secret_scanning_push_protection"
}

export type t_OrgsEnableOrDisableSecurityProductOnAllOrgReposRequestBodySchema =
  {
    query_suite?: ("default" | "extended") | undefined
  }

export type t_OrgsGetParamSchema = {
  org: string
}

export type t_OrgsGetAllCustomPropertiesParamSchema = {
  org: string
}

export type t_OrgsGetCustomPropertyParamSchema = {
  custom_property_name: string
  org: string
}

export type t_OrgsGetMembershipForAuthenticatedUserParamSchema = {
  org: string
}

export type t_OrgsGetMembershipForUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsGetOrgRoleParamSchema = {
  org: string
  role_id: number
}

export type t_OrgsGetOrgRulesetHistoryParamSchema = {
  org: string
  ruleset_id: number
}

export type t_OrgsGetOrgRulesetHistoryQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_OrgsGetOrgRulesetVersionParamSchema = {
  org: string
  ruleset_id: number
  version_id: number
}

export type t_OrgsGetWebhookParamSchema = {
  hook_id: number
  org: string
}

export type t_OrgsGetWebhookConfigForOrgParamSchema = {
  hook_id: number
  org: string
}

export type t_OrgsGetWebhookDeliveryParamSchema = {
  delivery_id: number
  hook_id: number
  org: string
}

export type t_OrgsListQuerySchema = {
  per_page?: number | undefined
  since?: number | undefined
}

export type t_OrgsListAppInstallationsParamSchema = {
  org: string
}

export type t_OrgsListAppInstallationsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_OrgsListAttestationsParamSchema = {
  org: string
  subject_digest: string
}

export type t_OrgsListAttestationsQuerySchema = {
  after?: string | undefined
  before?: string | undefined
  per_page?: number | undefined
  predicate_type?: string | undefined
}

export type t_OrgsListAttestationsBulkParamSchema = {
  org: string
}

export type t_OrgsListAttestationsBulkQuerySchema = {
  after?: string | undefined
  before?: string | undefined
  per_page?: number | undefined
}

export type t_OrgsListAttestationsBulkRequestBodySchema = {
  predicate_type?: string | undefined
  subject_digests: string[]
}

export type t_OrgsListBlockedUsersParamSchema = {
  org: string
}

export type t_OrgsListBlockedUsersQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_OrgsListCustomPropertiesValuesForReposParamSchema = {
  org: string
}

export type t_OrgsListCustomPropertiesValuesForReposQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  repository_query?: string | undefined
}

export type t_OrgsListFailedInvitationsParamSchema = {
  org: string
}

export type t_OrgsListFailedInvitationsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_OrgsListForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_OrgsListForUserParamSchema = {
  username: string
}

export type t_OrgsListForUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_OrgsListInvitationTeamsParamSchema = {
  invitation_id: number
  org: string
}

export type t_OrgsListInvitationTeamsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_OrgsListIssueTypesParamSchema = {
  org: string
}

export type t_OrgsListMembersParamSchema = {
  org: string
}

export type t_OrgsListMembersQuerySchema = {
  filter?: ("2fa_disabled" | "2fa_insecure" | "all") | undefined
  page?: number | undefined
  per_page?: number | undefined
  role?: ("all" | "admin" | "member") | undefined
}

export type t_OrgsListMembershipsForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  state?: ("active" | "pending") | undefined
}

export type t_OrgsListOrgRoleTeamsParamSchema = {
  org: string
  role_id: number
}

export type t_OrgsListOrgRoleTeamsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_OrgsListOrgRoleUsersParamSchema = {
  org: string
  role_id: number
}

export type t_OrgsListOrgRoleUsersQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_OrgsListOrgRolesParamSchema = {
  org: string
}

export type t_OrgsListOutsideCollaboratorsParamSchema = {
  org: string
}

export type t_OrgsListOutsideCollaboratorsQuerySchema = {
  filter?: ("2fa_disabled" | "2fa_insecure" | "all") | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_OrgsListPatGrantRepositoriesParamSchema = {
  org: string
  pat_id: number
}

export type t_OrgsListPatGrantRepositoriesQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_OrgsListPatGrantRequestRepositoriesParamSchema = {
  org: string
  pat_request_id: number
}

export type t_OrgsListPatGrantRequestRepositoriesQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_OrgsListPatGrantRequestsParamSchema = {
  org: string
}

export type t_OrgsListPatGrantRequestsQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  last_used_after?: string | undefined
  last_used_before?: string | undefined
  owner?: string[] | undefined
  page?: number | undefined
  per_page?: number | undefined
  permission?: string | undefined
  repository?: string | undefined
  sort?: "created_at" | undefined
  token_id?: string[] | undefined
}

export type t_OrgsListPatGrantsParamSchema = {
  org: string
}

export type t_OrgsListPatGrantsQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  last_used_after?: string | undefined
  last_used_before?: string | undefined
  owner?: string[] | undefined
  page?: number | undefined
  per_page?: number | undefined
  permission?: string | undefined
  repository?: string | undefined
  sort?: "created_at" | undefined
  token_id?: string[] | undefined
}

export type t_OrgsListPendingInvitationsParamSchema = {
  org: string
}

export type t_OrgsListPendingInvitationsQuerySchema = {
  invitation_source?: ("all" | "member" | "scim") | undefined
  page?: number | undefined
  per_page?: number | undefined
  role?:
    | ("all" | "admin" | "direct_member" | "billing_manager" | "hiring_manager")
    | undefined
}

export type t_OrgsListPublicMembersParamSchema = {
  org: string
}

export type t_OrgsListPublicMembersQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_OrgsListSecurityManagerTeamsParamSchema = {
  org: string
}

export type t_OrgsListWebhookDeliveriesParamSchema = {
  hook_id: number
  org: string
}

export type t_OrgsListWebhookDeliveriesQuerySchema = {
  cursor?: string | undefined
  per_page?: number | undefined
}

export type t_OrgsListWebhooksParamSchema = {
  org: string
}

export type t_OrgsListWebhooksQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_OrgsPingWebhookParamSchema = {
  hook_id: number
  org: string
}

export type t_OrgsRedeliverWebhookDeliveryParamSchema = {
  delivery_id: number
  hook_id: number
  org: string
}

export type t_OrgsRemoveCustomPropertyParamSchema = {
  custom_property_name: string
  org: string
}

export type t_OrgsRemoveMemberParamSchema = {
  org: string
  username: string
}

export type t_OrgsRemoveMembershipForUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsRemoveOutsideCollaboratorParamSchema = {
  org: string
  username: string
}

export type t_OrgsRemovePublicMembershipForAuthenticatedUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsRemoveSecurityManagerTeamParamSchema = {
  org: string
  team_slug: string
}

export type t_OrgsReviewPatGrantRequestParamSchema = {
  org: string
  pat_request_id: number
}

export type t_OrgsReviewPatGrantRequestRequestBodySchema = {
  action: "approve" | "deny"
  reason?: (string | null) | undefined
}

export type t_OrgsReviewPatGrantRequestsInBulkParamSchema = {
  org: string
}

export type t_OrgsReviewPatGrantRequestsInBulkRequestBodySchema = {
  action: "approve" | "deny"
  pat_request_ids?: number[] | undefined
  reason?: (string | null) | undefined
}

export type t_OrgsRevokeAllOrgRolesTeamParamSchema = {
  org: string
  team_slug: string
}

export type t_OrgsRevokeAllOrgRolesUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsRevokeOrgRoleTeamParamSchema = {
  org: string
  role_id: number
  team_slug: string
}

export type t_OrgsRevokeOrgRoleUserParamSchema = {
  org: string
  role_id: number
  username: string
}

export type t_OrgsSetMembershipForUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsSetMembershipForUserRequestBodySchema = {
  role?: ("admin" | "member") | undefined
}

export type t_OrgsSetPublicMembershipForAuthenticatedUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsUnblockUserParamSchema = {
  org: string
  username: string
}

export type t_OrgsUpdateParamSchema = {
  org: string
}

export type t_OrgsUpdateRequestBodySchema = {
  advanced_security_enabled_for_new_repositories?: boolean | undefined
  billing_email?: string | undefined
  blog?: string | undefined
  company?: string | undefined
  default_repository_permission?:
    | ("read" | "write" | "admin" | "none")
    | undefined
  dependabot_alerts_enabled_for_new_repositories?: boolean | undefined
  dependabot_security_updates_enabled_for_new_repositories?: boolean | undefined
  dependency_graph_enabled_for_new_repositories?: boolean | undefined
  deploy_keys_enabled_for_repositories?: boolean | undefined
  description?: string | undefined
  email?: string | undefined
  has_organization_projects?: boolean | undefined
  has_repository_projects?: boolean | undefined
  location?: string | undefined
  members_allowed_repository_creation_type?:
    | ("all" | "private" | "none")
    | undefined
  members_can_create_internal_repositories?: boolean | undefined
  members_can_create_pages?: boolean | undefined
  members_can_create_private_pages?: boolean | undefined
  members_can_create_private_repositories?: boolean | undefined
  members_can_create_public_pages?: boolean | undefined
  members_can_create_public_repositories?: boolean | undefined
  members_can_create_repositories?: boolean | undefined
  members_can_fork_private_repositories?: boolean | undefined
  name?: string | undefined
  secret_scanning_enabled_for_new_repositories?: boolean | undefined
  secret_scanning_push_protection_custom_link?: string | undefined
  secret_scanning_push_protection_custom_link_enabled?: boolean | undefined
  secret_scanning_push_protection_enabled_for_new_repositories?:
    | boolean
    | undefined
  twitter_username?: string | undefined
  web_commit_signoff_required?: boolean | undefined
}

export type t_OrgsUpdateIssueTypeParamSchema = {
  issue_type_id: number
  org: string
}

export type t_OrgsUpdateIssueTypeRequestBodySchema = {
  color?:
    | (
        | "gray"
        | "blue"
        | "green"
        | "yellow"
        | "orange"
        | "red"
        | "pink"
        | "purple"
        | null
      )
    | undefined
  description?: (string | null) | undefined
  is_enabled: boolean
  name: string
}

export type t_OrgsUpdateMembershipForAuthenticatedUserParamSchema = {
  org: string
}

export type t_OrgsUpdateMembershipForAuthenticatedUserRequestBodySchema = {
  state: "active"
}

export type t_OrgsUpdatePatAccessParamSchema = {
  org: string
  pat_id: number
}

export type t_OrgsUpdatePatAccessRequestBodySchema = {
  action: "revoke"
}

export type t_OrgsUpdatePatAccessesParamSchema = {
  org: string
}

export type t_OrgsUpdatePatAccessesRequestBodySchema = {
  action: "revoke"
  pat_ids: number[]
}

export type t_OrgsUpdateWebhookParamSchema = {
  hook_id: number
  org: string
}

export type t_OrgsUpdateWebhookRequestBodySchema = {
  active?: boolean | undefined
  config?:
    | {
        content_type?: t_webhook_config_content_type | undefined
        insecure_ssl?: t_webhook_config_insecure_ssl | undefined
        secret?: t_webhook_config_secret | undefined
        url: t_webhook_config_url
      }
    | undefined
  events?: string[] | undefined
  name?: string | undefined
}

export type t_OrgsUpdateWebhookConfigForOrgParamSchema = {
  hook_id: number
  org: string
}

export type t_OrgsUpdateWebhookConfigForOrgRequestBodySchema = {
  content_type?: t_webhook_config_content_type | undefined
  insecure_ssl?: t_webhook_config_insecure_ssl | undefined
  secret?: t_webhook_config_secret | undefined
  url?: t_webhook_config_url | undefined
}

export type t_PackagesDeletePackageForAuthenticatedUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
}

export type t_PackagesDeletePackageForOrgParamSchema = {
  org: string
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
}

export type t_PackagesDeletePackageForUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  username: string
}

export type t_PackagesDeletePackageVersionForAuthenticatedUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  package_version_id: number
}

export type t_PackagesDeletePackageVersionForOrgParamSchema = {
  org: string
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  package_version_id: number
}

export type t_PackagesDeletePackageVersionForUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  package_version_id: number
  username: string
}

export type t_PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserParamSchema =
  {
    package_name: string
    package_type:
      | "npm"
      | "maven"
      | "rubygems"
      | "docker"
      | "nuget"
      | "container"
  }

export type t_PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserQuerySchema =
  {
    page?: number | undefined
    per_page?: number | undefined
    state?: ("active" | "deleted") | undefined
  }

export type t_PackagesGetAllPackageVersionsForPackageOwnedByOrgParamSchema = {
  org: string
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
}

export type t_PackagesGetAllPackageVersionsForPackageOwnedByOrgQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  state?: ("active" | "deleted") | undefined
}

export type t_PackagesGetAllPackageVersionsForPackageOwnedByUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  username: string
}

export type t_PackagesGetPackageForAuthenticatedUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
}

export type t_PackagesGetPackageForOrganizationParamSchema = {
  org: string
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
}

export type t_PackagesGetPackageForUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  username: string
}

export type t_PackagesGetPackageVersionForAuthenticatedUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  package_version_id: number
}

export type t_PackagesGetPackageVersionForOrganizationParamSchema = {
  org: string
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  package_version_id: number
}

export type t_PackagesGetPackageVersionForUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  package_version_id: number
  username: string
}

export type t_PackagesListDockerMigrationConflictingPackagesForOrganizationParamSchema =
  {
    org: string
  }

export type t_PackagesListDockerMigrationConflictingPackagesForUserParamSchema =
  {
    username: string
  }

export type t_PackagesListPackagesForAuthenticatedUserQuerySchema = {
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  page?: number | undefined
  per_page?: number | undefined
  visibility?: ("public" | "private" | "internal") | undefined
}

export type t_PackagesListPackagesForOrganizationParamSchema = {
  org: string
}

export type t_PackagesListPackagesForOrganizationQuerySchema = {
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  page?: number | undefined
  per_page?: number | undefined
  visibility?: ("public" | "private" | "internal") | undefined
}

export type t_PackagesListPackagesForUserParamSchema = {
  username: string
}

export type t_PackagesListPackagesForUserQuerySchema = {
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  page?: number | undefined
  per_page?: number | undefined
  visibility?: ("public" | "private" | "internal") | undefined
}

export type t_PackagesRestorePackageForAuthenticatedUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
}

export type t_PackagesRestorePackageForAuthenticatedUserQuerySchema = {
  token?: string | undefined
}

export type t_PackagesRestorePackageForOrgParamSchema = {
  org: string
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
}

export type t_PackagesRestorePackageForOrgQuerySchema = {
  token?: string | undefined
}

export type t_PackagesRestorePackageForUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  username: string
}

export type t_PackagesRestorePackageForUserQuerySchema = {
  token?: string | undefined
}

export type t_PackagesRestorePackageVersionForAuthenticatedUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  package_version_id: number
}

export type t_PackagesRestorePackageVersionForOrgParamSchema = {
  org: string
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  package_version_id: number
}

export type t_PackagesRestorePackageVersionForUserParamSchema = {
  package_name: string
  package_type: "npm" | "maven" | "rubygems" | "docker" | "nuget" | "container"
  package_version_id: number
  username: string
}

export type t_PrivateRegistriesCreateOrgPrivateRegistryParamSchema = {
  org: string
}

export type t_PrivateRegistriesCreateOrgPrivateRegistryRequestBodySchema = {
  encrypted_value: string
  key_id: string
  registry_type: "maven_repository" | "nuget_feed" | "goproxy_server"
  selected_repository_ids?: number[] | undefined
  url: string
  username?: (string | null) | undefined
  visibility: "all" | "private" | "selected"
}

export type t_PrivateRegistriesDeleteOrgPrivateRegistryParamSchema = {
  org: string
  secret_name: string
}

export type t_PrivateRegistriesGetOrgPrivateRegistryParamSchema = {
  org: string
  secret_name: string
}

export type t_PrivateRegistriesGetOrgPublicKeyParamSchema = {
  org: string
}

export type t_PrivateRegistriesListOrgPrivateRegistriesParamSchema = {
  org: string
}

export type t_PrivateRegistriesListOrgPrivateRegistriesQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_PrivateRegistriesUpdateOrgPrivateRegistryParamSchema = {
  org: string
  secret_name: string
}

export type t_PrivateRegistriesUpdateOrgPrivateRegistryRequestBodySchema = {
  encrypted_value?: string | undefined
  key_id?: string | undefined
  registry_type?:
    | ("maven_repository" | "nuget_feed" | "goproxy_server")
    | undefined
  selected_repository_ids?: number[] | undefined
  url?: string | undefined
  username?: (string | null) | undefined
  visibility?: ("all" | "private" | "selected") | undefined
}

export type t_ProjectsAddCollaboratorParamSchema = {
  project_id: number
  username: string
}

export type t_ProjectsAddCollaboratorRequestBodySchema = {
  permission?: ("read" | "write" | "admin") | undefined
} | null

export type t_ProjectsCreateCardParamSchema = {
  column_id: number
}

export type t_ProjectsCreateCardRequestBodySchema =
  | {
      note: string | null
    }
  | {
      content_id: number
      content_type: string
    }

export type t_ProjectsCreateColumnParamSchema = {
  project_id: number
}

export type t_ProjectsCreateColumnRequestBodySchema = {
  name: string
}

export type t_ProjectsCreateForAuthenticatedUserRequestBodySchema = {
  body?: (string | null) | undefined
  name: string
}

export type t_ProjectsCreateForOrgParamSchema = {
  org: string
}

export type t_ProjectsCreateForOrgRequestBodySchema = {
  body?: string | undefined
  name: string
}

export type t_ProjectsCreateForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ProjectsCreateForRepoRequestBodySchema = {
  body?: string | undefined
  name: string
}

export type t_ProjectsDeleteParamSchema = {
  project_id: number
}

export type t_ProjectsDeleteCardParamSchema = {
  card_id: number
}

export type t_ProjectsDeleteColumnParamSchema = {
  column_id: number
}

export type t_ProjectsGetParamSchema = {
  project_id: number
}

export type t_ProjectsGetCardParamSchema = {
  card_id: number
}

export type t_ProjectsGetColumnParamSchema = {
  column_id: number
}

export type t_ProjectsGetPermissionForUserParamSchema = {
  project_id: number
  username: string
}

export type t_ProjectsListCardsParamSchema = {
  column_id: number
}

export type t_ProjectsListCardsQuerySchema = {
  archived_state?: ("all" | "archived" | "not_archived") | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ProjectsListCollaboratorsParamSchema = {
  project_id: number
}

export type t_ProjectsListCollaboratorsQuerySchema = {
  affiliation?: ("outside" | "direct" | "all") | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ProjectsListColumnsParamSchema = {
  project_id: number
}

export type t_ProjectsListColumnsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ProjectsListForOrgParamSchema = {
  org: string
}

export type t_ProjectsListForOrgQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  state?: ("open" | "closed" | "all") | undefined
}

export type t_ProjectsListForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ProjectsListForRepoQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  state?: ("open" | "closed" | "all") | undefined
}

export type t_ProjectsListForUserParamSchema = {
  username: string
}

export type t_ProjectsListForUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  state?: ("open" | "closed" | "all") | undefined
}

export type t_ProjectsMoveCardParamSchema = {
  card_id: number
}

export type t_ProjectsMoveCardRequestBodySchema = {
  column_id?: number | undefined
  position: string
}

export type t_ProjectsMoveColumnParamSchema = {
  column_id: number
}

export type t_ProjectsMoveColumnRequestBodySchema = {
  position: string
}

export type t_ProjectsRemoveCollaboratorParamSchema = {
  project_id: number
  username: string
}

export type t_ProjectsUpdateParamSchema = {
  project_id: number
}

export type t_ProjectsUpdateRequestBodySchema = {
  body?: (string | null) | undefined
  name?: string | undefined
  organization_permission?: ("read" | "write" | "admin" | "none") | undefined
  private?: boolean | undefined
  state?: string | undefined
}

export type t_ProjectsUpdateCardParamSchema = {
  card_id: number
}

export type t_ProjectsUpdateCardRequestBodySchema = {
  archived?: boolean | undefined
  note?: (string | null) | undefined
}

export type t_ProjectsUpdateColumnParamSchema = {
  column_id: number
}

export type t_ProjectsUpdateColumnRequestBodySchema = {
  name: string
}

export type t_PullsCheckIfMergedParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsCreateParamSchema = {
  owner: string
  repo: string
}

export type t_PullsCreateRequestBodySchema = {
  base: string
  body?: string | undefined
  draft?: boolean | undefined
  head: string
  head_repo?: string | undefined
  issue?: number | undefined
  maintainer_can_modify?: boolean | undefined
  title?: string | undefined
}

export type t_PullsCreateReplyForReviewCommentParamSchema = {
  comment_id: number
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsCreateReplyForReviewCommentRequestBodySchema = {
  body: string
}

export type t_PullsCreateReviewParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsCreateReviewRequestBodySchema = {
  body?: string | undefined
  comments?:
    | {
        body: string
        line?: number | undefined
        path: string
        position?: number | undefined
        side?: string | undefined
        start_line?: number | undefined
        start_side?: string | undefined
      }[]
    | undefined
  commit_id?: string | undefined
  event?: ("APPROVE" | "REQUEST_CHANGES" | "COMMENT") | undefined
}

export type t_PullsCreateReviewCommentParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsCreateReviewCommentRequestBodySchema = {
  body: string
  commit_id: string
  in_reply_to?: number | undefined
  line?: number | undefined
  path: string
  position?: number | undefined
  side?: ("LEFT" | "RIGHT") | undefined
  start_line?: number | undefined
  start_side?: ("LEFT" | "RIGHT" | "side") | undefined
  subject_type?: ("line" | "file") | undefined
}

export type t_PullsDeletePendingReviewParamSchema = {
  owner: string
  pull_number: number
  repo: string
  review_id: number
}

export type t_PullsDeleteReviewCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_PullsDismissReviewParamSchema = {
  owner: string
  pull_number: number
  repo: string
  review_id: number
}

export type t_PullsDismissReviewRequestBodySchema = {
  event?: "DISMISS" | undefined
  message: string
}

export type t_PullsGetParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsGetReviewParamSchema = {
  owner: string
  pull_number: number
  repo: string
  review_id: number
}

export type t_PullsGetReviewCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_PullsListParamSchema = {
  owner: string
  repo: string
}

export type t_PullsListQuerySchema = {
  base?: string | undefined
  direction?: ("asc" | "desc") | undefined
  head?: string | undefined
  page?: number | undefined
  per_page?: number | undefined
  sort?: ("created" | "updated" | "popularity" | "long-running") | undefined
  state?: ("open" | "closed" | "all") | undefined
}

export type t_PullsListCommentsForReviewParamSchema = {
  owner: string
  pull_number: number
  repo: string
  review_id: number
}

export type t_PullsListCommentsForReviewQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_PullsListCommitsParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsListCommitsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_PullsListFilesParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsListFilesQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_PullsListRequestedReviewersParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsListReviewCommentsParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsListReviewCommentsQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  since?: string | undefined
  sort?: ("created" | "updated") | undefined
}

export type t_PullsListReviewCommentsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_PullsListReviewCommentsForRepoQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  since?: string | undefined
  sort?: ("created" | "updated" | "created_at") | undefined
}

export type t_PullsListReviewsParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsListReviewsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_PullsMergeParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsMergeRequestBodySchema = {
  commit_message?: string | undefined
  commit_title?: string | undefined
  merge_method?: ("merge" | "squash" | "rebase") | undefined
  sha?: string | undefined
} | null

export type t_PullsRemoveRequestedReviewersParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsRemoveRequestedReviewersRequestBodySchema = {
  reviewers: string[]
  team_reviewers?: string[] | undefined
}

export type t_PullsRequestReviewersParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsRequestReviewersRequestBodySchema = {
  reviewers?: string[] | undefined
  team_reviewers?: string[] | undefined
}

export type t_PullsSubmitReviewParamSchema = {
  owner: string
  pull_number: number
  repo: string
  review_id: number
}

export type t_PullsSubmitReviewRequestBodySchema = {
  body?: string | undefined
  event: "APPROVE" | "REQUEST_CHANGES" | "COMMENT"
}

export type t_PullsUpdateParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsUpdateRequestBodySchema = {
  base?: string | undefined
  body?: string | undefined
  maintainer_can_modify?: boolean | undefined
  state?: ("open" | "closed") | undefined
  title?: string | undefined
}

export type t_PullsUpdateBranchParamSchema = {
  owner: string
  pull_number: number
  repo: string
}

export type t_PullsUpdateBranchRequestBodySchema = {
  expected_head_sha?: string | undefined
} | null

export type t_PullsUpdateReviewParamSchema = {
  owner: string
  pull_number: number
  repo: string
  review_id: number
}

export type t_PullsUpdateReviewRequestBodySchema = {
  body: string
}

export type t_PullsUpdateReviewCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_PullsUpdateReviewCommentRequestBodySchema = {
  body: string
}

export type t_ReactionsCreateForCommitCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReactionsCreateForCommitCommentRequestBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type t_ReactionsCreateForIssueParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_ReactionsCreateForIssueRequestBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type t_ReactionsCreateForIssueCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReactionsCreateForIssueCommentRequestBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type t_ReactionsCreateForPullRequestReviewCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReactionsCreateForPullRequestReviewCommentRequestBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type t_ReactionsCreateForReleaseParamSchema = {
  owner: string
  release_id: number
  repo: string
}

export type t_ReactionsCreateForReleaseRequestBodySchema = {
  content: "+1" | "laugh" | "heart" | "hooray" | "rocket" | "eyes"
}

export type t_ReactionsCreateForTeamDiscussionCommentInOrgParamSchema = {
  comment_number: number
  discussion_number: number
  org: string
  team_slug: string
}

export type t_ReactionsCreateForTeamDiscussionCommentInOrgRequestBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type t_ReactionsCreateForTeamDiscussionCommentLegacyParamSchema = {
  comment_number: number
  discussion_number: number
  team_id: number
}

export type t_ReactionsCreateForTeamDiscussionCommentLegacyRequestBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type t_ReactionsCreateForTeamDiscussionInOrgParamSchema = {
  discussion_number: number
  org: string
  team_slug: string
}

export type t_ReactionsCreateForTeamDiscussionInOrgRequestBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type t_ReactionsCreateForTeamDiscussionLegacyParamSchema = {
  discussion_number: number
  team_id: number
}

export type t_ReactionsCreateForTeamDiscussionLegacyRequestBodySchema = {
  content:
    | "+1"
    | "-1"
    | "laugh"
    | "confused"
    | "heart"
    | "hooray"
    | "rocket"
    | "eyes"
}

export type t_ReactionsDeleteForCommitCommentParamSchema = {
  comment_id: number
  owner: string
  reaction_id: number
  repo: string
}

export type t_ReactionsDeleteForIssueParamSchema = {
  issue_number: number
  owner: string
  reaction_id: number
  repo: string
}

export type t_ReactionsDeleteForIssueCommentParamSchema = {
  comment_id: number
  owner: string
  reaction_id: number
  repo: string
}

export type t_ReactionsDeleteForPullRequestCommentParamSchema = {
  comment_id: number
  owner: string
  reaction_id: number
  repo: string
}

export type t_ReactionsDeleteForReleaseParamSchema = {
  owner: string
  reaction_id: number
  release_id: number
  repo: string
}

export type t_ReactionsDeleteForTeamDiscussionParamSchema = {
  discussion_number: number
  org: string
  reaction_id: number
  team_slug: string
}

export type t_ReactionsDeleteForTeamDiscussionCommentParamSchema = {
  comment_number: number
  discussion_number: number
  org: string
  reaction_id: number
  team_slug: string
}

export type t_ReactionsListForCommitCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReactionsListForCommitCommentQuerySchema = {
  content?:
    | (
        | "+1"
        | "-1"
        | "laugh"
        | "confused"
        | "heart"
        | "hooray"
        | "rocket"
        | "eyes"
      )
    | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReactionsListForIssueParamSchema = {
  issue_number: number
  owner: string
  repo: string
}

export type t_ReactionsListForIssueQuerySchema = {
  content?:
    | (
        | "+1"
        | "-1"
        | "laugh"
        | "confused"
        | "heart"
        | "hooray"
        | "rocket"
        | "eyes"
      )
    | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReactionsListForIssueCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReactionsListForIssueCommentQuerySchema = {
  content?:
    | (
        | "+1"
        | "-1"
        | "laugh"
        | "confused"
        | "heart"
        | "hooray"
        | "rocket"
        | "eyes"
      )
    | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReactionsListForPullRequestReviewCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReactionsListForPullRequestReviewCommentQuerySchema = {
  content?:
    | (
        | "+1"
        | "-1"
        | "laugh"
        | "confused"
        | "heart"
        | "hooray"
        | "rocket"
        | "eyes"
      )
    | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReactionsListForReleaseParamSchema = {
  owner: string
  release_id: number
  repo: string
}

export type t_ReactionsListForReleaseQuerySchema = {
  content?:
    | ("+1" | "laugh" | "heart" | "hooray" | "rocket" | "eyes")
    | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReactionsListForTeamDiscussionCommentInOrgParamSchema = {
  comment_number: number
  discussion_number: number
  org: string
  team_slug: string
}

export type t_ReactionsListForTeamDiscussionCommentInOrgQuerySchema = {
  content?:
    | (
        | "+1"
        | "-1"
        | "laugh"
        | "confused"
        | "heart"
        | "hooray"
        | "rocket"
        | "eyes"
      )
    | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReactionsListForTeamDiscussionCommentLegacyParamSchema = {
  comment_number: number
  discussion_number: number
  team_id: number
}

export type t_ReactionsListForTeamDiscussionCommentLegacyQuerySchema = {
  content?:
    | (
        | "+1"
        | "-1"
        | "laugh"
        | "confused"
        | "heart"
        | "hooray"
        | "rocket"
        | "eyes"
      )
    | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReactionsListForTeamDiscussionInOrgParamSchema = {
  discussion_number: number
  org: string
  team_slug: string
}

export type t_ReactionsListForTeamDiscussionInOrgQuerySchema = {
  content?:
    | (
        | "+1"
        | "-1"
        | "laugh"
        | "confused"
        | "heart"
        | "hooray"
        | "rocket"
        | "eyes"
      )
    | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReactionsListForTeamDiscussionLegacyParamSchema = {
  discussion_number: number
  team_id: number
}

export type t_ReactionsListForTeamDiscussionLegacyQuerySchema = {
  content?:
    | (
        | "+1"
        | "-1"
        | "laugh"
        | "confused"
        | "heart"
        | "hooray"
        | "rocket"
        | "eyes"
      )
    | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposAcceptInvitationForAuthenticatedUserParamSchema = {
  invitation_id: number
}

export type t_ReposAddAppAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposAddAppAccessRestrictionsRequestBodySchema = {
  apps: string[]
}

export type t_ReposAddCollaboratorParamSchema = {
  owner: string
  repo: string
  username: string
}

export type t_ReposAddCollaboratorRequestBodySchema = {
  permission?: string | undefined
}

export type t_ReposAddStatusCheckContextsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposAddStatusCheckContextsRequestBodySchema =
  | {
      contexts: string[]
    }
  | string[]

export type t_ReposAddTeamAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposAddTeamAccessRestrictionsRequestBodySchema =
  | {
      teams: string[]
    }
  | string[]

export type t_ReposAddUserAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposAddUserAccessRestrictionsRequestBodySchema = {
  users: string[]
}

export type t_ReposCancelPagesDeploymentParamSchema = {
  owner: string
  pages_deployment_id: number | string
  repo: string
}

export type t_ReposCheckAutomatedSecurityFixesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCheckCollaboratorParamSchema = {
  owner: string
  repo: string
  username: string
}

export type t_ReposCheckPrivateVulnerabilityReportingParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCheckVulnerabilityAlertsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCodeownersErrorsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCodeownersErrorsQuerySchema = {
  ref?: string | undefined
}

export type t_ReposCompareCommitsParamSchema = {
  basehead: string
  owner: string
  repo: string
}

export type t_ReposCompareCommitsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposCreateAttestationParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateAttestationRequestBodySchema = {
  bundle: {
    dsseEnvelope?:
      | {
          [key: string]: unknown | undefined
        }
      | undefined
    mediaType?: string | undefined
    verificationMaterial?:
      | {
          [key: string]: unknown | undefined
        }
      | undefined
  }
}

export type t_ReposCreateAutolinkParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateAutolinkRequestBodySchema = {
  is_alphanumeric?: boolean | undefined
  key_prefix: string
  url_template: string
}

export type t_ReposCreateCommitCommentParamSchema = {
  commit_sha: string
  owner: string
  repo: string
}

export type t_ReposCreateCommitCommentRequestBodySchema = {
  body: string
  line?: number | undefined
  path?: string | undefined
  position?: number | undefined
}

export type t_ReposCreateCommitSignatureProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposCreateCommitStatusParamSchema = {
  owner: string
  repo: string
  sha: string
}

export type t_ReposCreateCommitStatusRequestBodySchema = {
  context?: string | undefined
  description?: (string | null) | undefined
  state: "error" | "failure" | "pending" | "success"
  target_url?: (string | null) | undefined
}

export type t_ReposCreateDeployKeyParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateDeployKeyRequestBodySchema = {
  key: string
  read_only?: boolean | undefined
  title?: string | undefined
}

export type t_ReposCreateDeploymentParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateDeploymentRequestBodySchema = {
  auto_merge?: boolean | undefined
  description?: (string | null) | undefined
  environment?: string | undefined
  payload?:
    | (
        | {
            [key: string]: unknown | undefined
          }
        | string
      )
    | undefined
  production_environment?: boolean | undefined
  ref: string
  required_contexts?: string[] | undefined
  task?: string | undefined
  transient_environment?: boolean | undefined
}

export type t_ReposCreateDeploymentBranchPolicyParamSchema = {
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposCreateDeploymentBranchPolicyRequestBodySchema = {
  name: string
  type?: ("branch" | "tag") | undefined
}

export type t_ReposCreateDeploymentProtectionRuleParamSchema = {
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposCreateDeploymentProtectionRuleRequestBodySchema = {
  integration_id?: number | undefined
}

export type t_ReposCreateDeploymentStatusParamSchema = {
  deployment_id: number
  owner: string
  repo: string
}

export type t_ReposCreateDeploymentStatusRequestBodySchema = {
  auto_inactive?: boolean | undefined
  description?: string | undefined
  environment?: string | undefined
  environment_url?: string | undefined
  log_url?: string | undefined
  state:
    | "error"
    | "failure"
    | "inactive"
    | "in_progress"
    | "queued"
    | "pending"
    | "success"
  target_url?: string | undefined
}

export type t_ReposCreateDispatchEventParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateDispatchEventRequestBodySchema = {
  client_payload?:
    | {
        [key: string]: unknown | undefined
      }
    | undefined
  event_type: string
}

export type t_ReposCreateForAuthenticatedUserRequestBodySchema = {
  allow_auto_merge?: boolean | undefined
  allow_merge_commit?: boolean | undefined
  allow_rebase_merge?: boolean | undefined
  allow_squash_merge?: boolean | undefined
  auto_init?: boolean | undefined
  delete_branch_on_merge?: boolean | undefined
  description?: string | undefined
  gitignore_template?: string | undefined
  has_discussions?: boolean | undefined
  has_downloads?: boolean | undefined
  has_issues?: boolean | undefined
  has_projects?: boolean | undefined
  has_wiki?: boolean | undefined
  homepage?: string | undefined
  is_template?: boolean | undefined
  license_template?: string | undefined
  merge_commit_message?: ("PR_BODY" | "PR_TITLE" | "BLANK") | undefined
  merge_commit_title?: ("PR_TITLE" | "MERGE_MESSAGE") | undefined
  name: string
  private?: boolean | undefined
  squash_merge_commit_message?:
    | ("PR_BODY" | "COMMIT_MESSAGES" | "BLANK")
    | undefined
  squash_merge_commit_title?: ("PR_TITLE" | "COMMIT_OR_PR_TITLE") | undefined
  team_id?: number | undefined
}

export type t_ReposCreateForkParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateForkRequestBodySchema = {
  default_branch_only?: boolean | undefined
  name?: string | undefined
  organization?: string | undefined
} | null

export type t_ReposCreateInOrgParamSchema = {
  org: string
}

export type t_ReposCreateInOrgRequestBodySchema = {
  allow_auto_merge?: boolean | undefined
  allow_merge_commit?: boolean | undefined
  allow_rebase_merge?: boolean | undefined
  allow_squash_merge?: boolean | undefined
  auto_init?: boolean | undefined
  custom_properties?:
    | {
        [key: string]: unknown | undefined
      }
    | undefined
  delete_branch_on_merge?: boolean | undefined
  description?: string | undefined
  gitignore_template?: string | undefined
  has_downloads?: boolean | undefined
  has_issues?: boolean | undefined
  has_projects?: boolean | undefined
  has_wiki?: boolean | undefined
  homepage?: string | undefined
  is_template?: boolean | undefined
  license_template?: string | undefined
  merge_commit_message?: ("PR_BODY" | "PR_TITLE" | "BLANK") | undefined
  merge_commit_title?: ("PR_TITLE" | "MERGE_MESSAGE") | undefined
  name: string
  private?: boolean | undefined
  squash_merge_commit_message?:
    | ("PR_BODY" | "COMMIT_MESSAGES" | "BLANK")
    | undefined
  squash_merge_commit_title?: ("PR_TITLE" | "COMMIT_OR_PR_TITLE") | undefined
  team_id?: number | undefined
  use_squash_pr_title_as_default?: boolean | undefined
  visibility?: ("public" | "private") | undefined
}

export type t_ReposCreateOrUpdateCustomPropertiesValuesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateOrUpdateCustomPropertiesValuesRequestBodySchema = {
  properties: t_custom_property_value[]
}

export type t_ReposCreateOrUpdateEnvironmentParamSchema = {
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposCreateOrUpdateEnvironmentRequestBodySchema = {
  deployment_branch_policy?: t_deployment_branch_policy_settings | undefined
  prevent_self_review?: t_prevent_self_review | undefined
  reviewers?:
    | (
        | {
            id?: number | undefined
            type?: t_deployment_reviewer_type | undefined
          }[]
        | null
      )
    | undefined
  wait_timer?: t_wait_timer | undefined
} | null

export type t_ReposCreateOrUpdateFileContentsParamSchema = {
  owner: string
  path: string
  repo: string
}

export type t_ReposCreateOrUpdateFileContentsRequestBodySchema = {
  author?:
    | {
        date?: string | undefined
        email: string
        name: string
      }
    | undefined
  branch?: string | undefined
  committer?:
    | {
        date?: string | undefined
        email: string
        name: string
      }
    | undefined
  content: string
  message: string
  sha?: string | undefined
}

export type t_ReposCreateOrgRulesetParamSchema = {
  org: string
}

export type t_ReposCreateOrgRulesetRequestBodySchema = {
  bypass_actors?: t_repository_ruleset_bypass_actor[] | undefined
  conditions?: t_org_ruleset_conditions | undefined
  enforcement: t_repository_rule_enforcement
  name: string
  rules?: t_repository_rule[] | undefined
  target?: ("branch" | "tag" | "push" | "repository") | undefined
}

export type t_ReposCreatePagesDeploymentParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreatePagesDeploymentRequestBodySchema = {
  artifact_id?: number | undefined
  artifact_url?: string | undefined
  environment?: string | undefined
  oidc_token: string
  pages_build_version: string
}

export type t_ReposCreatePagesSiteParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreatePagesSiteRequestBodySchema = {
  build_type?: ("legacy" | "workflow") | undefined
  source?:
    | {
        branch: string
        path?: ("/" | "/docs") | undefined
      }
    | undefined
} | null

export type t_ReposCreateReleaseParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateReleaseRequestBodySchema = {
  body?: string | undefined
  discussion_category_name?: string | undefined
  draft?: boolean | undefined
  generate_release_notes?: boolean | undefined
  make_latest?: ("true" | "false" | "legacy") | undefined
  name?: string | undefined
  prerelease?: boolean | undefined
  tag_name: string
  target_commitish?: string | undefined
}

export type t_ReposCreateRepoRulesetParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateRepoRulesetRequestBodySchema = {
  bypass_actors?: t_repository_ruleset_bypass_actor[] | undefined
  conditions?: t_repository_ruleset_conditions | undefined
  enforcement: t_repository_rule_enforcement
  name: string
  rules?: t_repository_rule[] | undefined
  target?: ("branch" | "tag" | "push") | undefined
}

export type t_ReposCreateTagProtectionParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateTagProtectionRequestBodySchema = {
  pattern: string
}

export type t_ReposCreateUsingTemplateParamSchema = {
  template_owner: string
  template_repo: string
}

export type t_ReposCreateUsingTemplateRequestBodySchema = {
  description?: string | undefined
  include_all_branches?: boolean | undefined
  name: string
  owner?: string | undefined
  private?: boolean | undefined
}

export type t_ReposCreateWebhookParamSchema = {
  owner: string
  repo: string
}

export type t_ReposCreateWebhookRequestBodySchema = {
  active?: boolean | undefined
  config?:
    | {
        content_type?: t_webhook_config_content_type | undefined
        insecure_ssl?: t_webhook_config_insecure_ssl | undefined
        secret?: t_webhook_config_secret | undefined
        url?: t_webhook_config_url | undefined
      }
    | undefined
  events?: string[] | undefined
  name?: string | undefined
} | null

export type t_ReposDeclineInvitationForAuthenticatedUserParamSchema = {
  invitation_id: number
}

export type t_ReposDeleteParamSchema = {
  owner: string
  repo: string
}

export type t_ReposDeleteAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposDeleteAdminBranchProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposDeleteAnEnvironmentParamSchema = {
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposDeleteAutolinkParamSchema = {
  autolink_id: number
  owner: string
  repo: string
}

export type t_ReposDeleteBranchProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposDeleteCommitCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReposDeleteCommitSignatureProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposDeleteDeployKeyParamSchema = {
  key_id: number
  owner: string
  repo: string
}

export type t_ReposDeleteDeploymentParamSchema = {
  deployment_id: number
  owner: string
  repo: string
}

export type t_ReposDeleteDeploymentBranchPolicyParamSchema = {
  branch_policy_id: number
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposDeleteFileParamSchema = {
  owner: string
  path: string
  repo: string
}

export type t_ReposDeleteFileRequestBodySchema = {
  author?:
    | {
        email?: string | undefined
        name?: string | undefined
      }
    | undefined
  branch?: string | undefined
  committer?:
    | {
        email?: string | undefined
        name?: string | undefined
      }
    | undefined
  message: string
  sha: string
}

export type t_ReposDeleteInvitationParamSchema = {
  invitation_id: number
  owner: string
  repo: string
}

export type t_ReposDeleteOrgRulesetParamSchema = {
  org: string
  ruleset_id: number
}

export type t_ReposDeletePagesSiteParamSchema = {
  owner: string
  repo: string
}

export type t_ReposDeletePullRequestReviewProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposDeleteReleaseParamSchema = {
  owner: string
  release_id: number
  repo: string
}

export type t_ReposDeleteReleaseAssetParamSchema = {
  asset_id: number
  owner: string
  repo: string
}

export type t_ReposDeleteRepoRulesetParamSchema = {
  owner: string
  repo: string
  ruleset_id: number
}

export type t_ReposDeleteTagProtectionParamSchema = {
  owner: string
  repo: string
  tag_protection_id: number
}

export type t_ReposDeleteWebhookParamSchema = {
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposDisableAutomatedSecurityFixesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposDisableDeploymentProtectionRuleParamSchema = {
  environment_name: string
  owner: string
  protection_rule_id: number
  repo: string
}

export type t_ReposDisablePrivateVulnerabilityReportingParamSchema = {
  owner: string
  repo: string
}

export type t_ReposDisableVulnerabilityAlertsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposDownloadTarballArchiveParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_ReposDownloadZipballArchiveParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_ReposEnableAutomatedSecurityFixesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposEnablePrivateVulnerabilityReportingParamSchema = {
  owner: string
  repo: string
}

export type t_ReposEnableVulnerabilityAlertsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGenerateReleaseNotesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGenerateReleaseNotesRequestBodySchema = {
  configuration_file_path?: string | undefined
  previous_tag_name?: string | undefined
  tag_name: string
  target_commitish?: string | undefined
}

export type t_ReposGetParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetAdminBranchProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetAllDeploymentProtectionRulesParamSchema = {
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposGetAllEnvironmentsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetAllEnvironmentsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposGetAllStatusCheckContextsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetAllTopicsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetAllTopicsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposGetAppsWithAccessToProtectedBranchParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetAutolinkParamSchema = {
  autolink_id: number
  owner: string
  repo: string
}

export type t_ReposGetBranchParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetBranchProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetBranchRulesParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetBranchRulesQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposGetClonesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetClonesQuerySchema = {
  per?: ("day" | "week") | undefined
}

export type t_ReposGetCodeFrequencyStatsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetCollaboratorPermissionLevelParamSchema = {
  owner: string
  repo: string
  username: string
}

export type t_ReposGetCombinedStatusForRefParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_ReposGetCombinedStatusForRefQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposGetCommitParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_ReposGetCommitQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposGetCommitActivityStatsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetCommitCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReposGetCommitSignatureProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetCommunityProfileMetricsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetContentParamSchema = {
  owner: string
  path: string
  repo: string
}

export type t_ReposGetContentQuerySchema = {
  ref?: string | undefined
}

export type t_ReposGetContributorsStatsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetCustomDeploymentProtectionRuleParamSchema = {
  environment_name: string
  owner: string
  protection_rule_id: number
  repo: string
}

export type t_ReposGetCustomPropertiesValuesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetDeployKeyParamSchema = {
  key_id: number
  owner: string
  repo: string
}

export type t_ReposGetDeploymentParamSchema = {
  deployment_id: number
  owner: string
  repo: string
}

export type t_ReposGetDeploymentBranchPolicyParamSchema = {
  branch_policy_id: number
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposGetDeploymentStatusParamSchema = {
  deployment_id: number
  owner: string
  repo: string
  status_id: number
}

export type t_ReposGetEnvironmentParamSchema = {
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposGetLatestPagesBuildParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetLatestReleaseParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetOrgRuleSuiteParamSchema = {
  org: string
  rule_suite_id: number
}

export type t_ReposGetOrgRuleSuitesParamSchema = {
  org: string
}

export type t_ReposGetOrgRuleSuitesQuerySchema = {
  actor_name?: string | undefined
  page?: number | undefined
  per_page?: number | undefined
  ref?: string | undefined
  repository_name?: string | undefined
  rule_suite_result?: ("pass" | "fail" | "bypass" | "all") | undefined
  time_period?: ("hour" | "day" | "week" | "month") | undefined
}

export type t_ReposGetOrgRulesetParamSchema = {
  org: string
  ruleset_id: number
}

export type t_ReposGetOrgRulesetsParamSchema = {
  org: string
}

export type t_ReposGetOrgRulesetsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  targets?: string | undefined
}

export type t_ReposGetPagesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetPagesBuildParamSchema = {
  build_id: number
  owner: string
  repo: string
}

export type t_ReposGetPagesDeploymentParamSchema = {
  owner: string
  pages_deployment_id: number | string
  repo: string
}

export type t_ReposGetPagesHealthCheckParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetParticipationStatsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetPullRequestReviewProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetPunchCardStatsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetReadmeParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetReadmeQuerySchema = {
  ref?: string | undefined
}

export type t_ReposGetReadmeInDirectoryParamSchema = {
  dir: string
  owner: string
  repo: string
}

export type t_ReposGetReadmeInDirectoryQuerySchema = {
  ref?: string | undefined
}

export type t_ReposGetReleaseParamSchema = {
  owner: string
  release_id: number
  repo: string
}

export type t_ReposGetReleaseAssetParamSchema = {
  asset_id: number
  owner: string
  repo: string
}

export type t_ReposGetReleaseByTagParamSchema = {
  owner: string
  repo: string
  tag: string
}

export type t_ReposGetRepoRuleSuiteParamSchema = {
  owner: string
  repo: string
  rule_suite_id: number
}

export type t_ReposGetRepoRuleSuitesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetRepoRuleSuitesQuerySchema = {
  actor_name?: string | undefined
  page?: number | undefined
  per_page?: number | undefined
  ref?: string | undefined
  rule_suite_result?: ("pass" | "fail" | "bypass" | "all") | undefined
  time_period?: ("hour" | "day" | "week" | "month") | undefined
}

export type t_ReposGetRepoRulesetParamSchema = {
  owner: string
  repo: string
  ruleset_id: number
}

export type t_ReposGetRepoRulesetQuerySchema = {
  includes_parents?: boolean | undefined
}

export type t_ReposGetRepoRulesetHistoryParamSchema = {
  owner: string
  repo: string
  ruleset_id: number
}

export type t_ReposGetRepoRulesetHistoryQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposGetRepoRulesetVersionParamSchema = {
  owner: string
  repo: string
  ruleset_id: number
  version_id: number
}

export type t_ReposGetRepoRulesetsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetRepoRulesetsQuerySchema = {
  includes_parents?: boolean | undefined
  page?: number | undefined
  per_page?: number | undefined
  targets?: string | undefined
}

export type t_ReposGetStatusChecksProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetTeamsWithAccessToProtectedBranchParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetTopPathsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetTopReferrersParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetUsersWithAccessToProtectedBranchParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposGetViewsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposGetViewsQuerySchema = {
  per?: ("day" | "week") | undefined
}

export type t_ReposGetWebhookParamSchema = {
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposGetWebhookConfigForRepoParamSchema = {
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposGetWebhookDeliveryParamSchema = {
  delivery_id: number
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposListActivitiesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListActivitiesQuerySchema = {
  activity_type?:
    | (
        | "push"
        | "force_push"
        | "branch_creation"
        | "branch_deletion"
        | "pr_merge"
        | "merge_queue_merge"
      )
    | undefined
  actor?: string | undefined
  after?: string | undefined
  before?: string | undefined
  direction?: ("asc" | "desc") | undefined
  per_page?: number | undefined
  ref?: string | undefined
  time_period?: ("day" | "week" | "month" | "quarter" | "year") | undefined
}

export type t_ReposListAttestationsParamSchema = {
  owner: string
  repo: string
  subject_digest: string
}

export type t_ReposListAttestationsQuerySchema = {
  after?: string | undefined
  before?: string | undefined
  per_page?: number | undefined
  predicate_type?: string | undefined
}

export type t_ReposListAutolinksParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListBranchesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListBranchesQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  protected?: boolean | undefined
}

export type t_ReposListBranchesForHeadCommitParamSchema = {
  commit_sha: string
  owner: string
  repo: string
}

export type t_ReposListCollaboratorsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListCollaboratorsQuerySchema = {
  affiliation?: ("outside" | "direct" | "all") | undefined
  page?: number | undefined
  per_page?: number | undefined
  permission?: ("pull" | "triage" | "push" | "maintain" | "admin") | undefined
}

export type t_ReposListCommentsForCommitParamSchema = {
  commit_sha: string
  owner: string
  repo: string
}

export type t_ReposListCommentsForCommitQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposListCommitCommentsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListCommitCommentsForRepoQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposListCommitStatusesForRefParamSchema = {
  owner: string
  ref: string
  repo: string
}

export type t_ReposListCommitStatusesForRefQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposListCommitsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListCommitsQuerySchema = {
  author?: string | undefined
  committer?: string | undefined
  page?: number | undefined
  path?: string | undefined
  per_page?: number | undefined
  sha?: string | undefined
  since?: string | undefined
  until?: string | undefined
}

export type t_ReposListContributorsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListContributorsQuerySchema = {
  anon?: string | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposListCustomDeploymentRuleIntegrationsParamSchema = {
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposListCustomDeploymentRuleIntegrationsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposListDeployKeysParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListDeployKeysQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposListDeploymentBranchPoliciesParamSchema = {
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposListDeploymentBranchPoliciesQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposListDeploymentStatusesParamSchema = {
  deployment_id: number
  owner: string
  repo: string
}

export type t_ReposListDeploymentStatusesQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposListDeploymentsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListDeploymentsQuerySchema = {
  environment?: (string | null) | undefined
  page?: number | undefined
  per_page?: number | undefined
  ref?: string | undefined
  sha?: string | undefined
  task?: string | undefined
}

export type t_ReposListForAuthenticatedUserQuerySchema = {
  affiliation?: string | undefined
  before?: string | undefined
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  since?: string | undefined
  sort?: ("created" | "updated" | "pushed" | "full_name") | undefined
  type?: ("all" | "owner" | "public" | "private" | "member") | undefined
  visibility?: ("all" | "public" | "private") | undefined
}

export type t_ReposListForOrgParamSchema = {
  org: string
}

export type t_ReposListForOrgQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  sort?: ("created" | "updated" | "pushed" | "full_name") | undefined
  type?:
    | ("all" | "public" | "private" | "forks" | "sources" | "member")
    | undefined
}

export type t_ReposListForUserParamSchema = {
  username: string
}

export type t_ReposListForUserQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  sort?: ("created" | "updated" | "pushed" | "full_name") | undefined
  type?: ("all" | "owner" | "member") | undefined
}

export type t_ReposListForksParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListForksQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  sort?: ("newest" | "oldest" | "stargazers" | "watchers") | undefined
}

export type t_ReposListInvitationsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListInvitationsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposListInvitationsForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposListLanguagesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListPagesBuildsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListPagesBuildsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposListPublicQuerySchema = {
  since?: number | undefined
}

export type t_ReposListPullRequestsAssociatedWithCommitParamSchema = {
  commit_sha: string
  owner: string
  repo: string
}

export type t_ReposListPullRequestsAssociatedWithCommitQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposListReleaseAssetsParamSchema = {
  owner: string
  release_id: number
  repo: string
}

export type t_ReposListReleaseAssetsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposListReleasesParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListReleasesQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposListTagProtectionParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListTagsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListTagsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposListTeamsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListTeamsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposListWebhookDeliveriesParamSchema = {
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposListWebhookDeliveriesQuerySchema = {
  cursor?: string | undefined
  per_page?: number | undefined
}

export type t_ReposListWebhooksParamSchema = {
  owner: string
  repo: string
}

export type t_ReposListWebhooksQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_ReposMergeParamSchema = {
  owner: string
  repo: string
}

export type t_ReposMergeRequestBodySchema = {
  base: string
  commit_message?: string | undefined
  head: string
}

export type t_ReposMergeUpstreamParamSchema = {
  owner: string
  repo: string
}

export type t_ReposMergeUpstreamRequestBodySchema = {
  branch: string
}

export type t_ReposPingWebhookParamSchema = {
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposRedeliverWebhookDeliveryParamSchema = {
  delivery_id: number
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposRemoveAppAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposRemoveAppAccessRestrictionsRequestBodySchema = {
  apps: string[]
}

export type t_ReposRemoveCollaboratorParamSchema = {
  owner: string
  repo: string
  username: string
}

export type t_ReposRemoveStatusCheckContextsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposRemoveStatusCheckContextsRequestBodySchema =
  | {
      contexts: string[]
    }
  | string[]

export type t_ReposRemoveStatusCheckProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposRemoveTeamAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposRemoveTeamAccessRestrictionsRequestBodySchema =
  | {
      teams: string[]
    }
  | string[]

export type t_ReposRemoveUserAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposRemoveUserAccessRestrictionsRequestBodySchema = {
  users: string[]
}

export type t_ReposRenameBranchParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposRenameBranchRequestBodySchema = {
  new_name: string
}

export type t_ReposReplaceAllTopicsParamSchema = {
  owner: string
  repo: string
}

export type t_ReposReplaceAllTopicsRequestBodySchema = {
  names: string[]
}

export type t_ReposRequestPagesBuildParamSchema = {
  owner: string
  repo: string
}

export type t_ReposSetAdminBranchProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposSetAppAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposSetAppAccessRestrictionsRequestBodySchema = {
  apps: string[]
}

export type t_ReposSetStatusCheckContextsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposSetStatusCheckContextsRequestBodySchema =
  | {
      contexts: string[]
    }
  | string[]

export type t_ReposSetTeamAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposSetTeamAccessRestrictionsRequestBodySchema =
  | {
      teams: string[]
    }
  | string[]

export type t_ReposSetUserAccessRestrictionsParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposSetUserAccessRestrictionsRequestBodySchema = {
  users: string[]
}

export type t_ReposTestPushWebhookParamSchema = {
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposTransferParamSchema = {
  owner: string
  repo: string
}

export type t_ReposTransferRequestBodySchema = {
  new_name?: string | undefined
  new_owner: string
  team_ids?: number[] | undefined
}

export type t_ReposUpdateParamSchema = {
  owner: string
  repo: string
}

export type t_ReposUpdateRequestBodySchema = {
  allow_auto_merge?: boolean | undefined
  allow_forking?: boolean | undefined
  allow_merge_commit?: boolean | undefined
  allow_rebase_merge?: boolean | undefined
  allow_squash_merge?: boolean | undefined
  allow_update_branch?: boolean | undefined
  archived?: boolean | undefined
  default_branch?: string | undefined
  delete_branch_on_merge?: boolean | undefined
  description?: string | undefined
  has_issues?: boolean | undefined
  has_projects?: boolean | undefined
  has_wiki?: boolean | undefined
  homepage?: string | undefined
  is_template?: boolean | undefined
  merge_commit_message?: ("PR_BODY" | "PR_TITLE" | "BLANK") | undefined
  merge_commit_title?: ("PR_TITLE" | "MERGE_MESSAGE") | undefined
  name?: string | undefined
  private?: boolean | undefined
  security_and_analysis?:
    | ({
        advanced_security?:
          | {
              status?: string | undefined
            }
          | undefined
        code_security?:
          | {
              status?: string | undefined
            }
          | undefined
        secret_scanning?:
          | {
              status?: string | undefined
            }
          | undefined
        secret_scanning_ai_detection?:
          | {
              status?: string | undefined
            }
          | undefined
        secret_scanning_non_provider_patterns?:
          | {
              status?: string | undefined
            }
          | undefined
        secret_scanning_push_protection?:
          | {
              status?: string | undefined
            }
          | undefined
      } | null)
    | undefined
  squash_merge_commit_message?:
    | ("PR_BODY" | "COMMIT_MESSAGES" | "BLANK")
    | undefined
  squash_merge_commit_title?: ("PR_TITLE" | "COMMIT_OR_PR_TITLE") | undefined
  use_squash_pr_title_as_default?: boolean | undefined
  visibility?: ("public" | "private") | undefined
  web_commit_signoff_required?: boolean | undefined
}

export type t_ReposUpdateBranchProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposUpdateBranchProtectionRequestBodySchema = {
  allow_deletions?: boolean | undefined
  allow_force_pushes?: (boolean | null) | undefined
  allow_fork_syncing?: boolean | undefined
  block_creations?: boolean | undefined
  enforce_admins: boolean | null
  lock_branch?: boolean | undefined
  required_conversation_resolution?: boolean | undefined
  required_linear_history?: boolean | undefined
  required_pull_request_reviews: {
    bypass_pull_request_allowances?:
      | {
          apps?: string[] | undefined
          teams?: string[] | undefined
          users?: string[] | undefined
        }
      | undefined
    dismiss_stale_reviews?: boolean | undefined
    dismissal_restrictions?:
      | {
          apps?: string[] | undefined
          teams?: string[] | undefined
          users?: string[] | undefined
        }
      | undefined
    require_code_owner_reviews?: boolean | undefined
    require_last_push_approval?: boolean | undefined
    required_approving_review_count?: number | undefined
  } | null
  required_status_checks: {
    checks?:
      | {
          app_id?: number | undefined
          context: string
        }[]
      | undefined
    contexts: string[]
    strict: boolean
  } | null
  restrictions: {
    apps?: string[] | undefined
    teams: string[]
    users: string[]
  } | null
}

export type t_ReposUpdateCommitCommentParamSchema = {
  comment_id: number
  owner: string
  repo: string
}

export type t_ReposUpdateCommitCommentRequestBodySchema = {
  body: string
}

export type t_ReposUpdateDeploymentBranchPolicyParamSchema = {
  branch_policy_id: number
  environment_name: string
  owner: string
  repo: string
}

export type t_ReposUpdateDeploymentBranchPolicyRequestBodySchema = {
  name: string
}

export type t_ReposUpdateInformationAboutPagesSiteParamSchema = {
  owner: string
  repo: string
}

export type t_ReposUpdateInformationAboutPagesSiteRequestBodySchema = {
  build_type?: ("legacy" | "workflow") | undefined
  cname?: (string | null) | undefined
  https_enforced?: boolean | undefined
  source?:
    | (
        | "gh-pages"
        | "master"
        | "master /docs"
        | {
            branch: string
            path: "/" | "/docs"
          }
      )
    | undefined
}

export type t_ReposUpdateInvitationParamSchema = {
  invitation_id: number
  owner: string
  repo: string
}

export type t_ReposUpdateInvitationRequestBodySchema = {
  permissions?: ("read" | "write" | "maintain" | "triage" | "admin") | undefined
}

export type t_ReposUpdateOrgRulesetParamSchema = {
  org: string
  ruleset_id: number
}

export type t_ReposUpdateOrgRulesetRequestBodySchema = {
  bypass_actors?: t_repository_ruleset_bypass_actor[] | undefined
  conditions?: t_org_ruleset_conditions | undefined
  enforcement?: t_repository_rule_enforcement | undefined
  name?: string | undefined
  rules?: t_repository_rule[] | undefined
  target?: ("branch" | "tag" | "push" | "repository") | undefined
}

export type t_ReposUpdatePullRequestReviewProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposUpdatePullRequestReviewProtectionRequestBodySchema = {
  bypass_pull_request_allowances?:
    | {
        apps?: string[] | undefined
        teams?: string[] | undefined
        users?: string[] | undefined
      }
    | undefined
  dismiss_stale_reviews?: boolean | undefined
  dismissal_restrictions?:
    | {
        apps?: string[] | undefined
        teams?: string[] | undefined
        users?: string[] | undefined
      }
    | undefined
  require_code_owner_reviews?: boolean | undefined
  require_last_push_approval?: boolean | undefined
  required_approving_review_count?: number | undefined
}

export type t_ReposUpdateReleaseParamSchema = {
  owner: string
  release_id: number
  repo: string
}

export type t_ReposUpdateReleaseRequestBodySchema = {
  body?: string | undefined
  discussion_category_name?: string | undefined
  draft?: boolean | undefined
  make_latest?: ("true" | "false" | "legacy") | undefined
  name?: string | undefined
  prerelease?: boolean | undefined
  tag_name?: string | undefined
  target_commitish?: string | undefined
}

export type t_ReposUpdateReleaseAssetParamSchema = {
  asset_id: number
  owner: string
  repo: string
}

export type t_ReposUpdateReleaseAssetRequestBodySchema = {
  label?: string | undefined
  name?: string | undefined
  state?: string | undefined
}

export type t_ReposUpdateRepoRulesetParamSchema = {
  owner: string
  repo: string
  ruleset_id: number
}

export type t_ReposUpdateRepoRulesetRequestBodySchema = {
  bypass_actors?: t_repository_ruleset_bypass_actor[] | undefined
  conditions?: t_repository_ruleset_conditions | undefined
  enforcement?: t_repository_rule_enforcement | undefined
  name?: string | undefined
  rules?: t_repository_rule[] | undefined
  target?: ("branch" | "tag" | "push") | undefined
}

export type t_ReposUpdateStatusCheckProtectionParamSchema = {
  branch: string
  owner: string
  repo: string
}

export type t_ReposUpdateStatusCheckProtectionRequestBodySchema = {
  checks?:
    | {
        app_id?: number | undefined
        context: string
      }[]
    | undefined
  contexts?: string[] | undefined
  strict?: boolean | undefined
}

export type t_ReposUpdateWebhookParamSchema = {
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposUpdateWebhookRequestBodySchema = {
  active?: boolean | undefined
  add_events?: string[] | undefined
  config?: t_webhook_config | undefined
  events?: string[] | undefined
  remove_events?: string[] | undefined
}

export type t_ReposUpdateWebhookConfigForRepoParamSchema = {
  hook_id: number
  owner: string
  repo: string
}

export type t_ReposUpdateWebhookConfigForRepoRequestBodySchema = {
  content_type?: t_webhook_config_content_type | undefined
  insecure_ssl?: t_webhook_config_insecure_ssl | undefined
  secret?: t_webhook_config_secret | undefined
  url?: t_webhook_config_url | undefined
}

export type t_ReposUploadReleaseAssetParamSchema = {
  owner: string
  release_id: number
  repo: string
}

export type t_ReposUploadReleaseAssetQuerySchema = {
  label?: string | undefined
  name: string
}

export type t_ReposUploadReleaseAssetRequestBodySchema = never

export type t_SearchCodeQuerySchema = {
  order?: ("desc" | "asc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  q: string
  sort?: "indexed" | undefined
}

export type t_SearchCommitsQuerySchema = {
  order?: ("desc" | "asc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  q: string
  sort?: ("author-date" | "committer-date") | undefined
}

export type t_SearchIssuesAndPullRequestsQuerySchema = {
  advanced_search?: string | undefined
  order?: ("desc" | "asc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  q: string
  sort?:
    | (
        | "comments"
        | "reactions"
        | "reactions-+1"
        | "reactions--1"
        | "reactions-smile"
        | "reactions-thinking_face"
        | "reactions-heart"
        | "reactions-tada"
        | "interactions"
        | "created"
        | "updated"
      )
    | undefined
}

export type t_SearchLabelsQuerySchema = {
  order?: ("desc" | "asc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  q: string
  repository_id: number
  sort?: ("created" | "updated") | undefined
}

export type t_SearchReposQuerySchema = {
  order?: ("desc" | "asc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  q: string
  sort?: ("stars" | "forks" | "help-wanted-issues" | "updated") | undefined
}

export type t_SearchTopicsQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  q: string
}

export type t_SearchUsersQuerySchema = {
  order?: ("desc" | "asc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  q: string
  sort?: ("followers" | "repositories" | "joined") | undefined
}

export type t_SecretScanningCreatePushProtectionBypassParamSchema = {
  owner: string
  repo: string
}

export type t_SecretScanningCreatePushProtectionBypassRequestBodySchema = {
  placeholder_id: t_secret_scanning_push_protection_bypass_placeholder_id
  reason: t_secret_scanning_push_protection_bypass_reason
}

export type t_SecretScanningGetAlertParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_SecretScanningGetAlertQuerySchema = {
  hide_secret?: boolean | undefined
}

export type t_SecretScanningGetScanHistoryParamSchema = {
  owner: string
  repo: string
}

export type t_SecretScanningListAlertsForEnterpriseParamSchema = {
  enterprise: string
}

export type t_SecretScanningListAlertsForEnterpriseQuerySchema = {
  after?: string | undefined
  before?: string | undefined
  direction?: ("asc" | "desc") | undefined
  hide_secret?: boolean | undefined
  is_multi_repo?: boolean | undefined
  is_publicly_leaked?: boolean | undefined
  per_page?: number | undefined
  resolution?: string | undefined
  secret_type?: string | undefined
  sort?: ("created" | "updated") | undefined
  state?: ("open" | "resolved") | undefined
  validity?: string | undefined
}

export type t_SecretScanningListAlertsForOrgParamSchema = {
  org: string
}

export type t_SecretScanningListAlertsForOrgQuerySchema = {
  after?: string | undefined
  before?: string | undefined
  direction?: ("asc" | "desc") | undefined
  hide_secret?: boolean | undefined
  is_multi_repo?: boolean | undefined
  is_publicly_leaked?: boolean | undefined
  page?: number | undefined
  per_page?: number | undefined
  resolution?: string | undefined
  secret_type?: string | undefined
  sort?: ("created" | "updated") | undefined
  state?: ("open" | "resolved") | undefined
  validity?: string | undefined
}

export type t_SecretScanningListAlertsForRepoParamSchema = {
  owner: string
  repo: string
}

export type t_SecretScanningListAlertsForRepoQuerySchema = {
  after?: string | undefined
  before?: string | undefined
  direction?: ("asc" | "desc") | undefined
  hide_secret?: boolean | undefined
  is_multi_repo?: boolean | undefined
  is_publicly_leaked?: boolean | undefined
  page?: number | undefined
  per_page?: number | undefined
  resolution?: string | undefined
  secret_type?: string | undefined
  sort?: ("created" | "updated") | undefined
  state?: ("open" | "resolved") | undefined
  validity?: string | undefined
}

export type t_SecretScanningListLocationsForAlertParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_SecretScanningListLocationsForAlertQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_SecretScanningUpdateAlertParamSchema = {
  alert_number: t_alert_number
  owner: string
  repo: string
}

export type t_SecretScanningUpdateAlertRequestBodySchema = {
  resolution?: t_secret_scanning_alert_resolution | undefined
  resolution_comment?: t_secret_scanning_alert_resolution_comment | undefined
  state: t_secret_scanning_alert_state
}

export type t_SecurityAdvisoriesCreateForkParamSchema = {
  ghsa_id: string
  owner: string
  repo: string
}

export type t_SecurityAdvisoriesCreatePrivateVulnerabilityReportParamSchema = {
  owner: string
  repo: string
}

export type t_SecurityAdvisoriesCreatePrivateVulnerabilityReportRequestBodySchema =
  {
    cvss_vector_string?: (string | null) | undefined
    cwe_ids?: (string[] | null) | undefined
    description: string
    severity?: ("critical" | "high" | "medium" | "low" | null) | undefined
    start_private_fork?: boolean | undefined
    summary: string
    vulnerabilities?:
      | (
          | {
              package: {
                ecosystem: t_security_advisory_ecosystems
                name?: (string | null) | undefined
              }
              patched_versions?: (string | null) | undefined
              vulnerable_functions?: (string[] | null) | undefined
              vulnerable_version_range?: (string | null) | undefined
            }[]
          | null
        )
      | undefined
  }

export type t_SecurityAdvisoriesCreateRepositoryAdvisoryParamSchema = {
  owner: string
  repo: string
}

export type t_SecurityAdvisoriesCreateRepositoryAdvisoryRequestBodySchema = {
  credits?:
    | (
        | {
            login: string
            type: t_security_advisory_credit_types
          }[]
        | null
      )
    | undefined
  cve_id?: (string | null) | undefined
  cvss_vector_string?: (string | null) | undefined
  cwe_ids?: (string[] | null) | undefined
  description: string
  severity?: ("critical" | "high" | "medium" | "low" | null) | undefined
  start_private_fork?: boolean | undefined
  summary: string
  vulnerabilities: {
    package: {
      ecosystem: t_security_advisory_ecosystems
      name?: (string | null) | undefined
    }
    patched_versions?: (string | null) | undefined
    vulnerable_functions?: (string[] | null) | undefined
    vulnerable_version_range?: (string | null) | undefined
  }[]
}

export type t_SecurityAdvisoriesCreateRepositoryAdvisoryCveRequestParamSchema =
  {
    ghsa_id: string
    owner: string
    repo: string
  }

export type t_SecurityAdvisoriesGetGlobalAdvisoryParamSchema = {
  ghsa_id: string
}

export type t_SecurityAdvisoriesGetRepositoryAdvisoryParamSchema = {
  ghsa_id: string
  owner: string
  repo: string
}

export type t_SecurityAdvisoriesListGlobalAdvisoriesQuerySchema = {
  affects?: (string | string[]) | undefined
  after?: string | undefined
  before?: string | undefined
  cve_id?: string | undefined
  cwes?: (string | string[]) | undefined
  direction?: ("asc" | "desc") | undefined
  ecosystem?: t_security_advisory_ecosystems | undefined
  epss_percentage?: string | undefined
  epss_percentile?: string | undefined
  ghsa_id?: string | undefined
  is_withdrawn?: boolean | undefined
  modified?: string | undefined
  per_page?: number | undefined
  published?: string | undefined
  severity?: ("unknown" | "low" | "medium" | "high" | "critical") | undefined
  sort?:
    | ("updated" | "published" | "epss_percentage" | "epss_percentile")
    | undefined
  type?: ("reviewed" | "malware" | "unreviewed") | undefined
  updated?: string | undefined
}

export type t_SecurityAdvisoriesListOrgRepositoryAdvisoriesParamSchema = {
  org: string
}

export type t_SecurityAdvisoriesListOrgRepositoryAdvisoriesQuerySchema = {
  after?: string | undefined
  before?: string | undefined
  direction?: ("asc" | "desc") | undefined
  per_page?: number | undefined
  sort?: ("created" | "updated" | "published") | undefined
  state?: ("triage" | "draft" | "published" | "closed") | undefined
}

export type t_SecurityAdvisoriesListRepositoryAdvisoriesParamSchema = {
  owner: string
  repo: string
}

export type t_SecurityAdvisoriesListRepositoryAdvisoriesQuerySchema = {
  after?: string | undefined
  before?: string | undefined
  direction?: ("asc" | "desc") | undefined
  per_page?: number | undefined
  sort?: ("created" | "updated" | "published") | undefined
  state?: ("triage" | "draft" | "published" | "closed") | undefined
}

export type t_SecurityAdvisoriesUpdateRepositoryAdvisoryParamSchema = {
  ghsa_id: string
  owner: string
  repo: string
}

export type t_SecurityAdvisoriesUpdateRepositoryAdvisoryRequestBodySchema = {
  collaborating_teams?: (string[] | null) | undefined
  collaborating_users?: (string[] | null) | undefined
  credits?:
    | (
        | {
            login: string
            type: t_security_advisory_credit_types
          }[]
        | null
      )
    | undefined
  cve_id?: (string | null) | undefined
  cvss_vector_string?: (string | null) | undefined
  cwe_ids?: (string[] | null) | undefined
  description?: string | undefined
  severity?: ("critical" | "high" | "medium" | "low" | null) | undefined
  state?: ("published" | "closed" | "draft") | undefined
  summary?: string | undefined
  vulnerabilities?:
    | {
        package: {
          ecosystem: t_security_advisory_ecosystems
          name?: (string | null) | undefined
        }
        patched_versions?: (string | null) | undefined
        vulnerable_functions?: (string[] | null) | undefined
        vulnerable_version_range?: (string | null) | undefined
      }[]
    | undefined
}

export type t_TeamsAddMemberLegacyParamSchema = {
  team_id: number
  username: string
}

export type t_TeamsAddOrUpdateMembershipForUserInOrgParamSchema = {
  org: string
  team_slug: string
  username: string
}

export type t_TeamsAddOrUpdateMembershipForUserInOrgRequestBodySchema = {
  role?: ("member" | "maintainer") | undefined
}

export type t_TeamsAddOrUpdateMembershipForUserLegacyParamSchema = {
  team_id: number
  username: string
}

export type t_TeamsAddOrUpdateMembershipForUserLegacyRequestBodySchema = {
  role?: ("member" | "maintainer") | undefined
}

export type t_TeamsAddOrUpdateProjectPermissionsInOrgParamSchema = {
  org: string
  project_id: number
  team_slug: string
}

export type t_TeamsAddOrUpdateProjectPermissionsInOrgRequestBodySchema = {
  permission?: ("read" | "write" | "admin") | undefined
} | null

export type t_TeamsAddOrUpdateProjectPermissionsLegacyParamSchema = {
  project_id: number
  team_id: number
}

export type t_TeamsAddOrUpdateProjectPermissionsLegacyRequestBodySchema = {
  permission?: ("read" | "write" | "admin") | undefined
}

export type t_TeamsAddOrUpdateRepoPermissionsInOrgParamSchema = {
  org: string
  owner: string
  repo: string
  team_slug: string
}

export type t_TeamsAddOrUpdateRepoPermissionsInOrgRequestBodySchema = {
  permission?: string | undefined
}

export type t_TeamsAddOrUpdateRepoPermissionsLegacyParamSchema = {
  owner: string
  repo: string
  team_id: number
}

export type t_TeamsAddOrUpdateRepoPermissionsLegacyRequestBodySchema = {
  permission?: ("pull" | "push" | "admin") | undefined
}

export type t_TeamsCheckPermissionsForProjectInOrgParamSchema = {
  org: string
  project_id: number
  team_slug: string
}

export type t_TeamsCheckPermissionsForProjectLegacyParamSchema = {
  project_id: number
  team_id: number
}

export type t_TeamsCheckPermissionsForRepoInOrgParamSchema = {
  org: string
  owner: string
  repo: string
  team_slug: string
}

export type t_TeamsCheckPermissionsForRepoLegacyParamSchema = {
  owner: string
  repo: string
  team_id: number
}

export type t_TeamsCreateParamSchema = {
  org: string
}

export type t_TeamsCreateRequestBodySchema = {
  description?: string | undefined
  maintainers?: string[] | undefined
  name: string
  notification_setting?:
    | ("notifications_enabled" | "notifications_disabled")
    | undefined
  parent_team_id?: number | undefined
  permission?: ("pull" | "push") | undefined
  privacy?: ("secret" | "closed") | undefined
  repo_names?: string[] | undefined
}

export type t_TeamsCreateDiscussionCommentInOrgParamSchema = {
  discussion_number: number
  org: string
  team_slug: string
}

export type t_TeamsCreateDiscussionCommentInOrgRequestBodySchema = {
  body: string
}

export type t_TeamsCreateDiscussionCommentLegacyParamSchema = {
  discussion_number: number
  team_id: number
}

export type t_TeamsCreateDiscussionCommentLegacyRequestBodySchema = {
  body: string
}

export type t_TeamsCreateDiscussionInOrgParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsCreateDiscussionInOrgRequestBodySchema = {
  body: string
  private?: boolean | undefined
  title: string
}

export type t_TeamsCreateDiscussionLegacyParamSchema = {
  team_id: number
}

export type t_TeamsCreateDiscussionLegacyRequestBodySchema = {
  body: string
  private?: boolean | undefined
  title: string
}

export type t_TeamsDeleteDiscussionCommentInOrgParamSchema = {
  comment_number: number
  discussion_number: number
  org: string
  team_slug: string
}

export type t_TeamsDeleteDiscussionCommentLegacyParamSchema = {
  comment_number: number
  discussion_number: number
  team_id: number
}

export type t_TeamsDeleteDiscussionInOrgParamSchema = {
  discussion_number: number
  org: string
  team_slug: string
}

export type t_TeamsDeleteDiscussionLegacyParamSchema = {
  discussion_number: number
  team_id: number
}

export type t_TeamsDeleteInOrgParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsDeleteLegacyParamSchema = {
  team_id: number
}

export type t_TeamsGetByNameParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsGetDiscussionCommentInOrgParamSchema = {
  comment_number: number
  discussion_number: number
  org: string
  team_slug: string
}

export type t_TeamsGetDiscussionCommentLegacyParamSchema = {
  comment_number: number
  discussion_number: number
  team_id: number
}

export type t_TeamsGetDiscussionInOrgParamSchema = {
  discussion_number: number
  org: string
  team_slug: string
}

export type t_TeamsGetDiscussionLegacyParamSchema = {
  discussion_number: number
  team_id: number
}

export type t_TeamsGetLegacyParamSchema = {
  team_id: number
}

export type t_TeamsGetMemberLegacyParamSchema = {
  team_id: number
  username: string
}

export type t_TeamsGetMembershipForUserInOrgParamSchema = {
  org: string
  team_slug: string
  username: string
}

export type t_TeamsGetMembershipForUserLegacyParamSchema = {
  team_id: number
  username: string
}

export type t_TeamsListParamSchema = {
  org: string
}

export type t_TeamsListQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_TeamsListChildInOrgParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsListChildInOrgQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_TeamsListChildLegacyParamSchema = {
  team_id: number
}

export type t_TeamsListChildLegacyQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_TeamsListDiscussionCommentsInOrgParamSchema = {
  discussion_number: number
  org: string
  team_slug: string
}

export type t_TeamsListDiscussionCommentsInOrgQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_TeamsListDiscussionCommentsLegacyParamSchema = {
  discussion_number: number
  team_id: number
}

export type t_TeamsListDiscussionCommentsLegacyQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_TeamsListDiscussionsInOrgParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsListDiscussionsInOrgQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
  pinned?: string | undefined
}

export type t_TeamsListDiscussionsLegacyParamSchema = {
  team_id: number
}

export type t_TeamsListDiscussionsLegacyQuerySchema = {
  direction?: ("asc" | "desc") | undefined
  page?: number | undefined
  per_page?: number | undefined
}

export type t_TeamsListForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_TeamsListMembersInOrgParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsListMembersInOrgQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  role?: ("member" | "maintainer" | "all") | undefined
}

export type t_TeamsListMembersLegacyParamSchema = {
  team_id: number
}

export type t_TeamsListMembersLegacyQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
  role?: ("member" | "maintainer" | "all") | undefined
}

export type t_TeamsListPendingInvitationsInOrgParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsListPendingInvitationsInOrgQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_TeamsListPendingInvitationsLegacyParamSchema = {
  team_id: number
}

export type t_TeamsListPendingInvitationsLegacyQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_TeamsListProjectsInOrgParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsListProjectsInOrgQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_TeamsListProjectsLegacyParamSchema = {
  team_id: number
}

export type t_TeamsListProjectsLegacyQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_TeamsListReposInOrgParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsListReposInOrgQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_TeamsListReposLegacyParamSchema = {
  team_id: number
}

export type t_TeamsListReposLegacyQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_TeamsRemoveMemberLegacyParamSchema = {
  team_id: number
  username: string
}

export type t_TeamsRemoveMembershipForUserInOrgParamSchema = {
  org: string
  team_slug: string
  username: string
}

export type t_TeamsRemoveMembershipForUserLegacyParamSchema = {
  team_id: number
  username: string
}

export type t_TeamsRemoveProjectInOrgParamSchema = {
  org: string
  project_id: number
  team_slug: string
}

export type t_TeamsRemoveProjectLegacyParamSchema = {
  project_id: number
  team_id: number
}

export type t_TeamsRemoveRepoInOrgParamSchema = {
  org: string
  owner: string
  repo: string
  team_slug: string
}

export type t_TeamsRemoveRepoLegacyParamSchema = {
  owner: string
  repo: string
  team_id: number
}

export type t_TeamsUpdateDiscussionCommentInOrgParamSchema = {
  comment_number: number
  discussion_number: number
  org: string
  team_slug: string
}

export type t_TeamsUpdateDiscussionCommentInOrgRequestBodySchema = {
  body: string
}

export type t_TeamsUpdateDiscussionCommentLegacyParamSchema = {
  comment_number: number
  discussion_number: number
  team_id: number
}

export type t_TeamsUpdateDiscussionCommentLegacyRequestBodySchema = {
  body: string
}

export type t_TeamsUpdateDiscussionInOrgParamSchema = {
  discussion_number: number
  org: string
  team_slug: string
}

export type t_TeamsUpdateDiscussionInOrgRequestBodySchema = {
  body?: string | undefined
  title?: string | undefined
}

export type t_TeamsUpdateDiscussionLegacyParamSchema = {
  discussion_number: number
  team_id: number
}

export type t_TeamsUpdateDiscussionLegacyRequestBodySchema = {
  body?: string | undefined
  title?: string | undefined
}

export type t_TeamsUpdateInOrgParamSchema = {
  org: string
  team_slug: string
}

export type t_TeamsUpdateInOrgRequestBodySchema = {
  description?: string | undefined
  name?: string | undefined
  notification_setting?:
    | ("notifications_enabled" | "notifications_disabled")
    | undefined
  parent_team_id?: (number | null) | undefined
  permission?: ("pull" | "push" | "admin") | undefined
  privacy?: ("secret" | "closed") | undefined
}

export type t_TeamsUpdateLegacyParamSchema = {
  team_id: number
}

export type t_TeamsUpdateLegacyRequestBodySchema = {
  description?: string | undefined
  name: string
  notification_setting?:
    | ("notifications_enabled" | "notifications_disabled")
    | undefined
  parent_team_id?: (number | null) | undefined
  permission?: ("pull" | "push" | "admin") | undefined
  privacy?: ("secret" | "closed") | undefined
}

export type t_UsersAddEmailForAuthenticatedUserRequestBodySchema =
  | {
      emails: string[]
    }
  | string[]
  | string

export type t_UsersAddSocialAccountForAuthenticatedUserRequestBodySchema = {
  account_urls: string[]
}

export type t_UsersBlockParamSchema = {
  username: string
}

export type t_UsersCheckBlockedParamSchema = {
  username: string
}

export type t_UsersCheckFollowingForUserParamSchema = {
  target_user: string
  username: string
}

export type t_UsersCheckPersonIsFollowedByAuthenticatedParamSchema = {
  username: string
}

export type t_UsersCreateGpgKeyForAuthenticatedUserRequestBodySchema = {
  armored_public_key: string
  name?: string | undefined
}

export type t_UsersCreatePublicSshKeyForAuthenticatedUserRequestBodySchema = {
  key: string
  title?: string | undefined
}

export type t_UsersCreateSshSigningKeyForAuthenticatedUserRequestBodySchema = {
  key: string
  title?: string | undefined
}

export type t_UsersDeleteAttestationsBulkParamSchema = {
  username: string
}

export type t_UsersDeleteAttestationsBulkRequestBodySchema =
  | {
      subject_digests: string[]
    }
  | {
      attestation_ids: number[]
    }

export type t_UsersDeleteAttestationsByIdParamSchema = {
  attestation_id: number
  username: string
}

export type t_UsersDeleteAttestationsBySubjectDigestParamSchema = {
  subject_digest: string
  username: string
}

export type t_UsersDeleteEmailForAuthenticatedUserRequestBodySchema =
  | {
      emails: string[]
    }
  | string[]
  | string

export type t_UsersDeleteGpgKeyForAuthenticatedUserParamSchema = {
  gpg_key_id: number
}

export type t_UsersDeletePublicSshKeyForAuthenticatedUserParamSchema = {
  key_id: number
}

export type t_UsersDeleteSocialAccountForAuthenticatedUserRequestBodySchema = {
  account_urls: string[]
}

export type t_UsersDeleteSshSigningKeyForAuthenticatedUserParamSchema = {
  ssh_signing_key_id: number
}

export type t_UsersFollowParamSchema = {
  username: string
}

export type t_UsersGetByIdParamSchema = {
  account_id: number
}

export type t_UsersGetByUsernameParamSchema = {
  username: string
}

export type t_UsersGetContextForUserParamSchema = {
  username: string
}

export type t_UsersGetContextForUserQuerySchema = {
  subject_id?: string | undefined
  subject_type?:
    | ("organization" | "repository" | "issue" | "pull_request")
    | undefined
}

export type t_UsersGetGpgKeyForAuthenticatedUserParamSchema = {
  gpg_key_id: number
}

export type t_UsersGetPublicSshKeyForAuthenticatedUserParamSchema = {
  key_id: number
}

export type t_UsersGetSshSigningKeyForAuthenticatedUserParamSchema = {
  ssh_signing_key_id: number
}

export type t_UsersListQuerySchema = {
  per_page?: number | undefined
  since?: number | undefined
}

export type t_UsersListAttestationsParamSchema = {
  subject_digest: string
  username: string
}

export type t_UsersListAttestationsQuerySchema = {
  after?: string | undefined
  before?: string | undefined
  per_page?: number | undefined
  predicate_type?: string | undefined
}

export type t_UsersListAttestationsBulkParamSchema = {
  username: string
}

export type t_UsersListAttestationsBulkQuerySchema = {
  after?: string | undefined
  before?: string | undefined
  per_page?: number | undefined
}

export type t_UsersListAttestationsBulkRequestBodySchema = {
  predicate_type?: string | undefined
  subject_digests: string[]
}

export type t_UsersListBlockedByAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_UsersListEmailsForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_UsersListFollowedByAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_UsersListFollowersForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_UsersListFollowersForUserParamSchema = {
  username: string
}

export type t_UsersListFollowersForUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_UsersListFollowingForUserParamSchema = {
  username: string
}

export type t_UsersListFollowingForUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_UsersListGpgKeysForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_UsersListGpgKeysForUserParamSchema = {
  username: string
}

export type t_UsersListGpgKeysForUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_UsersListPublicEmailsForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_UsersListPublicKeysForUserParamSchema = {
  username: string
}

export type t_UsersListPublicKeysForUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_UsersListPublicSshKeysForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_UsersListSocialAccountsForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_UsersListSocialAccountsForUserParamSchema = {
  username: string
}

export type t_UsersListSocialAccountsForUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_UsersListSshSigningKeysForAuthenticatedUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_UsersListSshSigningKeysForUserParamSchema = {
  username: string
}

export type t_UsersListSshSigningKeysForUserQuerySchema = {
  page?: number | undefined
  per_page?: number | undefined
}

export type t_UsersSetPrimaryEmailVisibilityForAuthenticatedUserRequestBodySchema =
  {
    visibility: "public" | "private"
  }

export type t_UsersUnblockParamSchema = {
  username: string
}

export type t_UsersUnfollowParamSchema = {
  username: string
}

export type t_UsersUpdateAuthenticatedRequestBodySchema = {
  bio?: string | undefined
  blog?: string | undefined
  company?: string | undefined
  email?: string | undefined
  hireable?: boolean | undefined
  location?: string | undefined
  name?: string | undefined
  twitter_username?: (string | null) | undefined
}
