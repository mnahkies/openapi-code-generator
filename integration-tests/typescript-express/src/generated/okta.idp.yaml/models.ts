/** AUTOGENERATED - DO NOT EDIT **/
/* tslint:disable */
/* eslint-disable */

export type EmptyObject = { [key: string]: never }

export type t_AppAuthenticatorEnrollment = {
  readonly authenticatorId?: string | undefined
  readonly createdDate?: string | undefined
  readonly device?:
    | {
        clientInstanceId?: string | undefined
        createdDate?: string | undefined
        id?: string | undefined
        lastUpdated?: string | undefined
        status?: "ACTIVE" | undefined
      }
    | undefined
  readonly id?: string | undefined
  readonly lastUpdated?: string | undefined
  readonly links?:
    | {
        self?:
          | {
              hints?:
                | {
                    allow?: ("PATCH" | "DELETE")[] | undefined
                  }
                | undefined
              href?: string | undefined
            }
          | undefined
      }
    | undefined
  methods?:
    | {
        push?:
          | {
              createdDate?: string | undefined
              id?: string | undefined
              lastUpdated?: string | undefined
              links?:
                | {
                    pending?:
                      | {
                          hints?:
                            | {
                                allow?: "GET"[] | undefined
                              }
                            | undefined
                          href?: string | undefined
                        }
                      | undefined
                  }
                | undefined
            }
          | undefined
      }
    | undefined
  readonly user?:
    | {
        id?: string | undefined
        username?: string | undefined
      }
    | undefined
}

export type t_AppAuthenticatorMethodCapabilities = {
  transactionTypes?: ("LOGIN" | "CIBA")[] | undefined
}

export type t_Authenticator = {
  readonly _embedded?:
    | {
        enrollments?: t_AuthenticatorEnrollment[] | undefined
      }
    | undefined
  readonly _links?:
    | {
        enroll?: t_HrefObject | undefined
        enrollments?: t_HrefObject | undefined
        self?: t_HrefObject | undefined
      }
    | undefined
  readonly enrollable?: boolean | undefined
  readonly id?: string | undefined
  key?: t_AuthenticatorKey | undefined
  readonly name?: string | undefined
}

export type t_AuthenticatorEnrollment = {
  readonly _links?:
    | {
        authenticator?: t_HrefObject | undefined
        modify?: t_HrefObject | undefined
        self?: t_HrefObject | undefined
        unenroll?: t_HrefObject | undefined
      }
    | undefined
  readonly canReset?: boolean | undefined
  readonly canUnenroll?: boolean | undefined
  readonly created?: string | undefined
  readonly id?: string | undefined
  readonly lastChallenged?: string | undefined
  name?: string | undefined
  nickname?: string | undefined
  readonly profile?: EmptyObject | undefined
}

export type t_AuthenticatorKey =
  | "custom_app"
  | "custom_otp"
  | "duo"
  | "external_idp"
  | "google_otp"
  | "okta_email"
  | "okta_password"
  | "okta_verify"
  | "onprem_mfa"
  | "phone_number"
  | "rsa_token"
  | "security_question"
  | "symantec_vip"
  | "webauthn"
  | "yubikey_token"

export type t_Email = {
  _links?:
    | {
        challenge?:
          | {
              hints?:
                | {
                    allow?: ("DELETE" | "GET" | "POST" | "PUT")[] | undefined
                  }
                | undefined
              href?: string | undefined
            }
          | undefined
        poll?:
          | {
              hints?:
                | {
                    allow?: ("DELETE" | "GET" | "POST" | "PUT")[] | undefined
                  }
                | undefined
              href?: string | undefined
            }
          | undefined
        self?:
          | {
              hints?:
                | {
                    allow?: ("GET" | "DELETE" | "PUT")[] | undefined
                  }
                | undefined
              href?: string | undefined
            }
          | undefined
        verify?:
          | {
              hints?:
                | {
                    allow?: ("DELETE" | "GET" | "POST" | "PUT")[] | undefined
                  }
                | undefined
              href?: string | undefined
            }
          | undefined
      }
    | undefined
  readonly id: string
  profile: {
    email: string
  }
  roles: ("PRIMARY" | "SECONDARY")[]
  readonly status: "VERIFIED" | "UNVERIFIED"
}

export type t_Error = {
  errorCauses?:
    | {
        readonly errorSummary?: string | undefined
      }[]
    | undefined
  readonly errorCode?: string | undefined
  readonly errorId?: string | undefined
  readonly errorLink?: string | undefined
  readonly errorSummary?: string | undefined
}

export type t_HrefObject = {
  hints?:
    | {
        allow?: t_HttpMethod[] | undefined
      }
    | undefined
  href: string
  name?: string | undefined
  type?: string | undefined
}

export type t_HttpMethod = "DELETE" | "GET" | "POST" | "PUT"

export type t_KeyEC = {
  crv: "P-256"
  kid: string
  kty: "EC"
  "okta:kpr": "HARDWARE" | "SOFTWARE"
  x: string
  y: string
}

export type t_KeyObject = t_KeyEC | t_KeyRSA

export type t_KeyRSA = {
  e: string
  kid: string
  kty: "RSA"
  n: string
  "okta:kpr": "HARDWARE" | "SOFTWARE"
}

export type t_OktaApplication = {
  readonly displayName?: string | undefined
  readonly id?: string | undefined
  readonly name?: string | undefined
}

export type t_Organization = {
  _links?:
    | {
        self?:
          | {
              hints?:
                | {
                    allow?: "GET"[] | undefined
                  }
                | undefined
              href?: string | undefined
            }
          | undefined
      }
    | undefined
  readonly helpLink?: string | undefined
  readonly name?: string | undefined
  readonly supportEmail?: string | undefined
  readonly url?: string | undefined
}

export type t_PasswordResponse = {
  _links?:
    | {
        self?:
          | {
              hints?:
                | {
                    allow?: ("DELETE" | "GET" | "PUT")[] | undefined
                  }
                | undefined
              href?: string | undefined
            }
          | undefined
      }
    | undefined
  created?: string | undefined
  readonly id?: string | undefined
  lastUpdated?: string | undefined
  status?: string | undefined
}

export type t_Phone = {
  _links?:
    | {
        challenge?:
          | {
              hints?:
                | {
                    allow?: ("DELETE" | "GET" | "POST" | "PUT")[] | undefined
                  }
                | undefined
              href?: string | undefined
            }
          | undefined
        self?:
          | {
              hints?:
                | {
                    allow?: ("GET" | "DELETE" | "PUT")[] | undefined
                  }
                | undefined
              href?: string | undefined
            }
          | undefined
        verify?:
          | {
              hints?:
                | {
                    allow?: ("DELETE" | "GET" | "POST" | "PUT")[] | undefined
                  }
                | undefined
              href?: string | undefined
            }
          | undefined
      }
    | undefined
  readonly id: string
  profile: {
    phoneNumber: string
  }
  readonly status: "VERIFIED" | "UNVERIFIED"
}

export type t_Profile = {
  _links?:
    | {
        describedBy?:
          | {
              readonly href?: string | undefined
            }
          | undefined
        self?:
          | {
              readonly href?: string | undefined
            }
          | undefined
      }
    | undefined
  readonly createdAt?: string | undefined
  readonly modifiedAt?: string | undefined
  profile?: EmptyObject | undefined
}

export type t_PushNotificationChallenge = {
  challenge?: string | undefined
  payloadVersion?: "IDXv1" | undefined
}

export type t_Schema = {
  _links?:
    | {
        self?:
          | {
              readonly href?: string | undefined
            }
          | undefined
        user?:
          | {
              readonly href?: string | undefined
            }
          | undefined
      }
    | undefined
  readonly properties?: EmptyObject | undefined
}

export type t_CreateAppAuthenticatorEnrollmentRequestBodySchema = {
  authenticatorId: string
  device: {
    clientInstanceBundleId: string
    clientInstanceDeviceSdkVersion: string
    clientInstanceKey: t_KeyObject
    clientInstanceVersion: string
    deviceAttestation?:
      | {
          [key: string]: unknown | undefined
        }
      | undefined
    displayName: string
    manufacturer?: string | undefined
    model?: string | undefined
    osVersion: string
    platform: "ANDROID" | "IOS"
    secureHardwarePresent?: boolean | undefined
    udid?: string | undefined
  }
  methods: {
    push: {
      apsEnvironment?: ("PRODUCTION" | "DEVELOPMENT") | undefined
      keys: {
        capabilities?: t_AppAuthenticatorMethodCapabilities | undefined
        proofOfPossession: t_KeyObject
        userVerification?: t_KeyObject | undefined
      }
      pushToken: string
    }
  }
}

export type t_CreateEmailRequestBodySchema = {
  profile: {
    email: string
  }
  role?: ("PRIMARY" | "SECONDARY") | undefined
  sendEmail?: boolean | undefined
  state?: string | undefined
}

export type t_CreatePasswordRequestBodySchema = {
  profile: {
    password: string
  }
}

export type t_CreatePhoneRequestBodySchema = {
  method?: ("SMS" | "CALL") | undefined
  profile: {
    phoneNumber?: string | undefined
  }
  sendCode?: boolean | undefined
}

export type t_DeleteAppAuthenticatorEnrollmentParamSchema = {
  enrollmentId: string
}

export type t_DeleteEmailParamSchema = {
  id: string
}

export type t_DeletePhoneParamSchema = {
  id: string
}

export type t_GetAuthenticatorParamSchema = {
  authenticatorId: string
}

export type t_GetAuthenticatorQuerySchema = {
  expand?: string | undefined
}

export type t_GetEmailParamSchema = {
  id: string
}

export type t_GetEnrollmentParamSchema = {
  authenticatorId: string
  enrollmentId: string
}

export type t_GetPhoneParamSchema = {
  id: string
}

export type t_ListAppAuthenticatorPendingPushNotificationChallengesParamSchema =
  {
    enrollmentId: string
  }

export type t_ListAuthenticatorsQuerySchema = {
  expand?: string | undefined
}

export type t_ListEnrollmentsParamSchema = {
  authenticatorId: string
}

export type t_PollChallengeForEmailMagicLinkParamSchema = {
  challengeId: string
  id: string
}

export type t_ReplacePasswordRequestBodySchema = {
  profile: {
    password: string
  }
}

export type t_ReplaceProfileRequestBodySchema = {
  profile?: EmptyObject | undefined
}

export type t_SendEmailChallengeParamSchema = {
  id: string
}

export type t_SendEmailChallengeRequestBodySchema = {
  state: string
}

export type t_SendPhoneChallengeParamSchema = {
  id: string
}

export type t_SendPhoneChallengeRequestBodySchema = {
  method: "SMS" | "CALL"
  retry?: boolean | undefined
}

export type t_UpdateAppAuthenticatorEnrollmentParamSchema = {
  enrollmentId: string
}

export type t_UpdateAppAuthenticatorEnrollmentRequestBodySchema = {
  methods?:
    | {
        push?:
          | {
              capabilities?: t_AppAuthenticatorMethodCapabilities | undefined
              keys?:
                | {
                    userVerification?: t_KeyObject | undefined
                  }
                | undefined
              pushToken?: string | undefined
            }
          | undefined
      }
    | undefined
}

export type t_UpdateEnrollmentParamSchema = {
  authenticatorId: string
  enrollmentId: string
}

export type t_UpdateEnrollmentRequestBodySchema = {
  nickname?: string | undefined
}

export type t_VerifyAppAuthenticatorPushNotificationChallengeParamSchema = {
  challengeId: string
}

export type t_VerifyAppAuthenticatorPushNotificationChallengeRequestBodySchema =
  {
    challengeResponse?: string | undefined
    method?: "push" | undefined
  }

export type t_VerifyEmailOtpParamSchema = {
  challengeId: string
  id: string
}

export type t_VerifyEmailOtpRequestBodySchema = {
  verificationCode: string
}

export type t_VerifyPhoneChallengeParamSchema = {
  id: string
}

export type t_VerifyPhoneChallengeRequestBodySchema = {
  verificationCode: string
}
