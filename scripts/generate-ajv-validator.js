#!/usr/bin/env node
/* eslint-disable */

const fs = require("node:fs")
const path = require("node:path")

const AjvDraft04 = require("ajv-draft-04")
const Ajv2020 = require("ajv/dist/2020")
const standaloneCode = require("ajv/dist/standalone").default
const addFormats = require("ajv-formats")

const openapi_3_0_specification = require("../schemas/openapi-3.0-specification.json")
const openapi_3_1_specification = require("../schemas/openapi-3.1-specification-base.json")

const outputDir = path.join(
  __dirname,
  "../packages/openapi-code-generator/src/core/schemas",
)

const writeOutput = (filepath, moduleCode) => {
  fs.writeFileSync(
    filepath,
    `
/** AUTOGENERATED - DO NOT EDIT **/
/* eslint-disable */
// @ts-nocheck
${moduleCode}`,
    "utf-8",
  )
}

const loadSchema = async (uri) => {
  const res = await fetch(uri)
  return res.json()
}

const compileOpenapi30Standalone = () => {
  const ajv4 = new AjvDraft04({
    code: {source: true},
    strict: false,
    loadSchema,
  })
  addFormats(ajv4)

  const validate = ajv4.compile(openapi_3_0_specification)
  return standaloneCode(ajv4, validate)
}

const compileOpenapi31Standalone = () => {
  try {
    const ajv2020 = new Ajv2020({
      code: {source: true},
      strict: false,
      verbose: true,
      loadSchema,
    })
    addFormats(ajv2020)
    ajv2020.addFormat("media-range", true)

    const validate = ajv2020.compile(openapi_3_1_specification)
    return standaloneCode(ajv2020, validate)
  } catch (err) {
    // TODO: MissingRefError: can't resolve reference https://spec.openapis.org/oas/3.1/schema/2022-10-07 from id https://spec.openapis.org/oas/3.1/schema-base/2022-10-07
    console.warn(err.message)
    console.warn(
      "WARNING: failed to compile openapi 3.1 validator - using noop shim",
    )

    return `
"use strict"
const {logger} = require('../logger')
module.exports = validate
module.exports.default = validate

function validate(){
    logger.warn(
      "Skipping validation due to https://github.com/mnahkies/openapi-code-generator/issues/103",
    )
    return true
}
`
  }
}

writeOutput(
  path.join(outputDir, "openapi-3.0-specification-validator.js"),
  compileOpenapi30Standalone(),
)
writeOutput(
  path.join(outputDir, "openapi-3.1-specification-validator.js"),
  compileOpenapi31Standalone(),
)
