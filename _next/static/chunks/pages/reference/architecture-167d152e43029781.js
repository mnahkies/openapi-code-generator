(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[939],{2606:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/reference/architecture",function(){return n(4304)}])},4304:function(e,t,n){"use strict";n.r(t),n.d(t,{__toc:function(){return p},default:function(){return x}});var r=n(2322),s=n(8287),i=n(7272),a=n(3060);n(4147);var o=n(1199),c={src:"/_next/static/media/architecture_high_level.cad5cd5e.svg",height:220,width:820,blurWidth:0,blurHeight:0},l={src:"/_next/static/media/architecture_core.8e78e256.svg",height:540,width:860,blurWidth:0,blurHeight:0},d={src:"/_next/static/media/architecture_templates.2823b3b6.svg",height:640,width:860,blurWidth:0,blurHeight:0};let p=[{depth:2,value:"Core",id:"core"},{depth:3,value:"./loaders",id:"loaders"},{depth:3,value:"openapi-validator",id:"openapi-validator"},{depth:3,value:"openapi-loader",id:"openapi-loader"},{depth:3,value:"input",id:"input"},{depth:2,value:"Templates",id:"templates"}];function h(e){let t=Object.assign({h1:"h1",p:"p",img:"img",h2:"h2",a:"a",code:"code",h3:"h3",ul:"ul",li:"li",pre:"pre",span:"span"},(0,o.a)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{children:"Architecture"}),"\n",(0,r.jsx)(t.p,{children:"The project is still evolving, but this should give a good overview\nof the current codebase structure."}),"\n",(0,r.jsx)(t.p,{children:'Broadly speaking we have the "core" part of the library that should be re-usable\nacross all templates / target languages, and then the template functions.'}),"\n",(0,r.jsx)(t.p,{children:"Some templates also make use of a runtime library."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"high level architecture",src:c})}),"\n",(0,r.jsx)(t.h2,{id:"core",children:"Core"}),"\n",(0,r.jsxs)(t.p,{children:["This directory ",(0,r.jsx)(t.a,{href:"https://github.com/mnahkies/openapi-code-generator/tree/main/packages/openapi-code-generator/src/core",children:(0,r.jsx)(t.code,{children:"./src/core"})})," contains the generator/target language agnostic parts of the project."]}),"\n",(0,r.jsx)(t.p,{children:"The process of generation resembles a pipeline."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"core architecture",src:l})}),"\n",(0,r.jsx)(t.h3,{id:"loaders",children:(0,r.jsx)(t.code,{children:"./loaders"})}),"\n",(0,r.jsxs)(t.p,{children:["Loaders are responsible for fetching a supported input format, and converting\nit to openapi3 if required, to be handed off to the ",(0,r.jsx)(t.code,{children:"openapi-validator"})," / ",(0,r.jsx)(t.code,{children:"openapi-loader"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"Two loaders are supported:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"generic"})," which loads openapi3 specs in JSON/YAML formats"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"typespec"})," which loads typespec specs and converts them in-memory to openapi3"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"openapi-validator",children:(0,r.jsx)(t.code,{children:"openapi-validator"})}),"\n",(0,r.jsx)(t.p,{children:"Nothing particularly interesting here, just takes a loaded document and validates\nit against the OpenAPI 3 specification in JSON schema format."}),"\n",(0,r.jsx)(t.p,{children:"Useful for detecting errors due to bad input rather than bugs in the\ncode generation."}),"\n",(0,r.jsxs)(t.p,{children:["Due to a ",(0,r.jsx)(t.a,{href:"https://github.com/mnahkies/openapi-code-generator/issues/103",children:"bug"})," in ",(0,r.jsx)(t.code,{children:"ajv"}),"\nvalidation is currently skipped for OpenAPI 3.1 documents."]}),"\n",(0,r.jsx)(t.h3,{id:"openapi-loader",children:(0,r.jsx)(t.code,{children:"openapi-loader"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"openapi-loader"})," takes an entry point path, and loads + validates a collection\nof files (",(0,r.jsx)(t.code,{children:"$ref"})," to other files supported)."]}),"\n",(0,r.jsx)(t.p,{children:'It then provides typed access to the raw OpenAPI structures, with methods able\nto convert "maybe refs" into the referenced objects.'}),"\n",(0,r.jsxs)(t.p,{children:["This is important because one of the more painful (and bug prone) parts of\nparsing OpenAPI documents is correctly following ",(0,r.jsx)(t.code,{children:"$ref"}),"'s, as you need to carry\naround the context of which document you came from."]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"openapi-loader"})," makes this much less complicated by loading all files up front, and normalizing\nthe contained ",(0,r.jsx)(t.code,{children:"$ref"}),"s to absolute paths."]}),"\n",(0,r.jsx)(t.h3,{id:"input",children:(0,r.jsx)(t.code,{children:"input"})}),"\n",(0,r.jsxs)(t.p,{children:["Ultimately an instance of the ",(0,r.jsx)(t.code,{children:"input"})," class is passed to a generator."]}),"\n",(0,r.jsxs)(t.p,{children:["The goal of the ",(0,r.jsx)(t.code,{children:"input"})," class is to provide ergonomic, target language agnostic access to\nthe OpenAPI documents given as input to the generator."]}),"\n",(0,r.jsx)(t.p,{children:"It primarily surfaces API operations, with optional grouping strategies, as a normalized type\nthat has already de-referenced parameters / responses, and set default values on various properties."}),"\n",(0,r.jsx)(t.h2,{id:"templates",children:"Templates"}),"\n",(0,r.jsxs)(t.p,{children:["Currently only ",(0,r.jsx)(t.code,{children:"typescript"})," templates are implemented, living in ",(0,r.jsx)(t.a,{href:"https://github.com/mnahkies/openapi-code-generator/tree/main/packages/openapi-code-generator/src/typescript",children:"./src/typescript"}),"."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"templates architecture",src:d})}),"\n",(0,r.jsxs)(t.p,{children:["Each template currently has a simple signature:\n(from ",(0,r.jsx)(t.a,{href:"https://github.com/mnahkies/openapi-code-generator/tree/main/packages/openapi-code-generator/src/templates.types.ts",children:"./src/templates.types.ts"}),")"]}),"\n",(0,r.jsx)(t.pre,{"data-language":"typescript","data-theme":"default",children:(0,r.jsxs)(t.code,{"data-language":"typescript","data-theme":"default",children:[(0,r.jsxs)(t.span,{className:"line",children:[(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:"export"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:"interface"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-function)"},children:"OpenapiGeneratorConfig"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" {"})]}),"\n",(0,r.jsxs)(t.span,{className:"line",children:[(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"  dest"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-constant)"},children:"string"})]}),"\n",(0,r.jsxs)(t.span,{className:"line",children:[(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"  input"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-function)"},children:"Input"})]}),"\n",(0,r.jsxs)(t.span,{className:"line",children:[(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"  schemaBuilder"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-function)"},children:"SchemaBuilderType"})]}),"\n",(0,r.jsxs)(t.span,{className:"line",children:[(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"  enableRuntimeResponseValidation"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-constant)"},children:"boolean"})]}),"\n",(0,r.jsxs)(t.span,{className:"line",children:[(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"  compilerOptions"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-function)"},children:"CompilerOptions"})]}),"\n",(0,r.jsxs)(t.span,{className:"line",children:[(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"  allowUnusedImports"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-constant)"},children:"boolean"})]}),"\n",(0,r.jsxs)(t.span,{className:"line",children:[(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"  groupingStrategy"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-function)"},children:"OperationGroupStrategy"})]}),"\n",(0,r.jsx)(t.span,{className:"line",children:(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,r.jsx)(t.span,{className:"line",children:" "}),"\n",(0,r.jsxs)(t.span,{className:"line",children:[(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:"export"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:"interface"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-function)"},children:"OpenapiGenerator"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" {"})]}),"\n",(0,r.jsxs)(t.span,{className:"line",children:[(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"  (args"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-function)"},children:"OpenapiGeneratorConfig"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:")"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-function)"},children:"Promise"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"<"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-token-constant)"},children:"void"}),(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:">"})]}),"\n",(0,r.jsx)(t.span,{className:"line",children:(0,r.jsx)(t.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n",(0,r.jsxs)(t.p,{children:["Where ",(0,r.jsx)(t.code,{children:"dest"})," is a path to a directory to emit code into, and ",(0,r.jsx)(t.code,{children:"input"})," is an initialized instance\nof the ",(0,r.jsx)(t.code,{children:"Input"})," class described above. ",(0,r.jsx)(t.code,{children:"schemaBuilder"})," refers to ",(0,r.jsx)(t.code,{children:"zod | joi"})]}),"\n",(0,r.jsxs)(t.p,{children:["You can find all registered generators in ",(0,r.jsx)(t.a,{href:"https://github.com/mnahkies/openapi-code-generator/tree/main/packages/openapi-code-generator/src/templates.ts",children:"./src/templates.ts"})," - eventually this likely be split into\npackages that consume the core modules, or some other more pluggable system."]})]})}let u={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,o.a)(),e.components);return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)},pageOpts:{filePath:"src/pages/reference/architecture.mdx",route:"/reference/architecture",timestamp:1714908438e3,pageMap:[{kind:"MdxPage",name:"404",route:"/404"},{kind:"Meta",data:{404:{display:"hidden",title:" "},overview:"Overview","getting-started":"Getting Started",guides:"Guides",reference:"Reference",index:{display:"hidden",title:" "}}},{kind:"Folder",name:"getting-started",route:"/getting-started",children:[{kind:"MdxPage",name:"quick-start",route:"/getting-started/quick-start"},{kind:"Meta",data:{"quick-start":"Quick Start"}}]},{kind:"Folder",name:"guides",route:"/guides",children:[{kind:"Meta",data:{concepts:"Concepts","client-templates":"Client Templates","server-templates":"Server Templates"}},{kind:"Folder",name:"client-templates",route:"/guides/client-templates",children:[{kind:"MdxPage",name:"typescript-angular",route:"/guides/client-templates/typescript-angular"},{kind:"MdxPage",name:"typescript-axios",route:"/guides/client-templates/typescript-axios"},{kind:"MdxPage",name:"typescript-fetch",route:"/guides/client-templates/typescript-fetch"},{kind:"Meta",data:{"typescript-angular":"TypeScript Angular","typescript-axios":"TypeScript Axios","typescript-fetch":"TypeScript Fetch"}}]},{kind:"Folder",name:"concepts",route:"/guides/concepts",children:[{kind:"MdxPage",name:"extract-inline-schemas",route:"/guides/concepts/extract-inline-schemas"},{kind:"Meta",data:{"extract-inline-schemas":"Extract Inline Schemas"}}]},{kind:"Folder",name:"server-templates",route:"/guides/server-templates",children:[{kind:"MdxPage",name:"typescript-koa",route:"/guides/server-templates/typescript-koa"},{kind:"Meta",data:{"typescript-koa":"TypeScript Koa"}}]}]},{kind:"MdxPage",name:"index",route:"/"},{kind:"Folder",name:"overview",route:"/overview",children:[{kind:"MdxPage",name:"about",route:"/overview/about"},{kind:"MdxPage",name:"compatibility",route:"/overview/compatibility"},{kind:"Meta",data:{about:"About",compatibility:"Compatibility"}}]},{kind:"Folder",name:"reference",route:"/reference",children:[{kind:"MdxPage",name:"architecture",route:"/reference/architecture"},{kind:"MdxPage",name:"cli-options",route:"/reference/cli-options"},{kind:"Meta",data:{architecture:"Architecture","cli-options":"CLI Options"}}]}],flexsearch:{codeblocks:!0},title:"Architecture",headings:p},pageNextRoute:"/reference/architecture",nextraLayout:i.ZP,themeConfig:a.Z};var x=(0,s.j)(u)},3060:function(e,t,n){"use strict";var r=n(2322),s=n(5632);let i={logo:(0,r.jsx)("strong",{children:"\uD83D\uDD27 OpenAPI Code Generator"}),project:{link:"https://github.com/mnahkies/openapi-code-generator"},docsRepositoryBase:"https://github.com/mnahkies/openapi-code-generator/tree/main/packages/documentation",darkMode:!0,faviconGlyph:"\uD83D\uDD27",head:function(){return(0,r.jsx)(r.Fragment,{children:(0,r.jsx)("meta",{name:"viewport",content:"width=device-width, initial-scale=1.0"})})},footer:{text:(0,r.jsxs)("span",{children:["MIT ",new Date().getFullYear()," \xa9"," ",(0,r.jsx)("a",{href:"https://nahkies.co.nz",target:"_blank",rel:"noopener noreferrer",children:"Michael Nahkies"})]})},useNextSeoProps(){let{asPath:e}=(0,s.useRouter)();return{titleTemplate:"/"!==e?"%s – OpenAPI Code Generator":"OpenAPI Code Generator",description:"A code generation tool for openapi 3 / 3.1, and typespec specifications, primarily aimed at generating typescript client SDKs, and server stubs, with an emphasis on compile & runtime safety.",canonical:"https://openapi-code-generator.nahkies.co.nz/",openGraph:{url:"https://openapi-code-generator.nahkies.co.nz".concat(e)}}}};t.Z=i},3021:function(){}},function(e){e.O(0,[277,888,774,179],function(){return e(e.s=2606)}),_N_E=e.O()}]);