(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[286],{8586:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/overview/about",function(){return n(1377)}])},1377:function(e,t,n){"use strict";n.r(t),n.d(t,{__toc:function(){return o}});var i=n(2322),s=n(8287),a=n(1199);let o=[{depth:3,value:"Server Scaffolding Templates",id:"server-scaffolding-templates"},{depth:3,value:"Client SDK Templates",id:"client-sdk-templates"},{depth:2,value:"Project Goal / Principals",id:"project-goal--principals"},{depth:2,value:"Why schema first",id:"why-schema-first"},{depth:4,value:"Longevity",id:"longevity"},{depth:4,value:"Common Language",id:"common-language"},{depth:4,value:"Constraints",id:"constraints"},{depth:4,value:"Separation",id:"separation"},{depth:2,value:"Compatibility / Completeness",id:"compatibility--completeness"},{depth:2,value:"Compared to other projects",id:"compared-to-other-projects"}];function r(e){let t=Object.assign({h1:"h1",p:"p",code:"code",a:"a",h3:"h3",ul:"ul",li:"li",h2:"h2",strong:"strong",h4:"h4",em:"em"},(0,a.a)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{children:"About"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"@nahkies/openapi-code-generator"})," is a CLI tool that aims to generate high quality typescript client SDK's,\nand API server scaffolding (routing, validation, serialization) from OpenAPI 3 specifications."]}),"\n",(0,i.jsxs)(t.p,{children:["Currently, ",(0,i.jsx)(t.a,{href:"https://swagger.io/specification/v3",children:"OpenAPI 3.0"}),", ",(0,i.jsx)(t.a,{href:"https://swagger.io/specification/",children:"OpenAPI 3.1"}),",\nand ",(0,i.jsx)(t.a,{href:"https://typespec.io/",children:"TypeSpec"})," are supported an input specifications."]}),"\n",(0,i.jsx)(t.p,{children:"The following templates are supported."}),"\n",(0,i.jsx)(t.h3,{id:"server-scaffolding-templates",children:"Server Scaffolding Templates"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"../guides/server-templates/typescript-koa",children:"typescript-koa"})}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"client-sdk-templates",children:"Client SDK Templates"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"../guides/client-templates/typescript-fetch",children:"typescript-fetch"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"../guides/client-templates/typescript-axios",children:"typescript-axios"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"../guides/client-templates/typescript-angular",children:"typescript-angular"})}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"project-goal--principals",children:"Project Goal / Principals"}),"\n",(0,i.jsxs)(t.p,{children:['To make it fun, easy and productive to generate both client and server "glue"\ncode from openapi 3 definitions. This is code that is tedious and error-prone to maintain by hand,\nby automating it we can ',(0,i.jsx)(t.strong,{children:"reduce toil and frustration"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["The generated code ",(0,i.jsx)(t.strong,{children:'output should be "stable"'})," in the sense that it will not\narbitrarily change between generation without need (for a given version). For\nexample outputting entities in alphabetic order where possible."]}),"\n",(0,i.jsxs)(t.p,{children:["It should also be ",(0,i.jsx)(t.strong,{children:"generated in a way that human would reasonably write it"}),",\nthe intent is that the generated code can and should be committed to the consuming project\nrepositories, allowing it to be reviewed, and audited overtime."]}),"\n",(0,i.jsxs)(t.p,{children:["This is particularly useful in the case of mistakes in the generation or schemas, and also\nserves to reduce risk of adoption. ",(0,i.jsx)(t.strong,{children:"There should be no lock-in"})," - if you wish to stop using the\ncode generation, you can simply start maintaining the previously generated code by hand."]}),"\n",(0,i.jsxs)(t.p,{children:["The initial focus on ",(0,i.jsx)(t.code,{children:"typescript"}),", with an intention to later support other languages. ",(0,i.jsx)(t.code,{children:"kotlin"}),"\nis the most likely candidate for a second language."]}),"\n",(0,i.jsx)(t.h2,{id:"why-schema-first",children:"Why schema first"}),"\n",(0,i.jsx)(t.p,{children:"Broadly speaking there are two approaches people take to maintaining API specifications:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Schema first, where you write the schema by hand"}),"\n",(0,i.jsx)(t.li,{children:"Code first, where you generate the schema from your code"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"This project being a code generator from API specification files is on the schema first side of the debate, but why?"}),"\n",(0,i.jsx)(t.p,{children:"Ultimately this is fairly subjective, but there are four primary motivators that lead us to believe schema first\nis the better approach."}),"\n",(0,i.jsx)(t.h4,{id:"longevity",children:"Longevity"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://www.allthingsdistributed.com/2016/03/10-lessons-from-10-years-of-aws.html",children:"APIs are forever"}),",\nchanging them in backwards incompatible ways is hard/expensive, or sometimes not possible."]}),"\n",(0,i.jsx)(t.p,{children:"With that in mind, we believe it's important to be thoughtful about your API design, and\nthat writing an explicit specification/contract is a great forcing function to accomplish this."}),"\n",(0,i.jsx)(t.p,{children:"Additionally, programming languages / frameworks come and go - they are an implementation detail,\nand subject to change as business requirements evolve.\nOpenAPI (originally Swagger) has been around for over a decade now, and we're confident it'll be around for a long time."}),"\n",(0,i.jsx)(t.h4,{id:"common-language",children:"Common Language"}),"\n",(0,i.jsx)(t.p,{children:"Many large projects / systems will involve multiple programming languages. For example, you might have a Java backend,\nKotlin Android app, Swift iOS app, and Typescript web frontend."}),"\n",(0,i.jsx)(t.p,{children:"For writing your API contracts using OpenAPI up front, you create a common ground for developers of all languages to discuss\nand hash out the details."}),"\n",(0,i.jsx)(t.h4,{id:"constraints",children:"Constraints"}),"\n",(0,i.jsx)(t.p,{children:"Turing complete programming languages are very flexible. If you try hard enough, you can probably implement it.\nSpecifications like OpenAPI on the other hand are more rigid and constraining."}),"\n",(0,i.jsx)(t.p,{children:"We believe it's better to lean into this and design your systems in ways that can be represented fully by a\nspecification, rather than attempt to generate a specification from the implementation and potentially lose\ninformation/nuance in the process."}),"\n",(0,i.jsx)(t.h4,{id:"separation",children:"Separation"}),"\n",(0,i.jsx)(t.p,{children:"A good specification not only defines the API contract, but also includes a lot of supplementary information such as examples,\nand documentation."}),"\n",(0,i.jsx)(t.p,{children:"Generating a good specification from your code, therefore requires including all this extra metadata in the code, which\ncan make the code more difficult to work with."}),"\n",(0,i.jsx)(t.p,{children:"We prefer to separate these concerns out into the specification, and keep the implementation code leaner and simpler."}),"\n",(0,i.jsx)(t.h2,{id:"compatibility--completeness",children:"Compatibility / Completeness"}),"\n",(0,i.jsx)(t.p,{children:"This project should be considered beta quality, and is still pre-v1."}),"\n",(0,i.jsxs)(t.p,{children:["It does not yet handle all aspects of the OpenAPI / JSON schema specification, but ",(0,i.jsx)(t.em,{children:"most"})," common\nfeatures are implemented."]}),"\n",(0,i.jsx)(t.p,{children:"In particular at the moment only JSON content types are supported properly."}),"\n",(0,i.jsxs)(t.p,{children:["You can get a sense of what is not implemented looking at the ",(0,i.jsx)(t.a,{href:"https://github.com/mnahkies/openapi-code-generator/issues",children:"Github issues"})," (non-exhaustive),\nbut the better way is to just try it out with your API specification."]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.a,{href:"https://github.com/mnahkies/openapi-code-generator/tree/main/integration-tests",children:"integration tests"})," also act as a good showcase of the sort of output you can expect."]}),"\n",(0,i.jsx)(t.h2,{id:"compared-to-other-projects",children:"Compared to other projects"}),"\n",(0,i.jsx)(t.p,{children:"There are many similar projects out there, so why should you use this one?"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:'Strong emphasis on "human like" code output'}),"\n",(0,i.jsxs)(t.li,{children:["Tackles the program space from both ends - client ",(0,i.jsx)(t.em,{children:"and"})," server"]}),"\n",(0,i.jsx)(t.li,{children:"Comprehensive runtime parsing/validation in addition to static compile time safety"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"So if you want a low risk, write-once, get strong build & runtime guarantees experience then we're worth giving a try."}),"\n",(0,i.jsxs)(t.p,{children:["If you're looking to achieve the minimal runtime bundle size in your web frontends, then this project probably isn't for you (try ",(0,i.jsx)(t.a,{href:"https://openapi-ts.pages.dev/",children:"OpenAPI TypeScript"})," instead)."]})]})}t.default=(0,s.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,a.a)(),e.components);return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(r,{...e})}):r(e)},pageOpts:{filePath:"src/pages/overview/about.mdx",route:"/overview/about",timestamp:1714307779e3,title:"About",headings:o},pageNextRoute:"/overview/about"})}},function(e){e.O(0,[287,888,774,179],function(){return e(e.s=8586)}),_N_E=e.O()}]);